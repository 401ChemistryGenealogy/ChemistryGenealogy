{
    "project": {},
    "files": {
        "tests\\e2e\\login\\LoginPage.js": {
            "name": "tests\\e2e\\login\\LoginPage.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "tests\\e2e\\login\\LoginSpec.js": {
            "name": "tests\\e2e\\login\\LoginSpec.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "tests\\e2e\\search\\SearchPage.js": {
            "name": "tests\\e2e\\search\\SearchPage.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "tests\\e2e\\search\\SearchSpec.js": {
            "name": "tests\\e2e\\search\\SearchSpec.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "tests\\e2e\\submit\\SubmitPage.js": {
            "name": "tests\\e2e\\submit\\SubmitPage.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "tests\\conf.js": {
            "name": "tests\\conf.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "tests\\spec.js": {
            "name": "tests\\spec.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\app\\controllers\\GruntFile.js": {
            "name": "web\\app\\controllers\\GruntFile.js",
            "modules": {
                "GruntFile": 1
            },
            "classes": {
                "GruntFile\n\nWas attempting to do gruntdocs...": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "web\\app\\controllers\\adminPanelController.js": {
            "name": "web\\app\\controllers\\adminPanelController.js",
            "modules": {
                "adminPanelController": 1
            },
            "classes": {
                "adminPanelController\n\nResponsible for every functionality given by the administrator panel for the frontend.": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "web\\app\\controllers\\auditTrailController.js": {
            "name": "web\\app\\controllers\\auditTrailController.js",
            "modules": {
                "auditTrailController": 1
            },
            "classes": {
                "auditTrailController\n\nResponsible for every functionality given by the administrator panel for the frontend.": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "web\\app\\controllers\\editController.js": {
            "name": "web\\app\\controllers\\editController.js",
            "modules": {
                "editController": 1
            },
            "classes": {
                "editController\n\nResponsible for every functionality given by the administrator panel for the frontend.": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "web\\app\\controllers\\mentorshipNotificationController.js": {
            "name": "web\\app\\controllers\\mentorshipNotificationController.js",
            "modules": {
                "mentorshipNotificationController": 1
            },
            "classes": {
                "mentorshipNotificationController\n\nNotifications for mentorships are dealt with here.": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "web\\app\\controllers\\personAutoController.js": {
            "name": "web\\app\\controllers\\personAutoController.js",
            "modules": {
                "personAutoController": 1
            },
            "classes": {
                "personAutoController\n\nDeals with the automatic updating and searching for the people supplied into the query string provided\nthrough the search bar at the top of the main html file.": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "web\\app\\controllers\\personNotificationController.js": {
            "name": "web\\app\\controllers\\personNotificationController.js",
            "modules": {
                "personNotificationController": 1
            },
            "classes": {
                "personNotificationController\n\nNotifications for persons are dealt with here.": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "web\\app\\controllers\\searchController.js": {
            "name": "web\\app\\controllers\\searchController.js",
            "modules": {
                "searchController": 1
            },
            "classes": {
                "searchController\n\nEntire Search Functionality located here.": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "web\\app\\controllers\\submitController.js": {
            "name": "web\\app\\controllers\\submitController.js",
            "modules": {
                "submitController": 1
            },
            "classes": {
                "submitController\n\nController for the Submission page.\n\n\nStatus: CONTROLLER\nAssociated files: submit.html\n\nThe submission page is going to be the core of where the users will be able to supply information to begin a new\npage for a given particular user. This page is going to be essentially a massive collection of information that\nwe will be inserting into the system.\n\nThings that we're collecting include basic information like:\n-first name\n-last name\n-degree type\n-postdoc postings\n-etc": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "web\\app\\controllers\\supervisionNotificationController.js": {
            "name": "web\\app\\controllers\\supervisionNotificationController.js",
            "modules": {
                "supervisionNotificationController": 1
            },
            "classes": {
                "supervisionNotificationController\n\nNotifications for supervision are dealt with here.": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "web\\app\\controllers\\userController.js": {
            "name": "web\\app\\controllers\\userController.js",
            "modules": {
                "userController": 1
            },
            "classes": {
                "muserController\n\nThe user controller is located here, that handles the affairs dealing with the users of the application\nworking with the application.": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "web\\app\\controllers\\userDialogController.js": {
            "name": "web\\app\\controllers\\userDialogController.js",
            "modules": {
                "userDialogController": 1
            },
            "classes": {
                "userDialogController\n\n Controller for the User Dialogue\n\nStatus: CONTROLLER\nAssociated files: userDialog.html,\n\nThe user dialog controller is associated with registration and submission of login information. So it is\nslightly associated with the User Controller (userController.js), yet is kept distinct for clarity of functions.": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "web\\app\\controllers\\viewController.js": {
            "name": "web\\app\\controllers\\viewController.js",
            "modules": {
                "viewController": 1
            },
            "classes": {
                "viewController\n\nThis controller does all that can be done with the view page.": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "web\\app\\controllers\\visController.js": {
            "name": "web\\app\\controllers\\visController.js",
            "modules": {
                "visController": 1
            },
            "classes": {
                "visController\n\nNotifications for mentorships are dealt with here.": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "web\\app\\services\\editService.js": {
            "name": "web\\app\\services\\editService.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\app\\services\\loginService.js": {
            "name": "web\\app\\services\\loginService.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\app\\services\\registerService.js": {
            "name": "web\\app\\services\\registerService.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\app\\services\\submitService.js": {
            "name": "web\\app\\services\\submitService.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\app\\services\\viewService.js": {
            "name": "web\\app\\services\\viewService.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\app\\module.js": {
            "name": "web\\app\\module.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\app\\routes.js": {
            "name": "web\\app\\routes.js",
            "modules": {},
            "classes": {
                "our routes": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\a0-angular-storage\\dist\\angular-storage.js": {
            "name": "web\\bower_components\\a0-angular-storage\\dist\\angular-storage.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\a0-angular-storage\\gulpfile.js": {
            "name": "web\\bower_components\\a0-angular-storage\\gulpfile.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular\\angular.js": {
            "name": "web\\bower_components\\angular\\angular.js",
            "modules": {
                "ng": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-animate\\angular-animate.js": {
            "name": "web\\bower_components\\angular-animate\\angular-animate.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-aria\\angular-aria.js": {
            "name": "web\\bower_components\\angular-aria\\angular-aria.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js": {
            "name": "web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-material\\modules\\closure\\backdrop\\backdrop.js": {
            "name": "web\\bower_components\\angular-material\\modules\\closure\\backdrop\\backdrop.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-material\\modules\\closure\\bottomSheet\\bottomSheet.js": {
            "name": "web\\bower_components\\angular-material\\modules\\closure\\bottomSheet\\bottomSheet.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-material\\modules\\closure\\button\\button.js": {
            "name": "web\\bower_components\\angular-material\\modules\\closure\\button\\button.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-material\\modules\\closure\\card\\card.js": {
            "name": "web\\bower_components\\angular-material\\modules\\closure\\card\\card.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-material\\modules\\closure\\checkbox\\checkbox.js": {
            "name": "web\\bower_components\\angular-material\\modules\\closure\\checkbox\\checkbox.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js": {
            "name": "web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-material\\modules\\closure\\content\\content.js": {
            "name": "web\\bower_components\\angular-material\\modules\\closure\\content\\content.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js": {
            "name": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js": {
            "name": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-material\\modules\\closure\\dialog\\dialog.js": {
            "name": "web\\bower_components\\angular-material\\modules\\closure\\dialog\\dialog.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-material\\modules\\closure\\divider\\divider.js": {
            "name": "web\\bower_components\\angular-material\\modules\\closure\\divider\\divider.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-material\\modules\\closure\\fabActions\\fabActions.js": {
            "name": "web\\bower_components\\angular-material\\modules\\closure\\fabActions\\fabActions.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-material\\modules\\closure\\fabSpeedDial\\fabSpeedDial.js": {
            "name": "web\\bower_components\\angular-material\\modules\\closure\\fabSpeedDial\\fabSpeedDial.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-material\\modules\\closure\\fabToolbar\\fabToolbar.js": {
            "name": "web\\bower_components\\angular-material\\modules\\closure\\fabToolbar\\fabToolbar.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-material\\modules\\closure\\fabTrigger\\fabTrigger.js": {
            "name": "web\\bower_components\\angular-material\\modules\\closure\\fabTrigger\\fabTrigger.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-material\\modules\\closure\\gridList\\gridList.js": {
            "name": "web\\bower_components\\angular-material\\modules\\closure\\gridList\\gridList.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-material\\modules\\closure\\icon\\icon.js": {
            "name": "web\\bower_components\\angular-material\\modules\\closure\\icon\\icon.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-material\\modules\\closure\\input\\input.js": {
            "name": "web\\bower_components\\angular-material\\modules\\closure\\input\\input.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-material\\modules\\closure\\list\\list.js": {
            "name": "web\\bower_components\\angular-material\\modules\\closure\\list\\list.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-material\\modules\\closure\\menu\\menu.js": {
            "name": "web\\bower_components\\angular-material\\modules\\closure\\menu\\menu.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-material\\modules\\closure\\menuBar\\menuBar.js": {
            "name": "web\\bower_components\\angular-material\\modules\\closure\\menuBar\\menuBar.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-material\\modules\\closure\\progressCircular\\progressCircular.js": {
            "name": "web\\bower_components\\angular-material\\modules\\closure\\progressCircular\\progressCircular.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-material\\modules\\closure\\progressLinear\\progressLinear.js": {
            "name": "web\\bower_components\\angular-material\\modules\\closure\\progressLinear\\progressLinear.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-material\\modules\\closure\\radioButton\\radioButton.js": {
            "name": "web\\bower_components\\angular-material\\modules\\closure\\radioButton\\radioButton.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-material\\modules\\closure\\select\\select.js": {
            "name": "web\\bower_components\\angular-material\\modules\\closure\\select\\select.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-material\\modules\\closure\\showHide\\showHide.js": {
            "name": "web\\bower_components\\angular-material\\modules\\closure\\showHide\\showHide.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-material\\modules\\closure\\sidenav\\sidenav.js": {
            "name": "web\\bower_components\\angular-material\\modules\\closure\\sidenav\\sidenav.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-material\\modules\\closure\\slider\\slider.js": {
            "name": "web\\bower_components\\angular-material\\modules\\closure\\slider\\slider.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-material\\modules\\closure\\sticky\\sticky.js": {
            "name": "web\\bower_components\\angular-material\\modules\\closure\\sticky\\sticky.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-material\\modules\\closure\\subheader\\subheader.js": {
            "name": "web\\bower_components\\angular-material\\modules\\closure\\subheader\\subheader.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-material\\modules\\closure\\swipe\\swipe.js": {
            "name": "web\\bower_components\\angular-material\\modules\\closure\\swipe\\swipe.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-material\\modules\\closure\\switch\\switch.js": {
            "name": "web\\bower_components\\angular-material\\modules\\closure\\switch\\switch.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js": {
            "name": "web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-material\\modules\\closure\\textField\\textField.js": {
            "name": "web\\bower_components\\angular-material\\modules\\closure\\textField\\textField.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-material\\modules\\closure\\toast\\toast.js": {
            "name": "web\\bower_components\\angular-material\\modules\\closure\\toast\\toast.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-material\\modules\\closure\\toolbar\\toolbar.js": {
            "name": "web\\bower_components\\angular-material\\modules\\closure\\toolbar\\toolbar.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-material\\modules\\closure\\tooltip\\tooltip.js": {
            "name": "web\\bower_components\\angular-material\\modules\\closure\\tooltip\\tooltip.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js": {
            "name": "web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-material\\modules\\closure\\whiteframe\\whiteframe.js": {
            "name": "web\\bower_components\\angular-material\\modules\\closure\\whiteframe\\whiteframe.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js": {
            "name": "web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-material\\modules\\js\\backdrop\\backdrop.js": {
            "name": "web\\bower_components\\angular-material\\modules\\js\\backdrop\\backdrop.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-material\\modules\\js\\bottomSheet\\bottomSheet.js": {
            "name": "web\\bower_components\\angular-material\\modules\\js\\bottomSheet\\bottomSheet.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-material\\modules\\js\\button\\button.js": {
            "name": "web\\bower_components\\angular-material\\modules\\js\\button\\button.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-material\\modules\\js\\card\\card.js": {
            "name": "web\\bower_components\\angular-material\\modules\\js\\card\\card.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-material\\modules\\js\\checkbox\\checkbox.js": {
            "name": "web\\bower_components\\angular-material\\modules\\js\\checkbox\\checkbox.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js": {
            "name": "web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-material\\modules\\js\\content\\content.js": {
            "name": "web\\bower_components\\angular-material\\modules\\js\\content\\content.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-material\\modules\\js\\core\\core.js": {
            "name": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js": {
            "name": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-material\\modules\\js\\dialog\\dialog.js": {
            "name": "web\\bower_components\\angular-material\\modules\\js\\dialog\\dialog.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-material\\modules\\js\\divider\\divider.js": {
            "name": "web\\bower_components\\angular-material\\modules\\js\\divider\\divider.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-material\\modules\\js\\fabActions\\fabActions.js": {
            "name": "web\\bower_components\\angular-material\\modules\\js\\fabActions\\fabActions.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-material\\modules\\js\\fabSpeedDial\\fabSpeedDial.js": {
            "name": "web\\bower_components\\angular-material\\modules\\js\\fabSpeedDial\\fabSpeedDial.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-material\\modules\\js\\fabToolbar\\fabToolbar.js": {
            "name": "web\\bower_components\\angular-material\\modules\\js\\fabToolbar\\fabToolbar.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-material\\modules\\js\\fabTrigger\\fabTrigger.js": {
            "name": "web\\bower_components\\angular-material\\modules\\js\\fabTrigger\\fabTrigger.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-material\\modules\\js\\gridList\\gridList.js": {
            "name": "web\\bower_components\\angular-material\\modules\\js\\gridList\\gridList.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-material\\modules\\js\\icon\\icon.js": {
            "name": "web\\bower_components\\angular-material\\modules\\js\\icon\\icon.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-material\\modules\\js\\input\\input.js": {
            "name": "web\\bower_components\\angular-material\\modules\\js\\input\\input.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-material\\modules\\js\\list\\list.js": {
            "name": "web\\bower_components\\angular-material\\modules\\js\\list\\list.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-material\\modules\\js\\menu\\menu.js": {
            "name": "web\\bower_components\\angular-material\\modules\\js\\menu\\menu.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-material\\modules\\js\\menuBar\\menuBar.js": {
            "name": "web\\bower_components\\angular-material\\modules\\js\\menuBar\\menuBar.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-material\\modules\\js\\progressCircular\\progressCircular.js": {
            "name": "web\\bower_components\\angular-material\\modules\\js\\progressCircular\\progressCircular.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-material\\modules\\js\\progressLinear\\progressLinear.js": {
            "name": "web\\bower_components\\angular-material\\modules\\js\\progressLinear\\progressLinear.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-material\\modules\\js\\radioButton\\radioButton.js": {
            "name": "web\\bower_components\\angular-material\\modules\\js\\radioButton\\radioButton.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-material\\modules\\js\\select\\select.js": {
            "name": "web\\bower_components\\angular-material\\modules\\js\\select\\select.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-material\\modules\\js\\showHide\\showHide.js": {
            "name": "web\\bower_components\\angular-material\\modules\\js\\showHide\\showHide.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-material\\modules\\js\\sidenav\\sidenav.js": {
            "name": "web\\bower_components\\angular-material\\modules\\js\\sidenav\\sidenav.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-material\\modules\\js\\slider\\slider.js": {
            "name": "web\\bower_components\\angular-material\\modules\\js\\slider\\slider.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-material\\modules\\js\\sticky\\sticky.js": {
            "name": "web\\bower_components\\angular-material\\modules\\js\\sticky\\sticky.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-material\\modules\\js\\subheader\\subheader.js": {
            "name": "web\\bower_components\\angular-material\\modules\\js\\subheader\\subheader.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-material\\modules\\js\\swipe\\swipe.js": {
            "name": "web\\bower_components\\angular-material\\modules\\js\\swipe\\swipe.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-material\\modules\\js\\switch\\switch.js": {
            "name": "web\\bower_components\\angular-material\\modules\\js\\switch\\switch.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js": {
            "name": "web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-material\\modules\\js\\textField\\textField.js": {
            "name": "web\\bower_components\\angular-material\\modules\\js\\textField\\textField.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-material\\modules\\js\\toast\\toast.js": {
            "name": "web\\bower_components\\angular-material\\modules\\js\\toast\\toast.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-material\\modules\\js\\toolbar\\toolbar.js": {
            "name": "web\\bower_components\\angular-material\\modules\\js\\toolbar\\toolbar.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-material\\modules\\js\\tooltip\\tooltip.js": {
            "name": "web\\bower_components\\angular-material\\modules\\js\\tooltip\\tooltip.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js": {
            "name": "web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-material\\modules\\js\\whiteframe\\whiteframe.js": {
            "name": "web\\bower_components\\angular-material\\modules\\js\\whiteframe\\whiteframe.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-material\\angular-material-mocks.js": {
            "name": "web\\bower_components\\angular-material\\angular-material-mocks.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-material\\angular-material.js": {
            "name": "web\\bower_components\\angular-material\\angular-material.js",
            "modules": {
                "material.components.autocomplete": 1,
                "material.components.backdrop": 1,
                "material.components.bottomSheet": 1,
                "material.components.button": 1,
                "material.components.card": 1,
                "material.components.checkbox": 1,
                "material.components.chips": 1,
                "material.components.content": 1,
                "material.core.util": 1,
                "material.core": 1,
                "material.core.gestures": 1,
                "material.core.theming": 1,
                "material.core.ripple": 1,
                "material.components.datepicker": 1,
                "material.components.dialog": 1,
                "material.components.divider": 1,
                "material.components.fabActions": 1,
                "material.components.fabSpeedDial": 1,
                "material.components.fabToolbar": 1,
                "material.components.gridList": 1,
                "material.components.icon": 1,
                "material.components.input": 1,
                "material.components.list": 1,
                "material.components.menu": 1,
                "material.components.menu-bar": 1,
                "material.components.progressCircular": 1,
                "material.components.progressLinear": 1,
                "material.components.radioButton": 1,
                "material.components.select": 1,
                "material.components.sidenav": 1,
                "material.components.slider": 1,
                "material.components.sticky": 1,
                "material.components.subheader": 1,
                "material.components.swipe": 1,
                "material.components.switch": 1,
                "material.components.tabs": 1,
                "material.components.toast": 1,
                "material.components.toolbar": 1,
                "material.components.tooltip": 1,
                "material.components.virtualRepeat": 1,
                "material.components.whiteframe": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-messages\\angular-messages.js": {
            "name": "web\\bower_components\\angular-messages\\angular-messages.js",
            "modules": {
                "ngMessages": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-mocks\\angular-mocks.js": {
            "name": "web\\bower_components\\angular-mocks\\angular-mocks.js",
            "modules": {
                "ngMockE2E": 1,
                "ngMock": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js": {
            "name": "web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-ui-router\\release\\angular-ui-router.min.js": {
            "name": "web\\bower_components\\angular-ui-router\\release\\angular-ui-router.min.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-ui-router\\src\\common.js": {
            "name": "web\\bower_components\\angular-ui-router\\src\\common.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-ui-router\\src\\resolve.js": {
            "name": "web\\bower_components\\angular-ui-router\\src\\resolve.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-ui-router\\src\\state.js": {
            "name": "web\\bower_components\\angular-ui-router\\src\\state.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-ui-router\\src\\stateDirectives.js": {
            "name": "web\\bower_components\\angular-ui-router\\src\\stateDirectives.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-ui-router\\src\\stateFilters.js": {
            "name": "web\\bower_components\\angular-ui-router\\src\\stateFilters.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-ui-router\\src\\templateFactory.js": {
            "name": "web\\bower_components\\angular-ui-router\\src\\templateFactory.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js": {
            "name": "web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-ui-router\\src\\urlRouter.js": {
            "name": "web\\bower_components\\angular-ui-router\\src\\urlRouter.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-ui-router\\src\\view.js": {
            "name": "web\\bower_components\\angular-ui-router\\src\\view.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-ui-router\\src\\viewDirective.js": {
            "name": "web\\bower_components\\angular-ui-router\\src\\viewDirective.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "web\\bower_components\\angular-ui-router\\src\\viewScroll.js": {
            "name": "web\\bower_components\\angular-ui-router\\src\\viewScroll.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "GruntFile": {
            "name": "GruntFile",
            "submodules": {},
            "elements": {},
            "classes": {
                "GruntFile\n\nWas attempting to do gruntdocs...": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "web\\app\\controllers\\GruntFile.js",
            "line": 1
        },
        "adminPanelController": {
            "name": "adminPanelController",
            "submodules": {},
            "elements": {},
            "classes": {
                "adminPanelController\n\nResponsible for every functionality given by the administrator panel for the frontend.": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "web\\app\\controllers\\adminPanelController.js",
            "line": 1
        },
        "auditTrailController": {
            "name": "auditTrailController",
            "submodules": {},
            "elements": {},
            "classes": {
                "auditTrailController\n\nResponsible for every functionality given by the administrator panel for the frontend.": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "web\\app\\controllers\\auditTrailController.js",
            "line": 1
        },
        "editController": {
            "name": "editController",
            "submodules": {},
            "elements": {},
            "classes": {
                "editController\n\nResponsible for every functionality given by the administrator panel for the frontend.": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "web\\app\\controllers\\editController.js",
            "line": 1
        },
        "mentorshipNotificationController": {
            "name": "mentorshipNotificationController",
            "submodules": {},
            "elements": {},
            "classes": {
                "mentorshipNotificationController\n\nNotifications for mentorships are dealt with here.": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "web\\app\\controllers\\mentorshipNotificationController.js",
            "line": 1
        },
        "personAutoController": {
            "name": "personAutoController",
            "submodules": {},
            "elements": {},
            "classes": {
                "personAutoController\n\nDeals with the automatic updating and searching for the people supplied into the query string provided\nthrough the search bar at the top of the main html file.": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "web\\app\\controllers\\personAutoController.js",
            "line": 1
        },
        "personNotificationController": {
            "name": "personNotificationController",
            "submodules": {},
            "elements": {},
            "classes": {
                "personNotificationController\n\nNotifications for persons are dealt with here.": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "web\\app\\controllers\\personNotificationController.js",
            "line": 1
        },
        "searchController": {
            "name": "searchController",
            "submodules": {},
            "elements": {},
            "classes": {
                "searchController\n\nEntire Search Functionality located here.": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "web\\app\\controllers\\searchController.js",
            "line": 1
        },
        "submitController": {
            "name": "submitController",
            "submodules": {},
            "elements": {},
            "classes": {
                "submitController\n\nController for the Submission page.\n\n\nStatus: CONTROLLER\nAssociated files: submit.html\n\nThe submission page is going to be the core of where the users will be able to supply information to begin a new\npage for a given particular user. This page is going to be essentially a massive collection of information that\nwe will be inserting into the system.\n\nThings that we're collecting include basic information like:\n-first name\n-last name\n-degree type\n-postdoc postings\n-etc": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "web\\app\\controllers\\submitController.js",
            "line": 1
        },
        "supervisionNotificationController": {
            "name": "supervisionNotificationController",
            "submodules": {},
            "elements": {},
            "classes": {
                "supervisionNotificationController\n\nNotifications for supervision are dealt with here.": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "web\\app\\controllers\\supervisionNotificationController.js",
            "line": 1
        },
        "userController": {
            "name": "userController",
            "submodules": {},
            "elements": {},
            "classes": {
                "muserController\n\nThe user controller is located here, that handles the affairs dealing with the users of the application\nworking with the application.": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "web\\app\\controllers\\userController.js",
            "line": 1
        },
        "userDialogController": {
            "name": "userDialogController",
            "submodules": {},
            "elements": {},
            "classes": {
                "userDialogController\n\n Controller for the User Dialogue\n\nStatus: CONTROLLER\nAssociated files: userDialog.html,\n\nThe user dialog controller is associated with registration and submission of login information. So it is\nslightly associated with the User Controller (userController.js), yet is kept distinct for clarity of functions.": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "web\\app\\controllers\\userDialogController.js",
            "line": 1
        },
        "viewController": {
            "name": "viewController",
            "submodules": {},
            "elements": {},
            "classes": {
                "viewController\n\nThis controller does all that can be done with the view page.": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "web\\app\\controllers\\viewController.js",
            "line": 1
        },
        "visController": {
            "name": "visController",
            "submodules": {},
            "elements": {},
            "classes": {
                "visController\n\nNotifications for mentorships are dealt with here.": 1,
                "our routes": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "web\\app\\routes.js",
            "line": 1
        },
        "ng": {
            "name": "ng",
            "submodules": {},
            "elements": {
                "ANY": 1,
                "A": 1,
                "IMG": 1,
                "INPUT": 1,
                "OPTION": 1,
                "DETAILS": 1,
                "input": 1,
                "html": 1,
                "form": 1,
                "window,": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 170,
            "ngdoc": "module",
            "kind": "function",
            "params": [
                {
                    "name": "obj",
                    "description": "Object to iterate over.",
                    "type": "Object|Array"
                },
                {
                    "name": "iterator",
                    "description": "Iterator function.",
                    "type": "Function"
                },
                {
                    "name": "context",
                    "description": "Object to become context (`this`) for the iterator function.",
                    "type": "Object="
                }
            ],
            "return": {
                "description": "Reference to `obj`.",
                "type": "Object|Array"
            },
            "example": [
                "\n<example module=\"copyExample\">\n<file name=\"index.html\">\n<div ng-controller=\"ExampleController\">\n<form novalidate class=\"simple-form\">\nName: <input type=\"text\" ng-model=\"user.name\" /><br />\nE-mail: <input type=\"email\" ng-model=\"user.email\" /><br />\nGender: <input type=\"radio\" ng-model=\"user.gender\" value=\"male\" />male\n<input type=\"radio\" ng-model=\"user.gender\" value=\"female\" />female<br />\n<button ng-click=\"reset()\">RESET</button>\n<button ng-click=\"update(user)\">SAVE</button>\n</form>\n<pre>form = {{user | json}}</pre>\n<pre>master = {{master | json}}</pre>\n</div>\n\n<script>\n angular.module('copyExample', [])\n   .controller('ExampleController', ['$scope', function($scope) {\n     $scope.master= {};\n\n     $scope.update = function(user) {\n       // Example with 1 argument\n       $scope.master= angular.copy(user);\n     };\n\n     $scope.reset = function() {\n       // Example with 2 arguments\n       angular.copy($scope.master, $scope.user);\n     };\n\n     $scope.reset();\n   }]);\n</script>\n</file>\n</example>"
            ]
        },
        "material.components.autocomplete": {
            "name": "material.components.autocomplete",
            "submodules": {},
            "elements": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 19348,
            "ngdoc": "directive",
            "params": [
                {
                    "name": "md-items",
                    "description": "An expression in the format of `item in items` to iterate over\n    matches for your search.",
                    "type": "Expression"
                },
                {
                    "name": "md-selected-item-change",
                    "description": "An expression to be run each time a new item is\n    selected",
                    "type": "Expression="
                },
                {
                    "name": "md-search-text-change",
                    "description": "An expression to be run each time the search text\n    updates",
                    "type": "Expression="
                },
                {
                    "name": "md-search-text",
                    "description": "A model to bind the search query text to",
                    "type": "Expression="
                },
                {
                    "name": "md-selected-item",
                    "description": "A model to bind the selected item to",
                    "type": "Object="
                },
                {
                    "name": "md-item-text",
                    "description": "An expression that will convert your object to a single string.",
                    "type": "Expression="
                },
                {
                    "name": "placeholder",
                    "description": "Placeholder text that will be forwarded to the input.",
                    "type": "String="
                },
                {
                    "name": "md-no-cache",
                    "description": "Disables the internal caching that happens in autocomplete",
                    "type": "Boolean="
                },
                {
                    "name": "ng-disabled",
                    "description": "Determines whether or not to disable the input field",
                    "type": "Boolean="
                },
                {
                    "name": "md-min-length",
                    "description": "Specifies the minimum length of text before autocomplete will\n    make suggestions",
                    "type": "Number="
                },
                {
                    "name": "md-delay",
                    "description": "Specifies the amount of time (in milliseconds) to wait before looking\n    for results",
                    "type": "Number="
                },
                {
                    "name": "md-autofocus",
                    "description": "If true, the autocomplete will be automatically focused when a `$mdDialog`,\n    `$mdBottomsheet` or `$mdSidenav`, which contains the autocomplete, is opening. <br/><br/>\n    Also the autocomplete will immediately focus the input element.",
                    "type": "Boolean="
                },
                {
                    "name": "md-autoselect",
                    "description": "If true, the first item will be selected by default",
                    "type": "Boolean="
                },
                {
                    "name": "md-menu-class",
                    "description": "This will be applied to the dropdown menu for styling",
                    "type": "String="
                },
                {
                    "name": "md-floating-label",
                    "description": "This will add a floating label to autocomplete and wrap it in\n    `md-input-container`",
                    "type": "String="
                },
                {
                    "name": "md-input-name",
                    "description": "The name attribute given to the input element to be used with\n    FormController",
                    "type": "String="
                },
                {
                    "name": "md-input-id",
                    "description": "An ID to be added to the input element",
                    "type": "String="
                },
                {
                    "name": "md-input-minlength",
                    "description": "The minimum length for the input's value for validation",
                    "type": "Number="
                },
                {
                    "name": "md-input-maxlength",
                    "description": "The maximum length for the input's value for validation",
                    "type": "Number="
                },
                {
                    "name": "md-select-on-match",
                    "description": "When set, autocomplete will automatically select exact\n    the item if the search text is an exact match",
                    "type": "Boolean="
                }
            ],
            "usage": "### Basic Example\n<hljs lang=\"html\">\n  <md-autocomplete\n      md-selected-item=\"selectedItem\"\n      md-search-text=\"searchText\"\n      md-items=\"item in getMatches(searchText)\"\n      md-item-text=\"item.display\">\n    <span md-highlight-text=\"searchText\">{{item.display}}</span>\n  </md-autocomplete>\n</hljs>\n\n### Example with \"not found\" message\n<hljs lang=\"html\">\n<md-autocomplete\n    md-selected-item=\"selectedItem\"\n    md-search-text=\"searchText\"\n    md-items=\"item in getMatches(searchText)\"\n    md-item-text=\"item.display\">\n  <md-item-template>\n    <span md-highlight-text=\"searchText\">{{item.display}}</span>\n  </md-item-template>\n  <md-not-found>\n    No matches found.\n  </md-not-found>\n</md-autocomplete>\n</hljs>\n\nIn this example, our code utilizes `md-item-template` and `md-not-found` to specify the\n    different parts that make up our component.\n\n### Example with validation\n<hljs lang=\"html\">\n<form name=\"autocompleteForm\">\n  <md-autocomplete\n      required\n      md-input-name=\"autocomplete\"\n      md-selected-item=\"selectedItem\"\n      md-search-text=\"searchText\"\n      md-items=\"item in getMatches(searchText)\"\n      md-item-text=\"item.display\">\n    <md-item-template>\n      <span md-highlight-text=\"searchText\">{{item.display}}</span>\n    </md-item-template>\n    <div ng-messages=\"autocompleteForm.autocomplete.$error\">\n      <div ng-message=\"required\">This field is required</div>\n    </div>\n  </md-autocomplete>\n</form>\n</hljs>\n\nIn this example, our code utilizes `md-item-template` and `md-not-found` to specify the\n    different parts that make up our component."
        },
        "material.components.backdrop": {
            "name": "material.components.backdrop",
            "submodules": {},
            "elements": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 6023,
            "ngdoc": "directive",
            "restrict": "E"
        },
        "material.components.bottomSheet": {
            "name": "material.components.bottomSheet",
            "submodules": {},
            "elements": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 6571,
            "ngdoc": "service",
            "usage": "<hljs lang=\"html\">\n<div ng-controller=\"MyController\">\n  <md-button ng-click=\"openBottomSheet()\">\n    Open a Bottom Sheet!\n  </md-button>\n</div>\n</hljs>\n<hljs lang=\"js\">\nvar app = angular.module('app', ['ngMaterial']);\napp.controller('MyController', function($scope, $mdBottomSheet) {\n  $scope.openBottomSheet = function() {\n    $mdBottomSheet.show({\n      template: '<md-bottom-sheet>Hello!</md-bottom-sheet>'\n    });\n  };\n});\n</hljs>"
        },
        "material.components.button": {
            "name": "material.components.button",
            "submodules": {},
            "elements": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 6101,
            "ngdoc": "directive",
            "restrict": "E",
            "params": [
                {
                    "name": "md-no-ink",
                    "description": "If present, disable ripple ink effects.",
                    "type": "Boolean="
                },
                {
                    "name": "ng-disabled",
                    "description": "En/Disable based on the expression",
                    "type": "Expression="
                },
                {
                    "name": "md-ripple-size",
                    "description": "Overrides the default ripple size logic. Options: `full`, `partial`, `auto`",
                    "type": "String="
                },
                {
                    "name": "aria-label",
                    "description": "Adds alternative text to button for accessibility, useful for icon buttons.\nIf no default text is found, a warning will be logged.",
                    "type": "String="
                }
            ],
            "usage": "Regular buttons:\n\n<hljs lang=\"html\">\n <md-button> Flat Button </md-button>\n <md-button href=\"http://google.com\"> Flat link </md-button>\n <md-button class=\"md-raised\"> Raised Button </md-button>\n <md-button ng-disabled=\"true\"> Disabled Button </md-button>\n <md-button>\n   <md-icon md-svg-src=\"your/icon.svg\"></md-icon>\n   Register Now\n </md-button>\n</hljs>\n\nFAB buttons:\n\n<hljs lang=\"html\">\n <md-button class=\"md-fab\" aria-label=\"FAB\">\n   <md-icon md-svg-src=\"your/icon.svg\"></md-icon>\n </md-button>\n <!-- mini-FAB -->\n <md-button class=\"md-fab md-mini\" aria-label=\"Mini FAB\">\n   <md-icon md-svg-src=\"your/icon.svg\"></md-icon>\n </md-button>\n <!-- Button with SVG Icon -->\n <md-button class=\"md-icon-button\" aria-label=\"Custom Icon Button\">\n   <md-icon md-svg-icon=\"path/to/your.svg\"></md-icon>\n </md-button>\n</hljs>"
        },
        "material.components.card": {
            "name": "material.components.card",
            "submodules": {},
            "elements": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 6238,
            "ngdoc": "directive",
            "restrict": "E",
            "usage": "### Card with optional footer\n<hljs lang=\"html\">\n<md-card>\n <img src=\"card-image.png\" class=\"md-card-image\" alt=\"image caption\">\n <md-card-content>\n   <h2>Card headline</h2>\n   <p>Card content</p>\n </md-card-content>\n <md-card-footer>\n   Card footer\n </md-card-footer>\n</md-card>\n</hljs>\n\n### Card with actions\n<hljs lang=\"html\">\n<md-card>\n <img src=\"card-image.png\" class=\"md-card-image\" alt=\"image caption\">\n <md-card-content>\n   <h2>Card headline</h2>\n   <p>Card content</p>\n </md-card-content>\n <md-card-actions layout=\"row\" layout-align=\"end center\">\n   <md-button>Action 1</md-button>\n   <md-button>Action 2</md-button>\n </md-card-actions>\n</md-card>\n</hljs>\n\n### Card with header, image, title actions and content\n<hljs lang=\"html\">\n<md-card>\n  <md-card-header>\n    <md-card-avatar>\n      <img class=\"md-user-avatar\" src=\"avatar.png\"/>\n    </md-card-avatar>\n    <md-card-header-text>\n      <span class=\"md-title\">Title</span>\n      <span class=\"md-subhead\">Sub header</span>\n    </md-card-header-text>\n  </md-card-header>\n  <img ng-src=\"card-image.png\" class=\"md-card-image\" alt=\"image caption\">\n  <md-card-title>\n    <md-card-title-text>\n      <span class=\"md-headline\">Card headline</span>\n      <span class=\"md-subhead\">Card subheader</span>\n    </md-card-title-text>\n  </md-card-title>\n  <md-card-actions layout=\"row\" layout-align=\"start center\">\n    <md-button>Action 1</md-button>\n    <md-button>Action 2</md-button>\n    <md-card-icon-actions>\n      <md-button class=\"md-icon-button\" aria-label=\"icon\">\n        <md-icon md-svg-icon=\"icon\"></md-icon>\n      </md-button>\n    </md-card-icon-actions>\n  </md-card-actions>\n  <md-card-content>\n    <p>\n     Card content\n    </p>\n  </md-card-content>\n</md-card>\n</hljs>"
        },
        "material.components.checkbox": {
            "name": "material.components.checkbox",
            "submodules": {},
            "elements": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 6369,
            "ngdoc": "directive",
            "restrict": "E",
            "params": [
                {
                    "name": "ng-model",
                    "description": "Assignable angular expression to data-bind to.",
                    "type": "String"
                },
                {
                    "name": "name",
                    "description": "Property name of the form under which the control is published.",
                    "type": "String="
                },
                {
                    "name": "ng-true-value",
                    "description": "The value to which the expression should be set when selected.",
                    "type": "Expression="
                },
                {
                    "name": "ng-false-value",
                    "description": "The value to which the expression should be set when not selected.",
                    "type": "Expression="
                },
                {
                    "name": "ng-change",
                    "description": "Angular expression to be executed when input changes due to user interaction with the input element.",
                    "type": "String="
                },
                {
                    "name": "md-no-ink",
                    "description": "Use of attribute indicates use of ripple ink effects",
                    "type": "Boolean="
                },
                {
                    "name": "aria-label",
                    "description": "Adds label to checkbox for accessibility.\nDefaults to checkbox's text. If no default text is found, a warning will be logged.",
                    "type": "String="
                }
            ],
            "usage": "<hljs lang=\"html\">\n<md-checkbox ng-model=\"isChecked\" aria-label=\"Finished?\">\n  Finished ?\n</md-checkbox>\n\n<md-checkbox md-no-ink ng-model=\"hasInk\" aria-label=\"No Ink Effects\">\n  No Ink Effects\n</md-checkbox>\n\n<md-checkbox ng-disabled=\"true\" ng-model=\"isDisabled\" aria-label=\"Disabled\">\n  Disabled\n</md-checkbox>\n\n</hljs>"
        },
        "material.components.chips": {
            "name": "material.components.chips",
            "submodules": {},
            "elements": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 19815,
            "ngdoc": "directive",
            "usage": "<hljs lang=\"html\">\n  <md-chip>{{$chip}}</md-chip>\n</hljs>",
            "params": [
                {
                    "name": "ng-model",
                    "description": "A model to bind the list of items to",
                    "type": "String=|object="
                },
                {
                    "name": "placeholder",
                    "description": "Placeholder text that will be forwarded to the input.",
                    "type": "String="
                },
                {
                    "name": "secondary-placeholder",
                    "description": "Placeholder text that will be forwarded to the input,\n   displayed when there is at least on item in the list",
                    "type": "String="
                },
                {
                    "name": "readonly",
                    "description": "Disables list manipulation (deleting or adding list items), hiding\n   the input and delete buttons",
                    "type": "Boolean="
                },
                {
                    "name": "md-transform-chip",
                    "description": "An expression of form `myFunction($chip)` that when called\n   expects one of the following return values:\n   - an object representing the `$chip` input string\n   - `undefined` to simply add the `$chip` input string, or\n   - `null` to prevent the chip from being appended",
                    "type": "Expression"
                },
                {
                    "name": "md-on-add",
                    "description": "An expression which will be called when a chip has been\n   added.",
                    "type": "Expression="
                },
                {
                    "name": "md-on-remove",
                    "description": "An expression which will be called when a chip has been\n   removed.",
                    "type": "Expression="
                },
                {
                    "name": "md-on-select",
                    "description": "An expression which will be called when a chip is selected.",
                    "type": "Expression="
                },
                {
                    "name": "md-require-match",
                    "description": "If true, and the chips template contains an autocomplete,\n   only allow selection of pre-defined chips (i.e. you cannot add new ones).",
                    "type": "Boolean"
                },
                {
                    "name": "delete-hint",
                    "description": "A string read by screen readers instructing users that pressing\n   the delete key will remove the chip.",
                    "type": "String="
                },
                {
                    "name": "delete-button-label",
                    "description": "A label for the delete button. Also hidden and read by\n   screen readers.",
                    "type": "String="
                },
                {
                    "name": "md-separator-keys",
                    "description": "An array of key codes used to separate chips.",
                    "type": "Expression="
                }
            ]
        },
        "material.components.content": {
            "name": "material.components.content",
            "submodules": {},
            "elements": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 9898,
            "ngdoc": "directive",
            "restrict": "E",
            "usage": "- Add the `[layout-padding]` attribute to make the content padded.\n\n<hljs lang=\"html\">\n <md-content layout-padding>\n     Lorem ipsum dolor sit amet, ne quod novum mei.\n </md-content>\n</hljs>"
        },
        "material.core.util": {
            "name": "material.core.util",
            "submodules": {},
            "elements": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 104,
            "ngdoc": "directive",
            "usage": "### Dialog\n<hljs lang=\"html\">\n<md-dialog>\n  <form>\n    <md-input-container>\n      <label for=\"testInput\">Label</label>\n      <input id=\"testInput\" type=\"text\" md-autofocus>\n    </md-input-container>\n  </form>\n</md-dialog>\n</hljs>\n\n### Bottomsheet\n<hljs lang=\"html\">\n<md-bottom-sheet class=\"md-list md-has-header\">\n <md-subheader>Comment Actions</md-subheader>\n <md-list>\n   <md-list-item ng-repeat=\"item in items\">\n\n     <md-button md-autofocus=\"$index == 2\">\n       <md-icon md-svg-src=\"{{item.icon}}\"></md-icon>\n       <span class=\"md-inline-list-icon-label\">{{ item.name }}</span>\n     </md-button>\n\n   </md-list-item>\n </md-list>\n</md-bottom-sheet>\n</hljs>\n\n### Autocomplete\n<hljs lang=\"html\">\n  <md-autocomplete\n      md-autofocus\n      md-selected-item=\"selectedItem\"\n      md-search-text=\"searchText\"\n      md-items=\"item in getMatches(searchText)\"\n      md-item-text=\"item.display\">\n    <span md-highlight-text=\"searchText\">{{item.display}}</span>\n  </md-autocomplete>\n</hljs>\n\n### Sidenav\n<hljs lang=\"html\">\n<div layout=\"row\" ng-controller=\"MyController\">\n  <md-sidenav md-component-id=\"left\" class=\"md-sidenav-left\">\n    Left Nav!\n  </md-sidenav>\n\n  <md-content>\n    Center Content\n    <md-button ng-click=\"openLeftMenu()\">\n      Open Left Menu\n    </md-button>\n  </md-content>\n\n  <md-sidenav md-component-id=\"right\"\n    md-is-locked-open=\"$mdMedia('min-width: 333px')\"\n    class=\"md-sidenav-right\">\n    <form>\n      <md-input-container>\n        <label for=\"testInput\">Test input</label>\n        <input id=\"testInput\" type=\"text\"\n               ng-model=\"data\" md-autofocus>\n      </md-input-container>\n    </form>\n  </md-sidenav>\n</div>\n</hljs>"
        },
        "material.core": {
            "name": "material.core",
            "submodules": {},
            "elements": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 4276,
            "ngdoc": "service",
            "return": {
                "description": "a boolean representing whether or not the given media query is true or false.",
                "type": "Boolean"
            },
            "usage": "<hljs lang=\"js\">\napp.controller('MyController', function($mdMedia, $scope) {\n  $scope.$watch(function() { return $mdMedia('lg'); }, function(big) {\n    $scope.bigScreen = big;\n  });\n\n  $scope.screenIsSmall = $mdMedia('sm');\n  $scope.customQuery = $mdMedia('(min-width: 1234px)');\n  $scope.anotherCustom = $mdMedia('max-width: 300px');\n});\n</hljs>",
            "params": [
                {
                    "name": "scope",
                    "description": "Scope within the current context",
                    "type": "Object="
                },
                {
                    "name": "element",
                    "description": "The element the ripple effect should be applied to",
                    "type": "Object="
                },
                {
                    "name": "options",
                    "description": "(Optional) Configuration options to override the default ripple configuration",
                    "type": "Object="
                }
            ]
        },
        "material.core.gestures": {
            "name": "material.core.gestures",
            "submodules": {},
            "elements": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 1671,
            "ngdoc": "service"
        },
        "material.core.theming": {
            "name": "material.core.theming",
            "submodules": {},
            "elements": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 4684,
            "ngdoc": "service"
        },
        "material.core.ripple": {
            "name": "material.core.ripple",
            "submodules": {},
            "elements": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 3817,
            "ngdoc": "directive",
            "params": [
                {
                    "name": "md-ink-ripple",
                    "description": "A color string `#FF0000` or boolean (`false` or `0`) for preventing ripple",
                    "type": "String|boolean"
                }
            ],
            "usage": "### String values\n<hljs lang=\"html\">\n  <ANY md-ink-ripple=\"#FF0000\">\n    Ripples in red\n  </ANY>\n\n  <ANY md-ink-ripple=\"false\">\n    Not rippling\n  </ANY>\n</hljs>\n\n### Interpolated values\n<hljs lang=\"html\">\n  <ANY md-ink-ripple=\"{{ randomColor() }}\">\n    Ripples with the return value of 'randomColor' function\n  </ANY>\n\n  <ANY md-ink-ripple=\"{{ canRipple() }}\">\n    Ripples if 'canRipple' function return value is not 'false' or '0'\n  </ANY>\n</hljs>"
        },
        "material.components.datepicker": {
            "name": "material.components.datepicker",
            "submodules": {},
            "elements": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 8732,
            "ngdoc": "service",
            "itemtype": "property",
            "type": "(Array<string>)=",
            "usage": "<hljs lang=\"js\">\n  myAppModule.config(function($mdDateLocaleProvider) {\n\n    // Example of a French localization.\n    $mdDateLocaleProvider.months = ['janvier', 'février', 'mars', ...];\n    $mdDateLocaleProvider.shortMonths = ['janv', 'févr', 'mars', ...];\n    $mdDateLocaleProvider.days = ['dimanche', 'lundi', 'mardi', ...];\n    $mdDateLocaleProvider.shortDays = ['Di', 'Lu', 'Ma', ...];\n\n    // Can change week display to start on Monday.\n    $mdDateLocaleProvider.firstDayOfWeek = 1;\n\n    // Optional.\n    $mdDateLocaleProvider.dates = [1, 2, 3, 4, 5, 6, ...];\n\n    // Example uses moment.js to parse and format dates.\n    $mdDateLocaleProvider.parseDate = function(dateString) {\n      var m = moment(dateString, 'L', true);\n      return m.isValid() ? m.toDate() : new Date(NaN);\n    };\n\n    $mdDateLocaleProvider.formatDate = function(date) {\n      return moment(date).format('L');\n    };\n\n    $mdDateLocaleProvider.monthHeaderFormatter = function(date) {\n      return myShortMonths[date.getMonth()] + ' ' + date.getFullYear();\n    };\n\n    // In addition to date display, date components also need localized messages\n    // for aria-labels for screen-reader users.\n\n    $mdDateLocaleProvider.weekNumberFormatter = function(weekNumber) {\n      return 'Semaine ' + weekNumber;\n    };\n\n    $mdDateLocaleProvider.msgCalendar = 'Calendrier';\n    $mdDateLocaleProvider.msgOpenCalendar = 'Ouvrir le calendrier';\n\n});\n</hljs>",
            "params": [
                {
                    "name": "ng-model",
                    "description": "The component's model. Expects a JavaScript Date object.",
                    "type": "Date"
                },
                {
                    "name": "ng-change",
                    "description": "Expression evaluated when the model value changes.",
                    "type": "Expression="
                },
                {
                    "name": "md-min-date",
                    "description": "Expression representing a min date (inclusive).",
                    "type": "Date="
                },
                {
                    "name": "md-max-date",
                    "description": "Expression representing a max date (inclusive).",
                    "type": "Date="
                },
                {
                    "name": "md-date-filter",
                    "description": "Function expecting a date and returning a boolean whether it can be selected or not.",
                    "type": "(function(Date): boolean)="
                },
                {
                    "name": "md-placeholder",
                    "description": "The date input placeholder value.",
                    "type": "String="
                },
                {
                    "name": "ng-disabled",
                    "description": "Whether the datepicker is disabled.",
                    "type": "Boolean="
                },
                {
                    "name": "ng-required",
                    "description": "Whether a value is required for the datepicker.",
                    "type": "Boolean="
                }
            ]
        },
        "material.components.dialog": {
            "name": "material.components.dialog",
            "submodules": {},
            "elements": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 6840,
            "ngdoc": "directive",
            "restrict": "E",
            "usage": "### Dialog template\n<hljs lang=\"html\">\n<md-dialog aria-label=\"List dialog\">\n  <md-dialog-content>\n    <md-list>\n      <md-list-item ng-repeat=\"item in items\">\n        <p>Number {{item}}</p>\n      </md-list-item>\n    </md-list>\n  </md-dialog-content>\n  <md-dialog-actions>\n    <md-button ng-click=\"closeDialog()\" class=\"md-primary\">Close Dialog</md-button>\n  </md-dialog-actions>\n</md-dialog>\n</hljs>"
        },
        "material.components.divider": {
            "name": "material.components.divider",
            "submodules": {},
            "elements": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 7867,
            "ngdoc": "directive",
            "restrict": "E",
            "params": [
                {
                    "name": "md-inset",
                    "description": "Add this attribute to activate the inset divider style.",
                    "type": "Boolean="
                }
            ],
            "usage": "<hljs lang=\"html\">\n<md-divider></md-divider>\n\n<md-divider md-inset></md-divider>\n</hljs>"
        },
        "material.components.fabActions": {
            "name": "material.components.fabActions",
            "submodules": {},
            "elements": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 9976,
            "ngdoc": "directive",
            "restrict": "E",
            "usage": "See the `<md-fab-speed-dial>` or `<md-fab-toolbar>` directives for example usage."
        },
        "material.components.fabSpeedDial": {
            "name": "material.components.fabSpeedDial",
            "submodules": {},
            "elements": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 11556,
            "ngdoc": "directive",
            "restrict": "E",
            "usage": "<hljs lang=\"html\">\n<md-fab-speed-dial md-direction=\"up\" class=\"md-fling\">\n  <md-fab-trigger>\n    <md-button aria-label=\"Add...\"><md-icon icon=\"/img/icons/plus.svg\"></md-icon></md-button>\n  </md-fab-trigger>\n\n  <md-fab-actions>\n    <md-button aria-label=\"Add User\">\n      <md-icon icon=\"/img/icons/user.svg\"></md-icon>\n    </md-button>\n\n    <md-button aria-label=\"Add Group\">\n      <md-icon icon=\"/img/icons/group.svg\"></md-icon>\n    </md-button>\n  </md-fab-actions>\n</md-fab-speed-dial>\n</hljs>",
            "params": [
                {
                    "name": "md-direction",
                    "description": "From which direction you would like the speed dial to appear\nrelative to the trigger element.",
                    "type": "String"
                },
                {
                    "name": "md-open",
                    "description": "Programmatically control whether or not the speed-dial is visible.",
                    "type": "Expression="
                }
            ]
        },
        "material.components.fabToolbar": {
            "name": "material.components.fabToolbar",
            "submodules": {},
            "elements": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 10611,
            "ngdoc": "directive",
            "restrict": "E",
            "usage": "<hljs lang=\"html\">\n<md-fab-toolbar md-direction='left'>\n  <md-fab-trigger>\n    <md-button aria-label=\"Add...\"><md-icon icon=\"/img/icons/plus.svg\"></md-icon></md-button>\n  </md-fab-trigger>\n\n  <md-fab-actions>\n    <md-button aria-label=\"Add User\">\n      <md-icon icon=\"/img/icons/user.svg\"></md-icon>\n    </md-button>\n\n    <md-button aria-label=\"Add Group\">\n      <md-icon icon=\"/img/icons/group.svg\"></md-icon>\n    </md-button>\n  </md-fab-actions>\n</md-fab-toolbar>\n</hljs>",
            "params": [
                {
                    "name": "md-direction",
                    "description": "From which direction you would like the toolbar items to appear\nrelative to the trigger element. Supports `left` and `right` directions.",
                    "type": "String"
                },
                {
                    "name": "md-open",
                    "description": "Programmatically control whether or not the toolbar is visible.",
                    "type": "Expression="
                }
            ]
        },
        "material.components.gridList": {
            "name": "material.components.gridList",
            "submodules": {},
            "elements": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 10797,
            "ngdoc": "directive",
            "restrict": "E",
            "params": [
                {
                    "name": "md-cols",
                    "description": "Number of columns in the grid.",
                    "type": "Number"
                },
                {
                    "name": "md-row-height",
                    "description": "One of\n<ul>\n  <li>CSS length - Fixed height rows (eg. `8px` or `1rem`)</li>\n  <li>`{width}:{height}` - Ratio of width to height (eg.\n  `md-row-height=\"16:9\"`)</li>\n  <li>`\"fit\"` - Height will be determined by subdividing the available\n  height by the number of rows</li>\n</ul>",
                    "type": "String"
                },
                {
                    "name": "md-gutter",
                    "description": "The amount of space between tiles in CSS units\n    (default 1px)",
                    "type": "String="
                },
                {
                    "name": "md-on-layout",
                    "description": "Expression to evaluate after layout. Event\n    object is available as `$event`, and contains performance information.",
                    "type": "Expression="
                }
            ],
            "usage": "Basic:\n<hljs lang=\"html\">\n<md-grid-list md-cols=\"5\" md-gutter=\"1em\" md-row-height=\"4:3\">\n  <md-grid-tile></md-grid-tile>\n</md-grid-list>\n</hljs>\n\nFixed-height rows:\n<hljs lang=\"html\">\n<md-grid-list md-cols=\"4\" md-row-height=\"200px\" ...>\n  <md-grid-tile></md-grid-tile>\n</md-grid-list>\n</hljs>\n\nFit rows:\n<hljs lang=\"html\">\n<md-grid-list md-cols=\"4\" md-row-height=\"fit\" style=\"height: 400px;\" ...>\n  <md-grid-tile></md-grid-tile>\n</md-grid-list>\n</hljs>\n\nUsing responsive attributes:\n<hljs lang=\"html\">\n<md-grid-list\n    md-cols-sm=\"2\"\n    md-cols-md=\"4\"\n    md-cols-lg=\"8\"\n    md-cols-gt-lg=\"12\"\n    ...>\n  <md-grid-tile></md-grid-tile>\n</md-grid-list>\n</hljs>"
        },
        "material.components.icon": {
            "name": "material.components.icon",
            "submodules": {},
            "elements": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 20988,
            "ngdoc": "directive",
            "restrict": "E",
            "params": [
                {
                    "name": "md-font-icon",
                    "description": "String name of CSS icon associated with the font-face will be used\nto render the icon. Requires the fonts and the named CSS styles to be preloaded.",
                    "type": "String"
                },
                {
                    "name": "md-font-set",
                    "description": "CSS style name associated with the font library; which will be assigned as\nthe class for the font-icon ligature. This value may also be an alias that is used to lookup the classname;\ninternally use `$mdIconProvider.fontSet(<alias>)` to determine the style name.",
                    "type": "String"
                },
                {
                    "name": "md-svg-src",
                    "description": "String URL (or expression) used to load, cache, and display an\n    external SVG.",
                    "type": "String"
                },
                {
                    "name": "md-svg-icon",
                    "description": "md-svg-icon String name used for lookup of the icon from the internal cache;\n    interpolated strings or expressions may also be used. Specific set names can be used with\n    the syntax `<set name>:<icon name>`.<br/><br/>\nTo use icon sets, developers are required to pre-register the sets using the `$mdIconProvider` service.",
                    "type": "String"
                },
                {
                    "name": "aria-label",
                    "description": "Labels icon for accessibility. If an empty string is provided, icon\nwill be hidden from accessibility layer with `aria-hidden=\"true\"`. If there's no aria-label on the icon\nnor a label on the parent element, a warning will be logged to the console.",
                    "type": "String="
                },
                {
                    "name": "alt",
                    "description": "Labels icon for accessibility. If an empty string is provided, icon\nwill be hidden from accessibility layer with `aria-hidden=\"true\"`. If there's no alt on the icon\nnor a label on the parent element, a warning will be logged to the console.",
                    "type": "String="
                }
            ],
            "usage": "When using SVGs:\n<hljs lang=\"html\">\n\n <!-- Icon ID; may contain optional icon set prefix; icons must registered using $mdIconProvider -->\n <md-icon md-svg-icon=\"social:android\"    aria-label=\"android \" ></md-icon>\n\n <!-- Icon urls; may be preloaded in templateCache -->\n <md-icon md-svg-src=\"/android.svg\"       aria-label=\"android \" ></md-icon>\n <md-icon md-svg-src=\"{{ getAndroid() }}\" aria-label=\"android \" ></md-icon>\n\n</hljs>\n\nUse the <code>$mdIconProvider</code> to configure your application with\nsvg iconsets.\n\n<hljs lang=\"js\">\n angular.module('appSvgIconSets', ['ngMaterial'])\n   .controller('DemoCtrl', function($scope) {})\n   .config(function($mdIconProvider) {\n     $mdIconProvider\n        .iconSet('social', 'img/icons/sets/social-icons.svg', 24)\n        .defaultIconSet('img/icons/sets/core-icons.svg', 24);\n    });\n</hljs>\n\n\nWhen using Font Icons with classnames:\n<hljs lang=\"html\">\n\n <md-icon md-font-icon=\"android\" aria-label=\"android\" ></md-icon>\n <md-icon class=\"icon_home\"      aria-label=\"Home\"    ></md-icon>\n\n</hljs>\n\nWhen using Material Font Icons with ligatures:\n<hljs lang=\"html\">\n <!-- For Material Design Icons -->\n <!-- The class '.material-icons' is auto-added if a style has NOT been specified -->\n <md-icon> face </md-icon>\n <md-icon md-font-set=\"material-icons\"> face </md-icon>\n <md-icon> #xE87C; </md-icon>\n <!-- The class '.material-icons' must be manually added if other styles are also specified-->\n <md-icon class=\"material-icons md-light md-48\"> face </md-icon>\n</hljs>\n\nWhen using other Font-Icon libraries:\n\n<hljs lang=\"js\">\n // Specify a font-icon style alias\n angular.config(function($mdIconProvider) {\n   $mdIconProvider.fontSet('fa', 'fontawesome');\n });\n</hljs>\n\n<hljs lang=\"html\">\n <md-icon md-font-set=\"fa\">email</md-icon>\n</hljs>",
            "return": {
                "description": "Clone of the initial SVG DOM element; which was created from the SVG markup in the SVG data file.",
                "type": "Obj"
            }
        },
        "material.components.input": {
            "name": "material.components.input",
            "submodules": {},
            "elements": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 11623,
            "ngdoc": "directive",
            "restrict": "E",
            "params": [
                {
                    "name": "md-is-error",
                    "description": "When the given expression evaluates to true, the input container\n  will go into error state. Defaults to erroring if the input has been touched and is invalid.",
                    "type": "Expression="
                },
                {
                    "name": "md-no-float",
                    "description": "When present, `placeholder` attributes on the input will not be converted to floating\n  labels.",
                    "type": "Boolean="
                }
            ],
            "usage": "<hljs lang=\"html\">\n\n<md-input-container>\n  <label>Username</label>\n  <input type=\"text\" ng-model=\"user.name\">\n</md-input-container>\n\n<md-input-container>\n  <label>Description</label>\n  <textarea ng-model=\"user.description\"></textarea>\n</md-input-container>\n\n</hljs>\n\n<h3>When disabling floating labels</h3>\n<hljs lang=\"html\">\n\n<md-input-container md-no-float>\n  <input type=\"text\" placeholder=\"Non-Floating Label\">\n</md-input-container>\n\n</hljs>"
        },
        "material.components.list": {
            "name": "material.components.list",
            "submodules": {},
            "elements": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 12438,
            "ngdoc": "directive",
            "restrict": "E",
            "usage": "<hljs lang=\"html\">\n<md-list>\n  <md-list-item class=\"md-2-line\" ng-repeat=\"item in todos\">\n    <md-checkbox ng-model=\"item.done\"></md-checkbox>\n    <div class=\"md-list-item-text\">\n      <h3>{{item.title}}</h3>\n      <p>{{item.description}}</p>\n    </div>\n  </md-list-item>\n</md-list>\n</hljs>"
        },
        "material.components.menu": {
            "name": "material.components.menu",
            "submodules": {},
            "elements": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 22597,
            "ngdoc": "directive",
            "restrict": "E",
            "usage": "<hljs lang=\"html\">\n<md-menu>\n <md-button ng-click=\"$mdOpenMenu($event)\" class=\"md-icon-button\">\n   <md-icon md-svg-icon=\"call:phone\"></md-icon>\n </md-button>\n <md-menu-content>\n   <md-menu-item><md-button ng-click=\"doSomething()\">Do Something</md-button></md-menu-item>\n </md-menu-content>\n</md-menu>\n</hljs>",
            "params": [
                {
                    "name": "md-position-mode",
                    "description": "The position mode in the form of\n          `x`, `y`. Default value is `target`,`target`. Right now the `x` axis\n          also suppports `target-right`.",
                    "type": "String"
                },
                {
                    "name": "md-offset",
                    "description": "An offset to apply to the dropdown after positioning\n          `x`, `y`. Default value is `0`,`0`.",
                    "type": "String"
                }
            ]
        },
        "material.components.menu-bar": {
            "name": "material.components.menu-bar",
            "submodules": {},
            "elements": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 22033,
            "ngdoc": "directive",
            "restrict": "E",
            "usage": "<hljs lang=\"html\">\n<md-menu-bar>\n  <md-menu>\n    <button ng-click=\"$mdOpenMenu()\">\n      File\n    </button>\n    <md-menu-content>\n      <md-menu-item>\n        <md-button ng-click=\"ctrl.sampleAction('share', $event)\">\n          Share...\n        </md-button>\n      </md-menu-item>\n      <md-menu-divider></md-menu-divider>\n      <md-menu-item>\n      <md-menu-item>\n        <md-menu>\n          <md-button ng-click=\"$mdOpenMenu()\">New</md-button>\n          <md-menu-content>\n            <md-menu-item><md-button ng-click=\"ctrl.sampleAction('New Document', $event)\">Document</md-button></md-menu-item>\n            <md-menu-item><md-button ng-click=\"ctrl.sampleAction('New Spreadsheet', $event)\">Spreadsheet</md-button></md-menu-item>\n            <md-menu-item><md-button ng-click=\"ctrl.sampleAction('New Presentation', $event)\">Presentation</md-button></md-menu-item>\n            <md-menu-item><md-button ng-click=\"ctrl.sampleAction('New Form', $event)\">Form</md-button></md-menu-item>\n            <md-menu-item><md-button ng-click=\"ctrl.sampleAction('New Drawing', $event)\">Drawing</md-button></md-menu-item>\n          </md-menu-content>\n        </md-menu>\n      </md-menu-item>\n    </md-menu-content>\n  </md-menu>\n</md-menu-bar>\n</hljs>\n\n## Menu Bar Controls\n\nYou may place `md-menu-items` that function as controls within menu bars.\nThere are two modes that are exposed via the `type` attribute of the `md-menu-item`.\n`type=\"checkbox\"` will function as a boolean control for the `ng-model` attribute of the\n`md-menu-item`. `type=\"radio\"` will function like a radio button, setting the `ngModel`\nto the `string` value of the `value` attribute. If you need non-string values, you can use\n`ng-value` to provide an expression (this is similar to how angular's native `input[type=radio]` works.\n\n<hljs lang=\"html\">\n<md-menu-bar>\n <md-menu>\n   <button ng-click=\"$mdOpenMenu()\">\n     Sample Menu\n   </button>\n   <md-menu-content>\n     <md-menu-item type=\"checkbox\" ng-model=\"settings.allowChanges\">Allow changes</md-menu-item>\n     <md-menu-divider></md-menu-divider>\n     <md-menu-item type=\"radio\" ng-model=\"settings.mode\" ng-value=\"1\">Mode 1</md-menu-item>\n     <md-menu-item type=\"radio\" ng-model=\"settings.mode\" ng-value=\"1\">Mode 2</md-menu-item>\n     <md-menu-item type=\"radio\" ng-model=\"settings.mode\" ng-value=\"1\">Mode 3</md-menu-item>\n   </md-menu-content>\n </md-menu>\n</md-menu-bar>\n</hljs>\n\n\n### Nesting Menus\n\nMenus may be nested within menu bars. This is commonly called cascading menus.\nTo nest a menu place the nested menu inside the content of the `md-menu-item`.\n<hljs lang=\"html\">\n<md-menu-item>\n  <md-menu>\n    <button ng-click=\"$mdOpenMenu()\">New</md-button>\n    <md-menu-content>\n      <md-menu-item><md-button ng-click=\"ctrl.sampleAction('New Document', $event)\">Document</md-button></md-menu-item>\n      <md-menu-item><md-button ng-click=\"ctrl.sampleAction('New Spreadsheet', $event)\">Spreadsheet</md-button></md-menu-item>\n      <md-menu-item><md-button ng-click=\"ctrl.sampleAction('New Presentation', $event)\">Presentation</md-button></md-menu-item>\n      <md-menu-item><md-button ng-click=\"ctrl.sampleAction('New Form', $event)\">Form</md-button></md-menu-item>\n      <md-menu-item><md-button ng-click=\"ctrl.sampleAction('New Drawing', $event)\">Drawing</md-button></md-menu-item>\n    </md-menu-content>\n  </md-menu>\n</md-menu-item>\n</hljs>"
        },
        "material.components.progressCircular": {
            "name": "material.components.progressCircular",
            "submodules": {},
            "elements": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 12759,
            "ngdoc": "directive",
            "restrict": "E",
            "params": [
                {
                    "name": "md-mode",
                    "description": "Select from one of two modes: **'determinate'** and **'indeterminate'**.\n\nNote: if the `md-mode` value is set as undefined or specified as not 1 of the two (2) valid modes, then `.ng-hide`\nwill be auto-applied as a style to the component.\n\nNote: if not configured, the `md-mode=\"indeterminate\"` will be auto injected as an attribute.\nIf `value=\"\"` is also specified, however, then `md-mode=\"determinate\"` would be auto-injected instead.",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "In determinate mode, this number represents the percentage of the\n    circular progress. Default: 0",
                    "type": "Number="
                },
                {
                    "name": "md-diameter",
                    "description": "This specifies the diameter of the circular progress. The value\nmay be a percentage (eg '25%') or a pixel-size value (eg '48'). If this attribute is\nnot present then a default value of '48px' is assumed.",
                    "type": "Number="
                }
            ],
            "usage": "<hljs lang=\"html\">\n<md-progress-circular md-mode=\"determinate\" value=\"...\"></md-progress-circular>\n\n<md-progress-circular md-mode=\"determinate\" ng-value=\"...\"></md-progress-circular>\n\n<md-progress-circular md-mode=\"determinate\" value=\"...\" md-diameter=\"100\"></md-progress-circular>\n\n<md-progress-circular md-mode=\"indeterminate\"></md-progress-circular>\n</hljs>"
        },
        "material.components.progressLinear": {
            "name": "material.components.progressLinear",
            "submodules": {},
            "elements": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 13022,
            "ngdoc": "directive",
            "restrict": "E",
            "params": [
                {
                    "name": "md-mode",
                    "description": "Select from one of four modes: determinate, indeterminate, buffer or query.\n\nNote: if the `md-mode` value is set as undefined or specified as 1 of the four (4) valid modes, then `.ng-hide`\nwill be auto-applied as a style to the component.\n\nNote: if not configured, the `md-mode=\"indeterminate\"` will be auto injected as an attribute. If `value=\"\"` is also specified, however,\nthen `md-mode=\"determinate\"` would be auto-injected instead.",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "In determinate and buffer modes, this number represents the percentage of the primary progress bar. Default: 0",
                    "type": "Number="
                },
                {
                    "name": "md-buffer-value",
                    "description": "In the buffer mode, this number represents the percentage of the secondary progress bar. Default: 0",
                    "type": "Number="
                }
            ],
            "usage": "<hljs lang=\"html\">\n<md-progress-linear md-mode=\"determinate\" value=\"...\"></md-progress-linear>\n\n<md-progress-linear md-mode=\"determinate\" ng-value=\"...\"></md-progress-linear>\n\n<md-progress-linear md-mode=\"indeterminate\"></md-progress-linear>\n\n<md-progress-linear md-mode=\"buffer\" value=\"...\" md-buffer-value=\"...\"></md-progress-linear>\n\n<md-progress-linear md-mode=\"query\"></md-progress-linear>\n</hljs>"
        },
        "material.components.radioButton": {
            "name": "material.components.radioButton",
            "submodules": {},
            "elements": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 13215,
            "ngdoc": "directive",
            "restrict": "E",
            "params": [
                {
                    "name": "ng-model",
                    "description": "Assignable angular expression to data-bind to.",
                    "type": "String"
                },
                {
                    "name": "md-no-ink",
                    "description": "Use of attribute indicates flag to disable ink ripple effects.",
                    "type": "Boolean="
                }
            ],
            "usage": "<hljs lang=\"html\">\n<md-radio-group ng-model=\"selected\">\n\n  <md-radio-button\n       ng-repeat=\"d in colorOptions\"\n       ng-value=\"d.value\" aria-label=\"{{ d.label }}\">\n\n         {{ d.label }}\n\n  </md-radio-button>\n\n</md-radio-group>\n</hljs>"
        },
        "material.components.select": {
            "name": "material.components.select",
            "submodules": {},
            "elements": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 13590,
            "ngdoc": "directive",
            "restrict": "E",
            "params": [
                {
                    "name": "ng-model",
                    "description": "The model!",
                    "type": "Expression"
                },
                {
                    "name": "multiple",
                    "description": "Whether it's multiple.",
                    "type": "Boolean="
                },
                {
                    "name": "md-on-close",
                    "description": "Expression to be evaluated when the select is closed.",
                    "type": "Expression="
                },
                {
                    "name": "md-on-open",
                    "description": "Expression to be evaluated when opening the select.\nWill hide the select options and show a spinner until the evaluated promise resolves.",
                    "type": "Expression="
                },
                {
                    "name": "placeholder",
                    "description": "Placeholder hint text.",
                    "type": "String="
                },
                {
                    "name": "aria-label",
                    "description": "Optional label for accessibility. Only necessary if no placeholder or\nexplicit label is present.",
                    "type": "String="
                },
                {
                    "name": "md-container-class",
                    "description": "Class list to get applied to the `.md-select-menu-container`\nelement (for custom styling).",
                    "type": "String="
                }
            ],
            "usage": "With a placeholder (label and aria-label are added dynamically)\n<hljs lang=\"html\">\n  <md-input-container>\n    <md-select\n      ng-model=\"someModel\"\n      placeholder=\"Select a state\">\n      <md-option ng-value=\"opt\" ng-repeat=\"opt in neighborhoods2\">{{ opt }}</md-option>\n    </md-select>\n  </md-input-container>\n</hljs>\n\nWith an explicit label\n<hljs lang=\"html\">\n  <md-input-container>\n    <label>State</label>\n    <md-select\n      ng-model=\"someModel\">\n      <md-option ng-value=\"opt\" ng-repeat=\"opt in neighborhoods2\">{{ opt }}</md-option>\n    </md-select>\n  </md-input-container>\n</hljs>\n\n## Selects and object equality\nWhen using a `md-select` to pick from a list of objects, it is important to realize how javascript handles\nequality. Consider the following example:\n<hljs lang=\"js\">\nangular.controller('MyCtrl', function($scope) {\n  $scope.users = [\n    { id: 1, name: 'Bob' },\n    { id: 2, name: 'Alice' },\n    { id: 3, name: 'Steve' }\n  ];\n  $scope.selectedUser = { id: 1, name: 'Bob' };\n});\n</hljs>\n<hljs lang=\"html\">\n<div ng-controller=\"MyCtrl\">\n  <md-select ng-model=\"selectedUser\">\n    <md-option ng-value=\"user\" ng-repeat=\"user in users\">{{ user.name }}</md-option>\n  </md-select>\n</div>\n</hljs>\n\nAt first one might expect that the select should be populated with \"Bob\" as the selected user. However,\nthis is not true. To determine whether something is selected, \n`ngModelController` is looking at whether `$scope.selectedUser == (any user in $scope.users);`;\n\nJavascript's `==` operator does not check for deep equality (ie. that all properties\non the object are the same), but instead whether the objects are *the same object in memory*.\nIn this case, we have two instances of identical objects, but they exist in memory as unique\nentities. Because of this, the select will have no value populated for a selected user.\n\nTo get around this, `ngModelController` provides a `track by` option that allows us to specify a different\nexpression which will be used for the equality operator. As such, we can update our `html` to\nmake use of this by specifying the `ng-model-options=\"{trackBy: '$value.id'}\"` on the `md-select`\nelement. This converts our equality expression to be \n`$scope.selectedUser.id == (any id in $scope.users.map(function(u) { return u.id; }));`\nwhich results in Bob being selected as desired.\n\nWorking HTML:\n<hljs lang=\"html\">\n<div ng-controller=\"MyCtrl\">\n  <md-select ng-model=\"selectedUser\" ng-model-options=\"{trackBy: '$value.id'}\">\n    <md-option ng-value=\"user\" ng-repeat=\"user in users\">{{ user.name }}</md-option>\n  </md-select>\n</div>\n</hljs>"
        },
        "material.components.sidenav": {
            "name": "material.components.sidenav",
            "submodules": {},
            "elements": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 15110,
            "ngdoc": "service",
            "usage": "<hljs lang=\"js\">\n// Async lookup for sidenav instance; will resolve when the instance is available\n$mdSidenav(componentId).then(function(instance) {\n  $log.debug( componentId + \"is now ready\" );\n});\n// Async toggle the given sidenav;\n// when instance is known ready and lazy lookup is not needed.\n$mdSidenav(componentId)\n   .toggle()\n   .then(function(){\n     $log.debug('toggled');\n   });\n// Async open the given sidenav\n$mdSidenav(componentId)\n   .open()\n   .then(function(){\n     $log.debug('opened');\n   });\n// Async close the given sidenav\n$mdSidenav(componentId)\n   .close()\n   .then(function(){\n     $log.debug('closed');\n   });\n// Sync check to see if the specified sidenav is set to be open\n$mdSidenav(componentId).isOpen();\n// Sync check to whether given sidenav is locked open\n// If this is true, the sidenav will be open regardless of close()\n$mdSidenav(componentId).isLockedOpen();\n</hljs>",
            "restrict": "A",
            "params": [
                {
                    "name": "md-is-open",
                    "description": "A model bound to whether the sidenav is opened.",
                    "type": "Expression="
                },
                {
                    "name": "md-component-id",
                    "description": "componentId to use with $mdSidenav service.",
                    "type": "String="
                },
                {
                    "name": "md-is-locked-open",
                    "description": "When this expression evalutes to true,\nthe sidenav 'locks open': it falls into the content's flow instead\nof appearing over it. This overrides the `md-is-open` attribute.\n\nThe $mdMedia() service is exposed to the is-locked-open attribute, which\ncan be given a media query or one of the `sm`, `gt-sm`, `md`, `gt-md`, `lg` or `gt-lg` presets.\nExamples:\n\n  - `<md-sidenav md-is-locked-open=\"shouldLockOpen\"></md-sidenav>`\n  - `<md-sidenav md-is-locked-open=\"$mdMedia('min-width: 1000px')\"></md-sidenav>`\n  - `<md-sidenav md-is-locked-open=\"$mdMedia('sm')\"></md-sidenav>` (locks open on small screens)",
                    "type": "Expression="
                }
            ]
        },
        "material.components.slider": {
            "name": "material.components.slider",
            "submodules": {},
            "elements": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 15518,
            "ngdoc": "directive",
            "restrict": "E",
            "usage": "<h4>Normal Mode</h4>\n<hljs lang=\"html\">\n<md-slider ng-model=\"myValue\" min=\"5\" max=\"500\">\n</md-slider>\n</hljs>\n<h4>Discrete Mode</h4>\n<hljs lang=\"html\">\n<md-slider md-discrete ng-model=\"myDiscreteValue\" step=\"10\" min=\"10\" max=\"130\">\n</md-slider>\n</hljs>",
            "params": [
                {
                    "name": "md-discrete",
                    "description": "Whether to enable discrete mode.",
                    "type": "Boolean="
                },
                {
                    "name": "step",
                    "description": "The distance between values the user is allowed to pick. Default 1.",
                    "type": "Number="
                },
                {
                    "name": "min",
                    "description": "The minimum value the user is allowed to pick. Default 0.",
                    "type": "Number="
                },
                {
                    "name": "max",
                    "description": "The maximum value the user is allowed to pick. Default 100.",
                    "type": "Number="
                }
            ]
        },
        "material.components.sticky": {
            "name": "material.components.sticky",
            "submodules": {},
            "elements": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 15944,
            "ngdoc": "service",
            "usage": "<hljs lang=\"js\">\n  angular.module('myModule')\n    .directive('stickyText', function($mdSticky, $compile) {\n      return {\n        restrict: 'E',\n        template: '<span>Sticky Text</span>',\n        link: function(scope,element) {\n          $mdSticky(scope, element);\n        }\n      };\n    });\n</hljs>",
            "return": {
                "description": "A `$mdSticky` function that takes three arguments:\n  - `scope`\n  - `element`: The element that will be 'sticky'\n  - `elementClone`: A clone of the element, that will be shown\n    when the user starts scrolling past the original element.\n    If not provided, it will use the result of `element.clone()` and compiles it in the given scope."
            }
        },
        "material.components.subheader": {
            "name": "material.components.subheader",
            "submodules": {},
            "elements": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 16325,
            "ngdoc": "directive",
            "restrict": "E",
            "usage": "<hljs lang=\"html\">\n<md-subheader>Online Friends</md-subheader>\n</hljs>"
        },
        "material.components.swipe": {
            "name": "material.components.swipe",
            "submodules": {},
            "elements": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 16404,
            "ngdoc": "directive",
            "restrict": "A",
            "usage": "<hljs lang=\"html\">\n<div md-swipe-left=\"onSwipeLeft()\">Swipe me left!</div>\n</hljs>"
        },
        "material.components.switch": {
            "name": "material.components.switch",
            "submodules": {},
            "elements": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 16512,
            "access": "private",
            "tagname": "",
            "ngdoc": "directive",
            "restrict": "E\n\nThe switch directive is used very much like the normal [angular checkbox](https://docs.angularjs.org/api/ng/input/input%5Bcheckbox%5D).\n\nAs per the [material design spec](http://www.google.com/design/spec/style/color.html#color-ui-color-application)\nthe switch is in the accent color by default. The primary color palette may be used with\nthe `md-primary` class.",
            "params": [
                {
                    "name": "ng-model",
                    "description": "Assignable angular expression to data-bind to.",
                    "type": "String"
                },
                {
                    "name": "name",
                    "description": "Property name of the form under which the control is published.",
                    "type": "String="
                },
                {
                    "name": "ng-true-value",
                    "description": "The value to which the expression should be set when selected.",
                    "type": "Expression="
                },
                {
                    "name": "ng-false-value",
                    "description": "The value to which the expression should be set when not selected.",
                    "type": "Expression="
                },
                {
                    "name": "ng-change",
                    "description": "Angular expression to be executed when input changes due to user interaction with the input element.",
                    "type": "String="
                },
                {
                    "name": "ng-disabled",
                    "description": "En/Disable based on the expression.",
                    "type": "Expression="
                },
                {
                    "name": "md-no-ink",
                    "description": "Use of attribute indicates use of ripple ink effects.",
                    "type": "Boolean="
                },
                {
                    "name": "aria-label",
                    "description": "Publish the button label used by screen-readers for accessibility. Defaults to the switch's text.",
                    "type": "String="
                }
            ],
            "usage": "<hljs lang=\"html\">\n<md-switch ng-model=\"isActive\" aria-label=\"Finished?\">\n  Finished ?\n</md-switch>\n\n<md-switch md-no-ink ng-model=\"hasInk\" aria-label=\"No Ink Effects\">\n  No Ink Effects\n</md-switch>\n\n<md-switch ng-disabled=\"true\" ng-model=\"isDisabled\" aria-label=\"Disabled\">\n  Disabled\n</md-switch>\n\n</hljs>"
        },
        "material.components.tabs": {
            "name": "material.components.tabs",
            "submodules": {},
            "elements": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 23336,
            "ngdoc": "directive",
            "restrict": "E",
            "params": [
                {
                    "name": "label",
                    "description": "Optional attribute to specify a simple string as the tab label",
                    "type": "String="
                },
                {
                    "name": "ng-disabled",
                    "description": "If present, disabled tab selection.",
                    "type": "Boolean="
                },
                {
                    "name": "md-on-deselect",
                    "description": "Expression to be evaluated after the tab has been de-selected.",
                    "type": "Expression="
                },
                {
                    "name": "md-on-select",
                    "description": "Expression to be evaluated after the tab has been selected.",
                    "type": "Expression="
                },
                {
                    "name": "md-active",
                    "description": "When true, sets the active tab.  Note: There can only be one active tab at a time.",
                    "type": "Boolean="
                }
            ],
            "usage": "<hljs lang=\"html\">\n<md-tab label=\"\" disabled=\"\" md-on-select=\"\" md-on-deselect=\"\" >\n  <h3>My Tab content</h3>\n</md-tab>\n\n<md-tab >\n  <md-tab-label>\n    <h3>My Tab content</h3>\n  </md-tab-label>\n  <md-tab-body>\n    <p>\n      Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium,\n      totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae\n      dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit,\n      sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt.\n    </p>\n  </md-tab-body>\n</md-tab>\n</hljs>"
        },
        "material.components.toast": {
            "name": "material.components.toast",
            "submodules": {},
            "elements": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 16696,
            "ngdoc": "service",
            "usage": "<hljs lang=\"html\">\n<div ng-controller=\"MyController\">\n  <md-button ng-click=\"openToast()\">\n    Open a Toast!\n  </md-button>\n</div>\n</hljs>\n\n<hljs lang=\"js\">\nvar app = angular.module('app', ['ngMaterial']);\napp.controller('MyController', function($scope, $mdToast) {\n  $scope.openToast = function($event) {\n    $mdToast.show($mdToast.simple().textContent('Hello!'));\n    // Could also do $mdToast.showSimple('Hello');\n  };\n});\n</hljs>"
        },
        "material.components.toolbar": {
            "name": "material.components.toolbar",
            "submodules": {},
            "elements": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 17096,
            "ngdoc": "directive",
            "restrict": "E",
            "usage": "<hljs lang=\"html\">\n<div layout=\"column\" layout-fill>\n  <md-toolbar>\n\n    <div class=\"md-toolbar-tools\">\n      <span>My App's Title</span>\n\n      <!-- fill up the space between left and right area -->\n      <span flex></span>\n\n      <md-button>\n        Right Bar Button\n      </md-button>\n    </div>\n\n  </md-toolbar>\n  <md-content>\n    Hello!\n  </md-content>\n</div>\n</hljs>",
            "params": [
                {
                    "name": "md-scroll-shrink",
                    "description": "Whether the header should shrink away as\nthe user scrolls down, and reveal itself as the user scrolls up.\n\n_**Note (1):** for scrollShrink to work, the toolbar must be a sibling of a\n`md-content` element, placed before it. See the scroll shrink demo._\n\n_**Note (2):** The `md-scroll-shrink` attribute is only parsed on component\ninitialization, it does not watch for scope changes._",
                    "type": "Boolean="
                },
                {
                    "name": "md-shrink-speed-factor",
                    "description": "How much to change the speed of the toolbar's\nshrinking by. For example, if 0.25 is given then the toolbar will shrink\nat one fourth the rate at which the user scrolls down. Default 0.5.",
                    "type": "Number="
                }
            ]
        },
        "material.components.tooltip": {
            "name": "material.components.tooltip",
            "submodules": {},
            "elements": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 17332,
            "ngdoc": "directive",
            "usage": "<hljs lang=\"html\">\n<md-button class=\"md-fab md-accent\" aria-label=\"Play\">\n  <md-tooltip>\n    Play Music\n  </md-tooltip>\n  <md-icon icon=\"img/icons/ic_play_arrow_24px.svg\"></md-icon>\n</md-button>\n</hljs>",
            "params": [
                {
                    "name": "md-visible",
                    "description": "Boolean bound to whether the tooltip is currently visible.",
                    "type": "Expression="
                },
                {
                    "name": "md-delay",
                    "description": "How many milliseconds to wait to show the tooltip after the user focuses, hovers, or touches the parent. Defaults to 300ms.",
                    "type": "Number="
                },
                {
                    "name": "md-autohide",
                    "description": "If present or provided with a boolean value, the tooltip will hide on mouse leave, regardless of focus",
                    "type": "Boolean="
                },
                {
                    "name": "md-direction",
                    "description": "Which direction would you like the tooltip to go?  Supports left, right, top, and bottom.  Defaults to bottom.",
                    "type": "String="
                }
            ]
        },
        "material.components.virtualRepeat": {
            "name": "material.components.virtualRepeat",
            "submodules": {},
            "elements": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 17632,
            "ngdoc": "directive",
            "restrict": "E",
            "usage": "<hljs lang=\"html\">\n\n<md-virtual-repeat-container md-top-index=\"topIndex\">\n  <div md-virtual-repeat=\"i in items\" md-item-size=\"20\">Hello {{i}}!</div>\n</md-virtual-repeat-container>\n</hljs>",
            "params": [
                {
                    "name": "md-top-index",
                    "description": "Binds the index of the item that is at the top of the scroll\n    container to $scope. It can both read and set the scroll position.",
                    "type": "Number="
                },
                {
                    "name": "md-orient-horizontal",
                    "description": "Whether the container should scroll horizontally\n    (defaults to orientation and scrolling vertically).",
                    "type": "Boolean="
                },
                {
                    "name": "md-auto-shrink",
                    "description": "When present, the container will shrink to fit\n    the number of items when that number is less than its original size.",
                    "type": "Boolean="
                },
                {
                    "name": "md-auto-shrink-min",
                    "description": "Minimum number of items that md-auto-shrink\n    will shrink to (default: 0).",
                    "type": "Number="
                }
            ],
            "priority": "1000"
        },
        "material.components.whiteframe": {
            "name": "material.components.whiteframe",
            "submodules": {},
            "elements": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 18535,
            "access": "private",
            "tagname": "",
            "ngdoc": "directive",
            "restrict": "A",
            "usage": "<hljs lang=\"html\">\n<div md-whiteframe=\"3\">\n  <span>Elevation of 3dp</span>\n</div>\n</hljs>"
        },
        "ngMessages": {
            "name": "ngMessages",
            "submodules": {},
            "elements": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "web\\bower_components\\angular-messages\\angular-messages.js",
            "line": 251,
            "ngdoc": "directive",
            "restrict": "AE",
            "usage": "```html\n<!-- using attribute directives -->\n<ANY ng-messages=\"expression\" role=\"alert\">\n  <ANY ng-message=\"stringValue\">...</ANY>\n  <ANY ng-message=\"stringValue1, stringValue2, ...\">...</ANY>\n  <ANY ng-message-exp=\"expressionValue\">...</ANY>\n</ANY>\n\n<!-- or by using element directives -->\n<ng-messages for=\"expression\" role=\"alert\">\n  <ng-message when=\"stringValue\">...</ng-message>\n  <ng-message when=\"stringValue1, stringValue2, ...\">...</ng-message>\n  <ng-message when-exp=\"expressionValue\">...</ng-message>\n</ng-messages>\n```",
            "params": [
                {
                    "name": "ngMessages",
                    "description": "an angular expression evaluating to a key/value object\n                (this is typically the $error object on an ngModel instance).",
                    "type": "String"
                },
                {
                    "name": "ngMessagesMultiple|multiple",
                    "description": "when set, all messages will be displayed with true",
                    "type": "String="
                }
            ],
            "example": [
                "\n<example name=\"ngMessages-directive\" module=\"ngMessagesExample\"\n         deps=\"angular-messages.js\"\n         animations=\"true\" fixBase=\"true\">\n  <file name=\"index.html\">\n    <form name=\"myForm\">\n      <label>\n        Enter your name:\n        <input type=\"text\"\n               name=\"myName\"\n               ng-model=\"name\"\n               ng-minlength=\"5\"\n               ng-maxlength=\"20\"\n               required />\n      </label>\n      <pre>myForm.myName.$error = {{ myForm.myName.$error | json }}</pre>\n\n      <div ng-messages=\"myForm.myName.$error\" style=\"color:maroon\" role=\"alert\">\n        <div ng-message=\"required\">You did not enter a field</div>\n        <div ng-message=\"minlength\">Your field is too short</div>\n        <div ng-message=\"maxlength\">Your field is too long</div>\n      </div>\n    </form>\n  </file>\n  <file name=\"script.js\">\n    angular.module('ngMessagesExample', ['ngMessages']);\n  </file>\n</example>"
            ]
        },
        "ngMockE2E": {
            "name": "ngMockE2E",
            "submodules": {},
            "elements": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "web\\bower_components\\angular-mocks\\angular-mocks.js",
            "line": 2249,
            "ngdoc": "module",
            "packagename": "angular-mocks",
            "params": [
                {
                    "name": "method",
                    "description": "HTTP method.",
                    "type": "String"
                },
                {
                    "name": "url",
                    "description": "HTTP url or function that receives a url\n  and returns true if the url matches the current definition.",
                    "type": "String|RegExp|function(string)"
                },
                {
                    "name": "data",
                    "description": "HTTP request body.",
                    "type": "(string|RegExp)="
                },
                {
                    "name": "headers",
                    "description": "HTTP headers or function that receives http header\n  object and returns true if the headers match the current definition.",
                    "type": "(Object|function(Object))="
                },
                {
                    "name": "keys",
                    "description": "Array of keys to assign to regex matches in request url described on\n  {@link ngMock.$httpBackend $httpBackend mock}.",
                    "type": "(Array)="
                }
            ],
            "return": {
                "description": "Returns an object with `respond` and `passThrough` methods that\n  control how a matched request is handled. You can save this object for later use and invoke\n  `respond` or `passThrough` again in order to change how a matched request is handled.\n\n - respond –\n   `{function([status,] data[, headers, statusText])\n   | function(function(method, url, data, headers, params)}`\n   – The respond method takes a set of static data to be returned or a function that can return\n   an array containing response status (number), response data (string), response headers\n   (Object), and the text for the status (string).\n - passThrough – `{function()}` – Any request matching a backend definition with\n   `passThrough` handler will be passed through to the real backend (an XHR request will be made\n   to the server.)\n - Both methods return the `requestHandler` object for possible overrides.",
                "type": "RequestHandler"
            }
        },
        "ngMock": {
            "name": "ngMock",
            "submodules": {},
            "elements": {},
            "classes": {},
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "web\\bower_components\\angular-mocks\\angular-mocks.js",
            "line": 2484,
            "ngdoc": "type",
            "return": {
                "description": "Total number of child scopes.",
                "type": "Number"
            }
        }
    },
    "classes": {
        "GruntFile\n\nWas attempting to do gruntdocs...": {
            "name": "GruntFile\n\nWas attempting to do gruntdocs...",
            "shortname": "GruntFile\n\nWas attempting to do gruntdocs...",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "GruntFile",
            "namespace": "",
            "file": "web\\app\\controllers\\GruntFile.js",
            "line": 1
        },
        "adminPanelController\n\nResponsible for every functionality given by the administrator panel for the frontend.": {
            "name": "adminPanelController\n\nResponsible for every functionality given by the administrator panel for the frontend.",
            "shortname": "adminPanelController\n\nResponsible for every functionality given by the administrator panel for the frontend.",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "adminPanelController",
            "namespace": "",
            "file": "web\\app\\controllers\\adminPanelController.js",
            "line": 1
        },
        "auditTrailController\n\nResponsible for every functionality given by the administrator panel for the frontend.": {
            "name": "auditTrailController\n\nResponsible for every functionality given by the administrator panel for the frontend.",
            "shortname": "auditTrailController\n\nResponsible for every functionality given by the administrator panel for the frontend.",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "auditTrailController",
            "namespace": "",
            "file": "web\\app\\controllers\\auditTrailController.js",
            "line": 1
        },
        "editController\n\nResponsible for every functionality given by the administrator panel for the frontend.": {
            "name": "editController\n\nResponsible for every functionality given by the administrator panel for the frontend.",
            "shortname": "editController\n\nResponsible for every functionality given by the administrator panel for the frontend.",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "editController",
            "namespace": "",
            "file": "web\\app\\controllers\\editController.js",
            "line": 1
        },
        "mentorshipNotificationController\n\nNotifications for mentorships are dealt with here.": {
            "name": "mentorshipNotificationController\n\nNotifications for mentorships are dealt with here.",
            "shortname": "mentorshipNotificationController\n\nNotifications for mentorships are dealt with here.",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "mentorshipNotificationController",
            "namespace": "",
            "file": "web\\app\\controllers\\mentorshipNotificationController.js",
            "line": 1
        },
        "personAutoController\n\nDeals with the automatic updating and searching for the people supplied into the query string provided\nthrough the search bar at the top of the main html file.": {
            "name": "personAutoController\n\nDeals with the automatic updating and searching for the people supplied into the query string provided\nthrough the search bar at the top of the main html file.",
            "shortname": "personAutoController\n\nDeals with the automatic updating and searching for the people supplied into the query string provided\nthrough the search bar at the top of the main html file.",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "personAutoController",
            "namespace": "",
            "file": "web\\app\\controllers\\personAutoController.js",
            "line": 1
        },
        "personNotificationController\n\nNotifications for persons are dealt with here.": {
            "name": "personNotificationController\n\nNotifications for persons are dealt with here.",
            "shortname": "personNotificationController\n\nNotifications for persons are dealt with here.",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "personNotificationController",
            "namespace": "",
            "file": "web\\app\\controllers\\personNotificationController.js",
            "line": 1
        },
        "searchController\n\nEntire Search Functionality located here.": {
            "name": "searchController\n\nEntire Search Functionality located here.",
            "shortname": "searchController\n\nEntire Search Functionality located here.",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "searchController",
            "namespace": "",
            "file": "web\\app\\controllers\\searchController.js",
            "line": 1
        },
        "submitController\n\nController for the Submission page.\n\n\nStatus: CONTROLLER\nAssociated files: submit.html\n\nThe submission page is going to be the core of where the users will be able to supply information to begin a new\npage for a given particular user. This page is going to be essentially a massive collection of information that\nwe will be inserting into the system.\n\nThings that we're collecting include basic information like:\n-first name\n-last name\n-degree type\n-postdoc postings\n-etc": {
            "name": "submitController\n\nController for the Submission page.\n\n\nStatus: CONTROLLER\nAssociated files: submit.html\n\nThe submission page is going to be the core of where the users will be able to supply information to begin a new\npage for a given particular user. This page is going to be essentially a massive collection of information that\nwe will be inserting into the system.\n\nThings that we're collecting include basic information like:\n-first name\n-last name\n-degree type\n-postdoc postings\n-etc",
            "shortname": "submitController\n\nController for the Submission page.\n\n\nStatus: CONTROLLER\nAssociated files: submit.html\n\nThe submission page is going to be the core of where the users will be able to supply information to begin a new\npage for a given particular user. This page is going to be essentially a massive collection of information that\nwe will be inserting into the system.\n\nThings that we're collecting include basic information like:\n-first name\n-last name\n-degree type\n-postdoc postings\n-etc",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "submitController",
            "namespace": "",
            "file": "web\\app\\controllers\\submitController.js",
            "line": 1
        },
        "supervisionNotificationController\n\nNotifications for supervision are dealt with here.": {
            "name": "supervisionNotificationController\n\nNotifications for supervision are dealt with here.",
            "shortname": "supervisionNotificationController\n\nNotifications for supervision are dealt with here.",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "supervisionNotificationController",
            "namespace": "",
            "file": "web\\app\\controllers\\supervisionNotificationController.js",
            "line": 1
        },
        "muserController\n\nThe user controller is located here, that handles the affairs dealing with the users of the application\nworking with the application.": {
            "name": "muserController\n\nThe user controller is located here, that handles the affairs dealing with the users of the application\nworking with the application.",
            "shortname": "muserController\n\nThe user controller is located here, that handles the affairs dealing with the users of the application\nworking with the application.",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "userController",
            "namespace": "",
            "file": "web\\app\\controllers\\userController.js",
            "line": 1
        },
        "userDialogController\n\n Controller for the User Dialogue\n\nStatus: CONTROLLER\nAssociated files: userDialog.html,\n\nThe user dialog controller is associated with registration and submission of login information. So it is\nslightly associated with the User Controller (userController.js), yet is kept distinct for clarity of functions.": {
            "name": "userDialogController\n\n Controller for the User Dialogue\n\nStatus: CONTROLLER\nAssociated files: userDialog.html,\n\nThe user dialog controller is associated with registration and submission of login information. So it is\nslightly associated with the User Controller (userController.js), yet is kept distinct for clarity of functions.",
            "shortname": "userDialogController\n\n Controller for the User Dialogue\n\nStatus: CONTROLLER\nAssociated files: userDialog.html,\n\nThe user dialog controller is associated with registration and submission of login information. So it is\nslightly associated with the User Controller (userController.js), yet is kept distinct for clarity of functions.",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "userDialogController",
            "namespace": "",
            "file": "web\\app\\controllers\\userDialogController.js",
            "line": 1
        },
        "viewController\n\nThis controller does all that can be done with the view page.": {
            "name": "viewController\n\nThis controller does all that can be done with the view page.",
            "shortname": "viewController\n\nThis controller does all that can be done with the view page.",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "viewController",
            "namespace": "",
            "file": "web\\app\\controllers\\viewController.js",
            "line": 1
        },
        "visController\n\nNotifications for mentorships are dealt with here.": {
            "name": "visController\n\nNotifications for mentorships are dealt with here.",
            "shortname": "visController\n\nNotifications for mentorships are dealt with here.",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "visController",
            "namespace": "",
            "file": "web\\app\\controllers\\visController.js",
            "line": 1
        },
        "our routes": {
            "name": "our routes",
            "shortname": "our routes",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "visController",
            "namespace": "",
            "file": "web\\app\\routes.js",
            "line": 1
        }
    },
    "elements": {
        "ANY": {
            "name": "ANY",
            "attributes": [],
            "module": "ng",
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 23311,
            "ngdoc": "directive",
            "restrict": "AC",
            "description": "The `ngBind` attribute tells Angular to replace the text content of the specified HTML element\nwith the value of a given expression, and to update the text content when the value of that\nexpression changes.\n\nTypically, you don't use `ngBind` directly, but instead you use the double curly markup like\n`{{ expression }}` which is similar but less verbose.\n\nIt is preferable to use `ngBind` instead of `{{ expression }}` if a template is momentarily\ndisplayed by the browser in its raw state before Angular compiles it. Since `ngBind` is an\nelement attribute, it makes the bindings invisible to the user while the page is loading.\n\nAn alternative solution to this problem would be using the\n{@link ng.directive:ngCloak ngCloak} directive.",
            "params": [
                {
                    "name": "ngBind",
                    "description": "{@link guide/expression Expression} to evaluate.",
                    "type": "Expression"
                }
            ],
            "example": [
                "\nEnter a name in the Live Preview text box; the greeting below the text box changes instantly.\n  <example module=\"bindExample\">\n    <file name=\"index.html\">\n      <script>\n        angular.module('bindExample', [])\n          .controller('ExampleController', ['$scope', function($scope) {\n            $scope.name = 'Whirled';\n          }]);\n      </script>\n      <div ng-controller=\"ExampleController\">\n        <label>Enter name: <input type=\"text\" ng-model=\"name\"></label><br>\n        Hello <span ng-bind=\"name\"></span>!\n      </div>\n    </file>\n    <file name=\"protractor.js\" type=\"protractor\">\n      it('should check ng-bind', function() {\n        var nameInput = element(by.model('name'));\n\n        expect(element(by.binding('name')).getText()).toBe('Whirled');\n        nameInput.clear();\n        nameInput.sendKeys('world');\n        expect(element(by.binding('name')).getText()).toBe('world');\n      });\n    </file>\n  </example>"
            ],
            "animations": "**add** - happens just before the class is applied to the elements\n\n**remove** - happens just before the class is removed from the element",
            "scope": "",
            "priority": "500",
            "multielement": "",
            "import": "url(../../components/bootstrap-3.1.1/css/bootstrap.css);\n   </file>\n   <file name=\"animations.css\">\n     .animate-show {\n       line-height: 20px;\n       opacity: 1;\n       padding: 10px;\n       border: 1px solid black;\n       background: white;\n     }\n\n     .animate-show.ng-hide-add, .animate-show.ng-hide-remove {\n       transition: all linear 0.5s;\n     }\n\n     .animate-show.ng-hide {\n       line-height: 0;\n       opacity: 0;\n       padding: 0 10px;\n     }\n\n     .check-element {\n       padding: 10px;\n       border: 1px solid black;\n       background: white;\n     }\n   </file>\n   <file name=\"protractor.js\" type=\"protractor\">\n     var thumbsUp = element(by.css('span.glyphicon-thumbs-up'));\n     var thumbsDown = element(by.css('span.glyphicon-thumbs-down'));\n\n     it('should check ng-show / ng-hide', function() {\n       expect(thumbsUp.isDisplayed()).toBeFalsy();\n       expect(thumbsDown.isDisplayed()).toBeTruthy();\n\n       element(by.model('checked')).click();\n\n       expect(thumbsUp.isDisplayed()).toBeTruthy();\n       expect(thumbsDown.isDisplayed()).toBeFalsy();\n     });\n   </file>\n </example>"
        },
        "A": {
            "name": "A",
            "attributes": [],
            "module": "ng",
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 20571,
            "ngdoc": "directive",
            "restrict": "A",
            "priority": "99",
            "description": "Using Angular markup like `{{hash}}` in an href attribute will\nmake the link go to the wrong URL if the user clicks it before\nAngular has a chance to replace the `{{hash}}` markup with its\nvalue. Until Angular replaces the markup the link will be broken\nand will most likely return a 404 error. The `ngHref` directive\nsolves this problem.\n\nThe wrong way to write it:\n```html\n<a href=\"http://www.gravatar.com/avatar/{{hash}}\">link1</a>\n```\n\nThe correct way to write it:\n```html\n<a ng-href=\"http://www.gravatar.com/avatar/{{hash}}\">link1</a>\n```",
            "params": [
                {
                    "name": "ngHref",
                    "description": "any string which can contain `{{}}` markup.",
                    "type": "Template"
                }
            ],
            "example": [
                "\nThis example shows various combinations of `href`, `ng-href` and `ng-click` attributes\nin links and their different behaviors:\n   <example>\n     <file name=\"index.html\">\n       <input ng-model=\"value\" /><br />\n       <a id=\"link-1\" href ng-click=\"value = 1\">link 1</a> (link, don't reload)<br />\n       <a id=\"link-2\" href=\"\" ng-click=\"value = 2\">link 2</a> (link, don't reload)<br />\n       <a id=\"link-3\" ng-href=\"/{{'123'}}\">link 3</a> (link, reload!)<br />\n       <a id=\"link-4\" href=\"\" name=\"xx\" ng-click=\"value = 4\">anchor</a> (link, don't reload)<br />\n       <a id=\"link-5\" name=\"xxx\" ng-click=\"value = 5\">anchor</a> (no link)<br />\n       <a id=\"link-6\" ng-href=\"{{value}}\">link</a> (link, change location)\n     </file>\n     <file name=\"protractor.js\" type=\"protractor\">\n       it('should execute ng-click but not reload when href without value', function() {\n         element(by.id('link-1')).click();\n         expect(element(by.model('value')).getAttribute('value')).toEqual('1');\n         expect(element(by.id('link-1')).getAttribute('href')).toBe('');\n       });\n\n       it('should execute ng-click but not reload when href empty string', function() {\n         element(by.id('link-2')).click();\n         expect(element(by.model('value')).getAttribute('value')).toEqual('2');\n         expect(element(by.id('link-2')).getAttribute('href')).toBe('');\n       });\n\n       it('should execute ng-click and change url when ng-href specified', function() {\n         expect(element(by.id('link-3')).getAttribute('href')).toMatch(/\\/123$/);\n\n         element(by.id('link-3')).click();\n\n         // At this point, we navigate away from an Angular page, so we need\n         // to use browser.driver to get the base webdriver.\n\n         browser.wait(function() {\n           return browser.driver.getCurrentUrl().then(function(url) {\n             return url.match(/\\/123$/);\n           });\n         }, 5000, 'page should navigate to /123');\n       });\n\n       it('should execute ng-click but not reload when href empty string and name specified', function() {\n         element(by.id('link-4')).click();\n         expect(element(by.model('value')).getAttribute('value')).toEqual('4');\n         expect(element(by.id('link-4')).getAttribute('href')).toBe('');\n       });\n\n       it('should execute ng-click but not reload when no href but name specified', function() {\n         element(by.id('link-5')).click();\n         expect(element(by.model('value')).getAttribute('value')).toEqual('5');\n         expect(element(by.id('link-5')).getAttribute('href')).toBe(null);\n       });\n\n       it('should only change url when only ng-href', function() {\n         element(by.model('value')).clear();\n         element(by.model('value')).sendKeys('6');\n         expect(element(by.id('link-6')).getAttribute('href')).toMatch(/\\/6$/);\n\n         element(by.id('link-6')).click();\n\n         // At this point, we navigate away from an Angular page, so we need\n         // to use browser.driver to get the base webdriver.\n         browser.wait(function() {\n           return browser.driver.getCurrentUrl().then(function(url) {\n             return url.match(/\\/6$/);\n           });\n         }, 5000, 'page should navigate to /6');\n       });\n     </file>\n   </example>"
            ]
        },
        "IMG": {
            "name": "IMG",
            "attributes": [],
            "module": "ng",
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 20670,
            "ngdoc": "directive",
            "restrict": "A",
            "priority": "99",
            "description": "Using Angular markup like `{{hash}}` in a `src` attribute doesn't\nwork right: The browser will fetch from the URL with the literal\ntext `{{hash}}` until Angular replaces the expression inside\n`{{hash}}`. The `ngSrc` directive solves this problem.\n\nThe buggy way to write it:\n```html\n<img src=\"http://www.gravatar.com/avatar/{{hash}}\" alt=\"Description\"/>\n```\n\nThe correct way to write it:\n```html\n<img ng-src=\"http://www.gravatar.com/avatar/{{hash}}\" alt=\"Description\" />\n```",
            "params": [
                {
                    "name": "ngSrc",
                    "description": "any string which can contain `{{}}` markup.",
                    "type": "Template"
                }
            ]
        },
        "INPUT": {
            "name": "INPUT",
            "attributes": [],
            "module": "ng",
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 20722,
            "ngdoc": "directive",
            "restrict": "A",
            "priority": "100",
            "description": "This directive sets the `disabled` attribute on the element if the\n{@link guide/expression expression} inside `ngDisabled` evaluates to truthy.\n\nA special directive is necessary because we cannot use interpolation inside the `disabled`\nattribute. See the {@link guide/interpolation interpolation guide} for more info.",
            "example": [
                "\n   <example>\n     <file name=\"index.html\">\n       <label>Click me to toggle: <input type=\"checkbox\" ng-model=\"checked\"></label><br/>\n       <button ng-model=\"button\" ng-disabled=\"checked\">Button</button>\n     </file>\n     <file name=\"protractor.js\" type=\"protractor\">\n       it('should toggle button', function() {\n         expect(element(by.css('button')).getAttribute('disabled')).toBeFalsy();\n         element(by.model('checked')).click();\n         expect(element(by.css('button')).getAttribute('disabled')).toBeTruthy();\n       });\n     </file>\n   </example>"
            ],
            "params": [
                {
                    "name": "ngDisabled",
                    "description": "If the {@link guide/expression expression} is truthy,\n    then the `disabled` attribute will be set on the element",
                    "type": "Expression"
                }
            ]
        },
        "OPTION": {
            "name": "OPTION",
            "attributes": [],
            "module": "ng",
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 20827,
            "ngdoc": "directive",
            "restrict": "A",
            "priority": "100",
            "description": "Sets the `selected` attribute on the element, if the expression inside `ngSelected` is truthy.\n\nA special directive is necessary because we cannot use interpolation inside the `selected`\nattribute. See the {@link guide/interpolation interpolation guide} for more info.",
            "example": [
                "\n   <example>\n     <file name=\"index.html\">\n       <label>Check me to select: <input type=\"checkbox\" ng-model=\"selected\"></label><br/>\n       <select aria-label=\"ngSelected demo\">\n         <option>Hello!</option>\n         <option id=\"greet\" ng-selected=\"selected\">Greetings!</option>\n       </select>\n     </file>\n     <file name=\"protractor.js\" type=\"protractor\">\n       it('should select Greetings!', function() {\n         expect(element(by.id('greet')).getAttribute('selected')).toBeFalsy();\n         element(by.model('selected')).click();\n         expect(element(by.id('greet')).getAttribute('selected')).toBeTruthy();\n       });\n     </file>\n   </example>"
            ],
            "params": [
                {
                    "name": "ngSelected",
                    "description": "If the {@link guide/expression expression} is truthy,\n    then special attribute \"selected\" will be set on the element",
                    "type": "Expression"
                }
            ]
        },
        "DETAILS": {
            "name": "DETAILS",
            "attributes": [],
            "module": "ng",
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 20863,
            "ngdoc": "directive",
            "restrict": "A",
            "priority": "100",
            "description": "Sets the `open` attribute on the element, if the expression inside `ngOpen` is truthy.\n\nA special directive is necessary because we cannot use interpolation inside the `open`\nattribute. See the {@link guide/interpolation interpolation guide} for more info.",
            "example": [
                "\n    <example>\n      <file name=\"index.html\">\n        <label>Check me check multiple: <input type=\"checkbox\" ng-model=\"open\"></label><br/>\n        <details id=\"details\" ng-open=\"open\">\n           <summary>Show/Hide me</summary>\n        </details>\n      </file>\n      <file name=\"protractor.js\" type=\"protractor\">\n        it('should toggle open', function() {\n          expect(element(by.id('details')).getAttribute('open')).toBeFalsy();\n          element(by.model('open')).click();\n          expect(element(by.id('details')).getAttribute('open')).toBeTruthy();\n        });\n      </file>\n    </example>"
            ],
            "params": [
                {
                    "name": "ngOpen",
                    "description": "If the {@link guide/expression expression} is truthy,\n    then special attribute \"open\" will be set on the element",
                    "type": "Expression"
                }
            ]
        },
        "input": {
            "name": "input",
            "attributes": [],
            "module": "ng",
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 23234,
            "ngdoc": "directive",
            "description": "Binds the given expression to the value of `<option>` or {@link input[radio] `input[radio]`},\nso that when the element is selected, the {@link ngModel `ngModel`} of that element is set to\nthe bound value.\n\n`ngValue` is useful when dynamically generating lists of radio buttons using\n{@link ngRepeat `ngRepeat`}, as shown below.\n\nLikewise, `ngValue` can be used to generate `<option>` elements for\nthe {@link select `select`} element. In that case however, only strings are supported\nfor the `value `attribute, so the resulting `ngModel` will always be a string.\nSupport for `select` models with non-string values is available via `ngOptions`.",
            "params": [
                {
                    "name": "ngValue",
                    "description": "angular expression, whose value will be bound to the `value` attribute\n  of the `input` element",
                    "type": "String="
                }
            ],
            "example": [
                "\n   <example name=\"ngValue-directive\" module=\"valueExample\">\n     <file name=\"index.html\">\n      <script>\n         angular.module('valueExample', [])\n           .controller('ExampleController', ['$scope', function($scope) {\n             $scope.names = ['pizza', 'unicorns', 'robots'];\n             $scope.my = { favorite: 'unicorns' };\n           }]);\n      </script>\n       <form ng-controller=\"ExampleController\">\n         <h2>Which is your favorite?</h2>\n           <label ng-repeat=\"name in names\" for=\"{{name}}\">\n             {{name}}\n             <input type=\"radio\"\n                    ng-model=\"my.favorite\"\n                    ng-value=\"name\"\n                    id=\"{{name}}\"\n                    name=\"favorite\">\n           </label>\n         <div>You chose {{my.favorite}}</div>\n       </form>\n     </file>\n     <file name=\"protractor.js\" type=\"protractor\">\n       var favorite = element(by.binding('my.favorite'));\n\n       it('should initialize to model', function() {\n         expect(favorite.getText()).toContain('unicorns');\n       });\n       it('should bind the values to the inputs', function() {\n         element.all(by.model('my.favorite')).get(0).click();\n         expect(favorite.getText()).toContain('pizza');\n       });\n     </file>\n   </example>"
            ],
            "priority": "1"
        },
        "html": {
            "name": "html",
            "attributes": [],
            "module": "ng",
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 24282,
            "ngdoc": "directive",
            "description": "Angular has some features that can break certain\n[CSP (Content Security Policy)](https://developer.mozilla.org/en/Security/CSP) rules.\n\nIf you intend to implement these rules then you must tell Angular not to use these features.\n\nThis is necessary when developing things like Google Chrome Extensions or Universal Windows Apps.\n\n\nThe following rules affect Angular:\n\n* `unsafe-eval`: this rule forbids apps to use `eval` or `Function(string)` generated functions\n(among other things). Angular makes use of this in the {@link $parse} service to provide a 30%\nincrease in the speed of evaluating Angular expressions.\n\n* `unsafe-inline`: this rule forbids apps from inject custom styles into the document. Angular\nmakes use of this to include some CSS rules (e.g. {@link ngCloak} and {@link ngHide}).\nTo make these directives work when a CSP rule is blocking inline styles, you must link to the\n`angular-csp.css` in your HTML manually.\n\nIf you do not provide `ngCsp` then Angular tries to autodetect if CSP is blocking unsafe-eval\nand automatically deactivates this feature in the {@link $parse} service. This autodetection,\nhowever, triggers a CSP error to be logged in the console:\n\n```\nRefused to evaluate a string as JavaScript because 'unsafe-eval' is not an allowed source of\nscript in the following Content Security Policy directive: \"default-src 'self'\". Note that\n'script-src' was not explicitly set, so 'default-src' is used as a fallback.\n```\n\nThis error is harmless but annoying. To prevent the error from showing up, put the `ngCsp`\ndirective on an element of the HTML document that appears before the `<script>` tag that loads\nthe `angular.js` file.\n\n*Note: This directive is only available in the `ng-csp` and `data-ng-csp` attribute form.*\n\nYou can specify which of the CSP related Angular features should be deactivated by providing\na value for the `ng-csp` attribute. The options are as follows:\n\n* no-inline-style: this stops Angular from injecting CSS styles into the DOM\n\n* no-unsafe-eval: this stops Angular from optimizing $parse with unsafe eval of strings\n\nYou can use these values in the following combinations:\n\n\n* No declaration means that Angular will assume that you can do inline styles, but it will do\na runtime check for unsafe-eval. E.g. `<body>`. This is backwardly compatible with previous versions\nof Angular.\n\n* A simple `ng-csp` (or `data-ng-csp`) attribute will tell Angular to deactivate both inline\nstyles and unsafe eval. E.g. `<body ng-csp>`. This is backwardly compatible with previous versions\nof Angular.\n\n* Specifying only `no-unsafe-eval` tells Angular that we must not use eval, but that we can inject\ninline styles. E.g. `<body ng-csp=\"no-unsafe-eval\">`.\n\n* Specifying only `no-inline-style` tells Angular that we must not inject styles, but that we can\nrun eval - no automatic check for unsafe eval will occur. E.g. `<body ng-csp=\"no-inline-style\">`\n\n* Specifying both `no-unsafe-eval` and `no-inline-style` tells Angular that we must not inject\nstyles nor use eval, which is the same as an empty: ng-csp.\nE.g.`<body ng-csp=\"no-inline-style;no-unsafe-eval\">`",
            "example": [
                "\nThis example shows how to apply the `ngCsp` directive to the `html` tag.\n  ```html\n    <!doctype html>\n    <html ng-app ng-csp>\n    ...\n    ...\n    </html>\n  ```",
                "\n     // Note: the suffix `.csp` in the example name triggers\n     // csp mode in our http server!\n     <example name=\"example.csp\" module=\"cspExample\" ng-csp=\"true\">\n       <file name=\"index.html\">\n         <div ng-controller=\"MainController as ctrl\">\n           <div>\n             <button ng-click=\"ctrl.inc()\" id=\"inc\">Increment</button>\n             <span id=\"counter\">\n               {{ctrl.counter}}\n             </span>\n           </div>\n\n           <div>\n             <button ng-click=\"ctrl.evil()\" id=\"evil\">Evil</button>\n             <span id=\"evilError\">\n               {{ctrl.evilError}}\n             </span>\n           </div>\n         </div>\n       </file>\n       <file name=\"script.js\">\n          angular.module('cspExample', [])\n            .controller('MainController', function() {\n               this.counter = 0;\n               this.inc = function() {\n                 this.counter++;\n               };\n               this.evil = function() {\n                 // jshint evil:true\n                 try {\n                   eval('1+2');\n                 } catch (e) {\n                   this.evilError = e.message;\n                 }\n               };\n             });\n       </file>\n       <file name=\"protractor.js\" type=\"protractor\">\n         var util, webdriver;\n\n         var incBtn = element(by.id('inc'));\n         var counter = element(by.id('counter'));\n         var evilBtn = element(by.id('evil'));\n         var evilError = element(by.id('evilError'));\n\n         function getAndClearSevereErrors() {\n           return browser.manage().logs().get('browser').then(function(browserLog) {\n             return browserLog.filter(function(logEntry) {\n               return logEntry.level.value > webdriver.logging.Level.WARNING.value;\n             });\n           });\n         }\n\n         function clearErrors() {\n           getAndClearSevereErrors();\n         }\n\n         function expectNoErrors() {\n           getAndClearSevereErrors().then(function(filteredLog) {\n             expect(filteredLog.length).toEqual(0);\n             if (filteredLog.length) {\n               console.log('browser console errors: ' + util.inspect(filteredLog));\n             }\n           });\n         }\n\n         function expectError(regex) {\n           getAndClearSevereErrors().then(function(filteredLog) {\n             var found = false;\n             filteredLog.forEach(function(log) {\n               if (log.message.match(regex)) {\n                 found = true;\n               }\n             });\n             if (!found) {\n               throw new Error('expected an error that matches ' + regex);\n             }\n           });\n         }\n\n         beforeEach(function() {\n           util = require('util');\n           webdriver = require('protractor/node_modules/selenium-webdriver');\n         });\n\n         // For now, we only test on Chrome,\n         // as Safari does not load the page with Protractor's injected scripts,\n         // and Firefox webdriver always disables content security policy (#6358)\n         if (browser.params.browser !== 'chrome') {\n           return;\n         }\n\n         it('should not report errors when the page is loaded', function() {\n           // clear errors so we are not dependent on previous tests\n           clearErrors();\n           // Need to reload the page as the page is already loaded when\n           // we come here\n           browser.driver.getCurrentUrl().then(function(url) {\n             browser.get(url);\n           });\n           expectNoErrors();\n         });\n\n         it('should evaluate expressions', function() {\n           expect(counter.getText()).toEqual('0');\n           incBtn.click();\n           expect(counter.getText()).toEqual('1');\n           expectNoErrors();\n         });\n\n         it('should throw and report an error when using \"eval\"', function() {\n           evilBtn.click();\n           expect(evilError.getText()).toMatch(/Content Security Policy/);\n           expectError(/Content Security Policy/);\n         });\n       </file>\n     </example>"
            ]
        },
        "form": {
            "name": "form",
            "attributes": [],
            "module": "ng",
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 24799,
            "ngdoc": "directive",
            "description": "Enables binding angular expressions to onsubmit events.\n\nAdditionally it prevents the default action (which for form means sending the request to the\nserver and reloading the current page), but only if the form does not contain `action`,\n`data-action`, or `x-action` attributes.\n\n<div class=\"alert alert-warning\">\n**Warning:** Be careful not to cause \"double-submission\" by using both the `ngClick` and\n`ngSubmit` handlers together. See the\n{@link form#submitting-a-form-and-preventing-the-default-action `form` directive documentation}\nfor a detailed discussion of when `ngSubmit` may be triggered.\n</div>",
            "priority": "0",
            "params": [
                {
                    "name": "ngSubmit",
                    "description": "{@link guide/expression Expression} to eval.\n({@link guide/expression#-event- Event object is available as `$event`})",
                    "type": "Expression"
                }
            ],
            "example": [
                "\n  <example module=\"submitExample\">\n    <file name=\"index.html\">\n     <script>\n       angular.module('submitExample', [])\n         .controller('ExampleController', ['$scope', function($scope) {\n           $scope.list = [];\n           $scope.text = 'hello';\n           $scope.submit = function() {\n             if ($scope.text) {\n               $scope.list.push(this.text);\n               $scope.text = '';\n             }\n           };\n         }]);\n     </script>\n     <form ng-submit=\"submit()\" ng-controller=\"ExampleController\">\n       Enter text and hit enter:\n       <input type=\"text\" ng-model=\"text\" name=\"text\" />\n       <input type=\"submit\" id=\"submit\" value=\"Submit\" />\n       <pre>list={{list}}</pre>\n     </form>\n    </file>\n    <file name=\"protractor.js\" type=\"protractor\">\n      it('should check ng-submit', function() {\n        expect(element(by.binding('list')).getText()).toBe('list=[]');\n        element(by.css('#submit')).click();\n        expect(element(by.binding('list')).getText()).toContain('hello');\n        expect(element(by.model('text')).getAttribute('value')).toBe('');\n      });\n      it('should ignore empty strings', function() {\n        expect(element(by.binding('list')).getText()).toBe('list=[]');\n        element(by.css('#submit')).click();\n        element(by.css('#submit')).click();\n        expect(element(by.binding('list')).getText()).toContain('hello');\n       });\n    </file>\n  </example>"
            ]
        },
        "window,": {
            "name": "window,",
            "attributes": [],
            "module": "ng",
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 24862,
            "ngdoc": "directive",
            "description": "Specify custom behavior on focus event.\n\nNote: As the `focus` event is executed synchronously when calling `input.focus()`\nAngularJS executes the expression using `scope.$evalAsync` if the event is fired\nduring an `$apply` to ensure a consistent state.",
            "priority": "0",
            "params": [
                {
                    "name": "ngFocus",
                    "description": "{@link guide/expression Expression} to evaluate upon\nfocus. ({@link guide/expression#-event- Event object is available as `$event`})",
                    "type": "Expression"
                }
            ],
            "example": [
                "\nSee {@link ng.directive:ngClick ngClick}"
            ]
        }
    },
    "classitems": [
        {
            "file": "tests\\e2e\\login\\LoginPage.js",
            "line": 1,
            "description": "Login PageObject for Protractor testing.\n\nLogin View: userDialog.html, the popup window that appears.",
            "class": "GruntFile\n\nWas attempting to do gruntdocs..."
        },
        {
            "file": "tests\\e2e\\login\\LoginPage.js",
            "line": 31,
            "description": "Test that the information in the username and password fields match the expected input.",
            "params": [
                {
                    "name": "testUserName",
                    "description": "An email identifier."
                },
                {
                    "name": "testUserPass",
                    "description": "The (hopefully) matching password."
                }
            ],
            "class": "GruntFile\n\nWas attempting to do gruntdocs..."
        },
        {
            "file": "tests\\e2e\\login\\LoginPage.js",
            "line": 46,
            "description": "Test that the login for the user worked.",
            "params": [
                {
                    "name": "testUserName",
                    "description": "An email identifier."
                },
                {
                    "name": "testUserPass",
                    "description": "The (hopefuilly?) matching password."
                }
            ],
            "class": "GruntFile\n\nWas attempting to do gruntdocs..."
        },
        {
            "file": "tests\\e2e\\login\\LoginPage.js",
            "line": 67,
            "description": "Test that we can cancel logging in.",
            "params": [
                {
                    "name": "testUserName",
                    "description": "An email identifier."
                },
                {
                    "name": "testUserPass",
                    "description": "The (hopefuilly?) matching password."
                }
            ],
            "class": "GruntFile\n\nWas attempting to do gruntdocs..."
        },
        {
            "file": "tests\\e2e\\login\\LoginPage.js",
            "line": 92,
            "description": "Test that we can navigate to the Registration page.",
            "class": "GruntFile\n\nWas attempting to do gruntdocs..."
        },
        {
            "file": "tests\\e2e\\login\\LoginPage.js",
            "line": 104,
            "description": "Test that the cancel button on the Registration page works.",
            "params": [
                {
                    "name": "testRegistrationEmail",
                    "description": "Email used to register."
                },
                {
                    "name": "testRegistrationPassword",
                    "description": "Password used to register."
                },
                {
                    "name": "testRegistrationFirstName",
                    "description": "First name used to register."
                },
                {
                    "name": "testRegistrationLastName",
                    "description": "Last name used to register."
                }
            ],
            "class": "GruntFile\n\nWas attempting to do gruntdocs..."
        },
        {
            "file": "tests\\e2e\\login\\LoginPage.js",
            "line": 131,
            "description": "Test the entire registration process functionality.",
            "params": [
                {
                    "name": "testRegistrationEmail",
                    "description": "Email used to register."
                },
                {
                    "name": "testRegistrationPassword",
                    "description": "Password used to register."
                },
                {
                    "name": "testRegistrationFirstName",
                    "description": "First name used to register."
                },
                {
                    "name": "testRegistrationLastName",
                    "description": "Last name used to register."
                }
            ],
            "class": "GruntFile\n\nWas attempting to do gruntdocs..."
        },
        {
            "file": "tests\\e2e\\login\\LoginPage.js",
            "line": 158,
            "description": "This function tests that someone can log out of the application successfully.",
            "params": [
                {
                    "name": "testUserName",
                    "description": "An email identifier."
                },
                {
                    "name": "testUserPass",
                    "description": "The (hopefuilly?) matching password."
                }
            ],
            "class": "GruntFile\n\nWas attempting to do gruntdocs..."
        },
        {
            "file": "tests\\e2e\\login\\LoginPage.js",
            "line": 191,
            "description": "Required for proper Protractor functionality.",
            "type": "{LoginPage}",
            "class": "GruntFile\n\nWas attempting to do gruntdocs..."
        },
        {
            "file": "tests\\e2e\\login\\LoginSpec.js",
            "line": 1,
            "description": "Login Scenario for testing.",
            "class": "GruntFile\n\nWas attempting to do gruntdocs..."
        },
        {
            "file": "tests\\e2e\\search\\SearchPage.js",
            "line": 1,
            "description": "Search PageObject for Protractor testing.\n\nSearch View: search.html, the html file used for the core search page of the webapp.\nSearch bar however is located within main.html <-- Actually is in chemautoperson too x.x\n\nAutocompletion (associated with search bar) is located within the chemautoperson.html file.",
            "class": "GruntFile\n\nWas attempting to do gruntdocs..."
        },
        {
            "file": "tests\\e2e\\search\\SearchPage.js",
            "line": 40,
            "description": "Hard coded for now, yes I know this is not good to hard code but tight on time.",
            "class": "GruntFile\n\nWas attempting to do gruntdocs..."
        },
        {
            "file": "tests\\e2e\\search\\SearchPage.js",
            "line": 57,
            "description": "Hard coded for now, yes I know this is not good to hard code but tight on time.",
            "class": "GruntFile\n\nWas attempting to do gruntdocs..."
        },
        {
            "file": "tests\\e2e\\search\\SearchSpec.js",
            "line": 1,
            "description": "Protractor end to end testing for the search page functionality.",
            "is_constructor": 1,
            "class": "GruntFile\n\nWas attempting to do gruntdocs..."
        },
        {
            "file": "tests\\e2e\\submit\\SubmitPage.js",
            "line": 1,
            "description": "Submit PageObject for Protractor testing.\n\nSubmit View:  submit.html",
            "class": "GruntFile\n\nWas attempting to do gruntdocs..."
        },
        {
            "file": "tests\\e2e\\submit\\SubmitPage.js",
            "line": 91,
            "description": "Tests basic inputs for all things to see that they match what is expected.",
            "class": "GruntFile\n\nWas attempting to do gruntdocs..."
        },
        {
            "file": "tests\\conf.js",
            "line": 1,
            "description": "Configuration file as described at https://angular.github.io/protractor/#/page-objects\nHas suites for each frontend page.",
            "class": "GruntFile\n\nWas attempting to do gruntdocs..."
        },
        {
            "file": "tests\\spec.js",
            "line": 1,
            "description": "Configuration file as described at https://angular.github.io/protractor/#/page-objects\nHas suites for each frontend page.",
            "class": "GruntFile\n\nWas attempting to do gruntdocs..."
        },
        {
            "file": "web\\app\\controllers\\adminPanelController.js",
            "line": 12,
            "description": "This function loads the data from the services for this admin panel page.",
            "itemtype": "method",
            "name": "loadData",
            "class": "adminPanelController\n\nResponsible for every functionality given by the administrator panel for the frontend.",
            "module": "adminPanelController"
        },
        {
            "file": "web\\app\\controllers\\adminPanelController.js",
            "line": 30,
            "description": "This function is invoked upon an index in order to approve a new user registration.",
            "itemtype": "method",
            "name": "approveUser",
            "params": [
                {
                    "name": "index",
                    "description": ""
                }
            ],
            "class": "adminPanelController\n\nResponsible for every functionality given by the administrator panel for the frontend.",
            "module": "adminPanelController"
        },
        {
            "file": "web\\app\\controllers\\adminPanelController.js",
            "line": 48,
            "description": "This method is called with an index of the user in question, called when the admin wants to raise\na user's status to admin status.",
            "itemtype": "method",
            "name": "approveAdmin",
            "params": [
                {
                    "name": "index",
                    "description": "The index of a user object"
                }
            ],
            "class": "adminPanelController\n\nResponsible for every functionality given by the administrator panel for the frontend.",
            "module": "adminPanelController"
        },
        {
            "file": "web\\app\\controllers\\adminPanelController.js",
            "line": 66,
            "description": "This method is involved in rejecting a user that was proposed to be an administrator.",
            "itemtype": "method",
            "name": "rejectAdmin",
            "params": [
                {
                    "name": "index",
                    "description": "The index of a user object"
                }
            ],
            "class": "adminPanelController\n\nResponsible for every functionality given by the administrator panel for the frontend.",
            "module": "adminPanelController"
        },
        {
            "file": "web\\app\\controllers\\adminPanelController.js",
            "line": 83,
            "description": "This method is involved when the administrator decides to not allow a new registered user to be approved to be\na full user.",
            "itemtype": "method",
            "name": "rejectUser",
            "params": [
                {
                    "name": "index",
                    "description": "The index of a user object."
                }
            ],
            "class": "adminPanelController\n\nResponsible for every functionality given by the administrator panel for the frontend.",
            "module": "adminPanelController"
        },
        {
            "file": "web\\app\\controllers\\auditTrailController.js",
            "line": 13,
            "description": "This function is called at the very start of the audit trail, this obtains the information from\nthe backend and then associates it with the $scope.data object, which will be unpacked later.",
            "itemtype": "method",
            "name": "unlockObject",
            "class": "auditTrailController\n\nResponsible for every functionality given by the administrator panel for the frontend.",
            "module": "auditTrailController"
        },
        {
            "file": "web\\app\\controllers\\auditTrailController.js",
            "line": 84,
            "description": "Return to the main page (search page) of this application when the button is pressed.",
            "itemtype": "method",
            "name": "goBackToMain",
            "class": "auditTrailController\n\nResponsible for every functionality given by the administrator panel for the frontend.",
            "module": "auditTrailController"
        },
        {
            "file": "web\\app\\controllers\\editController.js",
            "line": 41,
            "description": "This section is concerned with obtaining the object from the backend and then bursting it onto the\nentire edit page appropriately.",
            "class": "editController\n\nResponsible for every functionality given by the administrator panel for the frontend.",
            "module": "editController"
        },
        {
            "file": "web\\app\\controllers\\editController.js",
            "line": 46,
            "description": "Function invoked when the page is first loaded, obtains the object from the backend\nand then associates it with the $scope.data object which will be accessed throughout the\ncontroller of the page :)",
            "itemtype": "method",
            "name": "unlockObject",
            "class": "editController\n\nResponsible for every functionality given by the administrator panel for the frontend.",
            "module": "editController"
        },
        {
            "file": "web\\app\\controllers\\editController.js",
            "line": 71,
            "description": "Unpacks the object for this edit page to use.",
            "itemtype": "method",
            "name": "unpackObject",
            "class": "editController\n\nResponsible for every functionality given by the administrator panel for the frontend.",
            "module": "editController"
        },
        {
            "file": "web\\app\\controllers\\editController.js",
            "line": 114,
            "description": "Constructor... for the model object of this edit page.",
            "is_constructor": 1,
            "class": "editController\n\nResponsible for every functionality given by the administrator panel for the frontend.",
            "module": "editController"
        },
        {
            "file": "web\\app\\controllers\\editController.js",
            "line": 128,
            "description": "The final function that prepares the editPageModelObject to be sent to the backend.\nLoads any differences found into the editPageModelObject! :)",
            "itemtype": "method",
            "name": "finalEditFunction",
            "class": "editController\n\nResponsible for every functionality given by the administrator panel for the frontend.",
            "module": "editController"
        },
        {
            "file": "web\\app\\controllers\\editController.js",
            "line": 181,
            "description": "SUEPRVISED POSTDOCS SECTION YES THIS IS A MESS HERE BUT IT MUST BE DONE FASTT!!!! AHHHHHHH!!!!!!!!!!!!!",
            "type": "{*[]}",
            "class": "editController\n\nResponsible for every functionality given by the administrator panel for the frontend.",
            "module": "editController"
        },
        {
            "file": "web\\app\\controllers\\editController.js",
            "line": 193,
            "description": "Object for SuperDoc",
            "params": [
                {
                    "name": "superDocNameOfPerson",
                    "description": ""
                },
                {
                    "name": "superDocStartYear",
                    "description": ""
                },
                {
                    "name": "superDocEndYear",
                    "description": ""
                },
                {
                    "name": "superDocInstitution",
                    "description": ""
                }
            ],
            "is_constructor": 1,
            "class": "editController\n\nResponsible for every functionality given by the administrator panel for the frontend.",
            "module": "editController"
        },
        {
            "file": "web\\app\\controllers\\editController.js",
            "line": 210,
            "description": "This method adds into the superdoc information array a passed in superdoc object.",
            "params": [
                {
                    "name": "superDocNameOfPerson",
                    "description": "name of person"
                },
                {
                    "name": "superDocStartYear",
                    "description": "start year"
                },
                {
                    "name": "superDocEndYear",
                    "description": "end year"
                },
                {
                    "name": "superDocInstitution",
                    "description": "institution"
                }
            ],
            "itemtype": "method",
            "name": "addSuperDocInstance",
            "class": "editController\n\nResponsible for every functionality given by the administrator panel for the frontend.",
            "module": "editController"
        },
        {
            "file": "web\\app\\controllers\\editController.js",
            "line": 228,
            "description": "Initialize superDoc array as an empty array. Will hold SuperDoc objects :)!",
            "type": "{Array}",
            "class": "editController\n\nResponsible for every functionality given by the administrator panel for the frontend.",
            "module": "editController"
        },
        {
            "file": "web\\app\\controllers\\editController.js",
            "line": 235,
            "description": "This method when invoked will show the superdoc information",
            "itemtype": "method",
            "name": "showSuperDocInfo",
            "class": "editController\n\nResponsible for every functionality given by the administrator panel for the frontend.",
            "module": "editController"
        },
        {
            "file": "web\\app\\controllers\\editController.js",
            "line": 243,
            "description": "This method when invoked will hide the superdoc information.",
            "itemtype": "method",
            "name": "hideSuperDocInfo",
            "class": "editController\n\nResponsible for every functionality given by the administrator panel for the frontend.",
            "module": "editController"
        },
        {
            "file": "web\\app\\controllers\\editController.js",
            "line": 252,
            "description": "This method when invoked will remove a passed in superdoc object from the superdoc array.",
            "params": [
                {
                    "name": "superDocInstance",
                    "description": "A superdoc object."
                }
            ],
            "itemtype": "method",
            "name": "removeSuperDocInstance",
            "class": "editController\n\nResponsible for every functionality given by the administrator panel for the frontend.",
            "module": "editController"
        },
        {
            "file": "web\\app\\controllers\\editController.js",
            "line": 269,
            "description": "SUPERDEGREE SECTION",
            "type": "{*[]}",
            "class": "editController\n\nResponsible for every functionality given by the administrator panel for the frontend.",
            "module": "editController"
        },
        {
            "file": "web\\app\\controllers\\editController.js",
            "line": 275,
            "description": "Super degree variables.",
            "type": "{boolean}",
            "class": "editController\n\nResponsible for every functionality given by the administrator panel for the frontend.",
            "module": "editController"
        },
        {
            "file": "web\\app\\controllers\\editController.js",
            "line": 293,
            "description": "Construct a super DEGREE object.",
            "params": [
                {
                    "name": "superDegNameOfPerson",
                    "description": "name of person"
                },
                {
                    "name": "superDegCurrPosition",
                    "description": "current position"
                },
                {
                    "name": "superDegCurrInst",
                    "description": "current institution"
                },
                {
                    "name": "superDegDegType",
                    "description": "degree type"
                },
                {
                    "name": "superDegYear",
                    "description": "degree year earned"
                },
                {
                    "name": "superDegInst",
                    "description": "degree institution"
                }
            ],
            "is_constructor": 1,
            "class": "editController\n\nResponsible for every functionality given by the administrator panel for the frontend.",
            "module": "editController"
        },
        {
            "file": "web\\app\\controllers\\editController.js",
            "line": 314,
            "description": "This function when invoked will compile all of the passed in params into a single superDeg object\nand will append this superDeg object into the array of superdeg objects.",
            "params": [
                {
                    "name": "superDegNameOfPerson",
                    "description": "name"
                },
                {
                    "name": "superDegCurrPosition",
                    "description": "positio n"
                },
                {
                    "name": "superDegCurrInst",
                    "description": "institution"
                },
                {
                    "name": "superDegDegType",
                    "description": "degree type"
                },
                {
                    "name": "superDegYear",
                    "description": "year earned"
                },
                {
                    "name": "superDegInst",
                    "description": "institution earned from"
                }
            ],
            "itemtype": "method",
            "name": "addSuperDegInstance",
            "class": "editController\n\nResponsible for every functionality given by the administrator panel for the frontend.",
            "module": "editController"
        },
        {
            "file": "web\\app\\controllers\\editController.js",
            "line": 335,
            "description": "Shows the superdeg information",
            "itemtype": "method",
            "name": "showSuperDegInfo",
            "class": "editController\n\nResponsible for every functionality given by the administrator panel for the frontend.",
            "module": "editController"
        },
        {
            "file": "web\\app\\controllers\\editController.js",
            "line": 343,
            "description": "Hides the superdeg information.",
            "itemtype": "method",
            "name": "hideSuperDegInfo",
            "class": "editController\n\nResponsible for every functionality given by the administrator panel for the frontend.",
            "module": "editController"
        },
        {
            "file": "web\\app\\controllers\\editController.js",
            "line": 351,
            "description": "Initialize as an empty array, for now. Will be populated with SUPER DEGREE objects.",
            "type": "{Array}",
            "class": "editController\n\nResponsible for every functionality given by the administrator panel for the frontend.",
            "module": "editController"
        },
        {
            "file": "web\\app\\controllers\\editController.js",
            "line": 357,
            "description": "Removes the instance of the superdeg object from the superdeg array",
            "params": [
                {
                    "name": "superDegInstance",
                    "description": "superdegree object"
                }
            ],
            "itemtype": "method",
            "name": "removeSuperDegInstance",
            "class": "editController\n\nResponsible for every functionality given by the administrator panel for the frontend.",
            "module": "editController"
        },
        {
            "file": "web\\app\\controllers\\editController.js",
            "line": 375,
            "description": "OTHER STUFFS",
            "type": "{*[]}",
            "class": "editController\n\nResponsible for every functionality given by the administrator panel for the frontend.",
            "module": "editController"
        },
        {
            "file": "web\\app\\controllers\\editController.js",
            "line": 397,
            "description": "This function will be how I retrieve the proper object from the backend, through the editService\nfile.",
            "class": "editController\n\nResponsible for every functionality given by the administrator panel for the frontend.",
            "module": "editController"
        },
        {
            "file": "web\\app\\controllers\\editController.js",
            "line": 404,
            "description": "Function called at the very start of this page's creation.\nResponsible for calling to the backend through the services to obtain the edit page object.",
            "itemtype": "method",
            "name": "buildEditPage",
            "class": "editController\n\nResponsible for every functionality given by the administrator panel for the frontend.",
            "module": "editController"
        },
        {
            "file": "web\\app\\controllers\\editController.js",
            "line": 419,
            "description": "Mock Object. This is what I will be expecting to recieve from the backend throughthe function\n\"obtainUserInformationFromBackEnd\".",
            "class": "editController\n\nResponsible for every functionality given by the administrator panel for the frontend.",
            "module": "editController"
        },
        {
            "file": "web\\app\\controllers\\editController.js",
            "line": 451,
            "description": "The major model object that is handed to the backend to process all of the edits made in the frontend",
            "params": [
                {
                    "name": "firstName",
                    "description": "first name"
                },
                {
                    "name": "lastName",
                    "description": "last name"
                },
                {
                    "name": "currentPositionTitle",
                    "description": "curr pos title"
                },
                {
                    "name": "currentInstitutionName",
                    "description": "curr inst name"
                },
                {
                    "name": "postDocInformation",
                    "description": "an array of postdoc objects"
                },
                {
                    "name": "degreeInformation",
                    "description": "an array of degree info objects"
                }
            ],
            "is_constructor": 1,
            "class": "editController\n\nResponsible for every functionality given by the administrator panel for the frontend.",
            "module": "editController"
        },
        {
            "file": "web\\app\\controllers\\editController.js",
            "line": 476,
            "class": "editController\n\nResponsible for every functionality given by the administrator panel for the frontend.",
            "module": "editController"
        },
        {
            "file": "web\\app\\controllers\\editController.js",
            "line": 478,
            "description": "This section deals with trivial information collection on the submit page such as first and last names.",
            "class": "editController\n\nResponsible for every functionality given by the administrator panel for the frontend.",
            "module": "editController"
        },
        {
            "file": "web\\app\\controllers\\editController.js",
            "line": 495,
            "description": "Simple function that I can invoke when I want to see what the contents of the basic inputs are.",
            "itemtype": "method",
            "name": "testBasicInputs",
            "class": "editController\n\nResponsible for every functionality given by the administrator panel for the frontend.",
            "module": "editController"
        },
        {
            "file": "web\\app\\controllers\\editController.js",
            "line": 506,
            "description": "This function is evoked when the user decides to commit their edits to the page and send it off to\nthe backend of the server.\n\nPRIMARY GOAL: Create a brand new object (extremely similar to the submit page) of all of the inputs\nfrom the user on this page.\n\n\nSECONDARY GOAL: This second goal is to take the data that we already had given to us from\nthe backend and then to individually element-by-element in the objects check if there was any\ndifference in the edited object (made when this button is hit) and if there is then it is packed\ninto a new object that is a differences object which is sent to the backend.\n\nThe differences object will contain \"nulled\" (As a very weird string that likely will be unique in most\ncases?) if there were no changes in the data. This allows the specific items of concern to be\ndetermined by the backend relatively easily. If it is \"nulled\" then just move on, no changes.\n\nThis function makes use ot the editServices file to achieve this goal.",
            "itemtype": "method",
            "name": "editMasterButton",
            "class": "editController\n\nResponsible for every functionality given by the administrator panel for the frontend.",
            "module": "editController"
        },
        {
            "file": "web\\app\\controllers\\editController.js",
            "line": 644,
            "description": "This function will add a new tab to the set of tabs that we currently have.",
            "params": [
                {
                    "name": "pdYearStart",
                    "description": "The dates of the start of the postdoc appointment."
                },
                {
                    "name": "pdYearEnd",
                    "description": "The date of the end of the postdoc appointment."
                },
                {
                    "name": "pdSupervisor",
                    "description": "The supervisor of the postdoc appointment."
                },
                {
                    "name": "pdInstitution",
                    "description": "The institution of the postdoc appointment."
                }
            ],
            "itemtype": "method",
            "name": "addPDInfo",
            "class": "editController\n\nResponsible for every functionality given by the administrator panel for the frontend.",
            "module": "editController"
        },
        {
            "file": "web\\app\\controllers\\editController.js",
            "line": 659,
            "description": "This function when evoked will remove the selected tab from the screen.",
            "params": [
                {
                    "name": "tab",
                    "description": "The tab to be removed."
                }
            ],
            "itemtype": "method",
            "name": "removePDTab",
            "class": "editController\n\nResponsible for every functionality given by the administrator panel for the frontend.",
            "module": "editController"
        },
        {
            "file": "web\\app\\controllers\\editController.js",
            "line": 677,
            "description": "This function when invoked will take the current and then the old tab and then it will combine\nthe data together in such a way that we have the previous now equal to the selected, and then\nindex into the \"tabs\" list with the current value.\n\n            $scope.$watch('degreeInfoSelectedIndex', function(current2, old2){\n               previous = selected;\n               selected = degreeInfoTab[current2];\n               if ( old2 + 1 && (old2 != current2)) $log.debug('Goodbye ' + previous.title + '!');\n               if ( current2 + 1 )                $log.debug('Hello ' + selected.title + '!');",
            "class": "editController\n\nResponsible for every functionality given by the administrator panel for the frontend.",
            "module": "editController"
        },
        {
            "file": "web\\app\\controllers\\editController.js",
            "line": 689,
            "description": "This function will add a new tab to the set of tabs that we currently have.",
            "params": [
                {
                    "name": "diYear",
                    "description": "The year that the degree was obtained."
                },
                {
                    "name": "diSupervisor",
                    "description": "The supervisor who oversaw the degree."
                },
                {
                    "name": "diInstitution",
                    "description": "The institution that awarded the degree."
                }
            ],
            "itemtype": "method",
            "name": "addDI",
            "class": "editController\n\nResponsible for every functionality given by the administrator panel for the frontend.",
            "module": "editController"
        },
        {
            "file": "web\\app\\controllers\\editController.js",
            "line": 703,
            "description": "This function when evoked will remove the selected tab from the screen.",
            "params": [
                {
                    "name": "tab",
                    "description": "The tab to be removed."
                }
            ],
            "itemtype": "method",
            "name": "removeDITab",
            "class": "editController\n\nResponsible for every functionality given by the administrator panel for the frontend.",
            "module": "editController"
        },
        {
            "file": "web\\app\\controllers\\editController.js",
            "line": 721,
            "description": "When invoked will show the postdoc info by setting the flag to true.",
            "itemtype": "method",
            "name": "showPostDocInfo",
            "class": "editController\n\nResponsible for every functionality given by the administrator panel for the frontend.",
            "module": "editController"
        },
        {
            "file": "web\\app\\controllers\\editController.js",
            "line": 730,
            "description": "When invoked will hide the postdoc info by setting the flag to false.",
            "itemtype": "method",
            "name": "hidePostDocInfo",
            "class": "editController\n\nResponsible for every functionality given by the administrator panel for the frontend.",
            "module": "editController"
        },
        {
            "file": "web\\app\\controllers\\editController.js",
            "line": 739,
            "description": "Information regarding the postdoc appointments furnished on the submit page.",
            "class": "editController\n\nResponsible for every functionality given by the administrator panel for the frontend.",
            "module": "editController"
        },
        {
            "file": "web\\app\\controllers\\editController.js",
            "line": 749,
            "description": "Object that represents a single postdoc instance when furnished with values.",
            "params": [
                {
                    "name": "pdStartYear",
                    "description": "start year"
                },
                {
                    "name": "pdEndYear",
                    "description": "end year"
                },
                {
                    "name": "pdSupervisor",
                    "description": "supervisor"
                },
                {
                    "name": "pdInstitution",
                    "description": "institution"
                },
                {
                    "name": "pdId",
                    "description": "assoicated ID with this postdoc object"
                },
                {
                    "name": "pdApproved",
                    "description": "is this approved or not by the backend?"
                }
            ],
            "is_constructor": 1,
            "class": "editController\n\nResponsible for every functionality given by the administrator panel for the frontend.",
            "module": "editController"
        },
        {
            "file": "web\\app\\controllers\\editController.js",
            "line": 769,
            "description": "Warnings made for the postdoc information empty fields warning to the users.",
            "class": "editController\n\nResponsible for every functionality given by the administrator panel for the frontend.",
            "module": "editController"
        },
        {
            "file": "web\\app\\controllers\\editController.js",
            "line": 781,
            "description": "Function evoked when the submit button is hit on the postdoc card on the submit page.\nCreates a new postDocInstance (object with postdoc data) with the data in the card's fields.\nAfterwards refreshes the view of the scope.",
            "params": [
                {
                    "name": "pdStartYear",
                    "description": "Starting year of the postdoc appointment."
                },
                {
                    "name": "pdEndYear",
                    "description": "Ending year of the postdoc appointment."
                },
                {
                    "name": "pdSupervisor",
                    "description": "Supervisor of the postdoc appointment."
                },
                {
                    "name": "pdInstitution",
                    "description": "Institution of the postdoc appointment."
                }
            ],
            "itemtype": "method",
            "name": "addPostDocInstance",
            "class": "editController\n\nResponsible for every functionality given by the administrator panel for the frontend.",
            "module": "editController"
        },
        {
            "file": "web\\app\\controllers\\editController.js",
            "line": 843,
            "description": "When invoked will declare that the post doc has been edited",
            "itemtype": "method",
            "name": "editPostDoc",
            "class": "editController\n\nResponsible for every functionality given by the administrator panel for the frontend.",
            "module": "editController"
        },
        {
            "file": "web\\app\\controllers\\editController.js",
            "line": 855,
            "description": "$scope.clearPostDocFields = function(){\n   pdStartYear = \"\";\n   pdEndYear = \"\";\n   pdSupervisor = \"\";\n   pdInstitution = \"\";\n   console.log(\"clearPostDocFields called! :)\");",
            "class": "editController\n\nResponsible for every functionality given by the administrator panel for the frontend.",
            "module": "editController"
        },
        {
            "file": "web\\app\\controllers\\editController.js",
            "line": 865,
            "description": "Function that when invoked will remove the selected postdoc instance from the submit page and\nthe particular individual's object model.",
            "params": [
                {
                    "name": "postDocInstanceIndex",
                    "description": "of the postDocInformation array that should be removed."
                }
            ],
            "itemtype": "method",
            "name": "removePostDocInstance",
            "class": "editController\n\nResponsible for every functionality given by the administrator panel for the frontend.",
            "module": "editController"
        },
        {
            "file": "web\\app\\controllers\\editController.js",
            "line": 885,
            "description": "This section deals with the cards associated with the degrees a user may have.",
            "class": "editController\n\nResponsible for every functionality given by the administrator panel for the frontend.",
            "module": "editController"
        },
        {
            "file": "web\\app\\controllers\\editController.js",
            "line": 895,
            "description": "Shows the degree info information when invoked.",
            "itemtype": "method",
            "name": "showDegreeInfo",
            "class": "editController\n\nResponsible for every functionality given by the administrator panel for the frontend.",
            "module": "editController"
        },
        {
            "file": "web\\app\\controllers\\editController.js",
            "line": 903,
            "description": "Hides the degree info information when invoked.",
            "itemtype": "method",
            "name": "hideDegreeInfo",
            "class": "editController\n\nResponsible for every functionality given by the administrator panel for the frontend.",
            "module": "editController"
        },
        {
            "file": "web\\app\\controllers\\editController.js",
            "line": 913,
            "description": "Information regarding the postdoc appointments furnished on the submit page.",
            "class": "editController\n\nResponsible for every functionality given by the administrator panel for the frontend.",
            "module": "editController"
        },
        {
            "file": "web\\app\\controllers\\editController.js",
            "line": 923,
            "description": "Constructor for the DegreeInfoInstance Object.\nThis is the object that holds together the information of a single degree for a particular individual.",
            "params": [
                {
                    "name": "diYear",
                    "description": "Year of the degree being awarded."
                },
                {
                    "name": "diSupervisor",
                    "description": "Supervisor of the degree."
                },
                {
                    "name": "diInstitution",
                    "description": "Institution degree was awarded from."
                },
                {
                    "name": "diType",
                    "description": "Type of this degree."
                },
                {
                    "name": "diId",
                    "description": "id of degree."
                },
                {
                    "name": "supervisionId",
                    "description": "id of supervisor."
                }
            ],
            "is_constructor": 1,
            "class": "editController\n\nResponsible for every functionality given by the administrator panel for the frontend.",
            "module": "editController"
        },
        {
            "file": "web\\app\\controllers\\editController.js",
            "line": 950,
            "description": "Warnings for degree information fields being empty! :(",
            "class": "editController\n\nResponsible for every functionality given by the administrator panel for the frontend.",
            "module": "editController"
        },
        {
            "file": "web\\app\\controllers\\editController.js",
            "line": 959,
            "description": "This method when invoked will create a new degree information object with the parameters supplied and\nthen will append it to the array of all total degree information objects :)",
            "params": [
                {
                    "name": "diYear",
                    "description": "Year of the degree being awarded."
                },
                {
                    "name": "diSupervisor",
                    "description": "Supervisor of the degree."
                },
                {
                    "name": "diInstitution",
                    "description": "Institution degree was awarded from."
                },
                {
                    "name": "diType",
                    "description": "Type of this degree."
                },
                {
                    "name": "diId",
                    "description": "id of degree."
                },
                {
                    "name": "supervisionId",
                    "description": "id of supervisor."
                }
            ],
            "itemtype": "method",
            "name": "addDegreeInfoInstance",
            "class": "editController\n\nResponsible for every functionality given by the administrator panel for the frontend.",
            "module": "editController"
        },
        {
            "file": "web\\app\\controllers\\editController.js",
            "line": 1015,
            "description": "Removes the object passed in from the individual's degree information.",
            "params": [
                {
                    "name": "degreeInfoInstance",
                    "description": "The degree that is desired to be removed."
                }
            ],
            "itemtype": "method",
            "name": "removeDegreeInfoInstance",
            "class": "editController\n\nResponsible for every functionality given by the administrator panel for the frontend.",
            "module": "editController"
        },
        {
            "file": "web\\app\\controllers\\editController.js",
            "line": 1042,
            "description": "This is the model for this submission page.\nFirst name, last name, title, degree type, current position title, current institution, postdoc info",
            "type": "{{usersFirstName: null, usersLastName: null, usersTitle: null, usersDegreeType: null, usersCurrentPositionTitle: null, usersCurrentInstitutionName: null, usersPostDocInfo: *[]}}",
            "class": "editController\n\nResponsible for every functionality given by the administrator panel for the frontend.",
            "module": "editController"
        },
        {
            "file": "web\\app\\controllers\\editController.js",
            "line": 1050,
            "description": "This is the constructor for bundling all of the submission page information into one object.\nCalled by hitting the final submission button, which evokes a function that plops this together.\n\nParams are self explanitory I'd hope?",
            "params": [
                {
                    "name": "firstName",
                    "description": ""
                },
                {
                    "name": "lastName",
                    "description": ""
                },
                {
                    "name": "currentPositionTitle",
                    "description": ""
                },
                {
                    "name": "currentInstitutionName",
                    "description": ""
                },
                {
                    "name": "postDocInformation",
                    "description": ""
                }
            ],
            "is_constructor": 1,
            "class": "editController\n\nResponsible for every functionality given by the administrator panel for the frontend.",
            "module": "editController"
        },
        {
            "file": "web\\app\\controllers\\editController.js",
            "line": 1131,
            "description": "Warnings for the various input fields. Initially set to false.\nBut if the value is null then it is set to true and pops up a warning message.",
            "type": "{boolean}",
            "class": "editController\n\nResponsible for every functionality given by the administrator panel for the frontend.",
            "module": "editController"
        },
        {
            "file": "web\\app\\controllers\\editController.js",
            "line": 1141,
            "description": "This function will print to the console all of the current states of the edit page.",
            "itemtype": "method",
            "name": "warningsState",
            "class": "editController\n\nResponsible for every functionality given by the administrator panel for the frontend.",
            "module": "editController"
        },
        {
            "file": "web\\app\\controllers\\editController.js",
            "line": 1152,
            "description": "Function evoked when the final submission button is hit, creates a new model object for the entire\nsubmission page.",
            "itemtype": "method",
            "name": "finalSubmitButtonFunction",
            "class": "editController\n\nResponsible for every functionality given by the administrator panel for the frontend.",
            "module": "editController"
        },
        {
            "file": "web\\app\\controllers\\editController.js",
            "line": 1243,
            "description": "Function that once it is called will dump all of the information of the object for this submission\npage!",
            "itemtype": "method",
            "name": "checkOutTHISObject",
            "class": "editController\n\nResponsible for every functionality given by the administrator panel for the frontend.",
            "module": "editController"
        },
        {
            "file": "web\\app\\controllers\\mentorshipNotificationController.js",
            "line": 12,
            "description": "This method when invoked ill load the data from the services from the backend.",
            "itemtype": "method",
            "name": "loadData",
            "class": "mentorshipNotificationController\n\nNotifications for mentorships are dealt with here.",
            "module": "mentorshipNotificationController"
        },
        {
            "file": "web\\app\\controllers\\mentorshipNotificationController.js",
            "line": 30,
            "description": "This method when invoked will approve the mentorship notification",
            "itemtype": "method",
            "name": "approveMentorship",
            "class": "mentorshipNotificationController\n\nNotifications for mentorships are dealt with here.",
            "module": "mentorshipNotificationController"
        },
        {
            "file": "web\\app\\controllers\\mentorshipNotificationController.js",
            "line": 45,
            "description": "This method when invoked will reject the mentorship notification",
            "itemtype": "method",
            "name": "rejectMentorship",
            "class": "mentorshipNotificationController\n\nNotifications for mentorships are dealt with here.",
            "module": "mentorshipNotificationController"
        },
        {
            "file": "web\\app\\controllers\\personAutoController.js",
            "line": 14,
            "description": "Given an item, it will then execute a search upon the item passed into this method.",
            "itemtype": "method",
            "name": "selectedItemChange",
            "memberof": "personAutoController",
            "instance": "",
            "class": "personAutoController\n\nDeals with the automatic updating and searching for the people supplied into the query string provided\nthrough the search bar at the top of the main html file.",
            "module": "personAutoController"
        },
        {
            "file": "web\\app\\controllers\\personAutoController.js",
            "line": 25,
            "description": "This method when invoked will search upon entry.",
            "itemtype": "method",
            "name": "searchOnEnter",
            "class": "personAutoController\n\nDeals with the automatic updating and searching for the people supplied into the query string provided\nthrough the search bar at the top of the main html file.",
            "module": "personAutoController"
        },
        {
            "file": "web\\app\\controllers\\personAutoController.js",
            "line": 36,
            "description": "Given a name, this method will then query the application with the name and find any results :)",
            "params": [
                {
                    "name": "name",
                    "description": "The name of a person to be queried by the application."
                }
            ],
            "itemtype": "method",
            "name": "queryNameSearch",
            "class": "personAutoController\n\nDeals with the automatic updating and searching for the people supplied into the query string provided\nthrough the search bar at the top of the main html file.",
            "module": "personAutoController"
        },
        {
            "file": "web\\app\\controllers\\personNotificationController.js",
            "line": 25,
            "description": "This method is invoked when we want to verify a person notification.",
            "itemtype": "method",
            "name": "verifyPerson",
            "class": "personNotificationController\n\nNotifications for persons are dealt with here.",
            "module": "personNotificationController"
        },
        {
            "file": "web\\app\\controllers\\personNotificationController.js",
            "line": 41,
            "description": "This methid is invoked when we want to reject a person notification.",
            "itemtype": "method",
            "name": "rejectPerson",
            "class": "personNotificationController\n\nNotifications for persons are dealt with here.",
            "module": "personNotificationController"
        },
        {
            "file": "web\\app\\controllers\\searchController.js",
            "line": 18,
            "description": "This method is invoked in the type of angular $on functionality",
            "itemtype": "method",
            "name": "",
            "class": "searchController\n\nEntire Search Functionality located here.",
            "module": "searchController"
        },
        {
            "file": "web\\app\\controllers\\searchController.js",
            "line": 105,
            "description": "This method is involved in finding an instiutiton data, given an id and institutions list.",
            "params": [
                {
                    "name": "id",
                    "description": "A particular ID."
                },
                {
                    "name": "institutions",
                    "description": "An array of institututions objects."
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "itemtype": "method",
            "name": "findInstitution",
            "class": "searchController\n\nEntire Search Functionality located here.",
            "module": "searchController"
        },
        {
            "file": "web\\app\\controllers\\searchController.js",
            "line": 120,
            "description": "My work",
            "class": "searchController\n\nEntire Search Functionality located here.",
            "module": "searchController"
        },
        {
            "file": "web\\app\\controllers\\searchController.js",
            "line": 125,
            "description": "This method is invoked to return to the view page of the web application.",
            "itemtype": "method",
            "name": "goToView",
            "params": [
                {
                    "name": "person",
                    "description": "A person Object :)"
                }
            ],
            "class": "searchController\n\nEntire Search Functionality located here.",
            "module": "searchController"
        },
        {
            "file": "web\\app\\controllers\\searchController.js",
            "line": 140,
            "description": "This function is used to clear all of the results returned.",
            "itemtype": "method",
            "name": "clearResults",
            "class": "searchController\n\nEntire Search Functionality located here.",
            "module": "searchController"
        },
        {
            "file": "web\\app\\controllers\\submitController.js",
            "line": 57,
            "description": "SUEPRVISED POSTDOCS SECTION YES THIS IS A MESS HERE BUT IT MUST BE DONE FASTT!!!! AHHHHHHH!!!!!!!!!!!!!",
            "type": "{*[]}",
            "class": "submitController\n\nController for the Submission page.\n\n\nStatus: CONTROLLER\nAssociated files: submit.html\n\nThe submission page is going to be the core of where the users will be able to supply information to begin a new\npage for a given particular user. This page is going to be essentially a massive collection of information that\nwe will be inserting into the system.\n\nThings that we're collecting include basic information like:\n-first name\n-last name\n-degree type\n-postdoc postings\n-etc",
            "module": "submitController"
        },
        {
            "file": "web\\app\\controllers\\submitController.js",
            "line": 69,
            "description": "Object for SuperDoc",
            "params": [
                {
                    "name": "superDocNameOfPerson",
                    "description": ""
                },
                {
                    "name": "superDocStartYear",
                    "description": ""
                },
                {
                    "name": "superDocEndYear",
                    "description": ""
                },
                {
                    "name": "superDocInstitution",
                    "description": ""
                }
            ],
            "is_constructor": 1,
            "class": "submitController\n\nController for the Submission page.\n\n\nStatus: CONTROLLER\nAssociated files: submit.html\n\nThe submission page is going to be the core of where the users will be able to supply information to begin a new\npage for a given particular user. This page is going to be essentially a massive collection of information that\nwe will be inserting into the system.\n\nThings that we're collecting include basic information like:\n-first name\n-last name\n-degree type\n-postdoc postings\n-etc",
            "module": "submitController"
        },
        {
            "file": "web\\app\\controllers\\submitController.js",
            "line": 86,
            "description": "This function is invoked when we want to create a new superdoc object with the parameters supplied\nto this method, and then it will also put this newly created object into the array of all of the\nsuperdoc objects.",
            "params": [
                {
                    "name": "superDocNameOfPerson",
                    "description": "Person name"
                },
                {
                    "name": "superDocStartYear",
                    "description": "Start year"
                },
                {
                    "name": "superDocEndYear",
                    "description": "End year"
                },
                {
                    "name": "superDocInstitution",
                    "description": "Institution of the supervised postdoc"
                }
            ],
            "class": "submitController\n\nController for the Submission page.\n\n\nStatus: CONTROLLER\nAssociated files: submit.html\n\nThe submission page is going to be the core of where the users will be able to supply information to begin a new\npage for a given particular user. This page is going to be essentially a massive collection of information that\nwe will be inserting into the system.\n\nThings that we're collecting include basic information like:\n-first name\n-last name\n-degree type\n-postdoc postings\n-etc",
            "module": "submitController"
        },
        {
            "file": "web\\app\\controllers\\submitController.js",
            "line": 105,
            "description": "Initialize superDoc array as an empty array. Will hold SuperDoc objects :)!",
            "type": "{Array}",
            "class": "submitController\n\nController for the Submission page.\n\n\nStatus: CONTROLLER\nAssociated files: submit.html\n\nThe submission page is going to be the core of where the users will be able to supply information to begin a new\npage for a given particular user. This page is going to be essentially a massive collection of information that\nwe will be inserting into the system.\n\nThings that we're collecting include basic information like:\n-first name\n-last name\n-degree type\n-postdoc postings\n-etc",
            "module": "submitController"
        },
        {
            "file": "web\\app\\controllers\\submitController.js",
            "line": 112,
            "description": "Show the superdoc information",
            "itemtype": "method",
            "name": "showSuperDocInfo",
            "class": "submitController\n\nController for the Submission page.\n\n\nStatus: CONTROLLER\nAssociated files: submit.html\n\nThe submission page is going to be the core of where the users will be able to supply information to begin a new\npage for a given particular user. This page is going to be essentially a massive collection of information that\nwe will be inserting into the system.\n\nThings that we're collecting include basic information like:\n-first name\n-last name\n-degree type\n-postdoc postings\n-etc",
            "module": "submitController"
        },
        {
            "file": "web\\app\\controllers\\submitController.js",
            "line": 120,
            "description": "Hide the superdoc information",
            "itemtype": "method",
            "name": "hideSuperDocInfo",
            "class": "submitController\n\nController for the Submission page.\n\n\nStatus: CONTROLLER\nAssociated files: submit.html\n\nThe submission page is going to be the core of where the users will be able to supply information to begin a new\npage for a given particular user. This page is going to be essentially a massive collection of information that\nwe will be inserting into the system.\n\nThings that we're collecting include basic information like:\n-first name\n-last name\n-degree type\n-postdoc postings\n-etc",
            "module": "submitController"
        },
        {
            "file": "web\\app\\controllers\\submitController.js",
            "line": 130,
            "description": "Remove a passed in superdoc object from the superdoc array of superdoc objects.",
            "params": [
                {
                    "name": "superDocInstance",
                    "description": "A superdoc object"
                }
            ],
            "itemtype": "method",
            "name": "removeSuperDocInstance",
            "class": "submitController\n\nController for the Submission page.\n\n\nStatus: CONTROLLER\nAssociated files: submit.html\n\nThe submission page is going to be the core of where the users will be able to supply information to begin a new\npage for a given particular user. This page is going to be essentially a massive collection of information that\nwe will be inserting into the system.\n\nThings that we're collecting include basic information like:\n-first name\n-last name\n-degree type\n-postdoc postings\n-etc",
            "module": "submitController"
        },
        {
            "file": "web\\app\\controllers\\submitController.js",
            "line": 147,
            "description": "SUPERDEGREE SECTION",
            "type": "{*[]}",
            "class": "submitController\n\nController for the Submission page.\n\n\nStatus: CONTROLLER\nAssociated files: submit.html\n\nThe submission page is going to be the core of where the users will be able to supply information to begin a new\npage for a given particular user. This page is going to be essentially a massive collection of information that\nwe will be inserting into the system.\n\nThings that we're collecting include basic information like:\n-first name\n-last name\n-degree type\n-postdoc postings\n-etc",
            "module": "submitController"
        },
        {
            "file": "web\\app\\controllers\\submitController.js",
            "line": 153,
            "description": "Super degree variables.",
            "type": "{boolean}",
            "class": "submitController\n\nController for the Submission page.\n\n\nStatus: CONTROLLER\nAssociated files: submit.html\n\nThe submission page is going to be the core of where the users will be able to supply information to begin a new\npage for a given particular user. This page is going to be essentially a massive collection of information that\nwe will be inserting into the system.\n\nThings that we're collecting include basic information like:\n-first name\n-last name\n-degree type\n-postdoc postings\n-etc",
            "module": "submitController"
        },
        {
            "file": "web\\app\\controllers\\submitController.js",
            "line": 165,
            "description": "Construct a super DEGREE object.",
            "params": [
                {
                    "name": "superDegNameOfPerson",
                    "description": ""
                },
                {
                    "name": "superDegStartYear",
                    "description": ""
                },
                {
                    "name": "superDegEndYear",
                    "description": ""
                },
                {
                    "name": "superDegInstitution",
                    "description": ""
                }
            ],
            "is_constructor": 1,
            "class": "submitController\n\nController for the Submission page.\n\n\nStatus: CONTROLLER\nAssociated files: submit.html\n\nThe submission page is going to be the core of where the users will be able to supply information to begin a new\npage for a given particular user. This page is going to be essentially a massive collection of information that\nwe will be inserting into the system.\n\nThings that we're collecting include basic information like:\n-first name\n-last name\n-degree type\n-postdoc postings\n-etc",
            "module": "submitController"
        },
        {
            "file": "web\\app\\controllers\\submitController.js",
            "line": 182,
            "description": "Adds a new instance of a superdegree to the arraylist of super degree objects.",
            "params": [
                {
                    "name": "superDegNameOfPerson",
                    "description": "A name of a superdeg person"
                }
            ],
            "class": "submitController\n\nController for the Submission page.\n\n\nStatus: CONTROLLER\nAssociated files: submit.html\n\nThe submission page is going to be the core of where the users will be able to supply information to begin a new\npage for a given particular user. This page is going to be essentially a massive collection of information that\nwe will be inserting into the system.\n\nThings that we're collecting include basic information like:\n-first name\n-last name\n-degree type\n-postdoc postings\n-etc",
            "module": "submitController"
        },
        {
            "file": "web\\app\\controllers\\submitController.js",
            "line": 195,
            "description": "Shows the superdeg infroamtion",
            "itemtype": "method",
            "name": "showSuperDegInfo",
            "class": "submitController\n\nController for the Submission page.\n\n\nStatus: CONTROLLER\nAssociated files: submit.html\n\nThe submission page is going to be the core of where the users will be able to supply information to begin a new\npage for a given particular user. This page is going to be essentially a massive collection of information that\nwe will be inserting into the system.\n\nThings that we're collecting include basic information like:\n-first name\n-last name\n-degree type\n-postdoc postings\n-etc",
            "module": "submitController"
        },
        {
            "file": "web\\app\\controllers\\submitController.js",
            "line": 203,
            "description": "Hides the superdeg information",
            "itemtype": "method",
            "name": "hideSuperDegInfo",
            "class": "submitController\n\nController for the Submission page.\n\n\nStatus: CONTROLLER\nAssociated files: submit.html\n\nThe submission page is going to be the core of where the users will be able to supply information to begin a new\npage for a given particular user. This page is going to be essentially a massive collection of information that\nwe will be inserting into the system.\n\nThings that we're collecting include basic information like:\n-first name\n-last name\n-degree type\n-postdoc postings\n-etc",
            "module": "submitController"
        },
        {
            "file": "web\\app\\controllers\\submitController.js",
            "line": 211,
            "description": "Initialize as an empty array, for now. Will be populated with SUPER DEGREE objects.",
            "type": "{Array}",
            "class": "submitController\n\nController for the Submission page.\n\n\nStatus: CONTROLLER\nAssociated files: submit.html\n\nThe submission page is going to be the core of where the users will be able to supply information to begin a new\npage for a given particular user. This page is going to be essentially a massive collection of information that\nwe will be inserting into the system.\n\nThings that we're collecting include basic information like:\n-first name\n-last name\n-degree type\n-postdoc postings\n-etc",
            "module": "submitController"
        },
        {
            "file": "web\\app\\controllers\\submitController.js",
            "line": 218,
            "description": "Removes the passed in superdegree object from the list of all superdegree objects.",
            "params": [
                {
                    "name": "superDegInstance",
                    "description": ""
                }
            ],
            "itemtype": "method",
            "name": "removeSuperDegInstance",
            "class": "submitController\n\nController for the Submission page.\n\n\nStatus: CONTROLLER\nAssociated files: submit.html\n\nThe submission page is going to be the core of where the users will be able to supply information to begin a new\npage for a given particular user. This page is going to be essentially a massive collection of information that\nwe will be inserting into the system.\n\nThings that we're collecting include basic information like:\n-first name\n-last name\n-degree type\n-postdoc postings\n-etc",
            "module": "submitController"
        },
        {
            "file": "web\\app\\controllers\\submitController.js",
            "line": 236,
            "description": "OTHER STUFFS",
            "type": "{*[]}",
            "class": "submitController\n\nController for the Submission page.\n\n\nStatus: CONTROLLER\nAssociated files: submit.html\n\nThe submission page is going to be the core of where the users will be able to supply information to begin a new\npage for a given particular user. This page is going to be essentially a massive collection of information that\nwe will be inserting into the system.\n\nThings that we're collecting include basic information like:\n-first name\n-last name\n-degree type\n-postdoc postings\n-etc",
            "module": "submitController"
        },
        {
            "file": "web\\app\\controllers\\submitController.js",
            "line": 252,
            "description": "This function when invoked will take the current and then the old tab and then it will combine\nthe data together in such a way that we have the previous now equal to the selected, and then\nindex into the \"tabs\" list with the current value.\n\n           $scope.$watch('selectedIndex', function(current, old){\n               previousPD = selectedPD;\n               selectedPD = postDocTab[current];\n               if ( old + 1 && (old != current)) $log.debug('Goodbye ' + previousPD.title + '!');\n               if ( current + 1 )                $log.debug('Hello ' + selectedPD.title + '!');\n           });",
            "class": "submitController\n\nController for the Submission page.\n\n\nStatus: CONTROLLER\nAssociated files: submit.html\n\nThe submission page is going to be the core of where the users will be able to supply information to begin a new\npage for a given particular user. This page is going to be essentially a massive collection of information that\nwe will be inserting into the system.\n\nThings that we're collecting include basic information like:\n-first name\n-last name\n-degree type\n-postdoc postings\n-etc",
            "module": "submitController"
        },
        {
            "file": "web\\app\\controllers\\submitController.js",
            "line": 265,
            "description": "This function will add a new tab to the set of tabs that we currently have.",
            "params": [
                {
                    "name": "pdYearStart",
                    "description": "The dates of the start of the postdoc appointment."
                },
                {
                    "name": "pdYearEnd",
                    "description": "The date of the end of the postdoc appointment."
                },
                {
                    "name": "pdSupervisor",
                    "description": "The supervisor of the postdoc appointment."
                },
                {
                    "name": "pdInstitution",
                    "description": "The institution of the postdoc appointment."
                }
            ],
            "itemtype": "method",
            "name": "addPDInfo",
            "class": "submitController\n\nController for the Submission page.\n\n\nStatus: CONTROLLER\nAssociated files: submit.html\n\nThe submission page is going to be the core of where the users will be able to supply information to begin a new\npage for a given particular user. This page is going to be essentially a massive collection of information that\nwe will be inserting into the system.\n\nThings that we're collecting include basic information like:\n-first name\n-last name\n-degree type\n-postdoc postings\n-etc",
            "module": "submitController"
        },
        {
            "file": "web\\app\\controllers\\submitController.js",
            "line": 280,
            "description": "This function when evoked will remove the selected tab from the screen.",
            "params": [
                {
                    "name": "tab",
                    "description": "The tab to be removed."
                }
            ],
            "itemtype": "method",
            "name": "removePDTab",
            "class": "submitController\n\nController for the Submission page.\n\n\nStatus: CONTROLLER\nAssociated files: submit.html\n\nThe submission page is going to be the core of where the users will be able to supply information to begin a new\npage for a given particular user. This page is going to be essentially a massive collection of information that\nwe will be inserting into the system.\n\nThings that we're collecting include basic information like:\n-first name\n-last name\n-degree type\n-postdoc postings\n-etc",
            "module": "submitController"
        },
        {
            "file": "web\\app\\controllers\\submitController.js",
            "line": 298,
            "description": "This function when invoked will take the current and then the old tab and then it will combine\nthe data together in such a way that we have the previous now equal to the selected, and then\nindex into the \"tabs\" list with the current value.\n\n           $scope.$watch('degreeInfoSelectedIndex', function(current2, old2){\n               previous = selected;\n               selected = degreeInfoTab[current2];\n               if ( old2 + 1 && (old2 != current2)) $log.debug('Goodbye ' + previous.title + '!');\n               if ( current2 + 1 )                $log.debug('Hello ' + selected.title + '!');",
            "class": "submitController\n\nController for the Submission page.\n\n\nStatus: CONTROLLER\nAssociated files: submit.html\n\nThe submission page is going to be the core of where the users will be able to supply information to begin a new\npage for a given particular user. This page is going to be essentially a massive collection of information that\nwe will be inserting into the system.\n\nThings that we're collecting include basic information like:\n-first name\n-last name\n-degree type\n-postdoc postings\n-etc",
            "module": "submitController"
        },
        {
            "file": "web\\app\\controllers\\submitController.js",
            "line": 310,
            "description": "This function will add a new tab to the set of tabs that we currently have.",
            "params": [
                {
                    "name": "diYear",
                    "description": "The year that the degree was obtained."
                },
                {
                    "name": "diSupervisor",
                    "description": "The supervisor who oversaw the degree."
                },
                {
                    "name": "diInstitution",
                    "description": "The institution that awarded the degree."
                }
            ],
            "itemtype": "method",
            "name": "addDI",
            "class": "submitController\n\nController for the Submission page.\n\n\nStatus: CONTROLLER\nAssociated files: submit.html\n\nThe submission page is going to be the core of where the users will be able to supply information to begin a new\npage for a given particular user. This page is going to be essentially a massive collection of information that\nwe will be inserting into the system.\n\nThings that we're collecting include basic information like:\n-first name\n-last name\n-degree type\n-postdoc postings\n-etc",
            "module": "submitController"
        },
        {
            "file": "web\\app\\controllers\\submitController.js",
            "line": 324,
            "description": "This function when evoked will remove the selected tab from the screen.",
            "params": [
                {
                    "name": "tab",
                    "description": "The tab to be removed."
                }
            ],
            "itemtype": "method",
            "name": "removeDITab",
            "class": "submitController\n\nController for the Submission page.\n\n\nStatus: CONTROLLER\nAssociated files: submit.html\n\nThe submission page is going to be the core of where the users will be able to supply information to begin a new\npage for a given particular user. This page is going to be essentially a massive collection of information that\nwe will be inserting into the system.\n\nThings that we're collecting include basic information like:\n-first name\n-last name\n-degree type\n-postdoc postings\n-etc",
            "module": "submitController"
        },
        {
            "file": "web\\app\\controllers\\submitController.js",
            "line": 342,
            "description": "When invoked will show the postdoc info by setting the flag to true.",
            "itemtype": "method",
            "name": "showPostDocInfo",
            "class": "submitController\n\nController for the Submission page.\n\n\nStatus: CONTROLLER\nAssociated files: submit.html\n\nThe submission page is going to be the core of where the users will be able to supply information to begin a new\npage for a given particular user. This page is going to be essentially a massive collection of information that\nwe will be inserting into the system.\n\nThings that we're collecting include basic information like:\n-first name\n-last name\n-degree type\n-postdoc postings\n-etc",
            "module": "submitController"
        },
        {
            "file": "web\\app\\controllers\\submitController.js",
            "line": 351,
            "description": "When invoked will hide the postdoc info by setting the flag to false.",
            "itemtype": "method",
            "name": "hidePostDocInfo",
            "class": "submitController\n\nController for the Submission page.\n\n\nStatus: CONTROLLER\nAssociated files: submit.html\n\nThe submission page is going to be the core of where the users will be able to supply information to begin a new\npage for a given particular user. This page is going to be essentially a massive collection of information that\nwe will be inserting into the system.\n\nThings that we're collecting include basic information like:\n-first name\n-last name\n-degree type\n-postdoc postings\n-etc",
            "module": "submitController"
        },
        {
            "file": "web\\app\\controllers\\submitController.js",
            "line": 360,
            "description": "Information regarding the postdoc appointments furnished on the submit page.",
            "class": "submitController\n\nController for the Submission page.\n\n\nStatus: CONTROLLER\nAssociated files: submit.html\n\nThe submission page is going to be the core of where the users will be able to supply information to begin a new\npage for a given particular user. This page is going to be essentially a massive collection of information that\nwe will be inserting into the system.\n\nThings that we're collecting include basic information like:\n-first name\n-last name\n-degree type\n-postdoc postings\n-etc",
            "module": "submitController"
        },
        {
            "file": "web\\app\\controllers\\submitController.js",
            "line": 370,
            "description": "Constructs a new PostDoc object",
            "params": [
                {
                    "name": "pdStartYear",
                    "description": "start year"
                },
                {
                    "name": "pdEndYear",
                    "description": "ending year"
                },
                {
                    "name": "pdSupervisor",
                    "description": "supervisor"
                },
                {
                    "name": "pdInstitution",
                    "description": "institution"
                }
            ],
            "is_constructor": 1,
            "class": "submitController\n\nController for the Submission page.\n\n\nStatus: CONTROLLER\nAssociated files: submit.html\n\nThe submission page is going to be the core of where the users will be able to supply information to begin a new\npage for a given particular user. This page is going to be essentially a massive collection of information that\nwe will be inserting into the system.\n\nThings that we're collecting include basic information like:\n-first name\n-last name\n-degree type\n-postdoc postings\n-etc",
            "module": "submitController"
        },
        {
            "file": "web\\app\\controllers\\submitController.js",
            "line": 400,
            "description": "Warnings made for the postdoc information empty fields warning to the users.",
            "class": "submitController\n\nController for the Submission page.\n\n\nStatus: CONTROLLER\nAssociated files: submit.html\n\nThe submission page is going to be the core of where the users will be able to supply information to begin a new\npage for a given particular user. This page is going to be essentially a massive collection of information that\nwe will be inserting into the system.\n\nThings that we're collecting include basic information like:\n-first name\n-last name\n-degree type\n-postdoc postings\n-etc",
            "module": "submitController"
        },
        {
            "file": "web\\app\\controllers\\submitController.js",
            "line": 409,
            "description": "Function evoked when the submit button is hit on the postdoc card on the submit page.\nCreates a new postDocInstance (object with postdoc data) with the data in the card's fields.\nAfterwards refreshes the view of the scope.",
            "params": [
                {
                    "name": "pdStartYear",
                    "description": "Starting year of the postdoc appointment."
                },
                {
                    "name": "pdEndYear",
                    "description": "Ending year of the postdoc appointment."
                },
                {
                    "name": "pdSupervisor",
                    "description": "Supervisor of the postdoc appointment."
                },
                {
                    "name": "pdInstitution",
                    "description": "Institution of the postdoc appointment."
                }
            ],
            "itemtype": "method",
            "name": "addPostDocInstance",
            "class": "submitController\n\nController for the Submission page.\n\n\nStatus: CONTROLLER\nAssociated files: submit.html\n\nThe submission page is going to be the core of where the users will be able to supply information to begin a new\npage for a given particular user. This page is going to be essentially a massive collection of information that\nwe will be inserting into the system.\n\nThings that we're collecting include basic information like:\n-first name\n-last name\n-degree type\n-postdoc postings\n-etc",
            "module": "submitController"
        },
        {
            "file": "web\\app\\controllers\\submitController.js",
            "line": 475,
            "description": "Method when invoked says that the edit post doc function has been called.",
            "itemtype": "method",
            "name": "editPostDoc",
            "class": "submitController\n\nController for the Submission page.\n\n\nStatus: CONTROLLER\nAssociated files: submit.html\n\nThe submission page is going to be the core of where the users will be able to supply information to begin a new\npage for a given particular user. This page is going to be essentially a massive collection of information that\nwe will be inserting into the system.\n\nThings that we're collecting include basic information like:\n-first name\n-last name\n-degree type\n-postdoc postings\n-etc",
            "module": "submitController"
        },
        {
            "file": "web\\app\\controllers\\submitController.js",
            "line": 487,
            "description": "$scope.clearPostDocFields = function(){\n    pdStartYear = \"\";\n    pdEndYear = \"\";\n    pdSupervisor = \"\";\n    pdInstitution = \"\";\n    console.log(\"clearPostDocFields called! :)\");",
            "class": "submitController\n\nController for the Submission page.\n\n\nStatus: CONTROLLER\nAssociated files: submit.html\n\nThe submission page is going to be the core of where the users will be able to supply information to begin a new\npage for a given particular user. This page is going to be essentially a massive collection of information that\nwe will be inserting into the system.\n\nThings that we're collecting include basic information like:\n-first name\n-last name\n-degree type\n-postdoc postings\n-etc",
            "module": "submitController"
        },
        {
            "file": "web\\app\\controllers\\submitController.js",
            "line": 497,
            "description": "Function that when invoked will remove the selected postdoc instance from the submit page and\nthe particular individual's object model.",
            "params": [
                {
                    "name": "postDocInstanceIndex",
                    "description": "of the postDocInformation array that should be removed."
                }
            ],
            "itemtype": "method",
            "name": "removePostDocInstance",
            "class": "submitController\n\nController for the Submission page.\n\n\nStatus: CONTROLLER\nAssociated files: submit.html\n\nThe submission page is going to be the core of where the users will be able to supply information to begin a new\npage for a given particular user. This page is going to be essentially a massive collection of information that\nwe will be inserting into the system.\n\nThings that we're collecting include basic information like:\n-first name\n-last name\n-degree type\n-postdoc postings\n-etc",
            "module": "submitController"
        },
        {
            "file": "web\\app\\controllers\\submitController.js",
            "line": 517,
            "description": "This section deals with the cards associated with the degrees a user may have.",
            "class": "submitController\n\nController for the Submission page.\n\n\nStatus: CONTROLLER\nAssociated files: submit.html\n\nThe submission page is going to be the core of where the users will be able to supply information to begin a new\npage for a given particular user. This page is going to be essentially a massive collection of information that\nwe will be inserting into the system.\n\nThings that we're collecting include basic information like:\n-first name\n-last name\n-degree type\n-postdoc postings\n-etc",
            "module": "submitController"
        },
        {
            "file": "web\\app\\controllers\\submitController.js",
            "line": 535,
            "description": "Shows the degree info information when invoked.",
            "itemtype": "method",
            "name": "showDegreeInfo",
            "class": "submitController\n\nController for the Submission page.\n\n\nStatus: CONTROLLER\nAssociated files: submit.html\n\nThe submission page is going to be the core of where the users will be able to supply information to begin a new\npage for a given particular user. This page is going to be essentially a massive collection of information that\nwe will be inserting into the system.\n\nThings that we're collecting include basic information like:\n-first name\n-last name\n-degree type\n-postdoc postings\n-etc",
            "module": "submitController"
        },
        {
            "file": "web\\app\\controllers\\submitController.js",
            "line": 543,
            "description": "Hides the degree info information when invoked.",
            "itemtype": "method",
            "name": "hideDegreeInfo",
            "class": "submitController\n\nController for the Submission page.\n\n\nStatus: CONTROLLER\nAssociated files: submit.html\n\nThe submission page is going to be the core of where the users will be able to supply information to begin a new\npage for a given particular user. This page is going to be essentially a massive collection of information that\nwe will be inserting into the system.\n\nThings that we're collecting include basic information like:\n-first name\n-last name\n-degree type\n-postdoc postings\n-etc",
            "module": "submitController"
        },
        {
            "file": "web\\app\\controllers\\submitController.js",
            "line": 553,
            "description": "Information regarding the postdoc appointments furnished on the submit page.",
            "class": "submitController\n\nController for the Submission page.\n\n\nStatus: CONTROLLER\nAssociated files: submit.html\n\nThe submission page is going to be the core of where the users will be able to supply information to begin a new\npage for a given particular user. This page is going to be essentially a massive collection of information that\nwe will be inserting into the system.\n\nThings that we're collecting include basic information like:\n-first name\n-last name\n-degree type\n-postdoc postings\n-etc",
            "module": "submitController"
        },
        {
            "file": "web\\app\\controllers\\submitController.js",
            "line": 564,
            "description": "Constructor for the DegreeInfoInstance Object.\nThis is the object that holds together the information of a single degree for a particular individual.",
            "params": [
                {
                    "name": "diYear",
                    "description": "Year of the degree being awarded."
                },
                {
                    "name": "diSupervisor",
                    "description": "Supervisor of the degree."
                },
                {
                    "name": "diInstitution",
                    "description": "Institution degree was awarded from."
                },
                {
                    "name": "diType",
                    "description": "Type of this degree."
                }
            ],
            "is_constructor": 1,
            "class": "submitController\n\nController for the Submission page.\n\n\nStatus: CONTROLLER\nAssociated files: submit.html\n\nThe submission page is going to be the core of where the users will be able to supply information to begin a new\npage for a given particular user. This page is going to be essentially a massive collection of information that\nwe will be inserting into the system.\n\nThings that we're collecting include basic information like:\n-first name\n-last name\n-degree type\n-postdoc postings\n-etc",
            "module": "submitController"
        },
        {
            "file": "web\\app\\controllers\\submitController.js",
            "line": 585,
            "description": "Warnings for degree information fields being empty! :(",
            "class": "submitController\n\nController for the Submission page.\n\n\nStatus: CONTROLLER\nAssociated files: submit.html\n\nThe submission page is going to be the core of where the users will be able to supply information to begin a new\npage for a given particular user. This page is going to be essentially a massive collection of information that\nwe will be inserting into the system.\n\nThings that we're collecting include basic information like:\n-first name\n-last name\n-degree type\n-postdoc postings\n-etc",
            "module": "submitController"
        },
        {
            "file": "web\\app\\controllers\\submitController.js",
            "line": 596,
            "description": "Creates a new degreeinfo object from the supplied parameters and then puts the object into the large\narray of the total degree info objects array. :)",
            "params": [
                {
                    "name": "diYear",
                    "description": "Year of the degree being awarded."
                },
                {
                    "name": "diSupervisor",
                    "description": "Supervisor of the degree."
                },
                {
                    "name": "diInstitution",
                    "description": "Institution degree was awarded from."
                },
                {
                    "name": "diType",
                    "description": "Type of this degree."
                }
            ],
            "itemtype": "method",
            "name": "addDegreeInfoInstance",
            "class": "submitController\n\nController for the Submission page.\n\n\nStatus: CONTROLLER\nAssociated files: submit.html\n\nThe submission page is going to be the core of where the users will be able to supply information to begin a new\npage for a given particular user. This page is going to be essentially a massive collection of information that\nwe will be inserting into the system.\n\nThings that we're collecting include basic information like:\n-first name\n-last name\n-degree type\n-postdoc postings\n-etc",
            "module": "submitController"
        },
        {
            "file": "web\\app\\controllers\\submitController.js",
            "line": 655,
            "description": "Removes the object passed in from the individual's degree information.",
            "params": [
                {
                    "name": "degreeInfoInstance",
                    "description": "The degree that is desired to be removed."
                }
            ],
            "itemtype": "method",
            "name": "removeDegreeInfoInstance",
            "class": "submitController\n\nController for the Submission page.\n\n\nStatus: CONTROLLER\nAssociated files: submit.html\n\nThe submission page is going to be the core of where the users will be able to supply information to begin a new\npage for a given particular user. This page is going to be essentially a massive collection of information that\nwe will be inserting into the system.\n\nThings that we're collecting include basic information like:\n-first name\n-last name\n-degree type\n-postdoc postings\n-etc",
            "module": "submitController"
        },
        {
            "file": "web\\app\\controllers\\submitController.js",
            "line": 676,
            "description": "This section deals with trivial information collection on the submit page such as first and last names.",
            "class": "submitController\n\nController for the Submission page.\n\n\nStatus: CONTROLLER\nAssociated files: submit.html\n\nThe submission page is going to be the core of where the users will be able to supply information to begin a new\npage for a given particular user. This page is going to be essentially a massive collection of information that\nwe will be inserting into the system.\n\nThings that we're collecting include basic information like:\n-first name\n-last name\n-degree type\n-postdoc postings\n-etc",
            "module": "submitController"
        },
        {
            "file": "web\\app\\controllers\\submitController.js",
            "line": 687,
            "description": "Method that when called will spill onto the console all of the current state of the various model\npieces.",
            "itemtype": "method",
            "name": "testBasicInputs",
            "class": "submitController\n\nController for the Submission page.\n\n\nStatus: CONTROLLER\nAssociated files: submit.html\n\nThe submission page is going to be the core of where the users will be able to supply information to begin a new\npage for a given particular user. This page is going to be essentially a massive collection of information that\nwe will be inserting into the system.\n\nThings that we're collecting include basic information like:\n-first name\n-last name\n-degree type\n-postdoc postings\n-etc",
            "module": "submitController"
        },
        {
            "file": "web\\app\\controllers\\submitController.js",
            "line": 701,
            "description": "This is the model for this submission page.\nFirst name, last name, title, degree type, current position title, current institution, postdoc info",
            "type": "{{usersFirstName: null, usersLastName: null, usersTitle: null, usersDegreeType: null, usersCurrentPositionTitle: null, usersCurrentInstitutionName: null, usersPostDocInfo: *[]}}",
            "class": "submitController\n\nController for the Submission page.\n\n\nStatus: CONTROLLER\nAssociated files: submit.html\n\nThe submission page is going to be the core of where the users will be able to supply information to begin a new\npage for a given particular user. This page is going to be essentially a massive collection of information that\nwe will be inserting into the system.\n\nThings that we're collecting include basic information like:\n-first name\n-last name\n-degree type\n-postdoc postings\n-etc",
            "module": "submitController"
        },
        {
            "file": "web\\app\\controllers\\submitController.js",
            "line": 709,
            "description": "This is the constructor for bundling all of the submission page information into one object.\nCalled by hitting the final submission button, which evokes a function that plops this together.\n\nParams are self explanitory I'd hope?",
            "params": [
                {
                    "name": "firstName",
                    "description": ""
                },
                {
                    "name": "lastName",
                    "description": ""
                },
                {
                    "name": "individualTitle",
                    "description": ""
                },
                {
                    "name": "typeOfDegree",
                    "description": ""
                },
                {
                    "name": "currentPositionTitle",
                    "description": ""
                },
                {
                    "name": "currentInstitutionName",
                    "description": ""
                },
                {
                    "name": "postDocInformation",
                    "description": ""
                }
            ],
            "is_constructor": 1,
            "class": "submitController\n\nController for the Submission page.\n\n\nStatus: CONTROLLER\nAssociated files: submit.html\n\nThe submission page is going to be the core of where the users will be able to supply information to begin a new\npage for a given particular user. This page is going to be essentially a massive collection of information that\nwe will be inserting into the system.\n\nThings that we're collecting include basic information like:\n-first name\n-last name\n-degree type\n-postdoc postings\n-etc",
            "module": "submitController"
        },
        {
            "file": "web\\app\\controllers\\submitController.js",
            "line": 746,
            "description": "Warnings for the various input fields. Initially set to false.\nBut if the value is null then it is set to true and pops up a warning message.",
            "type": "{boolean}",
            "class": "submitController\n\nController for the Submission page.\n\n\nStatus: CONTROLLER\nAssociated files: submit.html\n\nThe submission page is going to be the core of where the users will be able to supply information to begin a new\npage for a given particular user. This page is going to be essentially a massive collection of information that\nwe will be inserting into the system.\n\nThings that we're collecting include basic information like:\n-first name\n-last name\n-degree type\n-postdoc postings\n-etc",
            "module": "submitController"
        },
        {
            "file": "web\\app\\controllers\\submitController.js",
            "line": 756,
            "description": "Method that when invoked will supply a warning state to the console detailing the current state.",
            "itemtype": "method",
            "name": "warningsState",
            "class": "submitController\n\nController for the Submission page.\n\n\nStatus: CONTROLLER\nAssociated files: submit.html\n\nThe submission page is going to be the core of where the users will be able to supply information to begin a new\npage for a given particular user. This page is going to be essentially a massive collection of information that\nwe will be inserting into the system.\n\nThings that we're collecting include basic information like:\n-first name\n-last name\n-degree type\n-postdoc postings\n-etc",
            "module": "submitController"
        },
        {
            "file": "web\\app\\controllers\\submitController.js",
            "line": 768,
            "description": "Function evoked when the final submission button is hit, creates a new model object for the entire\nsubmission page.",
            "itemtype": "method",
            "name": "finalSubmitButtonFunction",
            "class": "submitController\n\nController for the Submission page.\n\n\nStatus: CONTROLLER\nAssociated files: submit.html\n\nThe submission page is going to be the core of where the users will be able to supply information to begin a new\npage for a given particular user. This page is going to be essentially a massive collection of information that\nwe will be inserting into the system.\n\nThings that we're collecting include basic information like:\n-first name\n-last name\n-degree type\n-postdoc postings\n-etc",
            "module": "submitController"
        },
        {
            "file": "web\\app\\controllers\\submitController.js",
            "line": 856,
            "description": "Meant to return back to the main.search page, not working though.",
            "itemtype": "method",
            "name": "goBackToMain",
            "class": "submitController\n\nController for the Submission page.\n\n\nStatus: CONTROLLER\nAssociated files: submit.html\n\nThe submission page is going to be the core of where the users will be able to supply information to begin a new\npage for a given particular user. This page is going to be essentially a massive collection of information that\nwe will be inserting into the system.\n\nThings that we're collecting include basic information like:\n-first name\n-last name\n-degree type\n-postdoc postings\n-etc",
            "module": "submitController"
        },
        {
            "file": "web\\app\\controllers\\submitController.js",
            "line": 867,
            "description": "Function that once it is called will dump all of the information of the object for this submission\npage!",
            "itemtype": "method",
            "name": "checkOutTHISObject",
            "class": "submitController\n\nController for the Submission page.\n\n\nStatus: CONTROLLER\nAssociated files: submit.html\n\nThe submission page is going to be the core of where the users will be able to supply information to begin a new\npage for a given particular user. This page is going to be essentially a massive collection of information that\nwe will be inserting into the system.\n\nThings that we're collecting include basic information like:\n-first name\n-last name\n-degree type\n-postdoc postings\n-etc",
            "module": "submitController"
        },
        {
            "file": "web\\app\\controllers\\supervisionNotificationController.js",
            "line": 12,
            "description": "Loads the data upon entry of this controller from the services which gets the object desired from the backend\nof the application :)",
            "itemtype": "method",
            "name": "loadData",
            "class": "supervisionNotificationController\n\nNotifications for supervision are dealt with here.",
            "module": "supervisionNotificationController"
        },
        {
            "file": "web\\app\\controllers\\supervisionNotificationController.js",
            "line": 32,
            "description": "Verifies the supervision notification.",
            "itemtype": "method",
            "name": "verifySupervision",
            "class": "supervisionNotificationController\n\nNotifications for supervision are dealt with here.",
            "module": "supervisionNotificationController"
        },
        {
            "file": "web\\app\\controllers\\supervisionNotificationController.js",
            "line": 48,
            "description": "Rejects the supervision notification",
            "itemtype": "method",
            "name": "rejectSupervision",
            "class": "supervisionNotificationController\n\nNotifications for supervision are dealt with here.",
            "module": "supervisionNotificationController"
        },
        {
            "file": "web\\app\\controllers\\userController.js",
            "line": 16,
            "description": "This method when invoked will log in a user.\n// https://github.com/angular/material/issues/1413 passing stuff to dialog",
            "params": [
                {
                    "name": "$event",
                    "description": "An angular event object."
                }
            ],
            "itemtype": "method",
            "name": "login",
            "class": "muserController\n\nThe user controller is located here, that handles the affairs dealing with the users of the application\nworking with the application.",
            "module": "userController"
        },
        {
            "file": "web\\app\\controllers\\userController.js",
            "line": 33,
            "description": "This method is an angular method that will watch the current state of the application.",
            "itemtype": "method",
            "name": "$watch",
            "class": "muserController\n\nThe user controller is located here, that handles the affairs dealing with the users of the application\nworking with the application.",
            "module": "userController"
        },
        {
            "file": "web\\app\\controllers\\userController.js",
            "line": 45,
            "description": "This method when invoked will query the login service and see if the user is or is not logged into the\napplication :)",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "itemtype": "method",
            "name": "showLogin",
            "class": "muserController\n\nThe user controller is located here, that handles the affairs dealing with the users of the application\nworking with the application.",
            "module": "userController"
        },
        {
            "file": "web\\app\\controllers\\userController.js",
            "line": 56,
            "description": "This method when invoked will show the user to the current controller when looking through the login service.",
            "return": {
                "description": "true/false",
                "type": "Boolean"
            },
            "itemtype": "method",
            "name": "showUser",
            "class": "muserController\n\nThe user controller is located here, that handles the affairs dealing with the users of the application\nworking with the application.",
            "module": "userController"
        },
        {
            "file": "web\\app\\controllers\\userController.js",
            "line": 66,
            "description": "Obtains the username from the backend of the application through the login service :)",
            "return": {
                "description": "",
                "type": "*"
            },
            "itemtype": "method",
            "name": "getUsername",
            "class": "muserController\n\nThe user controller is located here, that handles the affairs dealing with the users of the application\nworking with the application.",
            "module": "userController"
        },
        {
            "file": "web\\app\\controllers\\userController.js",
            "line": 80,
            "description": "This function will invoke the login service's logout function and then it will log them out.",
            "itemtype": "method",
            "name": "logout",
            "class": "muserController\n\nThe user controller is located here, that handles the affairs dealing with the users of the application\nworking with the application.",
            "module": "userController"
        },
        {
            "file": "web\\app\\controllers\\userController.js",
            "line": 89,
            "description": "This method when invoked will query the loginservice and see if the currently logged in user is or is not\nan administrator of this webapplication.",
            "itemtype": "method",
            "name": "isAdmin",
            "class": "muserController\n\nThe user controller is located here, that handles the affairs dealing with the users of the application\nworking with the application.",
            "module": "userController"
        },
        {
            "file": "web\\app\\controllers\\userDialogController.js",
            "line": 37,
            "description": "This method when invoked will submit the login credentials ( a single object passed into this method) to the\nbackend to check if they are valid or not when invoekd.",
            "params": [
                {
                    "name": "loginUser",
                    "description": "an object of username and password credentials."
                }
            ],
            "itemtype": "method",
            "name": "submitLogin",
            "class": "userDialogController\n\n Controller for the User Dialogue\n\nStatus: CONTROLLER\nAssociated files: userDialog.html,\n\nThe user dialog controller is associated with registration and submission of login information. So it is\nslightly associated with the User Controller (userController.js), yet is kept distinct for clarity of functions.",
            "module": "userDialogController"
        },
        {
            "file": "web\\app\\controllers\\userDialogController.js",
            "line": 60,
            "description": "This method will be invoked when we have a user that wants to register for the webapplication :)\nThis takes in a registered user object (a username and password combo object) and then will send this\nobject to the backend through the services and then either confirms or rejects the login.",
            "params": [
                {
                    "name": "registerUser",
                    "description": "A username and password combo for a novel user."
                }
            ],
            "itemtype": "method",
            "name": "submitRegistration",
            "class": "userDialogController\n\n Controller for the User Dialogue\n\nStatus: CONTROLLER\nAssociated files: userDialog.html,\n\nThe user dialog controller is associated with registration and submission of login information. So it is\nslightly associated with the User Controller (userController.js), yet is kept distinct for clarity of functions.",
            "module": "userDialogController"
        },
        {
            "file": "web\\app\\controllers\\userDialogController.js",
            "line": 82,
            "description": "This method when invoked will confirm the registration of the user.",
            "itemtype": "method",
            "name": "registrationConfirmation",
            "class": "userDialogController\n\n Controller for the User Dialogue\n\nStatus: CONTROLLER\nAssociated files: userDialog.html,\n\nThe user dialog controller is associated with registration and submission of login information. So it is\nslightly associated with the User Controller (userController.js), yet is kept distinct for clarity of functions.",
            "module": "userDialogController"
        },
        {
            "file": "web\\app\\controllers\\userDialogController.js",
            "line": 96,
            "description": "Cancel the login of a user",
            "itemtype": "method",
            "name": "cancelLogin",
            "class": "userDialogController\n\n Controller for the User Dialogue\n\nStatus: CONTROLLER\nAssociated files: userDialog.html,\n\nThe user dialog controller is associated with registration and submission of login information. So it is\nslightly associated with the User Controller (userController.js), yet is kept distinct for clarity of functions.",
            "module": "userDialogController"
        },
        {
            "file": "web\\app\\controllers\\userDialogController.js",
            "line": 106,
            "description": "Cancel the registration of the user.",
            "itemtype": "method",
            "name": "cancelRegistration",
            "class": "userDialogController\n\n Controller for the User Dialogue\n\nStatus: CONTROLLER\nAssociated files: userDialog.html,\n\nThe user dialog controller is associated with registration and submission of login information. So it is\nslightly associated with the User Controller (userController.js), yet is kept distinct for clarity of functions.",
            "module": "userDialogController"
        },
        {
            "file": "web\\app\\controllers\\userDialogController.js",
            "line": 115,
            "description": "Method that will go to the registration view",
            "itemtype": "method",
            "name": "toRegistrationView",
            "class": "userDialogController\n\n Controller for the User Dialogue\n\nStatus: CONTROLLER\nAssociated files: userDialog.html,\n\nThe user dialog controller is associated with registration and submission of login information. So it is\nslightly associated with the User Controller (userController.js), yet is kept distinct for clarity of functions.",
            "module": "userDialogController"
        },
        {
            "file": "web\\app\\controllers\\viewController.js",
            "line": 18,
            "description": "Called when the page is loaded to get the object from the backend and associate it with the data.",
            "itemtype": "method",
            "name": "unlockObject",
            "class": "viewController\n\nThis controller does all that can be done with the view page.",
            "module": "viewController"
        },
        {
            "file": "web\\app\\controllers\\viewController.js",
            "line": 35,
            "description": "Go to the edit page for this view, sending the id of the currently examined person",
            "itemtype": "method",
            "name": "invokeEditPage",
            "class": "viewController\n\nThis controller does all that can be done with the view page.",
            "module": "viewController"
        },
        {
            "file": "web\\app\\controllers\\viewController.js",
            "line": 46,
            "description": "Go back to the main (search) page",
            "itemtype": "method",
            "name": "goBackToMain",
            "class": "viewController\n\nThis controller does all that can be done with the view page.",
            "module": "viewController"
        },
        {
            "file": "web\\app\\controllers\\viewController.js",
            "line": 56,
            "description": "Go to the edit page.",
            "itemtype": "method",
            "name": "goToEdit",
            "class": "viewController\n\nThis controller does all that can be done with the view page.",
            "module": "viewController"
        },
        {
            "file": "web\\app\\controllers\\visController.js",
            "line": 20,
            "description": "// estimates the dimensions of the vis flexbox\n// not perfect but < 10% error",
            "itemtype": "method",
            "name": "estimateDimensions",
            "class": "visController\n\nNotifications for mentorships are dealt with here.",
            "module": "visController"
        },
        {
            "file": "web\\app\\services\\editService.js",
            "line": 1,
            "description": "Edit Service\n\nStatus: SERVICE\nAssociated files: vis controller",
            "class": "our routes",
            "module": "visController"
        },
        {
            "file": "web\\app\\services\\editService.js",
            "line": 12,
            "description": "Pass some param like name or id, and that will obtain all information I need. May need to parse it all.",
            "params": [
                {
                    "name": "id",
                    "description": "Can be a name or some numerical id number."
                }
            ],
            "class": "our routes",
            "module": "visController"
        },
        {
            "file": "web\\app\\services\\editService.js",
            "line": 53,
            "description": "This service when called will PUT the edited data object onto the aggregated url, sending it to\nthe backend to be parsed and the modifications made in the server.",
            "params": [
                {
                    "name": "modifications",
                    "description": "A specialized object of the modifications"
                },
                {
                    "name": "idObj",
                    "description": "is the id of the current peep."
                }
            ],
            "return": {
                "description": "A promise of the event occurance.",
                "type": "*"
            },
            "class": "our routes",
            "module": "visController"
        },
        {
            "file": "web\\app\\services\\editService.js",
            "line": 92,
            "description": "This is just needed for the service to actually work. Just standard notation.",
            "class": "our routes",
            "module": "visController"
        },
        {
            "file": "web\\app\\services\\loginService.js",
            "line": 4,
            "description": "When evoked will check if the user can be obtained, if the user is not equal to null we must have a user logged\ninto our app. Otherwise return false (if null), as we do not have a user.",
            "return": {
                "description": "If the user is logged in (true) or not (false).",
                "type": "Boolean"
            },
            "class": "our routes",
            "module": "visController"
        },
        {
            "file": "web\\app\\services\\loginService.js",
            "line": 18,
            "description": "Obtain from local storage the value of the userNamespace key.",
            "return": {
                "description": "The value of the current user",
                "type": "*"
            },
            "class": "our routes",
            "module": "visController"
        },
        {
            "file": "web\\app\\services\\loginService.js",
            "line": 30,
            "description": "An http call wrapped in a promise. upon success will store the user data in\nlocal storage.",
            "params": [
                {
                    "name": "user",
                    "description": "A user of the app."
                }
            ],
            "return": {
                "description": "A promise that encapsulates the server response.",
                "type": "*"
            },
            "class": "our routes",
            "module": "visController"
        },
        {
            "file": "web\\app\\services\\loginService.js",
            "line": 54,
            "description": "Logs out the user, by removing the\nLocal storage for the store. Eg: if we're in chrome and we went to the cosnole and the resources then we'll find something on localhost:5000 then we'll see it there.\ntl;dr: Store is the local storage within the user's browser of the application that is being used.\nThis function removes this person from this local storage.",
            "class": "our routes",
            "module": "visController"
        },
        {
            "file": "web\\app\\services\\loginService.js",
            "line": 74,
            "description": "exposes the various functions.",
            "class": "our routes",
            "module": "visController"
        },
        {
            "file": "web\\app\\services\\registerService.js",
            "line": 1,
            "description": "Register Service\n\nStatus: SERVICE\nAssociated files: userDialogController\n\nThe Register service is associated with storing and handling the local information services in the app.",
            "class": "our routes",
            "module": "visController"
        },
        {
            "file": "web\\app\\services\\registerService.js",
            "line": 14,
            "description": "http request to the user route that is wrapped in a promise",
            "params": [
                {
                    "name": "user",
                    "description": "A user object to register in our application."
                }
            ],
            "return": {
                "description": "Returns a promise associated with the registration of the user.",
                "type": "*"
            },
            "class": "our routes",
            "module": "visController"
        },
        {
            "file": "web\\app\\services\\registerService.js",
            "line": 37,
            "description": "exposes the register function",
            "class": "our routes",
            "module": "visController"
        },
        {
            "file": "web\\app\\services\\submitService.js",
            "line": 1,
            "description": "Search Service\n\nStatus: SERVICE\nAssociated files: vis controller",
            "class": "our routes",
            "module": "visController"
        },
        {
            "file": "web\\app\\services\\submitService.js",
            "line": 13,
            "description": "Don't ever call without a submitfileobject. Please :)",
            "params": [
                {
                    "name": "submitFileObject",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "our routes",
            "module": "visController"
        },
        {
            "file": "web\\app\\services\\submitService.js",
            "line": 46,
            "description": "Return block, as a javascript object. This reveals these functions as being public, anything not listed\nis considered private.",
            "class": "our routes",
            "module": "visController"
        },
        {
            "file": "web\\app\\services\\viewService.js",
            "line": 1,
            "description": "Service for the view page of our application.\n\nInvolved with making it so that the view page can retrieve the data from the backend to display.",
            "class": "our routes",
            "module": "visController"
        },
        {
            "file": "web\\app\\module.js",
            "line": 1,
            "description": "Modules are the containers of the different parts of our application. Like controllers,\n\n\nFor more on what a module is:\nhttps://docs.angularjs.org/guide/module",
            "class": "our routes",
            "module": "visController"
        },
        {
            "file": "web\\bower_components\\a0-angular-storage\\dist\\angular-storage.js",
            "line": 156,
            "description": "Sets the storage.",
            "params": [
                {
                    "name": "storage",
                    "description": "The storage name",
                    "type": "String"
                }
            ],
            "class": "",
            "module": "visController"
        },
        {
            "file": "web\\bower_components\\a0-angular-storage\\dist\\angular-storage.js",
            "line": 170,
            "description": "Returns a namespaced store",
            "params": [
                {
                    "name": "namespace",
                    "description": "The namespace",
                    "type": "String"
                },
                {
                    "name": "storage",
                    "description": "The name of the storage service",
                    "type": "String"
                },
                {
                    "name": "key",
                    "description": "The key",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "InternalStore"
            },
            "class": "",
            "module": "visController"
        },
        {
            "file": "web\\bower_components\\a0-angular-storage\\gulpfile.js",
            "line": 38,
            "description": "Run test once and exit",
            "class": "",
            "module": "visController"
        },
        {
            "file": "web\\bower_components\\a0-angular-storage\\gulpfile.js",
            "line": 48,
            "description": "Run test once in all available browsers and exit",
            "class": "",
            "module": "visController"
        },
        {
            "file": "web\\bower_components\\a0-angular-storage\\gulpfile.js",
            "line": 66,
            "description": "Run test once and exit",
            "class": "",
            "module": "visController"
        },
        {
            "file": "web\\bower_components\\a0-angular-storage\\gulpfile.js",
            "line": 76,
            "description": "Run test once and exit",
            "class": "",
            "module": "visController"
        },
        {
            "file": "web\\bower_components\\a0-angular-storage\\gulpfile.js",
            "line": 86,
            "description": "Run code coverage tests once and exit",
            "class": "",
            "module": "visController"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 1,
            "license": "AngularJS v1.5.0\n(c) 2010-2016 Google, Inc. http://angularjs.org\nLicense: MIT",
            "class": "",
            "module": "visController"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 8,
            "description": "This object provides a utility for producing rich Error messages within\nAngular. It can be called as follows:\n\nvar exampleMinErr = minErr('example');\nthrow exampleMinErr('one', 'This {0} is {1}', foo, bar);\n\nThe above creates an instance of minErr in the example namespace. The\nresulting error will have a namespaced error code of example.one.  The\nresulting error will replace {0} with the value of foo, and {1} with the\nvalue of bar. The object is not restricted in the number of arguments it can\ntake.\n\nIf fewer arguments are specified than necessary for interpolation, the extra\ninterpolation markers will be preserved in the final string.\n\nSince data will be parsed statically during a build step, some restrictions\nare applied with respect to how minErr instances are created and called.\nInstances should have names of the form namespaceMinErr for a minErr created\nusing minErr('namespace') . Error codes, namespaces and template strings\nshould all be static strings, not variables or general expressions.",
            "params": [
                {
                    "name": "module",
                    "description": "The namespace to use for the new minErr instance.",
                    "type": "String"
                },
                {
                    "name": "ErrorConstructor",
                    "description": "Custom error constructor to be instantiated when returning\n  error from returned function, for cases when a particular type of error is useful.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "minErr instance",
                "type": "function(code:string, template:string, ...templateArgs): Error"
            },
            "class": "",
            "module": "visController"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 231,
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 236,
            "description": "documentMode is an IE-only property\nhttp://msdn.microsoft.com/en-us/library/ie/cc196988(v=vs.85).aspx",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 243,
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "obj",
                    "description": "",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns true if `obj` is an array or array-like object (NodeList, Arguments,\n                  String ...)",
                "type": "Boolean"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 359,
            "description": "when using forEach the params are value, key, but it is often useful to have key, value.",
            "params": [
                {
                    "name": "iteratorFn",
                    "description": "",
                    "type": "Function(string, *)"
                }
            ],
            "return": {
                "description": "",
                "type": "Function(*, string)"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 368,
            "description": "A consistent way of creating unique IDs in angular.\n\nUsing simple numbers allows us to generate 28.6 million unique ids per second for 10 years before\nwe hit number precision issues in JavaScript.\n\nMath.pow(2,53) / 60 / 60 / 24 / 365 / 10 = 28.6M",
            "return": {
                "description": "an unique alpha-numeric string",
                "type": "Number"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 383,
            "description": "Set or clear the hashkey for an object.",
            "params": [
                {
                    "name": "obj",
                    "description": "object"
                },
                {
                    "name": "h",
                    "description": "the hashkey (!truthy to delete the hashkey)"
                }
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 585,
            "description": "Determine if a value is an object with a null prototype",
            "return": {
                "description": "True if `value` is an `Object` with a null prototype",
                "type": "Boolean"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 677,
            "description": "Determines if a value is a regular expression object.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "value",
                    "description": "Reference to check.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "True if `value` is a `RegExp`.",
                "type": "Boolean"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 689,
            "description": "Checks if `obj` is a window object.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "obj",
                    "description": "Object to check",
                    "type": "*"
                }
            ],
            "return": {
                "description": "True if `obj` is a window obj.",
                "type": "Boolean"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 772,
            "params": [
                {
                    "name": "str",
                    "description": "'key1,key2,...'"
                }
            ],
            "return": {
                "description": "in the form of {key1:true, key2:true, ...}",
                "type": "Object"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 993,
            "description": "Creates a shallow copy of an object, an array or a primitive.\n\nAssumes that there are no proto properties for objects.",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 1311,
            "return": {
                "description": "Returns the string representation of the element.",
                "type": "String"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 1336,
            "description": "Tries to decode the URI component without throwing an exception.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "str",
                    "description": "value potential URI component to check."
                }
            ],
            "return": {
                "description": "True if `value` can be decoded\nwith the decodeURIComponent function.",
                "type": "Boolean"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 1353,
            "description": "Parses an escaped url query string into key-value pairs.",
            "return": {
                "description": "",
                "type": "Object.<string,boolean|Array>"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 1401,
            "description": "We need our custom method because encodeURIComponent is too aggressive and doesn't follow\nhttp://www.ietf.org/rfc/rfc3986.txt with regards to the character set (pchar) allowed in path\nsegments:\n   segment       = *pchar\n   pchar         = unreserved / pct-encoded / sub-delims / \":\" / \"@\"\n   pct-encoded   = \"%\" HEXDIG HEXDIG\n   unreserved    = ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\"\n   sub-delims    = \"!\" / \"$\" / \"&\" / \"'\" / \"(\" / \")\"\n                    / \"*\" / \"+\" / \",\" / \";\" / \"=\"",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 1420,
            "description": "This method is intended for encoding *key* or *value* parts of query component. We need a custom\nmethod because encodeURIComponent is too aggressive and encodes stuff that doesn't have to be\nencoded per http://tools.ietf.org/html/rfc3986:\n   query       = *( pchar / \"/\" / \"?\" )\n   pchar         = unreserved / pct-encoded / sub-delims / \":\" / \"@\"\n   unreserved    = ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\"\n   pct-encoded   = \"%\" HEXDIG HEXDIG\n   sub-delims    = \"!\" / \"$\" / \"&\" / \"'\" / \"(\" / \")\"\n                    / \"*\" / \"+\" / \",\" / \";\" / \"=\"",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 1820,
            "description": "throw error if the argument is falsy.",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 1840,
            "description": "throw error if the name given is hasOwnProperty",
            "params": [
                {
                    "name": "name",
                    "description": "the name to test",
                    "type": "String"
                },
                {
                    "name": "context",
                    "description": "the context in which the name is used, such as module or directive",
                    "type": "String"
                }
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 1851,
            "description": "Return the value accessible from the object by path. Any undefined traversals are ignored",
            "params": [
                {
                    "name": "obj",
                    "description": "starting object",
                    "type": "Object"
                },
                {
                    "name": "path",
                    "description": "path to traverse",
                    "type": "String"
                },
                {
                    "name": "bindFnToScope",
                    "description": "",
                    "type": "Boolean",
                    "optional": true,
                    "optdefault": "true"
                }
            ],
            "return": {
                "description": "value as accessible by path",
                "type": "Object"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 1878,
            "description": "Return the DOM siblings between the first and last node in the given array.",
            "params": [
                {
                    "name": "array",
                    "description": "like object",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "the inputted object or a jqLite collection containing the nodes",
                "type": "Array"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 1902,
            "description": "Creates a new object without a prototype. This object is useful for lookup without having to\nguard against prototypically inherited properties via hasOwnProperty.\n\nRelated micro-benchmarks:\n- http://jsperf.com/object-create2\n- http://jsperf.com/proto-map-lookup/2\n- http://jsperf.com/for-in-vs-object-keys2",
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 1948,
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 2020,
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 2023,
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 2026,
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 2031,
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 2254,
            "params": [
                {
                    "name": "provider",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "method",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "insertMethod",
                    "description": "",
                    "type": "String="
                }
            ],
            "return": {
                "description": "",
                "type": "angular.Module"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 2268,
            "params": [
                {
                    "name": "provider",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "method",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "angular.Module"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 2719,
            "description": "Converts snake_case to camelCase.\nAlso there is special case for Moz prefix starting with upper case letter.",
            "params": [
                {
                    "name": "name",
                    "description": "Name to normalize"
                }
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 3295,
            "description": "Properties: writes return selection, reads return first value",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 3621,
            "description": "chaining functions",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 3667,
            "description": "Computes a hash of an 'obj'.\nHash of a:\n string is string\n number is number as string\n object is either result of calling $$hashKey function on the object or uniquely generated id,\n        that is also assigned to the $$hashKey property of the object.",
            "params": [
                {
                    "name": "obj",
                    "description": ""
                }
            ],
            "return": {
                "description": "hash string such that the same input will have the same hash string.\n        The resulting string key is in 'type:hashKey' format.",
                "type": "String"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 3699,
            "description": "HashMap which can use objects as keys",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 3712,
            "description": "Store key value pair",
            "params": [
                {
                    "name": "key",
                    "description": "key to store can be any type"
                },
                {
                    "name": "value",
                    "description": "value to store can be any type"
                }
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 3721,
            "params": [
                {
                    "name": "key",
                    "description": ""
                }
            ],
            "return": {
                "description": "the value for the key",
                "type": "Object"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 3729,
            "description": "Remove the key/value pair",
            "params": [
                {
                    "name": "key",
                    "description": ""
                }
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 3800,
            "ngdoc": "module",
            "name": "auto",
            "description": "Implicit module which gets automatically added to each {@link auto.$injector $injector}.",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 3868,
            "ngdoc": "service",
            "name": "$injector",
            "description": "`$injector` is used to retrieve object instances as defined by\n{@link auto.$provide provider}, instantiate types, invoke methods,\nand load modules.\n\nThe following always holds true:\n\n```js\n  var $injector = angular.injector();\n  expect($injector.get('$injector')).toBe($injector);\n  expect($injector.invoke(function($injector) {\n    return $injector;\n  })).toBe($injector);\n```\n\n# Injection Function Annotation\n\nJavaScript does not have annotations, and annotations are needed for dependency injection. The\nfollowing are all valid ways of annotating function with injection arguments and are equivalent.\n\n```js\n  // inferred (only works if code not minified/obfuscated)\n  $injector.invoke(function(serviceA){});\n\n  // annotated\n  function explicit(serviceA) {};\n  explicit.$inject = ['serviceA'];\n  $injector.invoke(explicit);\n\n  // inline\n  $injector.invoke(['serviceA', function(serviceA){}]);\n```\n\n## Inference\n\nIn JavaScript calling `toString()` on a function returns the function definition. The definition\ncan then be parsed and the function arguments can be extracted. This method of discovering\nannotations is disallowed when the injector is in strict mode.\n*NOTE:* This does not work with minification, and obfuscation tools since these tools change the\nargument names.\n\n## `$inject` Annotation\nBy adding an `$inject` property onto a function the injection parameters can be specified.\n\n## Inline\nAs an array of injection names, where the last item in the array is the function to call.",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 3921,
            "ngdoc": "method",
            "name": "$injector#get",
            "description": "Return an instance of the service.",
            "params": [
                {
                    "name": "name",
                    "description": "The name of the instance to retrieve.",
                    "type": "String"
                },
                {
                    "name": "caller",
                    "description": "An optional string to provide the origin of the function call for error messages.",
                    "type": "String="
                }
            ],
            "return": {
                "description": "The instance.",
                "type": "*"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 3933,
            "ngdoc": "method",
            "name": "$injector#invoke",
            "description": "Invoke the method and supply the method arguments from the `$injector`.",
            "params": [
                {
                    "name": "fn",
                    "description": "The injectable function to invoke. Function parameters are\n  injected according to the {@link guide/di $inject Annotation} rules.",
                    "type": "Function|Array.<string|Function>"
                },
                {
                    "name": "self",
                    "description": "The `this` for the invoked method.",
                    "type": "Object="
                },
                {
                    "name": "locals",
                    "description": "Optional object. If preset then any argument names are read from this\n                        object first, before the `$injector` is consulted.",
                    "type": "Object="
                }
            ],
            "return": {
                "description": "the value returned by the invoked `fn` function.",
                "type": "*"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 3948,
            "ngdoc": "method",
            "name": "$injector#has",
            "description": "Allows the user to query if the particular service exists.",
            "params": [
                {
                    "name": "name",
                    "description": "Name of the service to query.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "`true` if injector has given service.",
                "type": "Boolean"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 3959,
            "ngdoc": "method",
            "name": "$injector#instantiate",
            "description": "Create a new instance of JS type. The method takes a constructor function, invokes the new\noperator, and supplies all of the arguments to the constructor function as specified by the\nconstructor annotation.",
            "params": [
                {
                    "name": "Type",
                    "description": "Annotated constructor function.",
                    "type": "Function"
                },
                {
                    "name": "locals",
                    "description": "Optional object. If preset then any argument names are read from this\nobject first, before the `$injector` is consulted.",
                    "type": "Object="
                }
            ],
            "return": {
                "description": "new instance of `Type`.",
                "type": "Object"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 3973,
            "ngdoc": "method",
            "name": "$injector#annotate",
            "description": "Returns an array of service names which the function is requesting for injection. This API is\nused by the injector to determine which services need to be injected into the function when the\nfunction is invoked. There are three ways in which the function can be annotated with the needed\ndependencies.\n\n# Argument names\n\nThe simplest form is to extract the dependencies from the arguments of the function. This is done\nby converting the function into a string using `toString()` method and extracting the argument\nnames.\n```js\n  // Given\n  function MyController($scope, $route) {\n    // ...\n  }\n\n  // Then\n  expect(injector.annotate(MyController)).toEqual(['$scope', '$route']);\n```\n\nYou can disallow this method by using strict injection mode.\n\nThis method does not work with code minification / obfuscation. For this reason the following\nannotation strategies are supported.\n\n# The `$inject` property\n\nIf a function has an `$inject` property and its value is an array of strings, then the strings\nrepresent names of services to be injected into the function.\n```js\n  // Given\n  var MyController = function(obfuscatedScope, obfuscatedRoute) {\n    // ...\n  }\n  // Define function dependencies\n  MyController['$inject'] = ['$scope', '$route'];\n\n  // Then\n  expect(injector.annotate(MyController)).toEqual(['$scope', '$route']);\n```\n\n# The array notation\n\nIt is often desirable to inline Injected functions and that's when setting the `$inject` property\nis very inconvenient. In these situations using the array notation to specify the dependencies in\na way that survives minification is a better choice:\n\n```js\n  // We wish to write this (not minification / obfuscation safe)\n  injector.invoke(function($compile, $rootScope) {\n    // ...\n  });\n\n  // We are forced to write break inlining\n  var tmpFn = function(obfuscatedCompile, obfuscatedRootScope) {\n    // ...\n  };\n  tmpFn.$inject = ['$compile', '$rootScope'];\n  injector.invoke(tmpFn);\n\n  // To better support inline function the inline annotation is supported\n  injector.invoke(['$compile', '$rootScope', function(obfCompile, obfRootScope) {\n    // ...\n  }]);\n\n  // Therefore\n  expect(injector.annotate(\n     ['$compile', '$rootScope', function(obfus_$compile, obfus_$rootScope) {}])\n   ).toEqual(['$compile', '$rootScope']);\n```",
            "params": [
                {
                    "name": "fn",
                    "description": "Function for which dependent service names need to\nbe retrieved as described above.",
                    "type": "Function|Array.<string|Function>"
                },
                {
                    "name": "strictDi",
                    "description": "Disallow argument name annotation inference.",
                    "type": "Boolean=",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "return": {
                "description": "The names of the services which the function requires.",
                "type": "Array.<string>"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 4060,
            "ngdoc": "service",
            "name": "$provide",
            "description": "The {@link auto.$provide $provide} service has a number of methods for registering components\nwith the {@link auto.$injector $injector}. Many of these functions are also exposed on\n{@link angular.Module}.\n\nAn Angular **service** is a singleton object created by a **service factory**.  These **service\nfactories** are functions which, in turn, are created by a **service provider**.\nThe **service providers** are constructor functions. When instantiated they must contain a\nproperty called `$get`, which holds the **service factory** function.\n\nWhen you request a service, the {@link auto.$injector $injector} is responsible for finding the\ncorrect **service provider**, instantiating it and then calling its `$get` **service factory**\nfunction to get the instance of the **service**.\n\nOften services have no configuration options and there is no need to add methods to the service\nprovider.  The provider will be no more than a constructor function with a `$get` property. For\nthese cases the {@link auto.$provide $provide} service has additional helper methods to register\nservices without specifying a provider.\n\n* {@link auto.$provide#provider provider(provider)} - registers a **service provider** with the\n    {@link auto.$injector $injector}\n* {@link auto.$provide#constant constant(obj)} - registers a value/object that can be accessed by\n    providers and services.\n* {@link auto.$provide#value value(obj)} - registers a value/object that can only be accessed by\n    services, not providers.\n* {@link auto.$provide#factory factory(fn)} - registers a service **factory function**, `fn`,\n    that will be wrapped in a **service provider** object, whose `$get` property will contain the\n    given factory function.\n* {@link auto.$provide#service service(class)} - registers a **constructor function**, `class`\n    that will be wrapped in a **service provider** object, whose `$get` property will instantiate\n     a new object using the given constructor function.\n\nSee the individual methods for more information and examples.",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 4100,
            "ngdoc": "method",
            "name": "$provide#provider",
            "description": "Register a **provider function** with the {@link auto.$injector $injector}. Provider functions\nare constructor functions, whose instances are responsible for \"providing\" a factory for a\nservice.\n\nService provider names start with the name of the service they provide followed by `Provider`.\nFor example, the {@link ng.$log $log} service has a provider called\n{@link ng.$logProvider $logProvider}.\n\nService provider objects can have additional methods which allow configuration of the provider\nand its service. Importantly, you can configure what kind of service is created by the `$get`\nmethod, or how that service will act. For example, the {@link ng.$logProvider $logProvider} has a\nmethod {@link ng.$logProvider#debugEnabled debugEnabled}\nwhich lets you specify whether the {@link ng.$log $log} service will log debug messages to the\nconsole or not.",
            "params": [
                {
                    "name": "name",
                    "description": "The name of the instance. NOTE: the provider will be available under `name +\n                       'Provider'` key.",
                    "type": "String"
                },
                {
                    "name": "provider",
                    "description": "If the provider is:\n\n  - `Object`: then it should have a `$get` method. The `$get` method will be invoked using\n    {@link auto.$injector#invoke $injector.invoke()} when an instance needs to be created.\n  - `Constructor`: a new instance of the provider will be created using\n    {@link auto.$injector#instantiate $injector.instantiate()}, then treated as `object`.",
                    "type": "(Object|function())"
                }
            ],
            "return": {
                "description": "registered provider instance",
                "type": "Object"
            },
            "example": [
                "\n\nThe following example shows how to create a simple event tracking service and register it using\n{@link auto.$provide#provider $provide.provider()}.\n\n```js\n // Define the eventTracker provider\n function EventTrackerProvider() {\n   var trackingUrl = '/track';\n\n   // A provider method for configuring where the tracked events should been saved\n   this.setTrackingUrl = function(url) {\n     trackingUrl = url;\n   };\n\n   // The service factory function\n   this.$get = ['$http', function($http) {\n     var trackedEvents = {};\n     return {\n       // Call this to track an event\n       event: function(event) {\n         var count = trackedEvents[event] || 0;\n         count += 1;\n         trackedEvents[event] = count;\n         return count;\n       },\n       // Call this to save the tracked events to the trackingUrl\n       save: function() {\n         $http.post(trackingUrl, trackedEvents);\n       }\n     };\n   }];\n }\n\n describe('eventTracker', function() {\n   var postSpy;\n\n   beforeEach(module(function($provide) {\n     // Register the eventTracker provider\n     $provide.provider('eventTracker', EventTrackerProvider);\n   }));\n\n   beforeEach(module(function(eventTrackerProvider) {\n     // Configure eventTracker provider\n     eventTrackerProvider.setTrackingUrl('/custom-track');\n   }));\n\n   it('tracks events', inject(function(eventTracker) {\n     expect(eventTracker.event('login')).toEqual(1);\n     expect(eventTracker.event('login')).toEqual(2);\n   }));\n\n   it('saves to the tracking url', inject(function(eventTracker, $http) {\n     postSpy = spyOn($http, 'post');\n     eventTracker.event('login');\n     eventTracker.save();\n     expect(postSpy).toHaveBeenCalled();\n     expect(postSpy.mostRecentCall.args[0]).not.toEqual('/track');\n     expect(postSpy.mostRecentCall.args[0]).toEqual('/custom-track');\n     expect(postSpy.mostRecentCall.args[1]).toEqual({ 'login': 1 });\n   }));\n });\n```"
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 4196,
            "ngdoc": "method",
            "name": "$provide#factory",
            "description": "Register a **service factory**, which will be called to return the service instance.\nThis is short for registering a service where its provider consists of only a `$get` property,\nwhich is the given service factory function.\nYou should use {@link auto.$provide#factory $provide.factory(getFn)} if you do not need to\nconfigure your service in a provider.",
            "params": [
                {
                    "name": "name",
                    "description": "The name of the instance.",
                    "type": "String"
                },
                {
                    "name": "$getFn",
                    "description": "The injectable $getFn for the instance creation.\n                     Internally this is a short hand for `$provide.provider(name, {$get: $getFn})`.",
                    "type": "Function|Array.<string|Function>"
                }
            ],
            "return": {
                "description": "registered provider instance",
                "type": "Object"
            },
            "example": [
                "\nHere is an example of registering a service\n```js\n  $provide.factory('ping', ['$http', function($http) {\n    return function ping() {\n      return $http.send('/ping');\n    };\n  }]);\n```\nYou would then inject and use this service like this:\n```js\n  someModule.controller('Ctrl', ['ping', function(ping) {\n    ping();\n  }]);\n```"
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 4230,
            "ngdoc": "method",
            "name": "$provide#service",
            "description": "Register a **service constructor**, which will be invoked with `new` to create the service\ninstance.\nThis is short for registering a service where its provider's `$get` property is a factory\nfunction that returns an instance instantiated by the injector from the service constructor\nfunction.\n\nInternally it looks a bit like this:\n\n```\n{\n  $get: function() {\n    return $injector.instantiate(constructor);\n  }\n}\n```\n\n\nYou should use {@link auto.$provide#service $provide.service(class)} if you define your service\nas a type/class.",
            "params": [
                {
                    "name": "name",
                    "description": "The name of the instance.",
                    "type": "String"
                },
                {
                    "name": "constructor",
                    "description": "An injectable class (constructor function)\n    that will be instantiated.",
                    "type": "Function|Array.<string|Function>"
                }
            ],
            "return": {
                "description": "registered provider instance",
                "type": "Object"
            },
            "example": [
                "\nHere is an example of registering a service using\n{@link auto.$provide#service $provide.service(class)}.\n```js\n  var Ping = function($http) {\n    this.$http = $http;\n  };\n\n  Ping.$inject = ['$http'];\n\n  Ping.prototype.send = function() {\n    return this.$http.get('/ping');\n  };\n  $provide.service('ping', Ping);\n```\nYou would then inject and use this service like this:\n```js\n  someModule.controller('Ctrl', ['ping', function(ping) {\n    ping.send();\n  }]);\n```"
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 4284,
            "ngdoc": "method",
            "name": "$provide#value",
            "description": "Register a **value service** with the {@link auto.$injector $injector}, such as a string, a\nnumber, an array, an object or a function.  This is short for registering a service where its\nprovider's `$get` property is a factory function that takes no arguments and returns the **value\nservice**.\n\nValue services are similar to constant services, except that they cannot be injected into a\nmodule configuration function (see {@link angular.Module#config}) but they can be overridden by\nan Angular\n{@link auto.$provide#decorator decorator}.",
            "params": [
                {
                    "name": "name",
                    "description": "The name of the instance.",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "The value.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "registered provider instance",
                "type": "Object"
            },
            "example": [
                "\nHere are some examples of creating value services.\n```js\n  $provide.value('ADMIN_USER', 'admin');\n\n  $provide.value('RoleLookup', { admin: 0, writer: 1, reader: 2 });\n\n  $provide.value('halfOf', function(value) {\n    return value / 2;\n  });\n```"
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 4317,
            "ngdoc": "method",
            "name": "$provide#constant",
            "description": "Register a **constant service**, such as a string, a number, an array, an object or a function,\nwith the {@link auto.$injector $injector}. Unlike {@link auto.$provide#value value} it can be\ninjected into a module configuration function (see {@link angular.Module#config}) and it cannot\nbe overridden by an Angular {@link auto.$provide#decorator decorator}.",
            "params": [
                {
                    "name": "name",
                    "description": "The name of the constant.",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "The constant value.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "registered instance",
                "type": "Object"
            },
            "example": [
                "\nHere a some examples of creating constants:\n```js\n  $provide.constant('SHARD_HEIGHT', 306);\n\n  $provide.constant('MY_COLOURS', ['red', 'blue', 'grey']);\n\n  $provide.constant('double', function(value) {\n    return value * 2;\n  });\n```"
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 4345,
            "ngdoc": "method",
            "name": "$provide#decorator",
            "description": "Register a **service decorator** with the {@link auto.$injector $injector}. A service decorator\nintercepts the creation of a service, allowing it to override or modify the behavior of the\nservice. The object returned by the decorator may be the original service, or a new service\nobject which replaces or wraps and delegates to the original service.",
            "params": [
                {
                    "name": "name",
                    "description": "The name of the service to decorate.",
                    "type": "String"
                },
                {
                    "name": "decorator",
                    "description": "This function will be invoked when the service needs to be\n   instantiated and should return the decorated service instance. The function is called using\n   the {@link auto.$injector#invoke injector.invoke} method and is therefore fully injectable.\n   Local injection arguments:\n\n   * `$delegate` - The original service instance, which can be monkey patched, configured,\n     decorated or delegated to.",
                    "type": "Function|Array.<string|Function>"
                }
            ],
            "example": [
                "\nHere we decorate the {@link ng.$log $log} service to convert warnings to errors by intercepting\ncalls to {@link ng.$log#error $log.warn()}.\n```js\n  $provide.decorator('$log', ['$delegate', function($delegate) {\n    $delegate.warn = $delegate.error;\n    return $delegate;\n  }]);\n```"
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 4637,
            "ngdoc": "provider",
            "name": "$anchorScrollProvider",
            "description": "Use `$anchorScrollProvider` to disable automatic scrolling whenever\n{@link ng.$location#hash $location.hash()} changes.",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 4649,
            "ngdoc": "method",
            "name": "$anchorScrollProvider#disableAutoScrolling",
            "description": "By default, {@link ng.$anchorScroll $anchorScroll()} will automatically detect changes to\n{@link ng.$location#hash $location.hash()} and scroll to the element matching the new hash.<br />\nUse this method to disable automatic scrolling.\n\nIf automatic scrolling is disabled, one must explicitly call\n{@link ng.$anchorScroll $anchorScroll()} in order to scroll to the element related to the\ncurrent hash.",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 4666,
            "ngdoc": "service",
            "name": "yOffset!~YUIDOC_LINE~!If set, specifies a vertical scroll-offset. This is often useful when there are fixed!~YUIDOC_LINE~!positioned elements at the top of the page, such as navbars, headers etc.!~YUIDOC_LINE~!!~YUIDOC_LINE~!`yOffset` can be specified in various ways:!~YUIDOC_LINE~!- **number**: A fixed number of pixels to be used as offset.<br /><br />!~YUIDOC_LINE~!- **function**: A getter function called everytime `$anchorScroll()` is executed. Must return!~YUIDOC_LINE~!  a number representing the offset (in pixels).<br /><br />!~YUIDOC_LINE~!- **jqLite**: A jqLite/jQuery element to be used for specifying the offset. The distance from!~YUIDOC_LINE~!  the top of the page to the element's bottom will be used as offset.<br />!~YUIDOC_LINE~!  **Note**: The element will be taken into account only as long as its `position` is set to!~YUIDOC_LINE~!  `fixed`. This option is useful, when dealing with responsive navbars/headers that adjust!~YUIDOC_LINE~!  their height and/or positioning according to the viewport's size.!~YUIDOC_LINE~!!~YUIDOC_LINE~!<br />!~YUIDOC_LINE~!<div class=\"alert alert-warning\">!~YUIDOC_LINE~!In order for `yOffset` to work properly, scrolling should take place on the document's root and!~YUIDOC_LINE~!not some child element.!~YUIDOC_LINE~!</div>",
            "kind": "function",
            "requires": [
                "$window",
                "$location",
                "$rootScope"
            ],
            "description": "When called, it scrolls to the element related to the specified `hash` or (if omitted) to the\ncurrent value of {@link ng.$location#hash $location.hash()}, according to the rules specified\nin the\n[HTML5 spec](http://www.w3.org/html/wg/drafts/html/master/browsers.html#the-indicated-part-of-the-document).\n\nIt also watches the {@link ng.$location#hash $location.hash()} and automatically scrolls to\nmatch any anchor whenever it changes. This can be disabled by calling\n{@link ng.$anchorScrollProvider#disableAutoScrolling $anchorScrollProvider.disableAutoScrolling()}.\n\nAdditionally, you can use its {@link ng.$anchorScroll#yOffset yOffset} property to specify a\nvertical scroll-offset (either fixed or dynamic).",
            "itemtype": "property",
            "type": "(number|function|jqLite)",
            "example": [
                "\n    <example module=\"anchorScrollExample\">\n      <file name=\"index.html\">\n        <div id=\"scrollArea\" ng-controller=\"ScrollController\">\n          <a ng-click=\"gotoBottom()\">Go to bottom</a>\n          <a id=\"bottom\"></a> You're at the bottom!\n        </div>\n      </file>\n      <file name=\"script.js\">\n        angular.module('anchorScrollExample', [])\n          .controller('ScrollController', ['$scope', '$location', '$anchorScroll',\n            function ($scope, $location, $anchorScroll) {\n              $scope.gotoBottom = function() {\n                // set the location.hash to the id of\n                // the element you wish to scroll to.\n                $location.hash('bottom');\n\n                // call $anchorScroll()\n                $anchorScroll();\n              };\n            }]);\n      </file>\n      <file name=\"style.css\">\n        #scrollArea {\n          height: 280px;\n          overflow: auto;\n        }\n\n        #bottom {\n          display: block;\n          margin-top: 2000px;\n        }\n      </file>\n    </example>\n\n<hr />\nThe example below illustrates the use of a vertical scroll-offset (specified as a fixed value).\nSee {@link ng.$anchorScroll#yOffset $anchorScroll.yOffset} for more details.",
                "\n    <example module=\"anchorScrollOffsetExample\">\n      <file name=\"index.html\">\n        <div class=\"fixed-header\" ng-controller=\"headerCtrl\">\n          <a href=\"\" ng-click=\"gotoAnchor(x)\" ng-repeat=\"x in [1,2,3,4,5]\">\n            Go to anchor {{x}}\n          </a>\n        </div>\n        <div id=\"anchor{{x}}\" class=\"anchor\" ng-repeat=\"x in [1,2,3,4,5]\">\n          Anchor {{x}} of 5\n        </div>\n      </file>\n      <file name=\"script.js\">\n        angular.module('anchorScrollOffsetExample', [])\n          .run(['$anchorScroll', function($anchorScroll) {\n            $anchorScroll.yOffset = 50;   // always scroll by 50 extra pixels\n          }])\n          .controller('headerCtrl', ['$anchorScroll', '$location', '$scope',\n            function ($anchorScroll, $location, $scope) {\n              $scope.gotoAnchor = function(x) {\n                var newHash = 'anchor' + x;\n                if ($location.hash() !== newHash) {\n                  // set the $location.hash to `newHash` and\n                  // $anchorScroll will automatically scroll to it\n                  $location.hash('anchor' + x);\n                } else {\n                  // call $anchorScroll() explicitly,\n                  // since $location.hash hasn't changed\n                  $anchorScroll();\n                }\n              };\n            }\n          ]);\n      </file>\n      <file name=\"style.css\">\n        body {\n          padding-top: 50px;\n        }\n\n        .anchor {\n          border: 2px dashed DarkOrchid;\n          padding: 10px 10px 200px 10px;\n        }\n\n        .fixed-header {\n          background-color: rgba(0, 0, 0, 0.2);\n          height: 50px;\n          position: fixed;\n          top: 0; left: 0; right: 0;\n        }\n\n        .fixed-header > a {\n          display: inline-block;\n          margin: 5px 15px;\n        }\n      </file>\n    </example>"
            ],
            "class": "",
            "module": "ng",
            "subprops": [
                {
                    "name": "hash",
                    "description": "The hash specifying the element to scroll to. If omitted, the value of\n                      {@link ng.$location#hash $location.hash()} will be used.",
                    "type": "String="
                }
            ]
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 5063,
            "ngdoc": "provider",
            "name": "$animateProvider",
            "description": "Default implementation of $animate that doesn't perform any animations, instead just\nsynchronously performs DOM updates and resolves the returned runner promise.\n\nIn order to enable animations the `ngAnimate` module has to be loaded.\n\nTo see the functional implementation check out `src/ngAnimate/animate.js`.",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 5080,
            "ngdoc": "method",
            "name": "$animateProvider#register",
            "description": "Registers a new injectable animation factory function. The factory function produces the\nanimation object which contains callback functions for each event that is expected to be\nanimated.\n\n  * `eventFn`: `function(element, ... , doneFunction, options)`\n  The element to animate, the `doneFunction` and the options fed into the animation. Depending\n  on the type of animation additional arguments will be injected into the animation function. The\n  list below explains the function signatures for the different animation methods:\n\n  - setClass: function(element, addedClasses, removedClasses, doneFunction, options)\n  - addClass: function(element, addedClasses, doneFunction, options)\n  - removeClass: function(element, removedClasses, doneFunction, options)\n  - enter, leave, move: function(element, doneFunction, options)\n  - animate: function(element, fromStyles, toStyles, doneFunction, options)\n\n  Make sure to trigger the `doneFunction` once the animation is fully complete.\n\n```js\n  return {\n    //enter, leave, move signature\n    eventFn : function(element, done, options) {\n      //code to run the animation\n      //once complete, then run done()\n      return function endFunction(wasCancelled) {\n        //code to cancel the animation\n      }\n    }\n  }\n```",
            "params": [
                {
                    "name": "name",
                    "description": "The name of the animation (this is what the class-based CSS value will be compared to).",
                    "type": "String"
                },
                {
                    "name": "factory",
                    "description": "The factory function that will be executed to return the animation\n                          object.",
                    "type": "Function"
                }
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 5129,
            "ngdoc": "method",
            "name": "$animateProvider#classNameFilter",
            "description": "Sets and/or returns the CSS class regular expression that is checked when performing\nan animation. Upon bootstrap the classNameFilter value is not set at all and will\ntherefore enable $animate to attempt to perform an animation on any element that is triggered.\nWhen setting the `classNameFilter` value, animations will only be performed on elements\nthat successfully match the filter expression. This in turn can boost performance\nfor low-powered devices as well as applications containing a lot of structural operations.",
            "params": [
                {
                    "name": "expression",
                    "description": "The className expression which will be checked against all animations",
                    "type": "RegExp="
                }
            ],
            "return": {
                "description": "The current CSS className expression value. If null then there is no expression value",
                "type": "RegExp"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 5171,
            "ngdoc": "service",
            "name": "$animate",
            "description": "The $animate service exposes a series of DOM utility methods that provide support\nfor animation hooks. The default behavior is the application of DOM operations, however,\nwhen an animation is detected (and animations are enabled), $animate will do the heavy lifting\nto ensure that animation runs with the triggered DOM operation.\n\nBy default $animate doesn't trigger any animations. This is because the `ngAnimate` module isn't\nincluded and only when it is active then the animation hooks that `$animate` triggers will be\nfunctional. Once active then all structural `ng-` directives will trigger animations as they perform\ntheir DOM-related operations (enter, leave and move). Other directives such as `ngClass`,\n`ngShow`, `ngHide` and `ngMessages` also provide support for animations.\n\nIt is recommended that the`$animate` service is always used when executing DOM-related procedures within directives.\n\nTo learn more about enabling animation support, click here to visit the\n{@link ngAnimate ngAnimate module page}.",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 5194,
            "ngdoc": "method",
            "name": "$animate#on",
            "kind": "function",
            "description": "Sets up an event listener to fire whenever the animation event (enter, leave, move, etc...)\n    has fired on the given element or among any of its children. Once the listener is fired, the provided callback\n    is fired with the following params:\n```js\n $animate.on('enter', container,\n    function callback(element, phase) {\n      // cool we detected an enter animation within the container\n    }\n );\n ```",
            "params": [
                {
                    "name": "event",
                    "description": "the animation event that will be captured (e.g. enter, leave, move, addClass, removeClass, etc...)",
                    "type": "String"
                },
                {
                    "name": "container",
                    "description": "the container element that will capture each of the animation events that are fired on itself\n     as well as among its children",
                    "type": "DOMElement"
                },
                {
                    "name": "callback",
                    "description": "the callback function that will be fired when the listener is triggered\nThe arguments present in the callback function are:\n * `element` - The captured DOM element that the animation was fired on.\n * `phase` - The phase of the animation. The two possible phases are **start** (when the animation starts) and **close** (when it ends).",
                    "type": "Function"
                }
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 5222,
            "ngdoc": "method",
            "name": "$animate#off",
            "kind": "function",
            "description": "Deregisters an event listener based on the event which has been associated with the provided element. This method\n can be used in three different ways depending on the arguments:\n```js\n // remove all the animation event listeners listening for `enter`\n $animate.off('enter');\n// remove all the animation event listeners listening for `enter` on the given element and its children\n $animate.off('enter', container);\n// remove the event listener function provided by `callback` that is set\n // to listen for `enter` on the given `container` as well as its children\n $animate.off('enter', container, callback);\n ```",
            "params": [
                {
                    "name": "event",
                    "description": "the animation event (e.g. enter, leave, move, addClass, removeClass, etc...)",
                    "type": "String"
                },
                {
                    "name": "container",
                    "description": "the container element the event listener was placed on",
                    "type": "DOMElement="
                },
                {
                    "name": "callback",
                    "description": "the callback function that was registered as the listener",
                    "type": "Function="
                }
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 5248,
            "ngdoc": "method",
            "name": "$animate#pin",
            "kind": "function",
            "description": "Associates the provided element with a host parent element to allow the element to be animated even if it exists\n   outside of the DOM structure of the Angular application. By doing so, any animation triggered via `$animate` can be issued on the\n   element despite being outside the realm of the application or within another application. Say for example if the application\n   was bootstrapped on an element that is somewhere inside of the `<body>` tag, but we wanted to allow for an element to be situated\n   as a direct child of `document.body`, then this can be achieved by pinning the element via `$animate.pin(element)`. Keep in mind\n   that calling `$animate.pin(element, parentElement)` will not actually insert into the DOM anywhere; it will just create the association.\n\n   Note that this feature is only active when the `ngAnimate` module is used.",
            "params": [
                {
                    "name": "element",
                    "description": "the external element that will be pinned",
                    "type": "DOMElement"
                },
                {
                    "name": "parentElement",
                    "description": "the host parent element that will be associated with the external element",
                    "type": "DOMElement"
                }
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 5266,
            "ngdoc": "method",
            "name": "$animate#enabled",
            "kind": "function",
            "description": "Used to get and set whether animations are enabled or not on the entire application or on an element and its children. This\n function can be called in four ways:\n```js\n // returns true or false\n $animate.enabled();\n// changes the enabled state for all animations\n $animate.enabled(false);\n $animate.enabled(true);\n// returns true or false if animations are enabled for an element\n $animate.enabled(element);\n// changes the enabled state for an element and its children\n $animate.enabled(element, true);\n $animate.enabled(element, false);\n ```",
            "params": [
                {
                    "name": "element",
                    "description": "the element that will be considered for checking/setting the enabled state",
                    "type": "DOMElement="
                },
                {
                    "name": "enabled",
                    "description": "whether or not the animations will be enabled for the element",
                    "type": "Boolean="
                }
            ],
            "return": {
                "description": "whether or not animations are enabled",
                "type": "Boolean"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 5297,
            "ngdoc": "method",
            "name": "$animate#cancel",
            "kind": "function",
            "description": "Cancels the provided animation.",
            "params": [
                {
                    "name": "animationPromise",
                    "description": "The animation promise that is returned when an animation is started.",
                    "type": "Promise"
                }
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 5309,
            "ngdoc": "method",
            "name": "$animate#enter",
            "kind": "function",
            "description": "Inserts the element into the DOM either after the `after` element (if provided) or\n   as the first child within the `parent` element and then triggers an animation.\n   A promise is returned that will be resolved during the next digest once the animation\n   has completed.",
            "params": [
                {
                    "name": "element",
                    "description": "the element which will be inserted into the DOM",
                    "type": "DOMElement"
                },
                {
                    "name": "parent",
                    "description": "the parent element which will append the element as\n   a child (so long as the after element is not present)",
                    "type": "DOMElement"
                },
                {
                    "name": "after",
                    "description": "the sibling element after which the element will be appended",
                    "type": "DOMElement="
                },
                {
                    "name": "options",
                    "description": "an optional collection of options/styles that will be applied to the element",
                    "type": "Object="
                }
            ],
            "return": {
                "description": "the animation callback promise",
                "type": "Promise"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 5335,
            "ngdoc": "method",
            "name": "$animate#move",
            "kind": "function",
            "description": "Inserts (moves) the element into its new position in the DOM either after\n   the `after` element (if provided) or as the first child within the `parent` element\n   and then triggers an animation. A promise is returned that will be resolved\n   during the next digest once the animation has completed.",
            "params": [
                {
                    "name": "element",
                    "description": "the element which will be moved into the new DOM position",
                    "type": "DOMElement"
                },
                {
                    "name": "parent",
                    "description": "the parent element which will append the element as\n   a child (so long as the after element is not present)",
                    "type": "DOMElement"
                },
                {
                    "name": "after",
                    "description": "the sibling element after which the element will be appended",
                    "type": "DOMElement="
                },
                {
                    "name": "options",
                    "description": "an optional collection of options/styles that will be applied to the element",
                    "type": "Object="
                }
            ],
            "return": {
                "description": "the animation callback promise",
                "type": "Promise"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 5361,
            "ngdoc": "method",
            "name": "$animate#leave",
            "kind": "function",
            "description": "Triggers an animation and then removes the element from the DOM.\nWhen the function is called a promise is returned that will be resolved during the next\ndigest once the animation has completed.",
            "params": [
                {
                    "name": "element",
                    "description": "the element which will be removed from the DOM",
                    "type": "DOMElement"
                },
                {
                    "name": "options",
                    "description": "an optional collection of options/styles that will be applied to the element",
                    "type": "Object="
                }
            ],
            "return": {
                "description": "the animation callback promise",
                "type": "Promise"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 5380,
            "ngdoc": "method",
            "name": "$animate#addClass",
            "kind": "function",
            "description": "Triggers an addClass animation surrounding the addition of the provided CSS class(es). Upon\n  execution, the addClass operation will only be handled after the next digest and it will not trigger an\n  animation if element already contains the CSS class or if the class is removed at a later step.\n  Note that class-based animations are treated differently compared to structural animations\n  (like enter, move and leave) since the CSS classes may be added/removed at different points\n  depending if CSS or JavaScript animations are used.",
            "params": [
                {
                    "name": "element",
                    "description": "the element which the CSS classes will be applied to",
                    "type": "DOMElement"
                },
                {
                    "name": "className",
                    "description": "the CSS class(es) that will be added (multiple classes are separated via spaces)",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "an optional collection of options/styles that will be applied to the element",
                    "type": "Object="
                }
            ],
            "return": {
                "description": "the animation callback promise",
                "type": "Promise"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 5404,
            "ngdoc": "method",
            "name": "$animate#removeClass",
            "kind": "function",
            "description": "Triggers a removeClass animation surrounding the removal of the provided CSS class(es). Upon\n  execution, the removeClass operation will only be handled after the next digest and it will not trigger an\n  animation if element does not contain the CSS class or if the class is added at a later step.\n  Note that class-based animations are treated differently compared to structural animations\n  (like enter, move and leave) since the CSS classes may be added/removed at different points\n  depending if CSS or JavaScript animations are used.",
            "params": [
                {
                    "name": "element",
                    "description": "the element which the CSS classes will be applied to",
                    "type": "DOMElement"
                },
                {
                    "name": "className",
                    "description": "the CSS class(es) that will be removed (multiple classes are separated via spaces)",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "an optional collection of options/styles that will be applied to the element",
                    "type": "Object="
                }
            ],
            "return": {
                "description": "the animation callback promise",
                "type": "Promise"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 5428,
            "ngdoc": "method",
            "name": "$animate#setClass",
            "kind": "function",
            "description": "Performs both the addition and removal of a CSS classes on an element and (during the process)\n   triggers an animation surrounding the class addition/removal. Much like `$animate.addClass` and\n   `$animate.removeClass`, `setClass` will only evaluate the classes being added/removed once a digest has\n   passed. Note that class-based animations are treated differently compared to structural animations\n   (like enter, move and leave) since the CSS classes may be added/removed at different points\n   depending if CSS or JavaScript animations are used.",
            "params": [
                {
                    "name": "element",
                    "description": "the element which the CSS classes will be applied to",
                    "type": "DOMElement"
                },
                {
                    "name": "add",
                    "description": "the CSS class(es) that will be added (multiple classes are separated via spaces)",
                    "type": "String"
                },
                {
                    "name": "remove",
                    "description": "the CSS class(es) that will be removed (multiple classes are separated via spaces)",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "an optional collection of options/styles that will be applied to the element",
                    "type": "Object="
                }
            ],
            "return": {
                "description": "the animation callback promise",
                "type": "Promise"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 5454,
            "ngdoc": "method",
            "name": "$animate#animate",
            "kind": "function",
            "description": "Performs an inline animation on the element which applies the provided to and from CSS styles to the element.\nIf any detected CSS transition, keyframe or JavaScript matches the provided className value, then the animation will take\non the provided styles. For example, if a transition animation is set for the given classNamem, then the provided `from` and\n`to` styles will be applied alongside the given transition. If the CSS style provided in `from` does not have a corresponding\nstyle in `to`, the style in `from` is applied immediately, and no animation is run.\nIf a JavaScript animation is detected then the provided styles will be given in as function parameters into the `animate`\nmethod (or as part of the `options` parameter):\n\n```js\nngModule.animation('.my-inline-animation', function() {\n  return {\n    animate : function(element, from, to, done, options) {\n      //animation\n      done();\n    }\n  }\n});\n```",
            "params": [
                {
                    "name": "element",
                    "description": "the element which the CSS styles will be applied to",
                    "type": "DOMElement"
                },
                {
                    "name": "from",
                    "description": "the from (starting) CSS styles that will be applied to the element and across the animation.",
                    "type": "Object"
                },
                {
                    "name": "to",
                    "description": "the to (destination) CSS styles that will be applied to the element and across the animation.",
                    "type": "Object"
                },
                {
                    "name": "className",
                    "description": "an optional CSS class that will be applied to the element for the duration of the animation. If\n   this value is left as empty then a CSS class of `ng-inline-animate` will be applied to the element.\n   (Note that if no animation is detected then this value will not be applied to the element.)",
                    "type": "String="
                },
                {
                    "name": "options",
                    "description": "an optional collection of options/styles that will be applied to the element",
                    "type": "Object="
                }
            ],
            "return": {
                "description": "the animation callback promise",
                "type": "Promise"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 5685,
            "ngdoc": "service",
            "name": "$animateCss",
            "kind": "object",
            "description": "This is the core version of `$animateCss`. By default, only when the `ngAnimate` is included,\nthen the `$animateCss` service will actually perform animations.\n\nClick here {@link ngAnimate.$animateCss to read the documentation for $animateCss}.",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 5759,
            "description": "This object has two goals:\n\n- hide all the global state in the browser caused by the window object\n- abstract away all the browser specific features and inconsistencies\n\nFor tests we provide {@link ngMock.$browser mock implementation} of the `$browser`\nservice, which can be used for convenient testing of the application without the interaction with\nthe real browser apis.",
            "name": "$browser",
            "requires": [
                "$log"
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 5774,
            "params": [
                {
                    "name": "window",
                    "description": "The global window object.",
                    "type": "Object"
                },
                {
                    "name": "document",
                    "description": "jQuery wrapped document.",
                    "type": "Object"
                },
                {
                    "name": "$log",
                    "description": "window.console or an object with the same interface.",
                    "type": "Object"
                },
                {
                    "name": "$sniffer",
                    "description": "$sniffer service",
                    "type": "Object"
                }
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 5798,
            "description": "Executes the `fn` function(supports currying) and decrements the `outstandingRequestCallbacks`\ncounter. If the counter reaches 0, all the `outstandingRequestCallbacks` are executed.",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 5824,
            "access": "private",
            "tagname": "Note: this method is used only by scenario runner\nTODO(vojta): prefix this method with $$ ?",
            "params": [
                {
                    "name": "callback",
                    "description": "Function that will be called when no outstanding request",
                    "type": "Function()"
                }
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 5850,
            "name": "$browser#url",
            "description": "GETTER:\nWithout any argument, this method just returns current value of location.href.\n\nSETTER:\nWith at least one argument, this method sets url to new value.\nIf html5 history api supported, pushState/replaceState is used, otherwise\nlocation.href/location.replace is used.\nReturns its own instance to allow chaining\n\nNOTE: this api is intended for use only by the $location service. Please use the\n{@link ng.$location $location service} to change url.",
            "params": [
                {
                    "name": "url",
                    "description": "New url (when used as setter)",
                    "type": "String"
                },
                {
                    "name": "replace",
                    "description": "Should new url replace current history record?",
                    "type": "Boolean="
                },
                {
                    "name": "state",
                    "description": "object to use with pushState/replaceState",
                    "type": "Object="
                }
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 5930,
            "name": "$browser#state",
            "description": "This method is a getter.\n\nReturn history.state or null if history.state is undefined.",
            "return": {
                "description": "state",
                "type": "Object"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 5987,
            "name": "$browser#onUrlChange",
            "description": "Register callback function that will be called, when url changes.\n\nIt's only called when the url is changed from outside of angular:\n- user types different url into address bar\n- user clicks on history (forward/back) button\n- user clicks on a link\n\nIt's not called when url is changed by $browser.url() method\n\nThe listener gets called with new url as parameter.\n\nNOTE: this api is intended for use only by the $location service. Please use the\n{@link ng.$location $location service} to monitor url changes in angular apps.",
            "params": [
                {
                    "name": "listener",
                    "description": "Listener function to be called when url changes.",
                    "type": "Function(string)"
                }
            ],
            "return": {
                "description": "Returns the registered listener fn - handy if the fn is anonymous.",
                "type": "Function(string)"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 6027,
            "access": "private",
            "tagname": "Remove popstate and hashchange handler from window.\n\nNOTE: this api is intended for use only by $rootScope.",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 6037,
            "description": "Checks whether the url has changed outside of Angular.\nNeeds to be exported to be able to check for changes that have been done in sync,\nas hashchange/popstate events fire in async.",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 6048,
            "name": "$browser#baseHref",
            "description": "Returns current <base href>\n(always relative - without domain)",
            "return": {
                "description": "The current base href",
                "type": "String"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 6062,
            "name": "$browser#defer",
            "params": [
                {
                    "name": "fn",
                    "description": "A function, who's execution should be deferred.",
                    "type": "Function()"
                },
                {
                    "name": "delay",
                    "description": "of milliseconds to defer the function execution.",
                    "type": "Number=",
                    "optional": true,
                    "optdefault": "0"
                }
            ],
            "return": {
                "description": "DeferId that can be used to cancel the task via `$browser.defer.cancel()`.",
                "type": "*"
            },
            "description": "Executes a fn asynchronously via `setTimeout(fn, delay)`.\n\nUnlike when calling `setTimeout` directly, in test this function is mocked and instead of using\n`setTimeout` in tests, the fns are queued in an array, which can be programmatically flushed\nvia `$browser.defer.flush()`.",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 6088,
            "name": "$browser#defer.cancel",
            "description": "Cancels a deferred task identified with `deferId`.",
            "params": [
                {
                    "name": "deferId",
                    "description": "Token returned by the `$browser.defer` function.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns `true` if the task hasn't executed yet and was successfully\n                   canceled.",
                "type": "Boolean"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 6117,
            "ngdoc": "service",
            "name": "$cacheFactory",
            "description": "Factory that constructs {@link $cacheFactory.Cache Cache} objects and gives access to\nthem.\n\n```js\n\n var cache = $cacheFactory('cacheId');\n expect($cacheFactory.get('cacheId')).toBe(cache);\n expect($cacheFactory.get('noSuchCacheId')).not.toBeDefined();\n\n cache.put(\"key\", \"value\");\n cache.put(\"another key\", \"another value\");\n\n // We've specified no options on creation\n expect(cache.info()).toEqual({id: 'cacheId', size: 2});\n\n```",
            "params": [
                {
                    "name": "cacheId",
                    "description": "Name or id of the newly created cache.",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "Options object that specifies the cache behavior. Properties:\n\n  - `{number=}` `capacity` — turns the cache into LRU cache.",
                    "type": "Object="
                }
            ],
            "return": {
                "description": "Newly created cache object with the following set of methods:\n\n- `{object}` `info()` — Returns id, size, and options of cache.\n- `{{*}}` `put({string} key, {*} value)` — Puts a new key-value pair into the cache and returns\n  it.\n- `{{*}}` `get({string} key)` — Returns cached value for `key` or undefined for cache miss.\n- `{void}` `remove({string} key)` — Removes a key-value pair from the cache.\n- `{void}` `removeAll()` — Removes all cached values.\n- `{void}` `destroy()` — Removes references to this cache from $cacheFactory.",
                "type": "Object"
            },
            "example": [
                "\n  <example module=\"cacheExampleApp\">\n    <file name=\"index.html\">\n      <div ng-controller=\"CacheController\">\n        <input ng-model=\"newCacheKey\" placeholder=\"Key\">\n        <input ng-model=\"newCacheValue\" placeholder=\"Value\">\n        <button ng-click=\"put(newCacheKey, newCacheValue)\">Cache</button>\n\n        <p ng-if=\"keys.length\">Cached Values</p>\n        <div ng-repeat=\"key in keys\">\n          <span ng-bind=\"key\"></span>\n          <span>: </span>\n          <b ng-bind=\"cache.get(key)\"></b>\n        </div>\n\n        <p>Cache Info</p>\n        <div ng-repeat=\"(key, value) in cache.info()\">\n          <span ng-bind=\"key\"></span>\n          <span>: </span>\n          <b ng-bind=\"value\"></b>\n        </div>\n      </div>\n    </file>\n    <file name=\"script.js\">\n      angular.module('cacheExampleApp', []).\n        controller('CacheController', ['$scope', '$cacheFactory', function($scope, $cacheFactory) {\n          $scope.keys = [];\n          $scope.cache = $cacheFactory('cacheId');\n          $scope.put = function(key, value) {\n            if (angular.isUndefined($scope.cache.get(key))) {\n              $scope.keys.push(key);\n            }\n            $scope.cache.put(key, angular.isUndefined(value) ? null : value);\n          };\n        }]);\n    </file>\n    <file name=\"style.css\">\n      p {\n        margin: 10px 0 3px;\n      }\n    </file>\n  </example>"
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 6216,
            "ngdoc": "type",
            "name": "$cacheFactory.Cache",
            "description": "A cache object used to store and retrieve data, primarily used by\n{@link $http $http} and the {@link ng.directive:script script} directive to cache\ntemplates and other data.\n\n```js\n angular.module('superCache')\n   .factory('superCache', ['$cacheFactory', function($cacheFactory) {\n     return $cacheFactory('super-cache');\n   }]);\n```\n\nExample test:\n\n```js\n it('should behave like a cache', inject(function(superCache) {\n   superCache.put('key', 'value');\n   superCache.put('another key', 'another value');\n\n   expect(superCache.info()).toEqual({\n     id: 'super-cache',\n     size: 2\n   });\n\n   superCache.remove('another key');\n   expect(superCache.get('another key')).toBeUndefined();\n\n   superCache.removeAll();\n   expect(superCache.info()).toEqual({\n     id: 'super-cache',\n     size: 0\n   });\n }));\n```",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 6257,
            "ngdoc": "method",
            "name": "$cacheFactory.Cache#put",
            "kind": "function",
            "description": "Inserts a named entry into the {@link $cacheFactory.Cache Cache} object to be\nretrieved later, and incrementing the size of the cache if the key was not already\npresent in the cache. If behaving like an LRU cache, it will also remove stale\nentries from the set.\n\nIt will not insert undefined values into the cache.",
            "params": [
                {
                    "name": "key",
                    "description": "the key under which the cached data is stored.",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "the value to store alongside the key. If it is undefined, the key\n   will not be stored.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "the value stored.",
                "type": "*"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 6293,
            "ngdoc": "method",
            "name": "$cacheFactory.Cache#get",
            "kind": "function",
            "description": "Retrieves named data stored in the {@link $cacheFactory.Cache Cache} object.",
            "params": [
                {
                    "name": "key",
                    "description": "the key of the data to be retrieved",
                    "type": "String"
                }
            ],
            "return": {
                "description": "the value stored.",
                "type": "*"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 6317,
            "ngdoc": "method",
            "name": "$cacheFactory.Cache#remove",
            "kind": "function",
            "description": "Removes an entry from the {@link $cacheFactory.Cache Cache} object.",
            "params": [
                {
                    "name": "key",
                    "description": "the key of the entry to be removed",
                    "type": "String"
                }
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 6347,
            "ngdoc": "method",
            "name": "$cacheFactory.Cache#removeAll",
            "kind": "function",
            "description": "Clears the cache object of any entries.",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 6363,
            "ngdoc": "method",
            "name": "$cacheFactory.Cache#destroy",
            "kind": "function",
            "description": "Destroys the {@link $cacheFactory.Cache Cache} object entirely,\nremoving it from the {@link $cacheFactory $cacheFactory} set.",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 6380,
            "ngdoc": "method",
            "name": "$cacheFactory.Cache#info",
            "kind": "function",
            "description": "Retrieve information regarding a particular {@link $cacheFactory.Cache Cache}.",
            "return": {
                "description": "an object with the following properties:\n  <ul>\n    <li>**id**: the id of the cache instance</li>\n    <li>**size**: the number of entries kept in the cache instance</li>\n    <li>**...**: any additional properties from the options object when creating the\n      cache.</li>\n  </ul>",
                "type": "Object"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 6402,
            "description": "makes the `entry` the freshEnd of the LRU linked list",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 6421,
            "description": "bidirectionally links two entries of the LRU linked list",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 6433,
            "ngdoc": "method",
            "name": "$cacheFactory#info",
            "description": "Get information about all the caches that have been created",
            "return": {
                "description": "- key-value map of `cacheId` to the result of calling `cache#info`",
                "type": "Object"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 6451,
            "ngdoc": "method",
            "name": "$cacheFactory#get",
            "description": "Get access to a cache object by the `cacheId` used when it was created.",
            "params": [
                {
                    "name": "cacheId",
                    "description": "Name or id of a cache to access.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Cache object identified by the cacheId or undefined if no such cache.",
                "type": "Object"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 6470,
            "ngdoc": "service",
            "name": "$templateCache",
            "description": "The first time a template is used, it is loaded in the template cache for quick retrieval. You\ncan load templates directly into the cache in a `script` tag, or by consuming the\n`$templateCache` service directly.\n\nAdding via the `script` tag:\n\n```html\n  <script type=\"text/ng-template\" id=\"templateId.html\">\n    <p>This is the content of the template</p>\n  </script>\n```\n\n**Note:** the `script` tag containing the template does not need to be included in the `head` of\nthe document, but it must be a descendent of the {@link ng.$rootElement $rootElement} (IE,\nelement with ng-app attribute), otherwise the template will be ignored.\n\nAdding via the `$templateCache` service:\n\n```js\nvar myApp = angular.module('myApp', []);\nmyApp.run(function($templateCache) {\n  $templateCache.put('templateId.html', 'This is the content of the template');\n});\n```\n\nTo retrieve the template later, simply use it in your HTML:\n```html\n<div ng-include=\" 'templateId.html' \"></div>\n```\n\nor get it via Javascript:\n```js\n$templateCache.get('templateId.html')\n```\n\nSee {@link ng.$cacheFactory $cacheFactory}.",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 6548,
            "ngdoc": "service",
            "name": "$compile",
            "kind": "function",
            "description": "Compiles an HTML string or DOM into a template and produces a template function, which\ncan then be used to link {@link ng.$rootScope.Scope `scope`} and the template together.\n\nThe compilation is a process of walking the DOM tree and matching DOM elements to\n{@link ng.$compileProvider#directive directives}.\n\n<div class=\"alert alert-warning\">\n**Note:** This document is an in-depth reference of all directive options.\nFor a gentle introduction to directives with examples of common use cases,\nsee the {@link guide/directive directive guide}.\n</div>\n\n## Comprehensive Directive API\n\nThere are many different options for a directive.\n\nThe difference resides in the return value of the factory function.\nYou can either return a \"Directive Definition Object\" (see below) that defines the directive properties,\nor just the `postLink` function (all other properties will have the default values).\n\n<div class=\"alert alert-success\">\n**Best Practice:** It's recommended to use the \"directive definition object\" form.\n</div>\n\nHere's an example directive declared with a Directive Definition Object:\n\n```js\n  var myModule = angular.module(...);\n\n  myModule.directive('directiveName', function factory(injectables) {\n    var directiveDefinitionObject = {\n      priority: 0,\n      template: '<div></div>', // or // function(tElement, tAttrs) { ... },\n      // or\n      // templateUrl: 'directive.html', // or // function(tElement, tAttrs) { ... },\n      transclude: false,\n      restrict: 'A',\n      templateNamespace: 'html',\n      scope: false,\n      controller: function($scope, $element, $attrs, $transclude, otherInjectables) { ... },\n      controllerAs: 'stringIdentifier',\n      bindToController: false,\n      require: 'siblingDirectiveName', // or // ['^parentDirectiveName', '?optionalDirectiveName', '?^optionalParent'],\n      compile: function compile(tElement, tAttrs, transclude) {\n        return {\n          pre: function preLink(scope, iElement, iAttrs, controller) { ... },\n          post: function postLink(scope, iElement, iAttrs, controller) { ... }\n        }\n        // or\n        // return function postLink( ... ) { ... }\n      },\n      // or\n      // link: {\n      //  pre: function preLink(scope, iElement, iAttrs, controller) { ... },\n      //  post: function postLink(scope, iElement, iAttrs, controller) { ... }\n      // }\n      // or\n      // link: function postLink( ... ) { ... }\n    };\n    return directiveDefinitionObject;\n  });\n```\n\n<div class=\"alert alert-warning\">\n**Note:** Any unspecified options will use the default value. You can see the default values below.\n</div>\n\nTherefore the above can be simplified as:\n\n```js\n  var myModule = angular.module(...);\n\n  myModule.directive('directiveName', function factory(injectables) {\n    var directiveDefinitionObject = {\n      link: function postLink(scope, iElement, iAttrs) { ... }\n    };\n    return directiveDefinitionObject;\n    // or\n    // return function postLink(scope, iElement, iAttrs) { ... }\n  });\n```\n\n\n\n### Directive Definition Object\n\nThe directive definition object provides instructions to the {@link ng.$compile\ncompiler}. The attributes are:\n\n#### `multiElement`\nWhen this property is set to true, the HTML compiler will collect DOM nodes between\nnodes with the attributes `directive-name-start` and `directive-name-end`, and group them\ntogether as the directive elements. It is recommended that this feature be used on directives\nwhich are not strictly behavioral (such as {@link ngClick}), and which\ndo not manipulate or replace child nodes (such as {@link ngInclude}).\n\n#### `priority`\nWhen there are multiple directives defined on a single DOM element, sometimes it\nis necessary to specify the order in which the directives are applied. The `priority` is used\nto sort the directives before their `compile` functions get called. Priority is defined as a\nnumber. Directives with greater numerical `priority` are compiled first. Pre-link functions\nare also run in priority order, but post-link functions are run in reverse order. The order\nof directives with the same priority is undefined. The default priority is `0`.\n\n#### `terminal`\nIf set to true then the current `priority` will be the last set of directives\nwhich will execute (any directives at the current priority will still execute\nas the order of execution on same `priority` is undefined). Note that expressions\nand other directives used in the directive's template will also be excluded from execution.\n\n#### `scope`\nThe scope property can be `true`, an object or a falsy value:\n\n* **falsy:** No scope will be created for the directive. The directive will use its parent's scope.\n\n* **`true`:** A new child scope that prototypically inherits from its parent will be created for\nthe directive's element. If multiple directives on the same element request a new scope,\nonly one new scope is created. The new scope rule does not apply for the root of the template\nsince the root of the template always gets a new scope.\n\n* **`{...}` (an object hash):** A new \"isolate\" scope is created for the directive's element. The\n'isolate' scope differs from normal scope in that it does not prototypically inherit from its parent\nscope. This is useful when creating reusable components, which should not accidentally read or modify\ndata in the parent scope.\n\nThe 'isolate' scope object hash defines a set of local scope properties derived from attributes on the\ndirective's element. These local properties are useful for aliasing values for templates. The keys in\nthe object hash map to the name of the property on the isolate scope; the values define how the property\nis bound to the parent scope, via matching attributes on the directive's element:\n\n* `@` or `@attr` - bind a local scope property to the value of DOM attribute. The result is\n  always a string since DOM attributes are strings. If no `attr` name is specified then the\n  attribute name is assumed to be the same as the local name. Given `<my-component\n  my-attr=\"hello {{name}}\">` and the isolate scope definition `scope: { localName:'@myAttr' }`,\n  the directive's scope property `localName` will reflect the interpolated value of `hello\n  {{name}}`. As the `name` attribute changes so will the `localName` property on the directive's\n  scope. The `name` is read from the parent scope (not the directive's scope).\n\n* `=` or `=attr` - set up a bidirectional binding between a local scope property and an expression\n  passed via the attribute `attr`. The expression is evaluated in the context of the parent scope.\n  If no `attr` name is specified then the attribute name is assumed to be the same as the local\n  name. Given `<my-component my-attr=\"parentModel\">` and the isolate scope definition `scope: {\n  localModel: '=myAttr' }`, the property `localModel` on the directive's scope will reflect the\n  value of `parentModel` on the parent scope. Changes to `parentModel` will be reflected in\n  `localModel` and vice versa. Optional attributes should be marked as such with a question mark:\n  `=?` or `=?attr`. If the binding expression is non-assignable, or if the attribute isn't\n  optional and doesn't exist, an exception ({@link error/$compile/nonassign `$compile:nonassign`})\n  will be thrown upon discovering changes to the local value, since it will be impossible to sync\n  them back to the parent scope. By default, the {@link ng.$rootScope.Scope#$watch `$watch`}\n  method is used for tracking changes, and the equality check is based on object identity.\n  However, if an object literal or an array literal is passed as the binding expression, the\n  equality check is done by value (using the {@link angular.equals} function). It's also possible\n  to watch the evaluated value shallowly with {@link ng.$rootScope.Scope#$watchCollection\n  `$watchCollection`}: use `=*` or `=*attr` (`=*?` or `=*?attr` if the attribute is optional).\n\n* `<` or `<attr` - set up a one-way (one-directional) binding between a local scope property and an\n  expression passed via the attribute `attr`. The expression is evaluated in the context of the\n  parent scope. If no `attr` name is specified then the attribute name is assumed to be the same as the\n  local name. You can also make the binding optional by adding `?`: `<?` or `<?attr`.\n\n  For example, given `<my-component my-attr=\"parentModel\">` and directive definition of\n  `scope: { localModel:'<myAttr' }`, then the isolated scope property `localModel` will reflect the\n  value of `parentModel` on the parent scope. Any changes to `parentModel` will be reflected\n  in `localModel`, but changes in `localModel` will not reflect in `parentModel`. There are however\n  two caveats:\n    1. one-way binding does not copy the value from the parent to the isolate scope, it simply\n    sets the same value. That means if your bound value is an object, changes to its properties\n    in the isolated scope will be reflected in the parent scope (because both reference the same object).\n    2. one-way binding watches changes to the **identity** of the parent value. That means the\n    {@link ng.$rootScope.Scope#$watch `$watch`} on the parent value only fires if the reference\n    to the value has changed. In most cases, this should not be of concern, but can be important\n    to know if you one-way bind to an object, and then replace that object in the isolated scope.\n    If you now change a property of the object in your parent scope, the change will not be\n    propagated to the isolated scope, because the identity of the object on the parent scope\n    has not changed. Instead you must assign a new object.\n\n  One-way binding is useful if you do not plan to propagate changes to your isolated scope bindings\n  back to the parent. However, it does not make this completely impossible.\n\n* `&` or `&attr` - provides a way to execute an expression in the context of the parent scope. If\n  no `attr` name is specified then the attribute name is assumed to be the same as the local name.\n  Given `<my-component my-attr=\"count = count + value\">` and the isolate scope definition `scope: {\n  localFn:'&myAttr' }`, the isolate scope property `localFn` will point to a function wrapper for\n  the `count = count + value` expression. Often it's desirable to pass data from the isolated scope\n  via an expression to the parent scope. This can be done by passing a map of local variable names\n  and values into the expression wrapper fn. For example, if the expression is `increment(amount)`\n  then we can specify the amount value by calling the `localFn` as `localFn({amount: 22})`.\n\nIn general it's possible to apply more than one directive to one element, but there might be limitations\ndepending on the type of scope required by the directives. The following points will help explain these limitations.\nFor simplicity only two directives are taken into account, but it is also applicable for several directives:\n\n* **no scope** + **no scope** => Two directives which don't require their own scope will use their parent's scope\n* **child scope** + **no scope** =>  Both directives will share one single child scope\n* **child scope** + **child scope** =>  Both directives will share one single child scope\n* **isolated scope** + **no scope** =>  The isolated directive will use it's own created isolated scope. The other directive will use\nits parent's scope\n* **isolated scope** + **child scope** =>  **Won't work!** Only one scope can be related to one element. Therefore these directives cannot\nbe applied to the same element.\n* **isolated scope** + **isolated scope**  =>  **Won't work!** Only one scope can be related to one element. Therefore these directives\ncannot be applied to the same element.\n\n\n#### `bindToController`\nThis property is used to bind scope properties directly to the controller. It can be either\n`true` or an object hash with the same format as the `scope` property. Additionally, a controller\nalias must be set, either by using `controllerAs: 'myAlias'` or by specifying the alias in the controller\ndefinition: `controller: 'myCtrl as myAlias'`.\n\nWhen an isolate scope is used for a directive (see above), `bindToController: true` will\nallow a component to have its properties bound to the controller, rather than to scope.\n\nAfter the controller is instantiated, the initial values of the isolate scope bindings will be bound to the controller\nproperties. You can access these bindings once they have been initialized by providing a controller method called\n`$onInit`, which is called after all the controllers on an element have been constructed and had their bindings\ninitialized.\n\n<div class=\"alert alert-warning\">\n**Deprecation warning:** although bindings for non-ES6 class controllers are currently\nbound to `this` before the controller constructor is called, this use is now deprecated. Please place initialization\ncode that relies upon bindings inside a `$onInit` method on the controller, instead.\n</div>\n\nIt is also possible to set `bindToController` to an object hash with the same format as the `scope` property.\nThis will set up the scope bindings to the controller directly. Note that `scope` can still be used\nto define which kind of scope is created. By default, no scope is created. Use `scope: {}` to create an isolate\nscope (useful for component directives).\n\nIf both `bindToController` and `scope` are defined and have object hashes, `bindToController` overrides `scope`.\n\n\n#### `controller`\nController constructor function. The controller is instantiated before the\npre-linking phase and can be accessed by other directives (see\n`require` attribute). This allows the directives to communicate with each other and augment\neach other's behavior. The controller is injectable (and supports bracket notation) with the following locals:\n\n* `$scope` - Current scope associated with the element\n* `$element` - Current element\n* `$attrs` - Current attributes object for the element\n* `$transclude` - A transclude linking function pre-bound to the correct transclusion scope:\n  `function([scope], cloneLinkingFn, futureParentElement, slotName)`:\n   * `scope`: (optional) override the scope.\n   * `cloneLinkingFn`: (optional) argument to create clones of the original transcluded content.\n   * `futureParentElement` (optional):\n       * defines the parent to which the `cloneLinkingFn` will add the cloned elements.\n       * default: `$element.parent()` resp. `$element` for `transclude:'element'` resp. `transclude:true`.\n       * only needed for transcludes that are allowed to contain non html elements (e.g. SVG elements)\n         and when the `cloneLinkinFn` is passed,\n         as those elements need to created and cloned in a special way when they are defined outside their\n         usual containers (e.g. like `<svg>`).\n       * See also the `directive.templateNamespace` property.\n   * `slotName`: (optional) the name of the slot to transclude. If falsy (e.g. `null`, `undefined` or `''`)\n     then the default translusion is provided.\n   The `$transclude` function also has a method on it, `$transclude.isSlotFilled(slotName)`, which returns\n   `true` if the specified slot contains content (i.e. one or more DOM nodes).\n\nThe controller can provide the following methods that act as life-cycle hooks:\n* `$onInit` - Called on each controller after all the controllers on an element have been constructed and\n  had their bindings initialized (and before the pre &amp; post linking functions for the directives on\n  this element). This is a good place to put initialization code for your controller.\n\n#### `require`\nRequire another directive and inject its controller as the fourth argument to the linking function. The\n`require` property can be a string, an array or an object:\n* a **string** containing the name of the directive to pass to the linking function\n* an **array** containing the names of directives to pass to the linking function. The argument passed to the\nlinking function will be an array of controllers in the same order as the names in the `require` property\n* an **object** whose property values are the names of the directives to pass to the linking function. The argument\npassed to the linking function will also be an object with matching keys, whose values will hold the corresponding\ncontrollers.\n\nIf the `require` property is an object and `bindToController` is truthy, then the required controllers are\nbound to the controller using the keys of the `require` property. This binding occurs after all the controllers\nhave been constructed but before `$onInit` is called.\nSee the {@link $compileProvider#component} helper for an example of how this can be used.\n\nIf no such required directive(s) can be found, or if the directive does not have a controller, then an error is\nraised (unless no link function is specified and the required controllers are not being bound to the directive\ncontroller, in which case error checking is skipped). The name can be prefixed with:\n\n* (no prefix) - Locate the required controller on the current element. Throw an error if not found.\n* `?` - Attempt to locate the required controller or pass `null` to the `link` fn if not found.\n* `^` - Locate the required controller by searching the element and its parents. Throw an error if not found.\n* `^^` - Locate the required controller by searching the element's parents. Throw an error if not found.\n* `?^` - Attempt to locate the required controller by searching the element and its parents or pass\n  `null` to the `link` fn if not found.\n* `?^^` - Attempt to locate the required controller by searching the element's parents, or pass\n  `null` to the `link` fn if not found.\n\n\n#### `controllerAs`\nIdentifier name for a reference to the controller in the directive's scope.\nThis allows the controller to be referenced from the directive template. This is especially\nuseful when a directive is used as component, i.e. with an `isolate` scope. It's also possible\nto use it in a directive without an `isolate` / `new` scope, but you need to be aware that the\n`controllerAs` reference might overwrite a property that already exists on the parent scope.\n\n\n#### `restrict`\nString of subset of `EACM` which restricts the directive to a specific directive\ndeclaration style. If omitted, the defaults (elements and attributes) are used.\n\n* `E` - Element name (default): `<my-directive></my-directive>`\n* `A` - Attribute (default): `<div my-directive=\"exp\"></div>`\n* `C` - Class: `<div class=\"my-directive: exp;\"></div>`\n* `M` - Comment: `<!-- directive: my-directive exp -->`\n\n\n#### `templateNamespace`\nString representing the document type used by the markup in the template.\nAngularJS needs this information as those elements need to be created and cloned\nin a special way when they are defined outside their usual containers like `<svg>` and `<math>`.\n\n* `html` - All root nodes in the template are HTML. Root nodes may also be\n  top-level elements such as `<svg>` or `<math>`.\n* `svg` - The root nodes in the template are SVG elements (excluding `<math>`).\n* `math` - The root nodes in the template are MathML elements (excluding `<svg>`).\n\nIf no `templateNamespace` is specified, then the namespace is considered to be `html`.\n\n#### `template`\nHTML markup that may:\n* Replace the contents of the directive's element (default).\n* Replace the directive's element itself (if `replace` is true - DEPRECATED).\n* Wrap the contents of the directive's element (if `transclude` is true).\n\nValue may be:\n\n* A string. For example `<div red-on-hover>{{delete_str}}</div>`.\n* A function which takes two arguments `tElement` and `tAttrs` (described in the `compile`\n  function api below) and returns a string value.\n\n\n#### `templateUrl`\nThis is similar to `template` but the template is loaded from the specified URL, asynchronously.\n\nBecause template loading is asynchronous the compiler will suspend compilation of directives on that element\nfor later when the template has been resolved.  In the meantime it will continue to compile and link\nsibling and parent elements as though this element had not contained any directives.\n\nThe compiler does not suspend the entire compilation to wait for templates to be loaded because this\nwould result in the whole app \"stalling\" until all templates are loaded asynchronously - even in the\ncase when only one deeply nested directive has `templateUrl`.\n\nTemplate loading is asynchronous even if the template has been preloaded into the {@link $templateCache}\n\nYou can specify `templateUrl` as a string representing the URL or as a function which takes two\narguments `tElement` and `tAttrs` (described in the `compile` function api below) and returns\na string value representing the url.  In either case, the template URL is passed through {@link\n$sce#getTrustedResourceUrl $sce.getTrustedResourceUrl}.\n\n\n#### `replace` ([*DEPRECATED*!], will be removed in next major release - i.e. v2.0)\nspecify what the template should replace. Defaults to `false`.\n\n* `true` - the template will replace the directive's element.\n* `false` - the template will replace the contents of the directive's element.\n\nThe replacement process migrates all of the attributes / classes from the old element to the new\none. See the {@link guide/directive#template-expanding-directive\nDirectives Guide} for an example.\n\nThere are very few scenarios where element replacement is required for the application function,\nthe main one being reusable custom components that are used within SVG contexts\n(because SVG doesn't work with custom elements in the DOM tree).\n\n#### `transclude`\nExtract the contents of the element where the directive appears and make it available to the directive.\nThe contents are compiled and provided to the directive as a **transclusion function**. See the\n{@link $compile#transclusion Transclusion} section below.\n\n\n#### `compile`\n\n```js\n  function compile(tElement, tAttrs, transclude) { ... }\n```\n\nThe compile function deals with transforming the template DOM. Since most directives do not do\ntemplate transformation, it is not used often. The compile function takes the following arguments:\n\n  * `tElement` - template element - The element where the directive has been declared. It is\n    safe to do template transformation on the element and child elements only.\n\n  * `tAttrs` - template attributes - Normalized list of attributes declared on this element shared\n    between all directive compile functions.\n\n  * `transclude` -  [*DEPRECATED*!] A transclude linking function: `function(scope, cloneLinkingFn)`\n\n<div class=\"alert alert-warning\">\n**Note:** The template instance and the link instance may be different objects if the template has\nbeen cloned. For this reason it is **not** safe to do anything other than DOM transformations that\napply to all cloned DOM nodes within the compile function. Specifically, DOM listener registration\nshould be done in a linking function rather than in a compile function.\n</div>\n\n<div class=\"alert alert-warning\">\n**Note:** The compile function cannot handle directives that recursively use themselves in their\nown templates or compile functions. Compiling these directives results in an infinite loop and\nstack overflow errors.\n\nThis can be avoided by manually using $compile in the postLink function to imperatively compile\na directive's template instead of relying on automatic template compilation via `template` or\n`templateUrl` declaration or manual compilation inside the compile function.\n</div>\n\n<div class=\"alert alert-danger\">\n**Note:** The `transclude` function that is passed to the compile function is deprecated, as it\n  e.g. does not know about the right outer scope. Please use the transclude function that is passed\n  to the link function instead.\n</div>\n\nA compile function can have a return value which can be either a function or an object.\n\n* returning a (post-link) function - is equivalent to registering the linking function via the\n  `link` property of the config object when the compile function is empty.\n\n* returning an object with function(s) registered via `pre` and `post` properties - allows you to\n  control when a linking function should be called during the linking phase. See info about\n  pre-linking and post-linking functions below.\n\n\n#### `link`\nThis property is used only if the `compile` property is not defined.\n\n```js\n  function link(scope, iElement, iAttrs, controller, transcludeFn) { ... }\n```\n\nThe link function is responsible for registering DOM listeners as well as updating the DOM. It is\nexecuted after the template has been cloned. This is where most of the directive logic will be\nput.\n\n  * `scope` - {@link ng.$rootScope.Scope Scope} - The scope to be used by the\n    directive for registering {@link ng.$rootScope.Scope#$watch watches}.\n\n  * `iElement` - instance element - The element where the directive is to be used. It is safe to\n    manipulate the children of the element only in `postLink` function since the children have\n    already been linked.\n\n  * `iAttrs` - instance attributes - Normalized list of attributes declared on this element shared\n    between all directive linking functions.\n\n  * `controller` - the directive's required controller instance(s) - Instances are shared\n    among all directives, which allows the directives to use the controllers as a communication\n    channel. The exact value depends on the directive's `require` property:\n      * no controller(s) required: the directive's own controller, or `undefined` if it doesn't have one\n      * `string`: the controller instance\n      * `array`: array of controller instances\n\n    If a required controller cannot be found, and it is optional, the instance is `null`,\n    otherwise the {@link error:$compile:ctreq Missing Required Controller} error is thrown.\n\n    Note that you can also require the directive's own controller - it will be made available like\n    any other controller.\n\n  * `transcludeFn` - A transclude linking function pre-bound to the correct transclusion scope.\n    This is the same as the `$transclude`\n    parameter of directive controllers, see there for details.\n    `function([scope], cloneLinkingFn, futureParentElement)`.\n\n#### Pre-linking function\n\nExecuted before the child elements are linked. Not safe to do DOM transformation since the\ncompiler linking function will fail to locate the correct elements for linking.\n\n#### Post-linking function\n\nExecuted after the child elements are linked.\n\nNote that child elements that contain `templateUrl` directives will not have been compiled\nand linked since they are waiting for their template to load asynchronously and their own\ncompilation and linking has been suspended until that occurs.\n\nIt is safe to do DOM transformation in the post-linking function on elements that are not waiting\nfor their async templates to be resolved.\n\n\n### Transclusion\n\nTransclusion is the process of extracting a collection of DOM elements from one part of the DOM and\ncopying them to another part of the DOM, while maintaining their connection to the original AngularJS\nscope from where they were taken.\n\nTransclusion is used (often with {@link ngTransclude}) to insert the\noriginal contents of a directive's element into a specified place in the template of the directive.\nThe benefit of transclusion, over simply moving the DOM elements manually, is that the transcluded\ncontent has access to the properties on the scope from which it was taken, even if the directive\nhas isolated scope.\nSee the {@link guide/directive#creating-a-directive-that-wraps-other-elements Directives Guide}.\n\nThis makes it possible for the widget to have private state for its template, while the transcluded\ncontent has access to its originating scope.\n\n<div class=\"alert alert-warning\">\n**Note:** When testing an element transclude directive you must not place the directive at the root of the\nDOM fragment that is being compiled. See {@link guide/unit-testing#testing-transclusion-directives\nTesting Transclusion Directives}.\n</div>\n\nThere are three kinds of transclusion depending upon whether you want to transclude just the contents of the\ndirective's element, the entire element or multiple parts of the element contents:\n\n* `true` - transclude the content (i.e. the child nodes) of the directive's element.\n* `'element'` - transclude the whole of the directive's element including any directives on this\n  element that defined at a lower priority than this directive. When used, the `template`\n  property is ignored.\n* **`{...}` (an object hash):** - map elements of the content onto transclusion \"slots\" in the template.\n\n**Mult-slot transclusion** is declared by providing an object for the `transclude` property.\n\nThis object is a map where the keys are the name of the slot to fill and the value is an element selector\nused to match the HTML to the slot. The element selector should be in normalized form (e.g. `myElement`)\nand will match the standard element variants (e.g. `my-element`, `my:element`, `data-my-element`, etc).\n\nFor further information check out the guide on {@link guide/directive#matching-directives Matching Directives}\n\nIf the element selector is prefixed with a `?` then that slot is optional.\n\nFor example, the transclude object `{ slotA: '?myCustomElement' }` maps `<my-custom-element>` elements to\nthe `slotA` slot, which can be accessed via the `$transclude` function or via the {@link ngTransclude} directive.\n\nSlots that are not marked as optional (`?`) will trigger a compile time error if there are no matching elements\nin the transclude content. If you wish to know if an optional slot was filled with content, then you can call\n`$transclude.isSlotFilled(slotName)` on the transclude function passed to the directive's link function and\ninjectable into the directive's controller.\n\n\n#### Transclusion Functions\n\nWhen a directive requests transclusion, the compiler extracts its contents and provides a **transclusion\nfunction** to the directive's `link` function and `controller`. This transclusion function is a special\n**linking function** that will return the compiled contents linked to a new transclusion scope.\n\n<div class=\"alert alert-info\">\nIf you are just using {@link ngTransclude} then you don't need to worry about this function, since\nngTransclude will deal with it for us.\n</div>\n\nIf you want to manually control the insertion and removal of the transcluded content in your directive\nthen you must use this transclude function. When you call a transclude function it returns a a jqLite/JQuery\nobject that contains the compiled DOM, which is linked to the correct transclusion scope.\n\nWhen you call a transclusion function you can pass in a **clone attach function**. This function accepts\ntwo parameters, `function(clone, scope) { ... }`, where the `clone` is a fresh compiled copy of your transcluded\ncontent and the `scope` is the newly created transclusion scope, to which the clone is bound.\n\n<div class=\"alert alert-info\">\n**Best Practice**: Always provide a `cloneFn` (clone attach function) when you call a transclude function\nsince you then get a fresh clone of the original DOM and also have access to the new transclusion scope.\n</div>\n\nIt is normal practice to attach your transcluded content (`clone`) to the DOM inside your **clone\nattach function**:\n\n```js\nvar transcludedContent, transclusionScope;\n\n$transclude(function(clone, scope) {\n  element.append(clone);\n  transcludedContent = clone;\n  transclusionScope = scope;\n});\n```\n\nLater, if you want to remove the transcluded content from your DOM then you should also destroy the\nassociated transclusion scope:\n\n```js\ntranscludedContent.remove();\ntransclusionScope.$destroy();\n```\n\n<div class=\"alert alert-info\">\n**Best Practice**: if you intend to add and remove transcluded content manually in your directive\n(by calling the transclude function to get the DOM and calling `element.remove()` to remove it),\nthen you are also responsible for calling `$destroy` on the transclusion scope.\n</div>\n\nThe built-in DOM manipulation directives, such as {@link ngIf}, {@link ngSwitch} and {@link ngRepeat}\nautomatically destroy their transcluded clones as necessary so you do not need to worry about this if\nyou are simply using {@link ngTransclude} to inject the transclusion into your directive.\n\n\n#### Transclusion Scopes\n\nWhen you call a transclude function it returns a DOM fragment that is pre-bound to a **transclusion\nscope**. This scope is special, in that it is a child of the directive's scope (and so gets destroyed\nwhen the directive's scope gets destroyed) but it inherits the properties of the scope from which it\nwas taken.\n\nFor example consider a directive that uses transclusion and isolated scope. The DOM hierarchy might look\nlike this:\n\n```html\n<div ng-app>\n  <div isolate>\n    <div transclusion>\n    </div>\n  </div>\n</div>\n```\n\nThe `$parent` scope hierarchy will look like this:\n\n  ```\n  - $rootScope\n    - isolate\n      - transclusion\n  ```\n\nbut the scopes will inherit prototypically from different scopes to their `$parent`.\n\n  ```\n  - $rootScope\n    - transclusion\n  - isolate\n  ```\n\n\n### Attributes\n\nThe {@link ng.$compile.directive.Attributes Attributes} object - passed as a parameter in the\n`link()` or `compile()` functions. It has a variety of uses.\n\n* *Accessing normalized attribute names:* Directives like 'ngBind' can be expressed in many ways:\n  'ng:bind', `data-ng-bind`, or 'x-ng-bind'. The attributes object allows for normalized access\n  to the attributes.\n\n* *Directive inter-communication:* All directives share the same instance of the attributes\n  object which allows the directives to use the attributes object as inter directive\n  communication.\n\n* *Supports interpolation:* Interpolation attributes are assigned to the attribute object\n  allowing other directives to read the interpolated value.\n\n* *Observing interpolated attributes:* Use `$observe` to observe the value changes of attributes\n  that contain interpolation (e.g. `src=\"{{bar}}\"`). Not only is this very efficient but it's also\n  the only way to easily get the actual value because during the linking phase the interpolation\n  hasn't been evaluated yet and so the value is at this time set to `undefined`.\n\n```js\nfunction linkingFn(scope, elm, attrs, ctrl) {\n  // get the attribute value\n  console.log(attrs.ngModel);\n\n  // change the attribute\n  attrs.$set('ngModel', 'new value');\n\n  // observe changes to interpolated attribute\n  attrs.$observe('ngModel', function(value) {\n    console.log('ngModel has changed value to ' + value);\n  });\n}\n```\n\n## Example\n\n<div class=\"alert alert-warning\">\n**Note**: Typically directives are registered with `module.directive`. The example below is\nto illustrate how `$compile` works.\n</div>\n\n<example module=\"compileExample\">\n  <file name=\"index.html\">\n   <script>\n     angular.module('compileExample', [], function($compileProvider) {\n       // configure new 'compile' directive by passing a directive\n       // factory function. The factory function injects the '$compile'\n       $compileProvider.directive('compile', function($compile) {\n         // directive factory creates a link function\n         return function(scope, element, attrs) {\n           scope.$watch(\n             function(scope) {\n                // watch the 'compile' expression for changes\n               return scope.$eval(attrs.compile);\n             },\n             function(value) {\n               // when the 'compile' expression changes\n               // assign it into the current DOM\n               element.html(value);\n\n               // compile the new DOM and link it to the current\n               // scope.\n               // NOTE: we only compile .childNodes so that\n               // we don't get into infinite loop compiling ourselves\n               $compile(element.contents())(scope);\n             }\n           );\n         };\n       });\n     })\n     .controller('GreeterController', ['$scope', function($scope) {\n       $scope.name = 'Angular';\n       $scope.html = 'Hello {{name}}';\n     }]);\n   </script>\n   <div ng-controller=\"GreeterController\">\n     <input ng-model=\"name\"> <br/>\n     <textarea ng-model=\"html\"></textarea> <br/>\n     <div compile=\"html\"></div>\n   </div>\n  </file>\n  <file name=\"protractor.js\" type=\"protractor\">\n    it('should auto compile', function() {\n      var textarea = $('textarea');\n      var output = $('div[compile]');\n      // The initial state reads 'Hello Angular'.\n      expect(output.getText()).toBe('Hello Angular');\n      textarea.clear();\n      textarea.sendKeys('{{name}}!');\n      expect(output.getText()).toBe('Angular!');\n    });\n  </file>\n</example>",
            "params": [
                {
                    "name": "element",
                    "description": "Element or HTML string to compile into a template function.",
                    "type": "String|DOMElement"
                },
                {
                    "name": "transclude",
                    "description": "function available to directives - DEPRECATED.\n\n<div class=\"alert alert-danger\">\n**Note:** Passing a `transclude` function to the $compile function is deprecated, as it\n  e.g. will not use the right outer scope. Please pass the transclude function as a\n  `parentBoundTranscludeFn` to the link function instead.\n</div>",
                    "type": "function(angular.Scope, cloneAttachFn=)"
                },
                {
                    "name": "maxPriority",
                    "description": "only apply directives lower than given priority (Only effects the\n                root element(s), not their children)",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "a link function which is used to bind template\n(a DOM element/tree) to a scope. Where:\n\n * `scope` - A {@link ng.$rootScope.Scope Scope} to bind to.\n * `cloneAttachFn` - If `cloneAttachFn` is provided, then the link function will clone the\n `template` and call the `cloneAttachFn` function allowing the caller to attach the\n cloned elements to the DOM document at the appropriate place. The `cloneAttachFn` is\n called as: <br/> `cloneAttachFn(clonedElement, scope)` where:\n\n     * `clonedElement` - is a clone of the original `element` passed into the compiler.\n     * `scope` - is the current scope with which the linking function is working with.\n\n * `options` - An optional object hash with linking options. If `options` is provided, then the following\n keys may be used to control linking behavior:\n\n     * `parentBoundTranscludeFn` - the transclude function made available to\n       directives; if given, it will be passed through to the link functions of\n       directives found in `element` during compilation.\n     * `transcludeControllers` - an object hash with keys that map controller names\n       to a hash with the key `instance`, which maps to the controller instance;\n       if given, it will make the controllers available to directives on the compileNode:\n       ```\n       {\n         parent: {\n           instance: parentControllerInstance\n         }\n       }\n       ```\n     * `futureParentElement` - defines the parent to which the `cloneAttachFn` will add\n       the cloned elements; only needed for transcludes that are allowed to contain non html\n       elements (e.g. SVG elements). See also the directive.controller property.\n\nCalling the linking function returns the element of the template. It is either the original\nelement passed in, or the clone of the element if the `cloneAttachFn` is provided.\n\nAfter linking the view is not updated until after a call to $digest which typically is done by\nAngular automatically.\n\nIf you need access to the bound view, there are two ways to do it:\n\n- If you are not asking the linking function to clone the template, create the DOM element(s)\n  before you send them to the compiler and keep this reference around.\n  ```js\n    var element = $compile('<p>{{total}}</p>')(scope);\n  ```\n\n- if on the other hand, you need the element to be cloned, the view reference from the original\n  example would not point to the clone, but rather to the original template that was cloned. In\n  this case, you can access the clone via the cloneAttachFn:\n  ```js\n    var templateElement = angular.element('<p>{{total}}</p>'),\n        scope = ....;\n\n    var clonedElement = $compile(templateElement)(scope, function(clonedElement, scope) {\n      //attach the clone to DOM document at the right place\n    });\n\n    //now we have reference to the cloned DOM via `clonedElement`\n  ```\n\n\nFor information on how the compiler works, see the\n{@link guide/compiler Angular HTML Compiler} section of the Developer Guide.",
                "type": "Function(scope, cloneAttachFn=, options=)"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 7351,
            "ngdoc": "provider",
            "name": "$compileProvider",
            "description": "",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 7448,
            "ngdoc": "method",
            "name": "$compileProvider#directive",
            "kind": "function",
            "description": "Register a new directive with the compiler.",
            "params": [
                {
                    "name": "name",
                    "description": "Name of the directive in camel-case (i.e. <code>ngBind</code> which\n   will match as <code>ng-bind</code>), or an object map of directives where the keys are the\n   names and the values are the factories.",
                    "type": "String|Object"
                },
                {
                    "name": "directiveFactory",
                    "description": "An injectable directive factory function. See the\n   {@link guide/directive directive guide} and the {@link $compile compile API} for more info.",
                    "type": "Function|Array"
                }
            ],
            "return": {
                "description": "Self for chaining.",
                "type": "ng.$compileProvider"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 7630,
            "ngdoc": "method",
            "name": "$compileProvider#aHrefSanitizationWhitelist",
            "kind": "function",
            "description": "Retrieves or overrides the default regular expression that is used for whitelisting of safe\nurls during a[href] sanitization.\n\nThe sanitization is a security measure aimed at preventing XSS attacks via html links.\n\nAny url about to be assigned to a[href] via data-binding is first normalized and turned into\nan absolute url. Afterwards, the url is matched against the `aHrefSanitizationWhitelist`\nregular expression. If a match is found, the original url is written into the dom. Otherwise,\nthe absolute url is prefixed with `'unsafe:'` string and only then is it written into the DOM.",
            "params": [
                {
                    "name": "regexp",
                    "description": "New regexp to whitelist urls with.",
                    "type": "RegExp="
                }
            ],
            "return": {
                "description": "Current RegExp if called without value or self for\n   chaining otherwise.",
                "type": "RegExp|ng.$compileProvider"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 7660,
            "ngdoc": "method",
            "name": "$compileProvider#imgSrcSanitizationWhitelist",
            "kind": "function",
            "description": "Retrieves or overrides the default regular expression that is used for whitelisting of safe\nurls during img[src] sanitization.\n\nThe sanitization is a security measure aimed at prevent XSS attacks via html links.\n\nAny url about to be assigned to img[src] via data-binding is first normalized and turned into\nan absolute url. Afterwards, the url is matched against the `imgSrcSanitizationWhitelist`\nregular expression. If a match is found, the original url is written into the dom. Otherwise,\nthe absolute url is prefixed with `'unsafe:'` string and only then is it written into the DOM.",
            "params": [
                {
                    "name": "regexp",
                    "description": "New regexp to whitelist urls with.",
                    "type": "RegExp="
                }
            ],
            "return": {
                "description": "Current RegExp if called without value or self for\n   chaining otherwise.",
                "type": "RegExp|ng.$compileProvider"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 7689,
            "ngdoc": "method",
            "name": "$compileProvider#debugInfoEnabled",
            "params": [
                {
                    "name": "enabled",
                    "description": "update the debugInfoEnabled state if provided, otherwise just return the\ncurrent debugInfoEnabled state",
                    "type": "Boolean="
                }
            ],
            "return": {
                "description": "current value if used as getter or itself (chaining) if used as setter",
                "type": "*"
            },
            "kind": "function",
            "description": "Call this method to enable/disable various debug runtime information in the compiler such as adding\nbinding information and a reference to the current scope on to DOM elements.\nIf enabled, the compiler will add the following to DOM elements that have been bound to the scope\n* `ng-binding` CSS class\n* `$binding` data property containing an array of the binding expressions\n\nYou may want to disable this in production for a significant performance boost. See\n{@link guide/production#disabling-debug-data Disabling Debug Data} for more.\n\nThe default value is true.",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 7745,
            "ngdoc": "method",
            "name": "$compile.directive.Attributes#$normalize",
            "kind": "function",
            "description": "Converts an attribute name (e.g. dash/colon/underscore-delimited string, optionally prefixed with `x-` or\n`data-`) to its normalized, camelCase form.\n\nAlso there is special case for Moz prefix starting with upper case letter.\n\nFor further information check out the guide on {@link guide/directive#matching-directives Matching Directives}",
            "params": [
                {
                    "name": "name",
                    "description": "Name to normalize",
                    "type": "String"
                }
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 7763,
            "ngdoc": "method",
            "name": "$compile.directive.Attributes#$addClass",
            "kind": "function",
            "description": "Adds the CSS class value specified by the classVal parameter to the element. If animations\nare enabled then an animation will be triggered for the class addition.",
            "params": [
                {
                    "name": "classVal",
                    "description": "The className value that will be added to the element",
                    "type": "String"
                }
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 7780,
            "ngdoc": "method",
            "name": "$compile.directive.Attributes#$removeClass",
            "kind": "function",
            "description": "Removes the CSS class value specified by the classVal parameter from the element. If\nanimations are enabled then an animation will be triggered for the class removal.",
            "params": [
                {
                    "name": "classVal",
                    "description": "The className value that will be removed from the element",
                    "type": "String"
                }
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 7797,
            "ngdoc": "method",
            "name": "$compile.directive.Attributes#$updateClass",
            "kind": "function",
            "description": "Adds and removes the appropriate CSS class values to the element based on the difference\nbetween the new and old CSS class values (specified as newClasses and oldClasses).",
            "params": [
                {
                    "name": "newClasses",
                    "description": "The current CSS className value",
                    "type": "String"
                },
                {
                    "name": "oldClasses",
                    "description": "The former CSS className value",
                    "type": "String"
                }
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 7821,
            "description": "Set a normalized attribute on the element in a way such that all directives\ncan share the attribute. This function properly handles boolean attributes.",
            "params": [
                {
                    "name": "key",
                    "description": "Normalized key. (ie ngAttribute)",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "The value to set. If `null` attribute will be deleted.",
                    "type": "String|boolean"
                },
                {
                    "name": "writeAttr",
                    "description": "If false, does not write the value to DOM element attribute.\n    Defaults to true.",
                    "type": "Boolean="
                },
                {
                    "name": "attrName",
                    "description": "Optional none normalized name. Defaults to key.",
                    "type": "String="
                }
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 7927,
            "ngdoc": "method",
            "name": "$compile.directive.Attributes#$observe",
            "kind": "function",
            "description": "Observes an interpolated attribute.\n\nThe observer function will be invoked once during the next `$digest` following\ncompilation. The observer is then invoked whenever the interpolated value\nchanges.",
            "params": [
                {
                    "name": "key",
                    "description": "Normalized key. (ie ngAttribute) .",
                    "type": "String"
                },
                {
                    "name": "fn",
                    "description": "Function that will be called whenever\n               the interpolated value of the attribute changes.\n       See the {@link guide/interpolation#how-text-and-attribute-bindings-work Interpolation\n       guide} for more info.",
                    "type": "Function(interpolatedValue)"
                }
            ],
            "return": {
                "description": "Returns a deregistration function for this observer.",
                "type": "Function()"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 8121,
            "description": "Compile function matches each node in nodeList against the directives. Once all directives\nfor a particular node are collected their compile functions are executed. The compile\nfunctions return values - the linking functions - are combined into a composite linking\nfunction, which is the a linking function for the node.",
            "params": [
                {
                    "name": "nodeList",
                    "description": "an array of nodes or NodeList to compile",
                    "type": "NodeList"
                },
                {
                    "name": "transcludeFn",
                    "description": "A linking function, where the\n       scope argument is auto-generated to the new child of the transcluded parent scope.",
                    "type": "function(angular.Scope, cloneAttachFn=)"
                },
                {
                    "name": "$rootElement",
                    "description": "If the nodeList is the root of the compilation tree then\n       the rootElement must be set the jqLite collection of the compile root. This is\n       needed so that the jqLite collection items can be replaced with widgets.",
                    "type": "DOMElement="
                },
                {
                    "name": "maxPriority",
                    "description": "Max directive priority.",
                    "type": "Number="
                }
            ],
            "return": {
                "description": "A composite linking function of all of the matched directives or null.",
                "type": "Function"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 8265,
            "description": "Looks for directives on the given node and adds them to the directive collection which is\nsorted.",
            "params": [
                {
                    "name": "node",
                    "description": "Node to search."
                },
                {
                    "name": "directives",
                    "description": "An array to which the directives are added to. This array is sorted before\n       the function returns."
                },
                {
                    "name": "attrs",
                    "description": "The shared attrs object which is used to populate the normalized attributes."
                },
                {
                    "name": "maxPriority",
                    "description": "Max directive priority.",
                    "type": "Number="
                }
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 8373,
            "description": "Given a node with an directive-start it collects all of the siblings until it finds\ndirective-end.",
            "params": [
                {
                    "name": "node",
                    "description": ""
                },
                {
                    "name": "attrStart",
                    "description": ""
                },
                {
                    "name": "attrEnd",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 8405,
            "description": "Wrapper for linking function which converts normal linking function into a grouped\nlinking function.",
            "params": [
                {
                    "name": "linkFn",
                    "description": ""
                },
                {
                    "name": "attrStart",
                    "description": ""
                },
                {
                    "name": "attrEnd",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Function"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 8420,
            "description": "A function generator that is used to support both eager and lazy compilation\nlinking function.",
            "params": [
                {
                    "name": "eager",
                    "description": ""
                },
                {
                    "name": "$compileNodes",
                    "description": ""
                },
                {
                    "name": "transcludeFn",
                    "description": ""
                },
                {
                    "name": "maxPriority",
                    "description": ""
                },
                {
                    "name": "ignoreDirective",
                    "description": ""
                },
                {
                    "name": "previousCompileContext",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Function"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 8451,
            "description": "Once the directives have been collected, their compile functions are executed. This method\nis responsible for inlining directive templates as well as terminating the application\nof the directives if the terminal directive has been reached.",
            "params": [
                {
                    "name": "directives",
                    "description": "Array of collected directives to execute their compile function.\n       this needs to be pre-sorted by priority order.",
                    "type": "Array"
                },
                {
                    "name": "compileNode",
                    "description": "The raw DOM node to apply the compile functions to",
                    "type": "Node"
                },
                {
                    "name": "templateAttrs",
                    "description": "The shared attribute function",
                    "type": "Object"
                },
                {
                    "name": "transcludeFn",
                    "description": "A linking function, where the\n                                                 scope argument is auto-generated to the new\n                                                 child of the transcluded parent scope.",
                    "type": "function(angular.Scope, cloneAttachFn=)"
                },
                {
                    "name": "jqCollection",
                    "description": "If we are working on the root of the compile tree then this\n                             argument has the root jqLite array so that we can replace nodes\n                             on it.",
                    "type": "JQLite"
                },
                {
                    "name": "originalReplaceDirective",
                    "description": "An optional directive that will be ignored when\n                                          compiling the transclusion.",
                    "type": "Object="
                },
                {
                    "name": "preLinkFns",
                    "description": "",
                    "type": "Array.<Function>"
                },
                {
                    "name": "postLinkFns",
                    "description": "",
                    "type": "Array.<Function>"
                },
                {
                    "name": "previousCompileContext",
                    "description": "Context used for previous compilation of the current\n                                       node",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "linkFn",
                "type": "Function"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 9038,
            "description": "looks up the directive and decorates it with exception handling and proper parameters. We\ncall this the boundDirective.",
            "params": [
                {
                    "name": "name",
                    "description": "name of the directive to look up.",
                    "type": "String"
                },
                {
                    "name": "location",
                    "description": "The directive must be found in specific format.\n  String containing any of theses characters:\n\n  * `E`: element name\n  * `A': attribute\n  * `C`: class\n  * `M`: comment",
                    "type": "String"
                }
            ],
            "return": {
                "description": "true if directive was added.",
                "type": "Boolean"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 9076,
            "description": "looks up the directive and returns true if it is a multi-element directive,\nand therefore requires DOM nodes between -start and -end markers to be grouped\ntogether.",
            "params": [
                {
                    "name": "name",
                    "description": "name of the directive to look up.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "true if directive was registered as multi-element."
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 9097,
            "description": "When the element is replaced with HTML template then the new attributes\non the template need to be merged with the existing attributes in the DOM.\nThe desired effect is to have both of the attributes present.",
            "params": [
                {
                    "name": "dst",
                    "description": "destination attributes (original DOM)",
                    "type": "Object"
                },
                {
                    "name": "src",
                    "description": "source attributes (from the directive template)",
                    "type": "Object"
                }
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 9255,
            "description": "Sorting function for bound directives.",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 9407,
            "description": "This is a special jqLite.replaceWith, which can replace items which\nhave no parents, provided that the containing jqLite collection is provided.",
            "params": [
                {
                    "name": "$rootElement",
                    "description": "The root of the compile tree. Used so that we can replace nodes\n                              in the root of the tree.",
                    "type": "JqLite="
                },
                {
                    "name": "elementsToRemove",
                    "description": "The jqLite element which we are going to replace. We keep\n                                 the shell, but replace its DOM node reference.",
                    "type": "JqLite"
                },
                {
                    "name": "newNode",
                    "description": "The new DOM node.",
                    "type": "Node"
                }
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 9619,
            "description": "Converts all accepted directives format into proper directive name.",
            "params": [
                {
                    "name": "name",
                    "description": "Name to normalize"
                }
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 9627,
            "ngdoc": "type",
            "name": "$compile.directive.Attributes",
            "description": "A shared object between directive compile / linking functions which contains normalized DOM\nelement attributes. The values reflect current binding state `{{ }}`. The normalization is\nneeded since all of these are treated as equivalent in Angular:\n\n```\n   <span ng:bind=\"a\" ng-bind=\"a\" data-ng-bind=\"a\" x-ng-bind=\"a\">\n```",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 9641,
            "ngdoc": "property",
            "name": "$compile.directive.Attributes#$attr",
            "description": "A map of DOM element attribute names to the normalized name. This is\nneeded to do reverse lookup from normalized name back to actual name.",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 9651,
            "ngdoc": "method",
            "name": "$compile.directive.Attributes#$set",
            "kind": "function",
            "description": "Set DOM element attribute value.",
            "params": [
                {
                    "name": "name",
                    "description": "Normalized element attribute name of the property to modify. The name is\n         reverse-translated using the {@link ng.$compile.directive.Attributes#$attr $attr}\n         property to the original name.",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "Value to set the attribute to. The value can be an interpolated string.",
                    "type": "String"
                }
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 9668,
            "description": "Closure compiler type information",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 9733,
            "ngdoc": "provider",
            "name": "$controllerProvider",
            "description": "The {@link ng.$controller $controller service} is used by Angular to create new\ncontrollers.\n\nThis provider allows controller registration via the\n{@link ng.$controllerProvider#register register} method.",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 9747,
            "ngdoc": "method",
            "name": "$controllerProvider#register",
            "params": [
                {
                    "name": "name",
                    "description": "Controller name, or an object map of controllers where the keys are\n   the names and the values are the constructors.",
                    "type": "String|Object"
                },
                {
                    "name": "constructor",
                    "description": "Controller constructor fn (optionally decorated with DI\n   annotations in the array notation).",
                    "type": "Function|Array"
                }
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 9764,
            "ngdoc": "method",
            "name": "$controllerProvider#allowGlobals",
            "description": "If called, allows `$controller` to find controller constructors on `window`",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 9776,
            "ngdoc": "service",
            "name": "$controller",
            "requires": [
                "$injector"
            ],
            "params": [
                {
                    "name": "constructor",
                    "description": "If called with a function then it's considered to be the\n   controller constructor function. Otherwise it's considered to be a string which is used\n   to retrieve the controller constructor using the following steps:\n\n   * check if a controller with given name is registered via `$controllerProvider`\n   * check if evaluating the string on the current scope returns a constructor\n   * if $controllerProvider#allowGlobals, check `window[constructor]` on the global\n     `window` object (not recommended)\n\n   The string can use the `controller as property` syntax, where the controller instance is published\n   as the specified property on the `scope`; the `scope` must be injected into `locals` param for this\n   to work correctly.",
                    "type": "Function|string"
                },
                {
                    "name": "locals",
                    "description": "Injection locals for Controller.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Instance of given controller.",
                "type": "Object"
            },
            "description": "`$controller` service is responsible for instantiating controllers.\n\nIt's just a simple call to {@link auto.$injector $injector}, but extracted into\na service, so that one can override this service with [BC version](https://gist.github.com/1649788).",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 9891,
            "ngdoc": "service",
            "name": "$document",
            "requires": [
                "$window"
            ],
            "description": "A {@link angular.element jQuery or jqLite} wrapper for the browser's `window.document` object.",
            "example": [
                "\n  <example module=\"documentExample\">\n    <file name=\"index.html\">\n      <div ng-controller=\"ExampleController\">\n        <p>$document title: <b ng-bind=\"title\"></b></p>\n        <p>window.document title: <b ng-bind=\"windowTitle\"></b></p>\n      </div>\n    </file>\n    <file name=\"script.js\">\n      angular.module('documentExample', [])\n        .controller('ExampleController', ['$scope', '$document', function($scope, $document) {\n          $scope.title = $document[0].title;\n          $scope.windowTitle = angular.element(window.document)[0].title;\n        }]);\n    </file>\n  </example>"
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 9922,
            "ngdoc": "service",
            "name": "$exceptionHandler",
            "requires": [
                "ng.$log"
            ],
            "description": "Any uncaught exception in angular expressions is delegated to this service.\nThe default implementation simply delegates to `$log.error` which logs it into\nthe browser console.\n\nIn unit tests, if `angular-mocks.js` is loaded, this service is overridden by\n{@link ngMock.$exceptionHandler mock $exceptionHandler} which aids in testing.\n\n## Example:\n\n```js\n  angular.module('exceptionOverride', []).factory('$exceptionHandler', function() {\n    return function(exception, cause) {\n      exception.message += ' (caused by \"' + cause + '\")';\n      throw exception;\n    };\n  });\n```\n\nThis example will override the normal action of `$exceptionHandler`, to make angular\nexceptions fail hard when they happen, instead of just logging to the console.\n\n<hr />\nNote, that code executed in event-listeners (even those registered using jqLite's `on`/`bind`\nmethods) does not delegate exceptions to the {@link ng.$exceptionHandler $exceptionHandler}\n(unless executed during a digest).\n\nIf you wish, you can manually delegate exceptions, e.g.\n`try { ... } catch(e) { $exceptionHandler(e); }`",
            "params": [
                {
                    "name": "exception",
                    "description": "Exception associated with the error.",
                    "type": "Error"
                },
                {
                    "name": "cause",
                    "description": "optional information about the context in which\n      the error was thrown.",
                    "type": "String="
                }
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 10017,
            "ngdoc": "service",
            "name": "$httpParamSerializer",
            "description": "Default {@link $http `$http`} params serializer that converts objects to strings\naccording to the following rules:\n\n* `{'foo': 'bar'}` results in `foo=bar`\n* `{'foo': Date.now()}` results in `foo=2015-04-01T09%3A50%3A49.262Z` (`toISOString()` and encoded representation of a Date object)\n* `{'foo': ['bar', 'baz']}` results in `foo=bar&foo=baz` (repeated key for each array element)\n* `{'foo': {'bar':'baz'}}` results in `foo=%7B%22bar%22%3A%22baz%22%7D\"` (stringified and encoded representation of an object)\n\nNote that serializer will sort the request parameters alphabetically.",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 10054,
            "ngdoc": "service",
            "name": "$httpParamSerializerJQLike",
            "description": "Alternative {@link $http `$http`} params serializer that follows\njQuery's [`param()`](http://api.jquery.com/jquery.param/) method logic.\nThe serializer will also sort the params alphabetically.\n\nTo use it for serializing `$http` request parameters, set it as the `paramSerializer` property:\n\n```js\n$http({\n  url: myUrl,\n  method: 'GET',\n  params: myParams,\n  paramSerializer: '$httpParamSerializerJQLike'\n});\n```\n\nIt is also possible to set it as the default `paramSerializer` in the\n{@link $httpProvider#defaults `$httpProvider`}.\n\nAdditionally, you can inject the serializer and use it explicitly, for example to serialize\nform data for submission:\n\n```js\n.controller(function($http, $httpParamSerializerJQLike) {\n  //...\n\n  $http({\n    url: myUrl,\n    method: 'POST',\n    data: $httpParamSerializerJQLike(myData),\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded'\n    }\n  });\n\n});\n```",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 10146,
            "description": "Parse headers into key value object",
            "params": [
                {
                    "name": "headers",
                    "description": "Raw headers as a string",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Parsed headers as key value object",
                "type": "Object"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 10176,
            "description": "Returns a function that provides access to parsed headers.\n\nHeaders are lazy parsed when first requested.",
            "see": [
                "parseHeaders"
            ],
            "params": [
                {
                    "name": "headers",
                    "description": "Headers to provide access to.",
                    "type": "(string|Object)"
                }
            ],
            "return": {
                "description": "Returns a getter function which if called with:\n\n  - if called with single an argument returns a single header value or null\n  - if called with no arguments returns an object containing all headers.",
                "type": "Function(string=)"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 10207,
            "description": "Chain all given functions\n\nThis function is used for both request and response transforming",
            "params": [
                {
                    "name": "data",
                    "description": "Data to transform.",
                    "type": "*"
                },
                {
                    "name": "headers",
                    "description": "HTTP headers getter fn.",
                    "type": "Function(string=)"
                },
                {
                    "name": "status",
                    "description": "HTTP status code of the response.",
                    "type": "Number"
                },
                {
                    "name": "fns",
                    "description": "Function or an array of functions.",
                    "type": "(Function|Array.<Function>)"
                }
            ],
            "return": {
                "description": "Transformed data.",
                "type": "*"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 10236,
            "ngdoc": "provider",
            "name": "$httpProvider",
            "description": "Use `$httpProvider` to change the default behavior of the {@link ng.$http $http} service.",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 10243,
            "ngdoc": "property",
            "name": "$httpProvider#defaults",
            "description": "Object containing default values for all {@link ng.$http $http} requests.\n\n- **`defaults.cache`** - {Object} - an object built with {@link ng.$cacheFactory `$cacheFactory`}\nthat will provide the cache for all requests who set their `cache` property to `true`.\nIf you set the `defaults.cache = false` then only requests that specify their own custom\ncache object will be cached. See {@link $http#caching $http Caching} for more information.\n\n- **`defaults.xsrfCookieName`** - {string} - Name of cookie containing the XSRF token.\nDefaults value is `'XSRF-TOKEN'`.\n\n- **`defaults.xsrfHeaderName`** - {string} - Name of HTTP header to populate with the\nXSRF token. Defaults value is `'X-XSRF-TOKEN'`.\n\n- **`defaults.headers`** - {Object} - Default headers for all $http requests.\nRefer to {@link ng.$http#setting-http-headers $http} for documentation on\nsetting default headers.\n    - **`defaults.headers.common`**\n    - **`defaults.headers.post`**\n    - **`defaults.headers.put`**\n    - **`defaults.headers.patch`**\n\n\n- **`defaults.paramSerializer`** - `{string|function(Object<string,string>):string}` - A function\n used to the prepare string representation of request parameters (specified as an object).\n If specified as string, it is interpreted as a function registered with the {@link auto.$injector $injector}.\n Defaults to {@link ng.$httpParamSerializer $httpParamSerializer}.",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 10302,
            "ngdoc": "method",
            "name": "$httpProvider#useApplyAsync",
            "description": "Configure $http service to combine processing of multiple http responses received at around\nthe same time via {@link ng.$rootScope.Scope#$applyAsync $rootScope.$applyAsync}. This can result in\nsignificant performance improvement for bigger applications that make many HTTP requests\nconcurrently (common during application bootstrap).\n\nDefaults to false. If no value is specified, returns the current configured value.",
            "params": [
                {
                    "name": "value",
                    "description": "If true, when requests are loaded, they will schedule a deferred\n   \"apply\" on the next tick, giving time for subsequent requests in a roughly ~10ms window\n   to load and share the same digest cycle.",
                    "type": "Boolean="
                }
            ],
            "return": {
                "description": "If a value is specified, returns the $httpProvider for chaining.\n   otherwise, returns the current configured value.",
                "type": "Boolean|Object"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 10330,
            "ngdoc": "method",
            "name": "$httpProvider#useLegacyPromiseExtensions",
            "description": "Configure `$http` service to return promises without the shorthand methods `success` and `error`.\nThis should be used to make sure that applications work without these methods.\n\nDefaults to true. If no value is specified, returns the current configured value.",
            "params": [
                {
                    "name": "value",
                    "description": "If true, `$http` will return a promise with the deprecated legacy `success` and `error` methods.",
                    "type": "Boolean="
                }
            ],
            "return": {
                "description": "If a value is specified, returns the $httpProvider for chaining.\n   otherwise, returns the current configured value.",
                "type": "Boolean|Object"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 10353,
            "ngdoc": "property",
            "name": "$httpProvider#interceptors",
            "description": "Array containing service factories for all synchronous or asynchronous {@link ng.$http $http}\npre-processing of request or postprocessing of responses.\n\nThese service factories are ordered by request, i.e. they are applied in the same order as the\narray, on request, but reverse order, on response.\n\n{@link ng.$http#interceptors Interceptors detailed info}",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 10373,
            "description": "Make sure that default param serializer is exposed as a function",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 10379,
            "description": "Interceptors stored in reverse order. Inner interceptors before outer interceptors.\nThe reversal is needed so that we can build up the interception chain around the\nserver request.",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 10391,
            "ngdoc": "service",
            "kind": "function",
            "name": "pendingRequests Array of config objects for currently pending!~YUIDOC_LINE~!  requests. This is primarily meant to be used for debugging purposes.",
            "requires": [
                "ng.$httpBackend",
                "$cacheFactory",
                "$rootScope",
                "$q",
                "$injector"
            ],
            "description": "The `$http` service is a core Angular service that facilitates communication with the remote\nHTTP servers via the browser's [XMLHttpRequest](https://developer.mozilla.org/en/xmlhttprequest)\nobject or via [JSONP](http://en.wikipedia.org/wiki/JSONP).\n\nFor unit testing applications that use `$http` service, see\n{@link ngMock.$httpBackend $httpBackend mock}.\n\nFor a higher level of abstraction, please check out the {@link ngResource.$resource\n$resource} service.\n\nThe $http API is based on the {@link ng.$q deferred/promise APIs} exposed by\nthe $q service. While for simple usage patterns this doesn't matter much, for advanced usage\nit is important to familiarize yourself with these APIs and the guarantees they provide.\n\n\n## General usage\nThe `$http` service is a function which takes a single argument — a {@link $http#usage configuration object} —\nthat is used to generate an HTTP request and returns  a {@link ng.$q promise}.\n\n```js\n  // Simple GET request example:\n  $http({\n    method: 'GET',\n    url: '/someUrl'\n  }).then(function successCallback(response) {\n      // this callback will be called asynchronously\n      // when the response is available\n    }, function errorCallback(response) {\n      // called asynchronously if an error occurs\n      // or server returns response with an error status.\n    });\n```\n\nThe response object has these properties:\n\n  - **data** – `{string|Object}` – The response body transformed with the transform\n    functions.\n  - **status** – `{number}` – HTTP status code of the response.\n  - **headers** – `{function([headerName])}` – Header getter function.\n  - **config** – `{Object}` – The configuration object that was used to generate the request.\n  - **statusText** – `{string}` – HTTP status text of the response.\n\nA response status code between 200 and 299 is considered a success status and\nwill result in the success callback being called. Note that if the response is a redirect,\nXMLHttpRequest will transparently follow it, meaning that the error callback will not be\ncalled for such responses.\n\n\n## Shortcut methods\n\nShortcut methods are also available. All shortcut methods require passing in the URL, and\nrequest data must be passed in for POST/PUT requests. An optional config can be passed as the\nlast argument.\n\n```js\n  $http.get('/someUrl', config).then(successCallback, errorCallback);\n  $http.post('/someUrl', data, config).then(successCallback, errorCallback);\n```\n\nComplete list of shortcut methods:\n\n- {@link ng.$http#get $http.get}\n- {@link ng.$http#head $http.head}\n- {@link ng.$http#post $http.post}\n- {@link ng.$http#put $http.put}\n- {@link ng.$http#delete $http.delete}\n- {@link ng.$http#jsonp $http.jsonp}\n- {@link ng.$http#patch $http.patch}\n\n\n## Writing Unit Tests that use $http\nWhen unit testing (using {@link ngMock ngMock}), it is necessary to call\n{@link ngMock.$httpBackend#flush $httpBackend.flush()} to flush each pending\nrequest using trained responses.\n\n```\n$httpBackend.expectGET(...);\n$http.get(...);\n$httpBackend.flush();\n```\n\n## Deprecation Notice\n<div class=\"alert alert-danger\">\n  The `$http` legacy promise methods `success` and `error` have been deprecated.\n  Use the standard `then` method instead.\n  If {@link $httpProvider#useLegacyPromiseExtensions `$httpProvider.useLegacyPromiseExtensions`} is set to\n  `false` then these methods will throw {@link $http:legacy `$http/legacy`} error.\n</div>\n\n## Setting HTTP Headers\n\nThe $http service will automatically add certain HTTP headers to all requests. These defaults\ncan be fully configured by accessing the `$httpProvider.defaults.headers` configuration\nobject, which currently contains this default configuration:\n\n- `$httpProvider.defaults.headers.common` (headers that are common for all requests):\n  - `Accept: application/json, text/plain, * / *`\n- `$httpProvider.defaults.headers.post`: (header defaults for POST requests)\n  - `Content-Type: application/json`\n- `$httpProvider.defaults.headers.put` (header defaults for PUT requests)\n  - `Content-Type: application/json`\n\nTo add or overwrite these defaults, simply add or remove a property from these configuration\nobjects. To add headers for an HTTP method other than POST or PUT, simply add a new object\nwith the lowercased HTTP method name as the key, e.g.\n`$httpProvider.defaults.headers.get = { 'My-Header' : 'value' }`.\n\nThe defaults can also be set at runtime via the `$http.defaults` object in the same\nfashion. For example:\n\n```\nmodule.run(function($http) {\n  $http.defaults.headers.common.Authorization = 'Basic YmVlcDpib29w';\n});\n```\n\nIn addition, you can supply a `headers` property in the config object passed when\ncalling `$http(config)`, which overrides the defaults without changing them globally.\n\nTo explicitly remove a header automatically added via $httpProvider.defaults.headers on a per request basis,\nUse the `headers` property, setting the desired header to `undefined`. For example:\n\n```js\nvar req = {\n method: 'POST',\n url: 'http://example.com',\n headers: {\n   'Content-Type': undefined\n },\n data: { test: 'test' }\n}\n\n$http(req).then(function(){...}, function(){...});\n```\n\n## Transforming Requests and Responses\n\nBoth requests and responses can be transformed using transformation functions: `transformRequest`\nand `transformResponse`. These properties can be a single function that returns\nthe transformed value (`function(data, headersGetter, status)`) or an array of such transformation functions,\nwhich allows you to `push` or `unshift` a new transformation function into the transformation chain.\n\n### Default Transformations\n\nThe `$httpProvider` provider and `$http` service expose `defaults.transformRequest` and\n`defaults.transformResponse` properties. If a request does not provide its own transformations\nthen these will be applied.\n\nYou can augment or replace the default transformations by modifying these properties by adding to or\nreplacing the array.\n\nAngular provides the following default transformations:\n\nRequest transformations (`$httpProvider.defaults.transformRequest` and `$http.defaults.transformRequest`):\n\n- If the `data` property of the request configuration object contains an object, serialize it\n  into JSON format.\n\nResponse transformations (`$httpProvider.defaults.transformResponse` and `$http.defaults.transformResponse`):\n\n - If XSRF prefix is detected, strip it (see Security Considerations section below).\n - If JSON response is detected, deserialize it using a JSON parser.\n\n\n### Overriding the Default Transformations Per Request\n\nIf you wish override the request/response transformations only for a single request then provide\n`transformRequest` and/or `transformResponse` properties on the configuration object passed\ninto `$http`.\n\nNote that if you provide these properties on the config object the default transformations will be\noverwritten. If you wish to augment the default transformations then you must include them in your\nlocal transformation array.\n\nThe following code demonstrates adding a new response transformation to be run after the default response\ntransformations have been run.\n\n```js\nfunction appendTransform(defaults, transform) {\n\n  // We can't guarantee that the default transformation is an array\n  defaults = angular.isArray(defaults) ? defaults : [defaults];\n\n  // Append the new transformation to the defaults\n  return defaults.concat(transform);\n}\n\n$http({\n  url: '...',\n  method: 'GET',\n  transformResponse: appendTransform($http.defaults.transformResponse, function(value) {\n    return doTransform(value);\n  })\n});\n```\n\n\n## Caching\n\nTo enable caching, set the request configuration `cache` property to `true` (to use default\ncache) or to a custom cache object (built with {@link ng.$cacheFactory `$cacheFactory`}).\nWhen the cache is enabled, `$http` stores the response from the server in the specified\ncache. The next time the same request is made, the response is served from the cache without\nsending a request to the server.\n\nNote that even if the response is served from cache, delivery of the data is asynchronous in\nthe same way that real requests are.\n\nIf there are multiple GET requests for the same URL that should be cached using the same\ncache, but the cache is not populated yet, only one request to the server will be made and\nthe remaining requests will be fulfilled using the response from the first request.\n\nYou can change the default cache to a new object (built with\n{@link ng.$cacheFactory `$cacheFactory`}) by updating the\n{@link ng.$http#defaults `$http.defaults.cache`} property. All requests who set\ntheir `cache` property to `true` will now use this cache object.\n\nIf you set the default cache to `false` then only requests that specify their own custom\ncache object will be cached.\n\n## Interceptors\n\nBefore you start creating interceptors, be sure to understand the\n{@link ng.$q $q and deferred/promise APIs}.\n\nFor purposes of global error handling, authentication, or any kind of synchronous or\nasynchronous pre-processing of request or postprocessing of responses, it is desirable to be\nable to intercept requests before they are handed to the server and\nresponses before they are handed over to the application code that\ninitiated these requests. The interceptors leverage the {@link ng.$q\npromise APIs} to fulfill this need for both synchronous and asynchronous pre-processing.\n\nThe interceptors are service factories that are registered with the `$httpProvider` by\nadding them to the `$httpProvider.interceptors` array. The factory is called and\ninjected with dependencies (if specified) and returns the interceptor.\n\nThere are two kinds of interceptors (and two kinds of rejection interceptors):\n\n  * `request`: interceptors get called with a http {@link $http#usage config} object. The function is free to\n    modify the `config` object or create a new one. The function needs to return the `config`\n    object directly, or a promise containing the `config` or a new `config` object.\n  * `requestError`: interceptor gets called when a previous interceptor threw an error or\n    resolved with a rejection.\n  * `response`: interceptors get called with http `response` object. The function is free to\n    modify the `response` object or create a new one. The function needs to return the `response`\n    object directly, or as a promise containing the `response` or a new `response` object.\n  * `responseError`: interceptor gets called when a previous interceptor threw an error or\n    resolved with a rejection.\n\n\n```js\n  // register the interceptor as a service\n  $provide.factory('myHttpInterceptor', function($q, dependency1, dependency2) {\n    return {\n      // optional method\n      'request': function(config) {\n        // do something on success\n        return config;\n      },\n\n      // optional method\n     'requestError': function(rejection) {\n        // do something on error\n        if (canRecover(rejection)) {\n          return responseOrNewPromise\n        }\n        return $q.reject(rejection);\n      },\n\n\n\n      // optional method\n      'response': function(response) {\n        // do something on success\n        return response;\n      },\n\n      // optional method\n     'responseError': function(rejection) {\n        // do something on error\n        if (canRecover(rejection)) {\n          return responseOrNewPromise\n        }\n        return $q.reject(rejection);\n      }\n    };\n  });\n\n  $httpProvider.interceptors.push('myHttpInterceptor');\n\n\n  // alternatively, register the interceptor via an anonymous factory\n  $httpProvider.interceptors.push(function($q, dependency1, dependency2) {\n    return {\n     'request': function(config) {\n         // same as above\n      },\n\n      'response': function(response) {\n         // same as above\n      }\n    };\n  });\n```\n\n## Security Considerations\n\nWhen designing web applications, consider security threats from:\n\n- [JSON vulnerability](http://haacked.com/archive/2008/11/20/anatomy-of-a-subtle-json-vulnerability.aspx)\n- [XSRF](http://en.wikipedia.org/wiki/Cross-site_request_forgery)\n\nBoth server and the client must cooperate in order to eliminate these threats. Angular comes\npre-configured with strategies that address these issues, but for this to work backend server\ncooperation is required.\n\n### JSON Vulnerability Protection\n\nA [JSON vulnerability](http://haacked.com/archive/2008/11/20/anatomy-of-a-subtle-json-vulnerability.aspx)\nallows third party website to turn your JSON resource URL into\n[JSONP](http://en.wikipedia.org/wiki/JSONP) request under some conditions. To\ncounter this your server can prefix all JSON requests with following string `\")]}',\\n\"`.\nAngular will automatically strip the prefix before processing it as JSON.\n\nFor example if your server needs to return:\n```js\n['one','two']\n```\n\nwhich is vulnerable to attack, your server can return:\n```js\n)]}',\n['one','two']\n```\n\nAngular will strip the prefix, before processing the JSON.\n\n\n### Cross Site Request Forgery (XSRF) Protection\n\n[XSRF](http://en.wikipedia.org/wiki/Cross-site_request_forgery) is an attack technique by\nwhich the attacker can trick an authenticated user into unknowingly executing actions on your\nwebsite. Angular provides a mechanism to counter XSRF. When performing XHR requests, the\n$http service reads a token from a cookie (by default, `XSRF-TOKEN`) and sets it as an HTTP\nheader (`X-XSRF-TOKEN`). Since only JavaScript that runs on your domain could read the\ncookie, your server can be assured that the XHR came from JavaScript running on your domain.\nThe header will not be set for cross-domain requests.\n\nTo take advantage of this, your server needs to set a token in a JavaScript readable session\ncookie called `XSRF-TOKEN` on the first HTTP GET request. On subsequent XHR requests the\nserver can verify that the cookie matches `X-XSRF-TOKEN` HTTP header, and therefore be sure\nthat only JavaScript running on your domain could have sent the request. The token must be\nunique for each user and must be verifiable by the server (to prevent the JavaScript from\nmaking up its own tokens). We recommend that the token is a digest of your site's\nauthentication cookie with a [salt](https://en.wikipedia.org/wiki/Salt_(cryptography&#41;)\nfor added security.\n\nThe name of the headers can be specified using the xsrfHeaderName and xsrfCookieName\nproperties of either $httpProvider.defaults at config-time, $http.defaults at run-time,\nor the per-request config object.\n\nIn order to prevent collisions in environments where multiple Angular apps share the\nsame domain or subdomain, we recommend that each application uses unique cookie name.",
            "return": {
                "description": "Returns a {@link ng.$q `Promise}` that will be resolved to a response object\n                       when the request succeeds or fails.",
                "type": "HttpPromise"
            },
            "itemtype": "property",
            "type": "Array.<Object>",
            "example": [
                "\n<example module=\"httpExample\">\n<file name=\"index.html\">\n <div ng-controller=\"FetchController\">\n   <select ng-model=\"method\" aria-label=\"Request method\">\n     <option>GET</option>\n     <option>JSONP</option>\n   </select>\n   <input type=\"text\" ng-model=\"url\" size=\"80\" aria-label=\"URL\" />\n   <button id=\"fetchbtn\" ng-click=\"fetch()\">fetch</button><br>\n   <button id=\"samplegetbtn\" ng-click=\"updateModel('GET', 'http-hello.html')\">Sample GET</button>\n   <button id=\"samplejsonpbtn\"\n     ng-click=\"updateModel('JSONP',\n                   'https://angularjs.org/greet.php?callback=JSON_CALLBACK&name=Super%20Hero')\">\n     Sample JSONP\n   </button>\n   <button id=\"invalidjsonpbtn\"\n     ng-click=\"updateModel('JSONP', 'https://angularjs.org/doesntexist&callback=JSON_CALLBACK')\">\n       Invalid JSONP\n     </button>\n   <pre>http status code: {{status}}</pre>\n   <pre>http response data: {{data}}</pre>\n </div>\n</file>\n<file name=\"script.js\">\n angular.module('httpExample', [])\n   .controller('FetchController', ['$scope', '$http', '$templateCache',\n     function($scope, $http, $templateCache) {\n       $scope.method = 'GET';\n       $scope.url = 'http-hello.html';\n\n       $scope.fetch = function() {\n         $scope.code = null;\n         $scope.response = null;\n\n         $http({method: $scope.method, url: $scope.url, cache: $templateCache}).\n           then(function(response) {\n             $scope.status = response.status;\n             $scope.data = response.data;\n           }, function(response) {\n             $scope.data = response.data || \"Request failed\";\n             $scope.status = response.status;\n         });\n       };\n\n       $scope.updateModel = function(method, url) {\n         $scope.method = method;\n         $scope.url = url;\n       };\n     }]);\n</file>\n<file name=\"http-hello.html\">\n Hello, $http!\n</file>\n<file name=\"protractor.js\" type=\"protractor\">\n var status = element(by.binding('status'));\n var data = element(by.binding('data'));\n var fetchBtn = element(by.id('fetchbtn'));\n var sampleGetBtn = element(by.id('samplegetbtn'));\n var sampleJsonpBtn = element(by.id('samplejsonpbtn'));\n var invalidJsonpBtn = element(by.id('invalidjsonpbtn'));\n\n it('should make an xhr GET request', function() {\n   sampleGetBtn.click();\n   fetchBtn.click();\n   expect(status.getText()).toMatch('200');\n   expect(data.getText()).toMatch(/Hello, \\$http!/);\n });\n\n// Commented out due to flakes. See https://github.com/angular/angular.js/issues/9185\n// it('should make a JSONP request to angularjs.org', function() {\n//   sampleJsonpBtn.click();\n//   fetchBtn.click();\n//   expect(status.getText()).toMatch('200');\n//   expect(data.getText()).toMatch(/Super Hero!/);\n// });\n\n it('should make JSONP request to invalid URL and invoke the error handler',\n     function() {\n   invalidJsonpBtn.click();\n   fetchBtn.click();\n   expect(status.getText()).toMatch('0');\n   expect(data.getText()).toMatch('Request failed');\n });\n</file>\n</example>"
            ],
            "class": "",
            "module": "ng",
            "subprops": [
                {
                    "name": "config",
                    "description": "Object describing the request to be made and how it should be\n   processed. The object has following properties:\n\n   - **method** – `{string}` – HTTP method (e.g. 'GET', 'POST', etc)\n   - **url** – `{string}` – Absolute or relative URL of the resource that is being requested.\n   - **params** – `{Object.<string|Object>}` – Map of strings or objects which will be serialized\n     with the `paramSerializer` and appended as GET parameters.\n   - **data** – `{string|Object}` – Data to be sent as the request message data.\n   - **headers** – `{Object}` – Map of strings or functions which return strings representing\n     HTTP headers to send to the server. If the return value of a function is null, the\n     header will not be sent. Functions accept a config object as an argument.\n   - **xsrfHeaderName** – `{string}` – Name of HTTP header to populate with the XSRF token.\n   - **xsrfCookieName** – `{string}` – Name of cookie containing the XSRF token.\n   - **transformRequest** –\n     `{function(data, headersGetter)|Array.<function(data, headersGetter)>}` –\n     transform function or an array of such functions. The transform function takes the http\n     request body and headers and returns its transformed (typically serialized) version.\n     See {@link ng.$http#overriding-the-default-transformations-per-request\n     Overriding the Default Transformations}\n   - **transformResponse** –\n     `{function(data, headersGetter, status)|Array.<function(data, headersGetter, status)>}` –\n     transform function or an array of such functions. The transform function takes the http\n     response body, headers and status and returns its transformed (typically deserialized) version.\n     See {@link ng.$http#overriding-the-default-transformations-per-request\n     Overriding the Default TransformationjqLiks}\n   - **paramSerializer** - `{string|function(Object<string,string>):string}` - A function used to\n     prepare the string representation of request parameters (specified as an object).\n     If specified as string, it is interpreted as function registered with the\n     {@link $injector $injector}, which means you can create your own serializer\n     by registering it as a {@link auto.$provide#service service}.\n     The default serializer is the {@link $httpParamSerializer $httpParamSerializer};\n     alternatively, you can use the {@link $httpParamSerializerJQLike $httpParamSerializerJQLike}\n   - **cache** – `{boolean|Cache}` – If true, a default $http cache will be used to cache the\n     GET request, otherwise if a cache instance built with\n     {@link ng.$cacheFactory $cacheFactory}, this cache will be used for\n     caching.\n   - **timeout** – `{number|Promise}` – timeout in milliseconds, or {@link ng.$q promise}\n     that should abort the request when resolved.\n   - **withCredentials** - `{boolean}` - whether to set the `withCredentials` flag on the\n     XHR object. See [requests with credentials](https://developer.mozilla.org/docs/Web/HTTP/Access_control_CORS#Requests_with_credentials)\n     for more information.\n   - **responseType** - `{string}` - see\n     [XMLHttpRequest.responseType](https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest#xmlhttprequest-responsetype).",
                    "type": "Object"
                }
            ]
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 11048,
            "ngdoc": "method",
            "name": "$http#get",
            "description": "Shortcut method to perform `GET` request.",
            "params": [
                {
                    "name": "url",
                    "description": "Relative or absolute URL specifying the destination of the request",
                    "type": "String"
                },
                {
                    "name": "config",
                    "description": "Optional configuration object",
                    "type": "Object="
                }
            ],
            "return": {
                "description": "Future object",
                "type": "HttpPromise"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 11060,
            "ngdoc": "method",
            "name": "$http#delete",
            "description": "Shortcut method to perform `DELETE` request.",
            "params": [
                {
                    "name": "url",
                    "description": "Relative or absolute URL specifying the destination of the request",
                    "type": "String"
                },
                {
                    "name": "config",
                    "description": "Optional configuration object",
                    "type": "Object="
                }
            ],
            "return": {
                "description": "Future object",
                "type": "HttpPromise"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 11072,
            "ngdoc": "method",
            "name": "$http#head",
            "description": "Shortcut method to perform `HEAD` request.",
            "params": [
                {
                    "name": "url",
                    "description": "Relative or absolute URL specifying the destination of the request",
                    "type": "String"
                },
                {
                    "name": "config",
                    "description": "Optional configuration object",
                    "type": "Object="
                }
            ],
            "return": {
                "description": "Future object",
                "type": "HttpPromise"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 11084,
            "ngdoc": "method",
            "name": "$http#jsonp",
            "description": "Shortcut method to perform `JSONP` request.",
            "params": [
                {
                    "name": "url",
                    "description": "Relative or absolute URL specifying the destination of the request.\n                    The name of the callback should be the string `JSON_CALLBACK`.",
                    "type": "String"
                },
                {
                    "name": "config",
                    "description": "Optional configuration object",
                    "type": "Object="
                }
            ],
            "return": {
                "description": "Future object",
                "type": "HttpPromise"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 11098,
            "ngdoc": "method",
            "name": "$http#post",
            "description": "Shortcut method to perform `POST` request.",
            "params": [
                {
                    "name": "url",
                    "description": "Relative or absolute URL specifying the destination of the request",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "Request content",
                    "type": "*"
                },
                {
                    "name": "config",
                    "description": "Optional configuration object",
                    "type": "Object="
                }
            ],
            "return": {
                "description": "Future object",
                "type": "HttpPromise"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 11111,
            "ngdoc": "method",
            "name": "$http#put",
            "description": "Shortcut method to perform `PUT` request.",
            "params": [
                {
                    "name": "url",
                    "description": "Relative or absolute URL specifying the destination of the request",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "Request content",
                    "type": "*"
                },
                {
                    "name": "config",
                    "description": "Optional configuration object",
                    "type": "Object="
                }
            ],
            "return": {
                "description": "Future object",
                "type": "HttpPromise"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 11124,
            "ngdoc": "method",
            "name": "$http#patch",
            "description": "Shortcut method to perform `PATCH` request.",
            "params": [
                {
                    "name": "url",
                    "description": "Relative or absolute URL specifying the destination of the request",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "Request content",
                    "type": "*"
                },
                {
                    "name": "config",
                    "description": "Optional configuration object",
                    "type": "Object="
                }
            ],
            "return": {
                "description": "Future object",
                "type": "HttpPromise"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 11138,
            "ngdoc": "property",
            "name": "$http#defaults",
            "description": "Runtime equivalent of the `$httpProvider.defaults` property. Allows configuration of\ndefault headers, withCredentials as well as request and response transformations.\n\nSee \"Setting HTTP Headers\" and \"Transforming Requests and Responses\" sections above.",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 11179,
            "description": "Makes the request.\n\n!!! ACCESSES CLOSURE VARS:\n$httpBackend, defaults, $log, $rootScope, defaultCache, $http.pendingRequests",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 11242,
            "description": "Callback registered to $httpBackend():\n - caches the response if desired\n - resolves the raw $http promise\n - calls $apply",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 11271,
            "description": "Resolves the raw $http promise.",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 11307,
            "ngdoc": "service",
            "name": "$xhrFactory",
            "description": "Factory function used to create XMLHttpRequest objects.\n\nReplace or decorate this service to create your own custom XMLHttpRequest objects.\n\n```\nangular.module('myApp', [])\n.factory('$xhrFactory', function() {\n  return function createXhr(method, url) {\n    return new window.XMLHttpRequest({mozSystem: true});\n  };\n});\n```",
            "params": [
                {
                    "name": "method",
                    "description": "HTTP method of the request (GET, POST, PUT, ..)",
                    "type": "String"
                },
                {
                    "name": "url",
                    "description": "URL of the request.",
                    "type": "String"
                }
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 11336,
            "ngdoc": "service",
            "name": "$httpBackend",
            "requires": [
                "$window",
                "$document",
                "$xhrFactory"
            ],
            "description": "HTTP backend used by the {@link ng.$http service} that delegates to\nXMLHttpRequest object or JSONP and deals with browser incompatibilities.\n\nYou should never need to use this service directly, instead use the higher-level abstractions:\n{@link ng.$http $http} or {@link ngResource.$resource $resource}.\n\nDuring testing this implementation is swapped with {@link ngMock.$httpBackend mock\n$httpBackend} which can be trained with responses.",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 11518,
            "ngdoc": "provider",
            "name": "$interpolateProvider",
            "description": "Used for configuring the interpolation markup. Defaults to `{{` and `}}`.\n\n<div class=\"alert alert-danger\">\nThis feature is sometimes used to mix different markup languages, e.g. to wrap an Angular\ntemplate within a Python Jinja template (or any other template language). Mixing templating\nlanguages is **very dangerous**. The embedding template language will not safely escape Angular\nexpressions, so any user-controlled values in the template will cause Cross Site Scripting (XSS)\nsecurity bugs!\n</div>",
            "example": [
                "\n<example name=\"custom-interpolation-markup\" module=\"customInterpolationApp\">\n<file name=\"index.html\">\n<script>\n var customInterpolationApp = angular.module('customInterpolationApp', []);\n\n customInterpolationApp.config(function($interpolateProvider) {\n   $interpolateProvider.startSymbol('//');\n   $interpolateProvider.endSymbol('//');\n });\n\n\n customInterpolationApp.controller('DemoController', function() {\n     this.label = \"This binding is brought you by // interpolation symbols.\";\n });\n</script>\n<div ng-controller=\"DemoController as demo\">\n   //demo.label//\n</div>\n</file>\n<file name=\"protractor.js\" type=\"protractor\">\n it('should interpolate binding with custom symbols', function() {\n   expect(element(by.binding('demo.label')).getText()).toBe('This binding is brought you by // interpolation symbols.');\n });\n</file>\n</example>"
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 11565,
            "ngdoc": "method",
            "name": "$interpolateProvider#startSymbol",
            "description": "Symbol to denote start of expression in the interpolated string. Defaults to `{{`.",
            "params": [
                {
                    "name": "value",
                    "description": "new value to set the starting symbol to.",
                    "type": "String="
                }
            ],
            "return": {
                "description": "Returns the symbol when used as getter and self if used as setter.",
                "type": "String|self"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 11583,
            "ngdoc": "method",
            "name": "$interpolateProvider#endSymbol",
            "description": "Symbol to denote the end of expression in the interpolated string. Defaults to `}}`.",
            "params": [
                {
                    "name": "value",
                    "description": "new value to set the ending symbol to.",
                    "type": "String="
                }
            ],
            "return": {
                "description": "Returns the symbol when used as getter and self if used as setter.",
                "type": "String|self"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 11643,
            "ngdoc": "service",
            "name": "$interpolate",
            "kind": "function",
            "requires": [
                "$parse",
                "$sce"
            ],
            "description": "Compiles a string with markup into an interpolation function. This service is used by the\nHTML {@link ng.$compile $compile} service for data binding. See\n{@link ng.$interpolateProvider $interpolateProvider} for configuring the\ninterpolation markup.\n\n\n```js\n  var $interpolate = ...; // injected\n  var exp = $interpolate('Hello {{name | uppercase}}!');\n  expect(exp({name:'Angular'})).toEqual('Hello ANGULAR!');\n```\n\n`$interpolate` takes an optional fourth argument, `allOrNothing`. If `allOrNothing` is\n`true`, the interpolation function will return `undefined` unless all embedded expressions\nevaluate to a value other than `undefined`.\n\n```js\n  var $interpolate = ...; // injected\n  var context = {greeting: 'Hello', name: undefined };\n\n  // default \"forgiving\" mode\n  var exp = $interpolate('{{greeting}} {{name}}!');\n  expect(exp(context)).toEqual('Hello !');\n\n  // \"allOrNothing\" mode\n  exp = $interpolate('{{greeting}} {{name}}!', false, null, true);\n  expect(exp(context)).toBeUndefined();\n  context.name = 'Angular';\n  expect(exp(context)).toEqual('Hello Angular!');\n```\n\n`allOrNothing` is useful for interpolating URLs. `ngSrc` and `ngSrcset` use this behavior.\n\n####Escaped Interpolation\n$interpolate provides a mechanism for escaping interpolation markers. Start and end markers\ncan be escaped by preceding each of their characters with a REVERSE SOLIDUS U+005C (backslash).\nIt will be rendered as a regular start/end marker, and will not be interpreted as an expression\nor binding.\n\nThis enables web-servers to prevent script injection attacks and defacing attacks, to some\ndegree, while also enabling code examples to work without relying on the\n{@link ng.directive:ngNonBindable ngNonBindable} directive.\n\n**For security purposes, it is strongly encouraged that web servers escape user-supplied data,\nreplacing angle brackets (&lt;, &gt;) with &amp;lt; and &amp;gt; respectively, and replacing all\ninterpolation start/end markers with their escaped counterparts.**\n\nEscaped interpolation markers are only replaced with the actual interpolation markers in rendered\noutput when the $interpolate service processes the text. So, for HTML elements interpolated\nby {@link ng.$compile $compile}, or otherwise interpolated with the `mustHaveExpression` parameter\nset to `true`, the interpolated text must contain an unescaped interpolation expression. As such,\nthis is typically useful only when user-data is used in rendering a template from the server, or\nwhen otherwise untrusted data is used by a directive.\n\n<example>\n <file name=\"index.html\">\n   <div ng-init=\"username='A user'\">\n     <p ng-init=\"apptitle='Escaping demo'\">{{apptitle}}: \\{\\{ username = \"defaced value\"; \\}\\}\n       </p>\n     <p><strong>{{username}}</strong> attempts to inject code which will deface the\n       application, but fails to accomplish their task, because the server has correctly\n       escaped the interpolation start/end markers with REVERSE SOLIDUS U+005C (backslash)\n       characters.</p>\n     <p>Instead, the result of the attempted script injection is visible, and can be removed\n       from the database by an administrator.</p>\n   </div>\n </file>\n</example>",
            "params": [
                {
                    "name": "text",
                    "description": "The text with markup to interpolate.",
                    "type": "String"
                },
                {
                    "name": "mustHaveExpression",
                    "description": "if set to true then the interpolation string must have\n   embedded expression in order to return an interpolation function. Strings with no\n   embedded expression will return null for the interpolation function.",
                    "type": "Boolean="
                },
                {
                    "name": "trustedContext",
                    "description": "when provided, the returned function passes the interpolated\n   result through {@link ng.$sce#getTrusted $sce.getTrusted(interpolatedResult,\n   trustedContext)} before returning it.  Refer to the {@link ng.$sce $sce} service that\n   provides Strict Contextual Escaping for details.",
                    "type": "String="
                },
                {
                    "name": "allOrNothing",
                    "description": "if `true`, then the returned function returns undefined\n   unless all embedded expressions evaluate to a value other than `undefined`.",
                    "type": "Boolean="
                }
            ],
            "return": {
                "description": "an interpolation function which is used to compute the\n   interpolated string. The function has these parameters:\n\n- `context`: evaluation context for all expressions embedded in the interpolated text",
                "type": "Function(context)"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 11851,
            "ngdoc": "method",
            "name": "$interpolate#startSymbol",
            "description": "Symbol to denote the start of expression in the interpolated string. Defaults to `{{`.\n\nUse {@link ng.$interpolateProvider#startSymbol `$interpolateProvider.startSymbol`} to change\nthe symbol.",
            "return": {
                "description": "start symbol.",
                "type": "String"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 11867,
            "ngdoc": "method",
            "name": "$interpolate#endSymbol",
            "description": "Symbol to denote the end of expression in the interpolated string. Defaults to `}}`.\n\nUse {@link ng.$interpolateProvider#endSymbol `$interpolateProvider.endSymbol`} to change\nthe symbol.",
            "return": {
                "description": "end symbol.",
                "type": "String"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 11892,
            "ngdoc": "service",
            "name": "$interval",
            "description": "Angular's wrapper for `window.setInterval`. The `fn` function is executed every `delay`\nmilliseconds.\n\nThe return value of registering an interval function is a promise. This promise will be\nnotified upon each tick of the interval, and will be resolved after `count` iterations, or\nrun indefinitely if `count` is not defined. The value of the notification will be the\nnumber of iterations that have run.\nTo cancel an interval, call `$interval.cancel(promise)`.\n\nIn tests you can use {@link ngMock.$interval#flush `$interval.flush(millis)`} to\nmove forward by `millis` milliseconds and trigger any functions scheduled to run in that\ntime.\n\n<div class=\"alert alert-warning\">\n**Note**: Intervals created by this service must be explicitly destroyed when you are finished\nwith them.  In particular they are not automatically destroyed when a controller's scope or a\ndirective's element are destroyed.\nYou should take this into consideration and make sure to always cancel the interval at the\nappropriate moment.  See the example below for more details on how and when to do this.\n</div>",
            "params": [
                {
                    "name": "fn",
                    "description": "A function that should be called repeatedly.",
                    "type": "Function()"
                },
                {
                    "name": "delay",
                    "description": "Number of milliseconds between each function call.",
                    "type": "Number"
                },
                {
                    "name": "count",
                    "description": "Number of times to repeat. If not set, or 0, will repeat\n  indefinitely.",
                    "type": "Number=",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "invokeApply",
                    "description": "If set to `false` skips model dirty checking, otherwise\n  will invoke `fn` within the {@link ng.$rootScope.Scope#$apply $apply} block.",
                    "type": "Boolean=",
                    "optional": true,
                    "optdefault": "true"
                },
                {
                    "name": "Pass",
                    "description": "additional parameters to the executed function.",
                    "type": "...*="
                }
            ],
            "return": {
                "description": "A promise which will be notified on each iteration.",
                "type": "Promise"
            },
            "example": [
                "\n<example module=\"intervalExample\">\n<file name=\"index.html\">\n  <script>\n    angular.module('intervalExample', [])\n      .controller('ExampleController', ['$scope', '$interval',\n        function($scope, $interval) {\n          $scope.format = 'M/d/yy h:mm:ss a';\n          $scope.blood_1 = 100;\n          $scope.blood_2 = 120;\n\n          var stop;\n          $scope.fight = function() {\n            // Don't start a new fight if we are already fighting\n            if ( angular.isDefined(stop) ) return;\n\n            stop = $interval(function() {\n              if ($scope.blood_1 > 0 && $scope.blood_2 > 0) {\n                $scope.blood_1 = $scope.blood_1 - 3;\n                $scope.blood_2 = $scope.blood_2 - 4;\n              } else {\n                $scope.stopFight();\n              }\n            }, 100);\n          };\n\n          $scope.stopFight = function() {\n            if (angular.isDefined(stop)) {\n              $interval.cancel(stop);\n              stop = undefined;\n            }\n          };\n\n          $scope.resetFight = function() {\n            $scope.blood_1 = 100;\n            $scope.blood_2 = 120;\n          };\n\n          $scope.$on('$destroy', function() {\n            // Make sure that the interval is destroyed too\n            $scope.stopFight();\n          });\n        }])\n      // Register the 'myCurrentTime' directive factory method.\n      // We inject $interval and dateFilter service since the factory method is DI.\n      .directive('myCurrentTime', ['$interval', 'dateFilter',\n        function($interval, dateFilter) {\n          // return the directive link function. (compile function not needed)\n          return function(scope, element, attrs) {\n            var format,  // date format\n                stopTime; // so that we can cancel the time updates\n\n            // used to update the UI\n            function updateTime() {\n              element.text(dateFilter(new Date(), format));\n            }\n\n            // watch the expression, and update the UI on change.\n            scope.$watch(attrs.myCurrentTime, function(value) {\n              format = value;\n              updateTime();\n            });\n\n            stopTime = $interval(updateTime, 1000);\n\n            // listen on DOM destroy (removal) event, and cancel the next UI update\n            // to prevent updating time after the DOM element was removed.\n            element.on('$destroy', function() {\n              $interval.cancel(stopTime);\n            });\n          }\n        }]);\n  </script>\n\n  <div>\n    <div ng-controller=\"ExampleController\">\n      <label>Date format: <input ng-model=\"format\"></label> <hr/>\n      Current time is: <span my-current-time=\"format\"></span>\n      <hr/>\n      Blood 1 : <font color='red'>{{blood_1}}</font>\n      Blood 2 : <font color='red'>{{blood_2}}</font>\n      <button type=\"button\" data-ng-click=\"fight()\">Fight</button>\n      <button type=\"button\" data-ng-click=\"stopFight()\">StopFight</button>\n      <button type=\"button\" data-ng-click=\"resetFight()\">resetFight</button>\n    </div>\n  </div>\n\n</file>\n</example>"
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 12061,
            "ngdoc": "method",
            "name": "$interval#cancel",
            "description": "Cancels a task associated with the `promise`.",
            "params": [
                {
                    "name": "promise",
                    "description": "returned by the `$interval` function.",
                    "type": "Promise="
                }
            ],
            "return": {
                "description": "Returns `true` if the task was successfully canceled.",
                "type": "Boolean"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 12085,
            "ngdoc": "service",
            "name": "$locale",
            "description": "$locale service provides localization rules for various Angular components. As of right now the\nonly public api is:\n\n* `id` – `{string}` – locale id formatted as `languageId-countryId` (e.g. `en-us`)",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 12101,
            "description": "Encode path using encodeUriSegment, ignoring forward slashes",
            "params": [
                {
                    "name": "path",
                    "description": "Path to encode",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 12145,
            "params": [
                {
                    "name": "begin",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "whole",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "returns text from whole after begin or undefined if it does not begin with\n                   expected string.",
                "type": "String"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 12179,
            "description": "LocationHtml5Url represents an url\nThis object is exposed as $location service when HTML5 mode is enabled and supported",
            "is_constructor": 1,
            "params": [
                {
                    "name": "appBase",
                    "description": "application base URL",
                    "type": "String"
                },
                {
                    "name": "appBaseNoFile",
                    "description": "application base URL stripped of any filename",
                    "type": "String"
                },
                {
                    "name": "basePrefix",
                    "description": "url path prefix",
                    "type": "String"
                }
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 12194,
            "description": "Parse given html5 (regular) url string into properties",
            "params": [
                {
                    "name": "url",
                    "description": "HTML5 url",
                    "type": "String"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 12215,
            "description": "Compose url and update `absUrl` property",
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 12257,
            "description": "LocationHashbangUrl represents url\nThis object is exposed as $location service when developer doesn't opt into html5 mode.\nIt also serves as the base class for html5 mode fallback on legacy browsers.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "appBase",
                    "description": "application base URL",
                    "type": "String"
                },
                {
                    "name": "appBaseNoFile",
                    "description": "application base URL stripped of any filename",
                    "type": "String"
                },
                {
                    "name": "hashPrefix",
                    "description": "hashbang prefix",
                    "type": "String"
                }
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 12272,
            "description": "Parse given hashbang url into properties",
            "params": [
                {
                    "name": "url",
                    "description": "Hashbang url",
                    "type": "String"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 12347,
            "description": "Compose hashbang url and update `absUrl` property",
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 12369,
            "description": "LocationHashbangUrl represents url\nThis object is exposed as $location service when html5 history api is enabled but the browser\ndoes not support it.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "appBase",
                    "description": "application base URL",
                    "type": "String"
                },
                {
                    "name": "appBaseNoFile",
                    "description": "application base URL stripped of any filename",
                    "type": "String"
                },
                {
                    "name": "hashPrefix",
                    "description": "hashbang prefix",
                    "type": "String"
                }
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 12421,
            "description": "Are we in html5 mode?",
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 12427,
            "description": "Has any change been replacing?",
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 12433,
            "ngdoc": "method",
            "name": "$location#absUrl",
            "description": "This method is getter only.\n\nReturn full url representation with all segments encoded according to rules specified in\n[RFC 3986](http://www.ietf.org/rfc/rfc3986.txt).\n\n\n```js\n// given url http://example.com/#/some/path?foo=bar&baz=xoxo\nvar absUrl = $location.absUrl();\n// => \"http://example.com/#/some/path?foo=bar&baz=xoxo\"\n```",
            "return": {
                "description": "full url",
                "type": "String"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 12454,
            "ngdoc": "method",
            "name": "$location#url",
            "description": "This method is getter / setter.\n\nReturn url (e.g. `/path?a=b#hash`) when called without any parameter.\n\nChange path, search and hash, when called with parameter and return `$location`.\n\n\n```js\n// given url http://example.com/#/some/path?foo=bar&baz=xoxo\nvar url = $location.url();\n// => \"/some/path?foo=bar&baz=xoxo\"\n```",
            "params": [
                {
                    "name": "url",
                    "description": "New url without base prefix (e.g. `/path?a=b#hash`)",
                    "type": "String="
                }
            ],
            "return": {
                "description": "url",
                "type": "String"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 12488,
            "ngdoc": "method",
            "name": "$location#protocol",
            "description": "This method is getter only.\n\nReturn protocol of current url.\n\n\n```js\n// given url http://example.com/#/some/path?foo=bar&baz=xoxo\nvar protocol = $location.protocol();\n// => \"http\"\n```",
            "return": {
                "description": "protocol of current url",
                "type": "String"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 12508,
            "ngdoc": "method",
            "name": "$location#host",
            "description": "This method is getter only.\n\nReturn host of current url.\n\nNote: compared to the non-angular version `location.host` which returns `hostname:port`, this returns the `hostname` portion only.\n\n\n```js\n// given url http://example.com/#/some/path?foo=bar&baz=xoxo\nvar host = $location.host();\n// => \"example.com\"\n\n// given url http://user:password@example.com:8080/#/some/path?foo=bar&baz=xoxo\nhost = $location.host();\n// => \"example.com\"\nhost = location.host;\n// => \"example.com:8080\"\n```",
            "return": {
                "description": "host of current url.",
                "type": "String"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 12536,
            "ngdoc": "method",
            "name": "$location#port",
            "description": "This method is getter only.\n\nReturn port of current url.\n\n\n```js\n// given url http://example.com/#/some/path?foo=bar&baz=xoxo\nvar port = $location.port();\n// => 80\n```",
            "return": {
                "description": "port",
                "type": "Number"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 12556,
            "ngdoc": "method",
            "name": "$location#path",
            "description": "This method is getter / setter.\n\nReturn path of current url when called without any parameter.\n\nChange path when called with parameter and return `$location`.\n\nNote: Path should always begin with forward slash (/), this method will add the forward slash\nif it is missing.\n\n\n```js\n// given url http://example.com/#/some/path?foo=bar&baz=xoxo\nvar path = $location.path();\n// => \"/some/path\"\n```",
            "params": [
                {
                    "name": "path",
                    "description": "New path",
                    "type": "(string|number)="
                }
            ],
            "return": {
                "description": "path",
                "type": "String"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 12585,
            "ngdoc": "method",
            "name": "$location#search",
            "description": "This method is getter / setter.\n\nReturn search part (as object) of current url when called without any parameter.\n\nChange search part when called with parameter and return `$location`.\n\n\n```js\n// given url http://example.com/#/some/path?foo=bar&baz=xoxo\nvar searchObject = $location.search();\n// => {foo: 'bar', baz: 'xoxo'}\n\n// set foo to 'yipee'\n$location.search('foo', 'yipee');\n// $location.search() => {foo: 'yipee', baz: 'xoxo'}\n```",
            "params": [
                {
                    "name": "search",
                    "description": "New search params - string or\nhash object.\n\nWhen called with a single argument the method acts as a setter, setting the `search` component\nof `$location` to the specified value.\n\nIf the argument is a hash object containing an array of values, these values will be encoded\nas duplicate search parameters in the url.",
                    "type": "string|Object.<string>|Object.<Array.<string>>"
                },
                {
                    "name": "paramValue",
                    "description": "If `search` is a string or number, then `paramValue`\nwill override only a single search property.\n\nIf `paramValue` is an array, it will override the property of the `search` component of\n`$location` specified via the first argument.\n\nIf `paramValue` is `null`, the property specified via the first argument will be deleted.\n\nIf `paramValue` is `true`, the property specified via the first argument will be added with no\nvalue nor trailing equal sign.",
                    "type": "(string|Number|Array<string>|boolean)="
                }
            ],
            "return": {
                "description": "If called with no arguments returns the parsed `search` object. If called with\none or more arguments returns `$location` object itself.",
                "type": "Object"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 12663,
            "ngdoc": "method",
            "name": "$location#hash",
            "description": "This method is getter / setter.\n\nReturns the hash fragment when called without any parameters.\n\nChanges the hash fragment when called with a parameter and returns `$location`.\n\n\n```js\n// given url http://example.com/#/some/path?foo=bar&baz=xoxo#hashValue\nvar hash = $location.hash();\n// => \"hashValue\"\n```",
            "params": [
                {
                    "name": "hash",
                    "description": "New hash fragment",
                    "type": "(string|number)="
                }
            ],
            "return": {
                "description": "hash",
                "type": "String"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 12688,
            "ngdoc": "method",
            "name": "$location#replace",
            "description": "If called, all changes to $location during the current `$digest` will replace the current history\nrecord, instead of adding a new one.",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 12705,
            "ngdoc": "method",
            "name": "$location#state",
            "description": "This method is getter / setter.\n\nReturn the history state object when called without any parameter.\n\nChange the history state object when called with one parameter and return `$location`.\nThe state object is later passed to `pushState` or `replaceState`.\n\nNOTE: This method is supported only in HTML5 mode and only in browsers supporting\nthe HTML5 History API (i.e. methods `pushState` and `replaceState`). If you need to support\nolder browsers (like IE9 or Android < 4.0), don't use this method.",
            "params": [
                {
                    "name": "state",
                    "description": "State object for pushState or replaceState",
                    "type": "Object="
                }
            ],
            "return": {
                "description": "state",
                "type": "Object"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 12764,
            "ngdoc": "service",
            "name": "$location",
            "requires": [
                "$rootElement"
            ],
            "description": "The $location service parses the URL in the browser address bar (based on the\n[window.location](https://developer.mozilla.org/en/window.location)) and makes the URL\navailable to your application. Changes to the URL in the address bar are reflected into\n$location service and changes to $location are reflected into the browser address bar.\n\n**The $location service:**\n\n- Exposes the current URL in the browser address bar, so you can\n  - Watch and observe the URL.\n  - Change the URL.\n- Synchronizes the URL with the browser when the user\n  - Changes the address bar.\n  - Clicks the back or forward button (or clicks a History link).\n  - Clicks on a link.\n- Represents the URL object as a set of methods (protocol, host, port, path, search, hash).\n\nFor more information see {@link guide/$location Developer Guide: Using $location}",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 12790,
            "ngdoc": "provider",
            "name": "$locationProvider",
            "description": "Use the `$locationProvider` to configure how the application deep linking paths are stored.",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 12804,
            "ngdoc": "method",
            "name": "$locationProvider#hashPrefix",
            "description": "",
            "params": [
                {
                    "name": "prefix",
                    "description": "Prefix for hash part (containing path and search)",
                    "type": "String="
                }
            ],
            "return": {
                "description": "current value if used as getter or itself (chaining) if used as setter",
                "type": "*"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 12820,
            "ngdoc": "method",
            "name": "$locationProvider#html5Mode",
            "description": "",
            "params": [
                {
                    "name": "mode",
                    "description": "If boolean, sets `html5Mode.enabled` to value.\n  If object, sets `enabled`, `requireBase` and `rewriteLinks` to respective values. Supported\n  properties:\n  - **enabled** – `{boolean}` – (default: false) If true, will rely on `history.pushState` to\n    change urls where supported. Will fall back to hash-prefixed paths in browsers that do not\n    support `pushState`.\n  - **requireBase** - `{boolean}` - (default: `true`) When html5Mode is enabled, specifies\n    whether or not a <base> tag is required to be present. If `enabled` and `requireBase` are\n    true, and a base tag is not present, an error will be thrown when `$location` is injected.\n    See the {@link guide/$location $location guide for more information}\n  - **rewriteLinks** - `{boolean}` - (default: `true`) When html5Mode is enabled,\n    enables/disables url rewriting for relative links.",
                    "type": "(boolean|Object)="
                }
            ],
            "return": {
                "description": "html5Mode object if used as getter or itself (chaining) if used as setter",
                "type": "Object"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 12863,
            "ngdoc": "event",
            "name": "$location#$locationChangeStart",
            "eventtype": "broadcast on root scope",
            "description": "Broadcasted before a URL will change.\n\nThis change can be prevented by calling\n`preventDefault` method of the event. See {@link ng.$rootScope.Scope#$on} for more\ndetails about event object. Upon successful change\n{@link ng.$location#$locationChangeSuccess $locationChangeSuccess} is fired.\n\nThe `newState` and `oldState` parameters may be defined only in HTML5 mode and when\nthe browser supports the HTML5 History API.",
            "params": [
                {
                    "name": "angularEvent",
                    "description": "Synthetic event object.",
                    "type": "Object"
                },
                {
                    "name": "newUrl",
                    "description": "New URL",
                    "type": "String"
                },
                {
                    "name": "oldUrl",
                    "description": "URL that was before it was changed.",
                    "type": "String="
                },
                {
                    "name": "newState",
                    "description": "New history state object",
                    "type": "String="
                },
                {
                    "name": "oldState",
                    "description": "History state object that was before it was changed.",
                    "type": "String="
                }
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 12885,
            "ngdoc": "event",
            "name": "$location#$locationChangeSuccess",
            "eventtype": "broadcast on root scope",
            "description": "Broadcasted after a URL was changed.\n\nThe `newState` and `oldState` parameters may be defined only in HTML5 mode and when\nthe browser supports the HTML5 History API.",
            "params": [
                {
                    "name": "angularEvent",
                    "description": "Synthetic event object.",
                    "type": "Object"
                },
                {
                    "name": "newUrl",
                    "description": "New URL",
                    "type": "String"
                },
                {
                    "name": "oldUrl",
                    "description": "URL that was before it was changed.",
                    "type": "String="
                },
                {
                    "name": "newState",
                    "description": "New history state object",
                    "type": "String="
                },
                {
                    "name": "oldState",
                    "description": "History state object that was before it was changed.",
                    "type": "String="
                }
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 13086,
            "ngdoc": "service",
            "name": "$log",
            "requires": [
                "$window"
            ],
            "description": "Simple service for logging. Default implementation safely writes the message\ninto the browser's console (if present).\n\nThe main purpose of this service is to simplify debugging and troubleshooting.\n\nThe default is to log `debug` messages. You can use\n{@link ng.$logProvider ng.$logProvider#debugEnabled} to change this.",
            "example": [
                "\n  <example module=\"logExample\">\n    <file name=\"script.js\">\n      angular.module('logExample', [])\n        .controller('LogController', ['$scope', '$log', function($scope, $log) {\n          $scope.$log = $log;\n          $scope.message = 'Hello World!';\n        }]);\n    </file>\n    <file name=\"index.html\">\n      <div ng-controller=\"LogController\">\n        <p>Reload this page with open console, enter text and hit the log button...</p>\n        <label>Message:\n        <input type=\"text\" ng-model=\"message\" /></label>\n        <button ng-click=\"$log.log(message)\">log</button>\n        <button ng-click=\"$log.warn(message)\">warn</button>\n        <button ng-click=\"$log.info(message)\">info</button>\n        <button ng-click=\"$log.error(message)\">error</button>\n        <button ng-click=\"$log.debug(message)\">debug</button>\n      </div>\n    </file>\n  </example>"
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 13124,
            "ngdoc": "provider",
            "name": "$logProvider",
            "description": "Use the `$logProvider` to configure how the application logs messages",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 13134,
            "ngdoc": "method",
            "name": "$logProvider#debugEnabled",
            "description": "",
            "params": [
                {
                    "name": "flag",
                    "description": "enable or disable debug level messages",
                    "type": "Boolean="
                }
            ],
            "return": {
                "description": "current value if used as getter or itself (chaining) if used as setter",
                "type": "*"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 13152,
            "ngdoc": "method",
            "name": "$log#log",
            "description": "Write a log message",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 13161,
            "ngdoc": "method",
            "name": "$log#info",
            "description": "Write an information message",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 13170,
            "ngdoc": "method",
            "name": "$log#warn",
            "description": "Write a warning message",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 13179,
            "ngdoc": "method",
            "name": "$log#error",
            "description": "Write an error message",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 13188,
            "ngdoc": "method",
            "name": "$log#debug",
            "description": "Write a debug message",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 13378,
            "is_constructor": 1,
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 14911,
            "is_constructor": 1,
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 14943,
            "ngdoc": "service",
            "name": "$parse",
            "kind": "function",
            "description": "Converts Angular {@link guide/expression expression} into a function.\n\n```js\n  var getter = $parse('user.name');\n  var setter = getter.assign;\n  var context = {user:{name:'angular'}};\n  var locals = {user:{name:'local'}};\n\n  expect(getter(context)).toEqual('angular');\n  setter(context, 'newValue');\n  expect(context.user.name).toEqual('newValue');\n  expect(getter(context, locals)).toEqual('local');\n```",
            "params": [
                {
                    "name": "expression",
                    "description": "String expression to compile.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "a function which represents the compiled expression:\n\n   * `context` – `{object}` – an object against which any expressions embedded in the strings\n     are evaluated against (typically a scope object).\n   * `locals` – `{object=}` – local variables context object, useful for overriding values in\n     `context`.\n\n   The returned function also has the following properties:\n     * `literal` – `{boolean}` – whether the expression's top-level node is a JavaScript\n       literal.\n     * `constant` – `{boolean}` – whether the expression is made entirely of JavaScript\n       constant literals.\n     * `assign` – `{?function(context, value)}` – if the expression is assignable, this will be\n       set to a function to change its value on the given context.",
                "type": "Function(context, locals)"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 14984,
            "ngdoc": "provider",
            "name": "$parseProvider",
            "description": "`$parseProvider` can be used for configuring the default behavior of the {@link ng.$parse $parse}\n service.",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 15240,
            "ngdoc": "service",
            "name": "$q",
            "requires": [
                "$rootScope"
            ],
            "description": "A service that helps you run functions asynchronously, and use their return values (or exceptions)\nwhen they are done processing.\n\nThis is an implementation of promises/deferred objects inspired by\n[Kris Kowal's Q](https://github.com/kriskowal/q).\n\n$q can be used in two fashions --- one which is more similar to Kris Kowal's Q or jQuery's Deferred\nimplementations, and the other which resembles ES6 promises to some degree.\n\n# $q constructor\n\nThe streamlined ES6 style promise is essentially just using $q as a constructor which takes a `resolver`\nfunction as the first argument. This is similar to the native Promise implementation from ES6 Harmony,\nsee [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise).\n\nWhile the constructor-style use is supported, not all of the supporting methods from ES6 Harmony promises are\navailable yet.\n\nIt can be used like so:\n\n```js\n  // for the purpose of this example let's assume that variables `$q` and `okToGreet`\n  // are available in the current lexical scope (they could have been injected or passed in).\n\n  function asyncGreet(name) {\n    // perform some asynchronous operation, resolve or reject the promise when appropriate.\n    return $q(function(resolve, reject) {\n      setTimeout(function() {\n        if (okToGreet(name)) {\n          resolve('Hello, ' + name + '!');\n        } else {\n          reject('Greeting ' + name + ' is not allowed.');\n        }\n      }, 1000);\n    });\n  }\n\n  var promise = asyncGreet('Robin Hood');\n  promise.then(function(greeting) {\n    alert('Success: ' + greeting);\n  }, function(reason) {\n    alert('Failed: ' + reason);\n  });\n```\n\nNote: progress/notify callbacks are not currently supported via the ES6-style interface.\n\nNote: unlike ES6 behavior, an exception thrown in the constructor function will NOT implicitly reject the promise.\n\nHowever, the more traditional CommonJS-style usage is still available, and documented below.\n\n[The CommonJS Promise proposal](http://wiki.commonjs.org/wiki/Promises) describes a promise as an\ninterface for interacting with an object that represents the result of an action that is\nperformed asynchronously, and may or may not be finished at any given point in time.\n\nFrom the perspective of dealing with error handling, deferred and promise APIs are to\nasynchronous programming what `try`, `catch` and `throw` keywords are to synchronous programming.\n\n```js\n  // for the purpose of this example let's assume that variables `$q` and `okToGreet`\n  // are available in the current lexical scope (they could have been injected or passed in).\n\n  function asyncGreet(name) {\n    var deferred = $q.defer();\n\n    setTimeout(function() {\n      deferred.notify('About to greet ' + name + '.');\n\n      if (okToGreet(name)) {\n        deferred.resolve('Hello, ' + name + '!');\n      } else {\n        deferred.reject('Greeting ' + name + ' is not allowed.');\n      }\n    }, 1000);\n\n    return deferred.promise;\n  }\n\n  var promise = asyncGreet('Robin Hood');\n  promise.then(function(greeting) {\n    alert('Success: ' + greeting);\n  }, function(reason) {\n    alert('Failed: ' + reason);\n  }, function(update) {\n    alert('Got notification: ' + update);\n  });\n```\n\nAt first it might not be obvious why this extra complexity is worth the trouble. The payoff\ncomes in the way of guarantees that promise and deferred APIs make, see\nhttps://github.com/kriskowal/uncommonjs/blob/master/promises/specification.md.\n\nAdditionally the promise api allows for composition that is very hard to do with the\ntraditional callback ([CPS](http://en.wikipedia.org/wiki/Continuation-passing_style)) approach.\nFor more on this please see the [Q documentation](https://github.com/kriskowal/q) especially the\nsection on serial or parallel joining of promises.\n\n# The Deferred API\n\nA new instance of deferred is constructed by calling `$q.defer()`.\n\nThe purpose of the deferred object is to expose the associated Promise instance as well as APIs\nthat can be used for signaling the successful or unsuccessful completion, as well as the status\nof the task.\n\n**Methods**\n\n- `resolve(value)` – resolves the derived promise with the `value`. If the value is a rejection\n  constructed via `$q.reject`, the promise will be rejected instead.\n- `reject(reason)` – rejects the derived promise with the `reason`. This is equivalent to\n  resolving it with a rejection constructed via `$q.reject`.\n- `notify(value)` - provides updates on the status of the promise's execution. This may be called\n  multiple times before the promise is either resolved or rejected.\n\n**Properties**\n\n- promise – `{Promise}` – promise object associated with this deferred.\n\n\n# The Promise API\n\nA new promise instance is created when a deferred instance is created and can be retrieved by\ncalling `deferred.promise`.\n\nThe purpose of the promise object is to allow for interested parties to get access to the result\nof the deferred task when it completes.\n\n**Methods**\n\n- `then(successCallback, errorCallback, notifyCallback)` – regardless of when the promise was or\n  will be resolved or rejected, `then` calls one of the success or error callbacks asynchronously\n  as soon as the result is available. The callbacks are called with a single argument: the result\n  or rejection reason. Additionally, the notify callback may be called zero or more times to\n  provide a progress indication, before the promise is resolved or rejected.\n\n  This method *returns a new promise* which is resolved or rejected via the return value of the\n  `successCallback`, `errorCallback` (unless that value is a promise, in which case it is resolved\n  with the value which is resolved in that promise using\n  [promise chaining](http://www.html5rocks.com/en/tutorials/es6/promises/#toc-promises-queues)).\n  It also notifies via the return value of the `notifyCallback` method. The promise cannot be\n  resolved or rejected from the notifyCallback method.\n\n- `catch(errorCallback)` – shorthand for `promise.then(null, errorCallback)`\n\n- `finally(callback, notifyCallback)` – allows you to observe either the fulfillment or rejection of a promise,\n  but to do so without modifying the final value. This is useful to release resources or do some\n  clean-up that needs to be done whether the promise was rejected or resolved. See the [full\n  specification](https://github.com/kriskowal/q/wiki/API-Reference#promisefinallycallback) for\n  more information.\n\n# Chaining promises\n\nBecause calling the `then` method of a promise returns a new derived promise, it is easily\npossible to create a chain of promises:\n\n```js\n  promiseB = promiseA.then(function(result) {\n    return result + 1;\n  });\n\n  // promiseB will be resolved immediately after promiseA is resolved and its value\n  // will be the result of promiseA incremented by 1\n```\n\nIt is possible to create chains of any length and since a promise can be resolved with another\npromise (which will defer its resolution further), it is possible to pause/defer resolution of\nthe promises at any point in the chain. This makes it possible to implement powerful APIs like\n$http's response interceptors.\n\n\n# Differences between Kris Kowal's Q and $q\n\n There are two main differences:\n\n- $q is integrated with the {@link ng.$rootScope.Scope} Scope model observation\n  mechanism in angular, which means faster propagation of resolution or rejection into your\n  models and avoiding unnecessary browser repaints, which would result in flickering UI.\n- Q has many more features than $q, but that comes at a cost of bytes. $q is tiny, but contains\n  all the important functionality needed for common async tasks.\n\n # Testing\n\n ```js\n   it('should simulate promise', inject(function($q, $rootScope) {\n     var deferred = $q.defer();\n     var promise = deferred.promise;\n     var resolvedValue;\n\n     promise.then(function(value) { resolvedValue = value; });\n     expect(resolvedValue).toBeUndefined();\n\n     // Simulate resolving of promise\n     deferred.resolve(123);\n     // Note that the 'then' function does not get called synchronously.\n     // This is because we want the promise API to always be async, whether or not\n     // it got called synchronously or asynchronously.\n     expect(resolvedValue).toBeUndefined();\n\n     // Propagate promise resolution to 'then' functions using $apply().\n     $rootScope.$apply();\n     expect(resolvedValue).toEqual(123);\n   }));\n ```",
            "params": [
                {
                    "name": "resolver",
                    "description": "Function which is responsible for resolving or\n  rejecting the newly created promise. The first parameter is a function which resolves the\n  promise, the second parameter is a function which rejects the promise.",
                    "type": "Function(function, function)"
                }
            ],
            "return": {
                "description": "The newly created promise.",
                "type": "Promise"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 15473,
            "description": "Constructs a promise manager.",
            "params": [
                {
                    "name": "nextTick",
                    "description": "Function for executing functions in the next turn.",
                    "type": "Function(function)"
                },
                {
                    "name": "exceptionHandler",
                    "description": "Function into which unexpected exceptions are passed for\n    debugging purposes.",
                    "type": "function(...*)"
                }
            ],
            "return": {
                "description": "Promise manager.",
                "type": "Object"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 15484,
            "ngdoc": "method",
            "name": "ng.$q#defer",
            "kind": "function",
            "description": "Creates a `Deferred` object which represents a task which will finish in the future.",
            "return": {
                "description": "Returns a new instance of deferred.",
                "type": "Deferred"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 15651,
            "ngdoc": "method",
            "name": "$q#reject",
            "kind": "function",
            "description": "Creates a promise that is resolved as rejected with the specified `reason`. This api should be\nused to forward rejection in a chain of promises. If you are dealing with the last promise in\na promise chain, you don't need to worry about it.\n\nWhen comparing deferreds/promises to the familiar behavior of try/catch/throw, think of\n`reject` as the `throw` keyword in JavaScript. This also means that if you \"catch\" an error via\na promise error callback and you want to forward the error to the promise derived from the\ncurrent promise, you have to \"rethrow\" the error by returning a rejection constructed via\n`reject`.\n\n```js\n  promiseB = promiseA.then(function(result) {\n    // success: do something and resolve promiseB\n    //          with the old or a new result\n    return result;\n  }, function(reason) {\n    // error: handle the error if possible and\n    //        resolve promiseB with newPromiseOrValue,\n    //        otherwise forward the rejection to promiseB\n    if (canHandle(reason)) {\n     // handle the error and recover\n     return newPromiseOrValue;\n    }\n    return $q.reject(reason);\n  });\n```",
            "params": [
                {
                    "name": "reason",
                    "description": "Constant, message, exception or an object representing the rejection reason.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns a promise that was already resolved as rejected with the `reason`.",
                "type": "Promise"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 15721,
            "ngdoc": "method",
            "name": "$q#when",
            "kind": "function",
            "description": "Wraps an object that might be a value or a (3rd party) then-able promise into a $q promise.\nThis is useful when you are dealing with an object that might or might not be a promise, or if\nthe promise comes from a source that can't be trusted.",
            "params": [
                {
                    "name": "value",
                    "description": "Value or a promise",
                    "type": "*"
                },
                {
                    "name": "successCallback",
                    "description": "",
                    "type": "Function="
                },
                {
                    "name": "errorCallback",
                    "description": "",
                    "type": "Function="
                },
                {
                    "name": "progressCallback",
                    "description": "",
                    "type": "Function="
                }
            ],
            "return": {
                "description": "Returns a promise of the passed value or promise",
                "type": "Promise"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 15745,
            "ngdoc": "method",
            "name": "$q#resolve",
            "kind": "function",
            "description": "Alias of {@link ng.$q#when when} to maintain naming consistency with ES6.",
            "params": [
                {
                    "name": "value",
                    "description": "Value or a promise",
                    "type": "*"
                },
                {
                    "name": "successCallback",
                    "description": "",
                    "type": "Function="
                },
                {
                    "name": "errorCallback",
                    "description": "",
                    "type": "Function="
                },
                {
                    "name": "progressCallback",
                    "description": "",
                    "type": "Function="
                }
            ],
            "return": {
                "description": "Returns a promise of the passed value or promise",
                "type": "Promise"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 15761,
            "ngdoc": "method",
            "name": "$q#all",
            "kind": "function",
            "description": "Combines multiple promises into a single promise that is resolved when all of the input\npromises are resolved.",
            "params": [
                {
                    "name": "promises",
                    "description": "An array or hash of promises.",
                    "type": "Array.<Promise>|Object.<Promise>"
                }
            ],
            "return": {
                "description": "Returns a single promise that will be resolved with an array/hash of values,\n  each value corresponding to the promise at the same index/key in the `promises` array/hash.\n  If any of the promises is resolved with a rejection, this resulting promise will be rejected\n  with the same rejection value.",
                "type": "Promise"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 15864,
            "description": "DESIGN NOTES\n\nThe design decisions behind the scope are heavily favored for speed and memory consumption.\n\nThe typical use of scope is to watch the expressions, which most of the time return the same\nvalue as last time so we optimize the operation.\n\nClosures construction is expensive in terms of speed as well as memory:\n  - No closures, instead use prototypical inheritance for API\n  - Internal state needs to be stored on scope directly, which means that private state is\n    exposed as $$____ properties\n\nLoop operations are optimized by using while(count--) { ... }\n  - This means that in order to keep the same order of execution as addition we have to add\n    items to the array at the beginning (unshift) instead of at the end (push)\n\nChild scopes are created and removed often\n  - Using an array would be slow since inserts in the middle are expensive; so we use linked lists\n\nThere are fewer watches than observers. This is why you don't want the observer to be implemented\nin the same way as watch. Watch requires return of the initialization function which is expensive\nto construct.",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 15890,
            "ngdoc": "provider",
            "name": "$rootScopeProvider",
            "description": "Provider for the $rootScope service.",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 15898,
            "ngdoc": "method",
            "name": "$rootScopeProvider#digestTtl",
            "description": "Sets the number of `$digest` iterations the scope should attempt to execute before giving up and\nassuming that the model is unstable.\n\nThe current default is 10 iterations.\n\nIn complex applications it's possible that the dependencies between `$watch`s will result in\nseveral digest iterations. However if an application needs more than the default 10 digest\niterations for its model to stabilize then you should investigate what is causing the model to\ncontinuously change during the digest.\n\nIncreasing the TTL could have performance implications, so you should not change it without\nproper justification.",
            "params": [
                {
                    "name": "limit",
                    "description": "The number of digest iterations.",
                    "type": "Number"
                }
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 15920,
            "ngdoc": "service",
            "name": "$rootScope",
            "description": "Every application has a single root {@link ng.$rootScope.Scope scope}.\nAll other scopes are descendant scopes of the root scope. Scopes provide separation\nbetween the model and the view, via a mechanism for watching the model for changes.\nThey also provide event emission/broadcast and subscription facility. See the\n{@link guide/scope developer guide on scopes}.",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 15988,
            "ngdoc": "type",
            "name": "$rootScope.Scope",
            "description": "A root scope can be retrieved using the {@link ng.$rootScope $rootScope} key from the\n{@link auto.$injector $injector}. Child scopes are created using the\n{@link ng.$rootScope.Scope#$new $new()} method. (Most scopes are created automatically when\ncompiled HTML template is executed.) See also the {@link guide/scope Scopes guide} for\nan in-depth introduction and usage examples.\n\n\n# Inheritance\nA scope can inherit from a parent scope, as in this example:\n```js\n        var parent = $rootScope;\n        var child = parent.$new();\n\n        parent.salutation = \"Hello\";\n        expect(child.salutation).toEqual('Hello');\n\n        child.salutation = \"Welcome\";\n        expect(child.salutation).toEqual('Welcome');\n        expect(parent.salutation).toEqual('Hello');\n```\n\nWhen interacting with `Scope` in tests, additional helper methods are available on the\ninstances of `Scope` type. See {@link ngMock.$rootScope.Scope ngMock Scope} for additional\ndetails.",
            "params": [
                {
                    "name": "providers",
                    "description": "Map of service factory which need to be\n                                      provided for the current scope. Defaults to {@link ng}.",
                    "type": "Object.<string, function()>="
                },
                {
                    "name": "instanceCache",
                    "description": "Provides pre-instantiated services which should\n                             append/override services provided by `providers`. This is handy\n                             when unit-testing and having the need to override a default\n                             service.",
                    "type": "Object.<string, *>="
                }
            ],
            "return": {
                "description": "Newly created scope.",
                "type": "Object"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 16041,
            "ngdoc": "property",
            "name": "$rootScope.Scope#$id",
            "description": "Unique scope ID (monotonically increasing) useful for debugging.",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 16049,
            "ngdoc": "property",
            "name": "$rootScope.Scope#$parent",
            "description": "Reference to the parent scope.",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 16057,
            "ngdoc": "property",
            "name": "$rootScope.Scope#$root",
            "description": "Reference to the root scope.",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 16067,
            "ngdoc": "method",
            "name": "$rootScope.Scope#$new",
            "kind": "function",
            "description": "Creates a new child {@link ng.$rootScope.Scope scope}.\n\nThe parent scope will propagate the {@link ng.$rootScope.Scope#$digest $digest()} event.\nThe scope can be removed from the scope hierarchy using {@link ng.$rootScope.Scope#$destroy $destroy()}.\n\n{@link ng.$rootScope.Scope#$destroy $destroy()} must be called on a scope when it is\ndesired for the scope and its child scopes to be permanently detached from the parent and\nthus stop participating in model change detection and listener notification by invoking.",
            "params": [
                {
                    "name": "isolate",
                    "description": "If true, then the scope does not prototypically inherit from the\n        parent scope. The scope is isolated, as it can not see parent scope properties.\n        When creating widgets, it is useful for the widget to not accidentally read parent\n        state.",
                    "type": "Boolean"
                },
                {
                    "name": "parent",
                    "description": "The {@link ng.$rootScope.Scope `Scope`} that will be the `$parent`\n                             of the newly created scope. Defaults to `this` scope if not provided.\n                             This is used when creating a transclude scope to correctly place it\n                             in the scope hierarchy while maintaining the correct prototypical\n                             inheritance.",
                    "type": "Scope",
                    "optional": true,
                    "optdefault": "this"
                }
            ],
            "return": {
                "description": "The newly created child scope.",
                "type": "Object"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 16131,
            "ngdoc": "method",
            "name": "$rootScope.Scope#$watch",
            "kind": "function",
            "description": "Registers a `listener` callback to be executed whenever the `watchExpression` changes.\n\n- The `watchExpression` is called on every call to {@link ng.$rootScope.Scope#$digest\n  $digest()} and should return the value that will be watched. (`watchExpression` should not change\n  its value when executed multiple times with the same input because it may be executed multiple\n  times by {@link ng.$rootScope.Scope#$digest $digest()}. That is, `watchExpression` should be\n  [idempotent](http://en.wikipedia.org/wiki/Idempotence).\n- The `listener` is called only when the value from the current `watchExpression` and the\n  previous call to `watchExpression` are not equal (with the exception of the initial run,\n  see below). Inequality is determined according to reference inequality,\n  [strict comparison](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Comparison_Operators)\n   via the `!==` Javascript operator, unless `objectEquality == true`\n  (see next point)\n- When `objectEquality == true`, inequality of the `watchExpression` is determined\n  according to the {@link angular.equals} function. To save the value of the object for\n  later comparison, the {@link angular.copy} function is used. This therefore means that\n  watching complex objects will have adverse memory and performance implications.\n- The watch `listener` may change the model, which may trigger other `listener`s to fire.\n  This is achieved by rerunning the watchers until no changes are detected. The rerun\n  iteration limit is 10 to prevent an infinite loop deadlock.\n\n\nIf you want to be notified whenever {@link ng.$rootScope.Scope#$digest $digest} is called,\nyou can register a `watchExpression` function with no `listener`. (Be prepared for\nmultiple calls to your `watchExpression` because it will execute multiple times in a\nsingle {@link ng.$rootScope.Scope#$digest $digest} cycle if a change is detected.)\n\nAfter a watcher is registered with the scope, the `listener` fn is called asynchronously\n(via {@link ng.$rootScope.Scope#$evalAsync $evalAsync}) to initialize the\nwatcher. In rare cases, this is undesirable because the listener is called when the result\nof `watchExpression` didn't change. To detect this scenario within the `listener` fn, you\ncan compare the `newVal` and `oldVal`. If these two values are identical (`===`) then the\nlistener was called due to initialization.\n\n\n\n# Example\n```js\n          // let's assume that scope was dependency injected as the $rootScope\n          var scope = $rootScope;\n          scope.name = 'misko';\n          scope.counter = 0;\n\n          expect(scope.counter).toEqual(0);\n          scope.$watch('name', function(newValue, oldValue) {\n            scope.counter = scope.counter + 1;\n          });\n          expect(scope.counter).toEqual(0);\n\n          scope.$digest();\n          // the listener is always called during the first $digest loop after it was registered\n          expect(scope.counter).toEqual(1);\n\n          scope.$digest();\n          // but now it will not be called unless the value changes\n          expect(scope.counter).toEqual(1);\n\n          scope.name = 'adam';\n          scope.$digest();\n          expect(scope.counter).toEqual(2);\n\n\n\n          // Using a function as a watchExpression\n          var food;\n          scope.foodCounter = 0;\n          expect(scope.foodCounter).toEqual(0);\n          scope.$watch(\n            // This function returns the value being watched. It is called for each turn of the $digest loop\n            function() { return food; },\n            // This is the change listener, called when the value returned from the above function changes\n            function(newValue, oldValue) {\n              if ( newValue !== oldValue ) {\n                // Only increment the counter if the value changed\n                scope.foodCounter = scope.foodCounter + 1;\n              }\n            }\n          );\n          // No digest has been run so the counter will be zero\n          expect(scope.foodCounter).toEqual(0);\n\n          // Run the digest but since food has not changed count will still be zero\n          scope.$digest();\n          expect(scope.foodCounter).toEqual(0);\n\n          // Update food and run digest.  Now the counter will increment\n          food = 'cheeseburger';\n          scope.$digest();\n          expect(scope.foodCounter).toEqual(1);\n\n```",
            "params": [
                {
                    "name": "watchExpression",
                    "description": "Expression that is evaluated on each\n   {@link ng.$rootScope.Scope#$digest $digest} cycle. A change in the return value triggers\n   a call to the `listener`.\n\n   - `string`: Evaluated as {@link guide/expression expression}\n   - `function(scope)`: called with current `scope` as a parameter.",
                    "type": "(function()|string)"
                },
                {
                    "name": "listener",
                    "description": "Callback called whenever the value\n   of `watchExpression` changes.\n\n   - `newVal` contains the current value of the `watchExpression`\n   - `oldVal` contains the previous value of the `watchExpression`\n   - `scope` refers to the current scope",
                    "type": "Function(newVal, oldVal, scope)"
                },
                {
                    "name": "objectEquality",
                    "description": "Compare for object equality using {@link angular.equals} instead of\n    comparing for reference equality.",
                    "type": "Boolean=",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "return": {
                "description": "Returns a deregistration function for this listener.",
                "type": "Function()"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 16285,
            "ngdoc": "method",
            "name": "$rootScope.Scope#$watchGroup",
            "kind": "function",
            "description": "A variant of {@link ng.$rootScope.Scope#$watch $watch()} where it watches an array of `watchExpressions`.\nIf any one expression in the collection changes the `listener` is executed.\n\n- The items in the `watchExpressions` array are observed via standard $watch operation and are examined on every\n  call to $digest() to see if any items changes.\n- The `listener` is called whenever any expression in the `watchExpressions` array changes.",
            "params": [
                {
                    "name": "watchExpressions",
                    "description": "Array of expressions that will be individually\nwatched using {@link ng.$rootScope.Scope#$watch $watch()}",
                    "type": "Array.<string|Function(scope)>"
                },
                {
                    "name": "listener",
                    "description": "Callback called whenever the return value of any\n   expression in `watchExpressions` changes\n   The `newValues` array contains the current values of the `watchExpressions`, with the indexes matching\n   those of `watchExpression`\n   and the `oldValues` array contains the previous values of the `watchExpressions`, with the indexes matching\n   those of `watchExpression`\n   The `scope` refers to the current scope.",
                    "type": "Function(newValues, oldValues, scope)"
                }
            ],
            "return": {
                "description": "Returns a de-registration function for all listeners.",
                "type": "Function()"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 16369,
            "ngdoc": "method",
            "name": "$rootScope.Scope#$watchCollection",
            "kind": "function",
            "description": "Shallow watches the properties of an object and fires whenever any of the properties change\n(for arrays, this implies watching the array items; for object maps, this implies watching\nthe properties). If a change is detected, the `listener` callback is fired.\n\n- The `obj` collection is observed via standard $watch operation and is examined on every\n  call to $digest() to see if any items have been added, removed, or moved.\n- The `listener` is called whenever anything within the `obj` has changed. Examples include\n  adding, removing, and moving items belonging to an object or array.\n\n\n# Example\n```js\n         $scope.names = ['igor', 'matias', 'misko', 'james'];\n         $scope.dataCount = 4;\n\n         $scope.$watchCollection('names', function(newNames, oldNames) {\n           $scope.dataCount = newNames.length;\n         });\n\n         expect($scope.dataCount).toEqual(4);\n         $scope.$digest();\n\n         //still at 4 ... no changes\n         expect($scope.dataCount).toEqual(4);\n\n         $scope.names.pop();\n         $scope.$digest();\n\n         //now there's been a change\n         expect($scope.dataCount).toEqual(3);\n```",
            "params": [
                {
                    "name": "obj",
                    "description": "Evaluated as {@link guide/expression expression}. The\n   expression value should evaluate to an object or an array which is observed on each\n   {@link ng.$rootScope.Scope#$digest $digest} cycle. Any shallow change within the\n   collection will trigger a call to the `listener`.",
                    "type": "String|function(scope)"
                },
                {
                    "name": "listener",
                    "description": "a callback function called\n   when a change is detected.\n   - The `newCollection` object is the newly modified data obtained from the `obj` expression\n   - The `oldCollection` object is a copy of the former collection data.\n     Due to performance considerations, the`oldCollection` value is computed only if the\n     `listener` function declares two or more arguments.\n   - The `scope` argument refers to the current scope.",
                    "type": "Function(newCollection, oldCollection, scope)"
                }
            ],
            "return": {
                "description": "Returns a de-registration function for this listener. When the\n   de-registration function is executed, the internal watch operation is terminated.",
                "type": "Function()"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 16556,
            "ngdoc": "method",
            "name": "$rootScope.Scope#$digest",
            "kind": "function",
            "description": "Processes all of the {@link ng.$rootScope.Scope#$watch watchers} of the current scope and\nits children. Because a {@link ng.$rootScope.Scope#$watch watcher}'s listener can change\nthe model, the `$digest()` keeps calling the {@link ng.$rootScope.Scope#$watch watchers}\nuntil no more listeners are firing. This means that it is possible to get into an infinite\nloop. This function will throw `'Maximum iteration limit exceeded.'` if the number of\niterations exceeds 10.\n\nUsually, you don't call `$digest()` directly in\n{@link ng.directive:ngController controllers} or in\n{@link ng.$compileProvider#directive directives}.\nInstead, you should call {@link ng.$rootScope.Scope#$apply $apply()} (typically from within\na {@link ng.$compileProvider#directive directive}), which will force a `$digest()`.\n\nIf you want to be notified whenever `$digest()` is called,\nyou can register a `watchExpression` function with\n{@link ng.$rootScope.Scope#$watch $watch()} with no `listener`.\n\nIn unit tests, you may need to call `$digest()` to simulate the scope life cycle.\n\n# Example\n```js\n          var scope = ...;\n          scope.name = 'misko';\n          scope.counter = 0;\n\n          expect(scope.counter).toEqual(0);\n          scope.$watch('name', function(newValue, oldValue) {\n            scope.counter = scope.counter + 1;\n          });\n          expect(scope.counter).toEqual(0);\n\n          scope.$digest();\n          // the listener is always called during the first $digest loop after it was registered\n          expect(scope.counter).toEqual(1);\n\n          scope.$digest();\n          // but now it will not be called unless the value changes\n          expect(scope.counter).toEqual(1);\n\n          scope.name = 'adam';\n          scope.$digest();\n          expect(scope.counter).toEqual(2);\n```",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 16722,
            "ngdoc": "event",
            "name": "$rootScope.Scope#$destroy",
            "eventtype": "broadcast on scope being destroyed",
            "description": "Broadcasted when a scope and its children are being destroyed.\n\nNote that, in AngularJS, there is also a `$destroy` jQuery event, which can be used to\nclean up DOM bindings before an element is removed from the DOM.",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 16734,
            "ngdoc": "method",
            "name": "$rootScope.Scope#$destroy",
            "kind": "function",
            "description": "Removes the current scope (and all of its children) from the parent scope. Removal implies\nthat calls to {@link ng.$rootScope.Scope#$digest $digest()} will no longer\npropagate to the current scope and its children. Removal also implies that the current\nscope is eligible for garbage collection.\n\nThe `$destroy()` is usually used by directives such as\n{@link ng.directive:ngRepeat ngRepeat} for managing the\nunrolling of the loop.\n\nJust before a scope is destroyed, a `$destroy` event is broadcasted on this scope.\nApplication code can register a `$destroy` event handler that will give it a chance to\nperform any necessary cleanup.\n\nNote that, in AngularJS, there is also a `$destroy` jQuery event, which can be used to\nclean up DOM bindings before an element is removed from the DOM.",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 16791,
            "ngdoc": "method",
            "name": "$rootScope.Scope#$eval",
            "kind": "function",
            "description": "Executes the `expression` on the current scope and returns the result. Any exceptions in\nthe expression are propagated (uncaught). This is useful when evaluating Angular\nexpressions.\n\n# Example\n```js\n          var scope = ng.$rootScope.Scope();\n          scope.a = 1;\n          scope.b = 2;\n\n          expect(scope.$eval('a+b')).toEqual(3);\n          expect(scope.$eval(function(scope){ return scope.a + scope.b; })).toEqual(3);\n```",
            "params": [
                {
                    "name": "expression",
                    "description": "An angular expression to be executed.\n\n   - `string`: execute using the rules as defined in  {@link guide/expression expression}.\n   - `function(scope)`: execute the function with the current `scope` parameter.",
                    "type": "(string|function())="
                },
                {
                    "name": "locals",
                    "description": "Local variables object, useful for overriding values in scope.",
                    "type": "(object)="
                }
            ],
            "return": {
                "description": "The result of evaluating the expression.",
                "type": "*"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 16823,
            "ngdoc": "method",
            "name": "$rootScope.Scope#$evalAsync",
            "kind": "function",
            "description": "Executes the expression on the current scope at a later point in time.\n\nThe `$evalAsync` makes no guarantees as to when the `expression` will be executed, only\nthat:\n\n  - it will execute after the function that scheduled the evaluation (preferably before DOM\n    rendering).\n  - at least one {@link ng.$rootScope.Scope#$digest $digest cycle} will be performed after\n    `expression` execution.\n\nAny exceptions from the execution of the expression are forwarded to the\n{@link ng.$exceptionHandler $exceptionHandler} service.\n\n__Note:__ if this function is called outside of a `$digest` cycle, a new `$digest` cycle\nwill be scheduled. However, it is encouraged to always call code that changes the model\nfrom within an `$apply` call. That includes code evaluated via `$evalAsync`.",
            "params": [
                {
                    "name": "expression",
                    "description": "An angular expression to be executed.\n\n   - `string`: execute using the rules as defined in {@link guide/expression expression}.\n   - `function(scope)`: execute the function with the current `scope` parameter.",
                    "type": "(string|function())="
                },
                {
                    "name": "locals",
                    "description": "Local variables object, useful for overriding values in scope.",
                    "type": "(object)="
                }
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 16871,
            "ngdoc": "method",
            "name": "$rootScope.Scope#$apply",
            "kind": "function",
            "description": "`$apply()` is used to execute an expression in angular from outside of the angular\nframework. (For example from browser DOM events, setTimeout, XHR or third party libraries).\nBecause we are calling into the angular framework we need to perform proper scope life\ncycle of {@link ng.$exceptionHandler exception handling},\n{@link ng.$rootScope.Scope#$digest executing watches}.\n\n## Life cycle\n\n# Pseudo-Code of `$apply()`\n```js\n          function $apply(expr) {\n            try {\n              return $eval(expr);\n            } catch (e) {\n              $exceptionHandler(e);\n            } finally {\n              $root.$digest();\n            }\n          }\n```\n\n\nScope's `$apply()` method transitions through the following stages:\n\n1. The {@link guide/expression expression} is executed using the\n   {@link ng.$rootScope.Scope#$eval $eval()} method.\n2. Any exceptions from the execution of the expression are forwarded to the\n   {@link ng.$exceptionHandler $exceptionHandler} service.\n3. The {@link ng.$rootScope.Scope#$watch watch} listeners are fired immediately after the\n   expression was executed using the {@link ng.$rootScope.Scope#$digest $digest()} method.",
            "params": [
                {
                    "name": "exp",
                    "description": "An angular expression to be executed.\n\n   - `string`: execute using the rules as defined in {@link guide/expression expression}.\n   - `function(scope)`: execute the function with current `scope` parameter.",
                    "type": "(string|function())="
                }
            ],
            "return": {
                "description": "The result of evaluating the expression.",
                "type": "*"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 16936,
            "ngdoc": "method",
            "name": "$rootScope.Scope#$applyAsync",
            "kind": "function",
            "description": "Schedule the invocation of $apply to occur at a later time. The actual time difference\nvaries across browsers, but is typically around ~10 milliseconds.\n\nThis can be used to queue up multiple expressions which need to be evaluated in the same\ndigest.",
            "params": [
                {
                    "name": "exp",
                    "description": "An angular expression to be executed.\n\n   - `string`: execute using the rules as defined in {@link guide/expression expression}.\n   - `function(scope)`: execute the function with current `scope` parameter.",
                    "type": "(string|function())="
                }
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 16964,
            "ngdoc": "method",
            "name": "$rootScope.Scope#$on",
            "kind": "function",
            "description": "Listens on events of a given type. See {@link ng.$rootScope.Scope#$emit $emit} for\ndiscussion of event life cycle.\n\nThe event listener function format is: `function(event, args...)`. The `event` object\npassed into the listener has the following attributes:\n\n  - `targetScope` - `{Scope}`: the scope on which the event was `$emit`-ed or\n    `$broadcast`-ed.\n  - `currentScope` - `{Scope}`: the scope that is currently handling the event. Once the\n    event propagates through the scope hierarchy, this property is set to null.\n  - `name` - `{string}`: name of the event.\n  - `stopPropagation` - `{function=}`: calling `stopPropagation` function will cancel\n    further event propagation (available only for events that were `$emit`-ed).\n  - `preventDefault` - `{function}`: calling `preventDefault` sets `defaultPrevented` flag\n    to true.\n  - `defaultPrevented` - `{boolean}`: true if `preventDefault` was called.",
            "params": [
                {
                    "name": "name",
                    "description": "Event name to listen on.",
                    "type": "String"
                },
                {
                    "name": "listener",
                    "description": "Function to call when the event is emitted.",
                    "type": "function(event, ...args)"
                }
            ],
            "return": {
                "description": "Returns a deregistration function for this listener.",
                "type": "Function()"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 17017,
            "ngdoc": "method",
            "name": "$rootScope.Scope#$emit",
            "kind": "function",
            "description": "Dispatches an event `name` upwards through the scope hierarchy notifying the\nregistered {@link ng.$rootScope.Scope#$on} listeners.\n\nThe event life cycle starts at the scope on which `$emit` was called. All\n{@link ng.$rootScope.Scope#$on listeners} listening for `name` event on this scope get\nnotified. Afterwards, the event traverses upwards toward the root scope and calls all\nregistered listeners along the way. The event will stop propagating if one of the listeners\ncancels it.\n\nAny exception emitted from the {@link ng.$rootScope.Scope#$on listeners} will be passed\nonto the {@link ng.$exceptionHandler $exceptionHandler} service.",
            "params": [
                {
                    "name": "name",
                    "description": "Event name to emit.",
                    "type": "String"
                },
                {
                    "name": "args",
                    "description": "Optional one or more arguments which will be passed onto the event listeners.",
                    "type": "...*"
                }
            ],
            "return": {
                "description": "Event object (see {@link ng.$rootScope.Scope#$on}).",
                "type": "Object"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 17090,
            "ngdoc": "method",
            "name": "$rootScope.Scope#$broadcast",
            "kind": "function",
            "description": "Dispatches an event `name` downwards to all child scopes (and their children) notifying the\nregistered {@link ng.$rootScope.Scope#$on} listeners.\n\nThe event life cycle starts at the scope on which `$broadcast` was called. All\n{@link ng.$rootScope.Scope#$on listeners} listening for `name` event on this scope get\nnotified. Afterwards, the event propagates to all direct and indirect scopes of the current\nscope and calls all registered listeners along the way. The event cannot be canceled.\n\nAny exception emitted from the {@link ng.$rootScope.Scope#$on listeners} will be passed\nonto the {@link ng.$exceptionHandler $exceptionHandler} service.",
            "params": [
                {
                    "name": "name",
                    "description": "Event name to broadcast.",
                    "type": "String"
                },
                {
                    "name": "args",
                    "description": "Optional one or more arguments which will be passed onto the event listeners.",
                    "type": "...*"
                }
            ],
            "return": {
                "description": "Event object, see {@link ng.$rootScope.Scope#$on}",
                "type": "Object"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 17204,
            "description": "function used as an initial value for watchers.\nbecause it's unique we can easily tell it apart from other values",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 17231,
            "ngdoc": "service",
            "name": "$rootElement",
            "description": "The root element of Angular application. This is either the element where {@link\nng.directive:ngApp ngApp} was declared or the element passed into\n{@link angular.bootstrap}. The element represents the root element of application. It is also the\nlocation where the application's {@link auto.$injector $injector} service gets\npublished, and can be retrieved using `$rootElement.injector()`.",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 17246,
            "description": "Private service to sanitize uris for links and images. Used by $compile and $sanitize.",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 17254,
            "description": "Retrieves or overrides the default regular expression that is used for whitelisting of safe\nurls during a[href] sanitization.\n\nThe sanitization is a security measure aimed at prevent XSS attacks via html links.\n\nAny url about to be assigned to a[href] via data-binding is first normalized and turned into\nan absolute url. Afterwards, the url is matched against the `aHrefSanitizationWhitelist`\nregular expression. If a match is found, the original url is written into the dom. Otherwise,\nthe absolute url is prefixed with `'unsafe:'` string and only then is it written into the DOM.",
            "params": [
                {
                    "name": "regexp",
                    "description": "New regexp to whitelist urls with.",
                    "type": "RegExp="
                }
            ],
            "return": {
                "description": "Current RegExp if called without value or self for\n   chaining otherwise.",
                "type": "RegExp|ng.$compileProvider"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 17279,
            "description": "Retrieves or overrides the default regular expression that is used for whitelisting of safe\nurls during img[src] sanitization.\n\nThe sanitization is a security measure aimed at prevent XSS attacks via html links.\n\nAny url about to be assigned to img[src] via data-binding is first normalized and turned into\nan absolute url. Afterwards, the url is matched against the `imgSrcSanitizationWhitelist`\nregular expression. If a match is found, the original url is written into the dom. Otherwise,\nthe absolute url is prefixed with `'unsafe:'` string and only then is it written into the DOM.",
            "params": [
                {
                    "name": "regexp",
                    "description": "New regexp to whitelist urls with.",
                    "type": "RegExp="
                }
            ],
            "return": {
                "description": "Current RegExp if called without value or self for\n   chaining otherwise.",
                "type": "RegExp|ng.$compileProvider"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 17380,
            "ngdoc": "service",
            "name": "$sceDelegate",
            "kind": "function",
            "description": "`$sceDelegate` is a service that is used by the `$sce` service to provide {@link ng.$sce Strict\nContextual Escaping (SCE)} services to AngularJS.\n\nTypically, you would configure or override the {@link ng.$sceDelegate $sceDelegate} instead of\nthe `$sce` service to customize the way Strict Contextual Escaping works in AngularJS.  This is\nbecause, while the `$sce` provides numerous shorthand methods, etc., you really only need to\noverride 3 core functions (`trustAs`, `getTrusted` and `valueOf`) to replace the way things\nwork because `$sce` delegates to `$sceDelegate` for these operations.\n\nRefer {@link ng.$sceDelegateProvider $sceDelegateProvider} to configure this service.\n\nThe default instance of `$sceDelegate` should work out of the box with little pain.  While you\ncan override it completely to change the behavior of `$sce`, the common case would\ninvolve configuring the {@link ng.$sceDelegateProvider $sceDelegateProvider} instead by setting\nyour own whitelists and blacklists for trusting URLs used for loading AngularJS resources such as\ntemplates.  Refer {@link ng.$sceDelegateProvider#resourceUrlWhitelist\n$sceDelegateProvider.resourceUrlWhitelist} and {@link\nng.$sceDelegateProvider#resourceUrlBlacklist $sceDelegateProvider.resourceUrlBlacklist}",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 17407,
            "ngdoc": "provider",
            "name": "$sceDelegateProvider",
            "description": "The `$sceDelegateProvider` provider allows developers to configure the {@link ng.$sceDelegate\n$sceDelegate} service.  This allows one to get/set the whitelists and blacklists used to ensure\nthat the URLs used for sourcing Angular templates are safe.  Refer {@link\nng.$sceDelegateProvider#resourceUrlWhitelist $sceDelegateProvider.resourceUrlWhitelist} and\n{@link ng.$sceDelegateProvider#resourceUrlBlacklist $sceDelegateProvider.resourceUrlBlacklist}\n\nFor the general details about this service in Angular, read the main page for {@link ng.$sce\nStrict Contextual Escaping (SCE)}.\n\n**Example**:  Consider the following case. <a name=\"example\"></a>\n\n- your app is hosted at url `http://myapp.example.com/`\n- but some of your templates are hosted on other domains you control such as\n  `http://srv01.assets.example.com/`,  `http://srv02.assets.example.com/`, etc.\n- and you have an open redirect at `http://myapp.example.com/clickThru?...`.\n\nHere is what a secure configuration for this scenario might look like:\n\n```\n angular.module('myApp', []).config(function($sceDelegateProvider) {\n   $sceDelegateProvider.resourceUrlWhitelist([\n     // Allow same origin resource loads.\n     'self',\n     // Allow loading from our assets domain.  Notice the difference between * and **.\n     'http://srv*.assets.example.com/**'\n   ]);\n\n   // The blacklist overrides the whitelist so the open redirect here is blocked.\n   $sceDelegateProvider.resourceUrlBlacklist([\n     'http://myapp.example.com/clickThru**'\n   ]);\n });\n```",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 17454,
            "ngdoc": "method",
            "name": "$sceDelegateProvider#resourceUrlWhitelist",
            "kind": "function",
            "params": [
                {
                    "name": "whitelist",
                    "description": "When provided, replaces the resourceUrlWhitelist with the value\n   provided.  This must be an array or null.  A snapshot of this array is used so further\n   changes to the array are ignored.\n\n   Follow {@link ng.$sce#resourceUrlPatternItem this link} for a description of the items\n   allowed in this array.\n\n   <div class=\"alert alert-warning\">\n   **Note:** an empty whitelist array will block all URLs!\n   </div>",
                    "type": "Array="
                }
            ],
            "return": {
                "description": "the currently set whitelist array.\n\nThe **default value** when no whitelist has been explicitly set is `['self']` allowing only\nsame origin resource requests.",
                "type": "Array"
            },
            "description": "Sets/Gets the whitelist of trusted resource URLs.",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 17485,
            "ngdoc": "method",
            "name": "$sceDelegateProvider#resourceUrlBlacklist",
            "kind": "function",
            "params": [
                {
                    "name": "blacklist",
                    "description": "When provided, replaces the resourceUrlBlacklist with the value\n   provided.  This must be an array or null.  A snapshot of this array is used so further\n   changes to the array are ignored.\n\n   Follow {@link ng.$sce#resourceUrlPatternItem this link} for a description of the items\n   allowed in this array.\n\n   The typical usage for the blacklist is to **block\n   [open redirects](http://cwe.mitre.org/data/definitions/601.html)** served by your domain as\n   these would otherwise be trusted but actually return content from the redirected domain.\n\n   Finally, **the blacklist overrides the whitelist** and has the final say.",
                    "type": "Array="
                }
            ],
            "return": {
                "description": "the currently set blacklist array.\n\nThe **default value** when no whitelist has been explicitly set is the empty array (i.e. there\nis no blacklist.)",
                "type": "Array"
            },
            "description": "Sets/Gets the blacklist of trusted resource URLs.",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 17588,
            "ngdoc": "method",
            "name": "$sceDelegate#trustAs",
            "description": "Returns an object that is trusted by angular for use in specified strict\ncontextual escaping contexts (such as ng-bind-html, ng-include, any src\nattribute interpolation, any dom event binding attribute interpolation\nsuch as for onclick,  etc.) that uses the provided value.\nSee {@link ng.$sce $sce} for enabling strict contextual escaping.",
            "params": [
                {
                    "name": "type",
                    "description": "The kind of context in which this value is safe for use.  e.g. url,\n  resourceUrl, html, js and css.",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "The value that that should be considered trusted/safe.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "A value that can be used to stand in for the provided `value` in places\nwhere Angular expects a $sce.trustAs() return value.",
                "type": "*"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 17625,
            "ngdoc": "method",
            "name": "$sceDelegate#valueOf",
            "description": "If the passed parameter had been returned by a prior call to {@link ng.$sceDelegate#trustAs\n`$sceDelegate.trustAs`}, returns the value that had been passed to {@link\nng.$sceDelegate#trustAs `$sceDelegate.trustAs`}.\n\nIf the passed parameter is not a value that had been returned by {@link\nng.$sceDelegate#trustAs `$sceDelegate.trustAs`}, returns it as-is.",
            "params": [
                {
                    "name": "value",
                    "description": "The result of a prior {@link ng.$sceDelegate#trustAs `$sceDelegate.trustAs`}\n     call or anything else.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "The `value` that was originally provided to {@link ng.$sceDelegate#trustAs\n    `$sceDelegate.trustAs`} if `value` is the result of such a call.  Otherwise, returns\n    `value` unchanged.",
                "type": "*"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 17651,
            "ngdoc": "method",
            "name": "$sceDelegate#getTrusted",
            "description": "Takes the result of a {@link ng.$sceDelegate#trustAs `$sceDelegate.trustAs`} call and\nreturns the originally supplied value if the queried context type is a supertype of the\ncreated type.  If this condition isn't satisfied, throws an exception.\n\n<div class=\"alert alert-danger\">\nDisabling auto-escaping is extremely dangerous, it usually creates a Cross Site Scripting\n(XSS) vulnerability in your application.\n</div>",
            "params": [
                {
                    "name": "type",
                    "description": "The kind of context in which this value is to be used.",
                    "type": "String"
                },
                {
                    "name": "maybeTrusted",
                    "description": "The result of a prior {@link ng.$sceDelegate#trustAs\n    `$sceDelegate.trustAs`} call.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "The value the was originally provided to {@link ng.$sceDelegate#trustAs\n    `$sceDelegate.trustAs`} if valid in this context.  Otherwise, throws an exception.",
                "type": "*"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 17703,
            "ngdoc": "provider",
            "name": "$sceProvider",
            "description": "The $sceProvider provider allows developers to configure the {@link ng.$sce $sce} service.\n-   enable/disable Strict Contextual Escaping (SCE) in a module\n-   override the default implementation with a custom delegate\n\nRead more about {@link ng.$sce Strict Contextual Escaping (SCE)}.",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 17717,
            "ngdoc": "service",
            "name": "$sce",
            "kind": "function",
            "description": "`$sce` is a service that provides Strict Contextual Escaping services to AngularJS.\n\n# Strict Contextual Escaping\n\nStrict Contextual Escaping (SCE) is a mode in which AngularJS requires bindings in certain\ncontexts to result in a value that is marked as safe to use for that context.  One example of\nsuch a context is binding arbitrary html controlled by the user via `ng-bind-html`.  We refer\nto these contexts as privileged or SCE contexts.\n\nAs of version 1.2, Angular ships with SCE enabled by default.\n\nNote:  When enabled (the default), IE<11 in quirks mode is not supported.  In this mode, IE<11 allow\none to execute arbitrary javascript by the use of the expression() syntax.  Refer\n<http://blogs.msdn.com/b/ie/archive/2008/10/16/ending-expressions.aspx> to learn more about them.\nYou can ensure your document is in standards mode and not quirks mode by adding `<!doctype html>`\nto the top of your HTML document.\n\nSCE assists in writing code in way that (a) is secure by default and (b) makes auditing for\nsecurity vulnerabilities such as XSS, clickjacking, etc. a lot easier.\n\nHere's an example of a binding in a privileged context:\n\n```\n<input ng-model=\"userHtml\" aria-label=\"User input\">\n<div ng-bind-html=\"userHtml\"></div>\n```\n\nNotice that `ng-bind-html` is bound to `userHtml` controlled by the user.  With SCE\ndisabled, this application allows the user to render arbitrary HTML into the DIV.\nIn a more realistic example, one may be rendering user comments, blog articles, etc. via\nbindings.  (HTML is just one example of a context where rendering user controlled input creates\nsecurity vulnerabilities.)\n\nFor the case of HTML, you might use a library, either on the client side, or on the server side,\nto sanitize unsafe HTML before binding to the value and rendering it in the document.\n\nHow would you ensure that every place that used these types of bindings was bound to a value that\nwas sanitized by your library (or returned as safe for rendering by your server?)  How can you\nensure that you didn't accidentally delete the line that sanitized the value, or renamed some\nproperties/fields and forgot to update the binding to the sanitized value?\n\nTo be secure by default, you want to ensure that any such bindings are disallowed unless you can\ndetermine that something explicitly says it's safe to use a value for binding in that\ncontext.  You can then audit your code (a simple grep would do) to ensure that this is only done\nfor those values that you can easily tell are safe - because they were received from your server,\nsanitized by your library, etc.  You can organize your codebase to help with this - perhaps\nallowing only the files in a specific directory to do this.  Ensuring that the internal API\nexposed by that code doesn't markup arbitrary values as safe then becomes a more manageable task.\n\nIn the case of AngularJS' SCE service, one uses {@link ng.$sce#trustAs $sce.trustAs}\n(and shorthand methods such as {@link ng.$sce#trustAsHtml $sce.trustAsHtml}, etc.) to\nobtain values that will be accepted by SCE / privileged contexts.\n\n\n## How does it work?\n\nIn privileged contexts, directives and code will bind to the result of {@link ng.$sce#getTrusted\n$sce.getTrusted(context, value)} rather than to the value directly.  Directives use {@link\nng.$sce#parseAs $sce.parseAs} rather than `$parse` to watch attribute bindings, which performs the\n{@link ng.$sce#getTrusted $sce.getTrusted} behind the scenes on non-constant literals.\n\nAs an example, {@link ng.directive:ngBindHtml ngBindHtml} uses {@link\nng.$sce#parseAsHtml $sce.parseAsHtml(binding expression)}.  Here's the actual code (slightly\nsimplified):\n\n```\nvar ngBindHtmlDirective = ['$sce', function($sce) {\n  return function(scope, element, attr) {\n    scope.$watch($sce.parseAsHtml(attr.ngBindHtml), function(value) {\n      element.html(value || '');\n    });\n  };\n}];\n```\n\n## Impact on loading templates\n\nThis applies both to the {@link ng.directive:ngInclude `ng-include`} directive as well as\n`templateUrl`'s specified by {@link guide/directive directives}.\n\nBy default, Angular only loads templates from the same domain and protocol as the application\ndocument.  This is done by calling {@link ng.$sce#getTrustedResourceUrl\n$sce.getTrustedResourceUrl} on the template URL.  To load templates from other domains and/or\nprotocols, you may either {@link ng.$sceDelegateProvider#resourceUrlWhitelist whitelist\nthem} or {@link ng.$sce#trustAsResourceUrl wrap it} into a trusted value.\n\n*Please note*:\nThe browser's\n[Same Origin Policy](https://code.google.com/p/browsersec/wiki/Part2#Same-origin_policy_for_XMLHttpRequest)\nand [Cross-Origin Resource Sharing (CORS)](http://www.w3.org/TR/cors/)\npolicy apply in addition to this and may further restrict whether the template is successfully\nloaded.  This means that without the right CORS policy, loading templates from a different domain\nwon't work on all browsers.  Also, loading templates from `file://` URL does not work on some\nbrowsers.\n\n## This feels like too much overhead\n\nIt's important to remember that SCE only applies to interpolation expressions.\n\nIf your expressions are constant literals, they're automatically trusted and you don't need to\ncall `$sce.trustAs` on them (remember to include the `ngSanitize` module) (e.g.\n`<div ng-bind-html=\"'<b>implicitly trusted</b>'\"></div>`) just works.\n\nAdditionally, `a[href]` and `img[src]` automatically sanitize their URLs and do not pass them\nthrough {@link ng.$sce#getTrusted $sce.getTrusted}.  SCE doesn't play a role here.\n\nThe included {@link ng.$sceDelegate $sceDelegate} comes with sane defaults to allow you to load\ntemplates in `ng-include` from your application's domain without having to even know about SCE.\nIt blocks loading templates from other domains or loading templates over http from an https\nserved document.  You can change these by setting your own custom {@link\nng.$sceDelegateProvider#resourceUrlWhitelist whitelists} and {@link\nng.$sceDelegateProvider#resourceUrlBlacklist blacklists} for matching such URLs.\n\nThis significantly reduces the overhead.  It is far easier to pay the small overhead and have an\napplication that's secure and can be audited to verify that with much more ease than bolting\nsecurity onto an application later.\n\n<a name=\"contexts\"></a>\n## What trusted context types are supported?\n\n| Context             | Notes          |\n|---------------------|----------------|\n| `$sce.HTML`         | For HTML that's safe to source into the application.  The {@link ng.directive:ngBindHtml ngBindHtml} directive uses this context for bindings. If an unsafe value is encountered and the {@link ngSanitize $sanitize} module is present this will sanitize the value instead of throwing an error. |\n| `$sce.CSS`          | For CSS that's safe to source into the application.  Currently unused.  Feel free to use it in your own directives. |\n| `$sce.URL`          | For URLs that are safe to follow as links.  Currently unused (`<a href=` and `<img src=` sanitize their urls and don't constitute an SCE context. |\n| `$sce.RESOURCE_URL` | For URLs that are not only safe to follow as links, but whose contents are also safe to include in your application.  Examples include `ng-include`, `src` / `ngSrc` bindings for tags other than `IMG` (e.g. `IFRAME`, `OBJECT`, etc.)  <br><br>Note that `$sce.RESOURCE_URL` makes a stronger statement about the URL than `$sce.URL` does and therefore contexts requiring values trusted for `$sce.RESOURCE_URL` can be used anywhere that values trusted for `$sce.URL` are required. |\n| `$sce.JS`           | For JavaScript that is safe to execute in your application's context.  Currently unused.  Feel free to use it in your own directives. |\n\n## Format of items in {@link ng.$sceDelegateProvider#resourceUrlWhitelist resourceUrlWhitelist}/{@link ng.$sceDelegateProvider#resourceUrlBlacklist Blacklist} <a name=\"resourceUrlPatternItem\"></a>\n\n Each element in these arrays must be one of the following:\n\n - **'self'**\n   - The special **string**, `'self'`, can be used to match against all URLs of the **same\n     domain** as the application document using the **same protocol**.\n - **String** (except the special value `'self'`)\n   - The string is matched against the full *normalized / absolute URL* of the resource\n     being tested (substring matches are not good enough.)\n   - There are exactly **two wildcard sequences** - `*` and `**`.  All other characters\n     match themselves.\n   - `*`: matches zero or more occurrences of any character other than one of the following 6\n     characters: '`:`', '`/`', '`.`', '`?`', '`&`' and '`;`'.  It's a useful wildcard for use\n     in a whitelist.\n   - `**`: matches zero or more occurrences of *any* character.  As such, it's not\n     appropriate for use in a scheme, domain, etc. as it would match too much.  (e.g.\n     http://**.example.com/ would match http://evil.com/?ignore=.example.com/ and that might\n     not have been the intention.)  Its usage at the very end of the path is ok.  (e.g.\n     http://foo.example.com/templates/**).\n - **RegExp** (*see caveat below*)\n   - *Caveat*:  While regular expressions are powerful and offer great flexibility,  their syntax\n     (and all the inevitable escaping) makes them *harder to maintain*.  It's easy to\n     accidentally introduce a bug when one updates a complex expression (imho, all regexes should\n     have good test coverage).  For instance, the use of `.` in the regex is correct only in a\n     small number of cases.  A `.` character in the regex used when matching the scheme or a\n     subdomain could be matched against a `:` or literal `.` that was likely not intended.   It\n     is highly recommended to use the string patterns and only fall back to regular expressions\n     as a last resort.\n   - The regular expression must be an instance of RegExp (i.e. not a string.)  It is\n     matched against the **entire** *normalized / absolute URL* of the resource being tested\n     (even when the RegExp did not have the `^` and `$` codes.)  In addition, any flags\n     present on the RegExp (such as multiline, global, ignoreCase) are ignored.\n   - If you are generating your JavaScript from some other templating engine (not\n     recommended, e.g. in issue [#4006](https://github.com/angular/angular.js/issues/4006)),\n     remember to escape your regular expression (and be aware that you might need more than\n     one level of escaping depending on your templating engine and the way you interpolated\n     the value.)  Do make use of your platform's escaping mechanism as it might be good\n     enough before coding your own.  E.g. Ruby has\n     [Regexp.escape(str)](http://www.ruby-doc.org/core-2.0.0/Regexp.html#method-c-escape)\n     and Python has [re.escape](http://docs.python.org/library/re.html#re.escape).\n     Javascript lacks a similar built in function for escaping.  Take a look at Google\n     Closure library's [goog.string.regExpEscape(s)](\n     http://docs.closure-library.googlecode.com/git/closure_goog_string_string.js.source.html#line962).\n\nRefer {@link ng.$sceDelegateProvider $sceDelegateProvider} for an example.\n\n## Show me an example using SCE.\n\n<example module=\"mySceApp\" deps=\"angular-sanitize.js\">\n<file name=\"index.html\">\n  <div ng-controller=\"AppController as myCtrl\">\n    <i ng-bind-html=\"myCtrl.explicitlyTrustedHtml\" id=\"explicitlyTrustedHtml\"></i><br><br>\n    <b>User comments</b><br>\n    By default, HTML that isn't explicitly trusted (e.g. Alice's comment) is sanitized when\n    $sanitize is available.  If $sanitize isn't available, this results in an error instead of an\n    exploit.\n    <div class=\"well\">\n      <div ng-repeat=\"userComment in myCtrl.userComments\">\n        <b>{{userComment.name}}</b>:\n        <span ng-bind-html=\"userComment.htmlComment\" class=\"htmlComment\"></span>\n        <br>\n      </div>\n    </div>\n  </div>\n</file>\n\n<file name=\"script.js\">\n  angular.module('mySceApp', ['ngSanitize'])\n    .controller('AppController', ['$http', '$templateCache', '$sce',\n      function($http, $templateCache, $sce) {\n        var self = this;\n        $http.get(\"test_data.json\", {cache: $templateCache}).success(function(userComments) {\n          self.userComments = userComments;\n        });\n        self.explicitlyTrustedHtml = $sce.trustAsHtml(\n            '<span onmouseover=\"this.textContent=&quot;Explicitly trusted HTML bypasses ' +\n            'sanitization.&quot;\">Hover over this text.</span>');\n      }]);\n</file>\n\n<file name=\"test_data.json\">\n[\n  { \"name\": \"Alice\",\n    \"htmlComment\":\n        \"<span onmouseover='this.textContent=\\\"PWN3D!\\\"'>Is <i>anyone</i> reading this?</span>\"\n  },\n  { \"name\": \"Bob\",\n    \"htmlComment\": \"<i>Yes!</i>  Am I the only other one?\"\n  }\n]\n</file>\n\n<file name=\"protractor.js\" type=\"protractor\">\n  describe('SCE doc demo', function() {\n    it('should sanitize untrusted values', function() {\n      expect(element.all(by.css('.htmlComment')).first().getInnerHtml())\n          .toBe('<span>Is <i>anyone</i> reading this?</span>');\n    });\n\n    it('should NOT sanitize explicitly trusted values', function() {\n      expect(element(by.id('explicitlyTrustedHtml')).getInnerHtml()).toBe(\n          '<span onmouseover=\"this.textContent=&quot;Explicitly trusted HTML bypasses ' +\n          'sanitization.&quot;\">Hover over this text.</span>');\n    });\n  });\n</file>\n</example>\n\n\n\n## Can I disable SCE completely?\n\nYes, you can.  However, this is strongly discouraged.  SCE gives you a lot of security benefits\nfor little coding overhead.  It will be much harder to take an SCE disabled application and\neither secure it on your own or enable SCE at a later stage.  It might make sense to disable SCE\nfor cases where you have a lot of existing code that was written before SCE was introduced and\nyou're migrating them a module at a time.\n\nThat said, here's how you can completely disable SCE:\n\n```\nangular.module('myAppWithSceDisabledmyApp', []).config(function($sceProvider) {\n  // Completely disable SCE.  For demonstration purposes only!\n  // Do not use in new projects.\n  $sceProvider.enabled(false);\n});\n```",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 17987,
            "ngdoc": "method",
            "name": "$sceProvider#enabled",
            "kind": "function",
            "params": [
                {
                    "name": "value",
                    "description": "If provided, then enables/disables SCE.",
                    "type": "Boolean="
                }
            ],
            "return": {
                "description": "true if SCE is enabled, false otherwise.",
                "type": "Boolean"
            },
            "description": "Enables/disables SCE and returns the current value.",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 18065,
            "ngdoc": "method",
            "name": "$sce#isEnabled",
            "kind": "function",
            "return": {
                "description": "true if SCE is enabled, false otherwise.  If you want to set the value, you\nhave to do it at module config time on {@link ng.$sceProvider $sceProvider}.",
                "type": "Boolean"
            },
            "description": "Returns a boolean indicating if SCE is enabled.",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 18088,
            "ngdoc": "method",
            "name": "$sce#parseAs",
            "description": "Converts Angular {@link guide/expression expression} into a function.  This is like {@link\nng.$parse $parse} and is identical when the expression is a literal constant.  Otherwise, it\nwraps the expression in a call to {@link ng.$sce#getTrusted $sce.getTrusted(*type*,\n*result*)}",
            "params": [
                {
                    "name": "type",
                    "description": "The kind of SCE context in which this result will be used.",
                    "type": "String"
                },
                {
                    "name": "expression",
                    "description": "String expression to compile.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "a function which represents the compiled expression:\n\n   * `context` – `{object}` – an object against which any expressions embedded in the strings\n     are evaluated against (typically a scope object).\n   * `locals` – `{object=}` – local variables context object, useful for overriding values in\n     `context`.",
                "type": "Function(context, locals)"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 18118,
            "ngdoc": "method",
            "name": "$sce#trustAs",
            "description": "Delegates to {@link ng.$sceDelegate#trustAs `$sceDelegate.trustAs`}.  As such,\nreturns an object that is trusted by angular for use in specified strict contextual\nescaping contexts (such as ng-bind-html, ng-include, any src attribute\ninterpolation, any dom event binding attribute interpolation such as for onclick,  etc.)\nthat uses the provided value.  See * {@link ng.$sce $sce} for enabling strict contextual\nescaping.",
            "params": [
                {
                    "name": "type",
                    "description": "The kind of context in which this value is safe for use.  e.g. url,\n  resourceUrl, html, js and css.",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "The value that that should be considered trusted/safe.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "A value that can be used to stand in for the provided `value` in places\nwhere Angular expects a $sce.trustAs() return value.",
                "type": "*"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 18137,
            "ngdoc": "method",
            "name": "$sce#trustAsHtml",
            "description": "Shorthand method.  `$sce.trustAsHtml(value)` →\n    {@link ng.$sceDelegate#trustAs `$sceDelegate.trustAs($sce.HTML, value)`}",
            "params": [
                {
                    "name": "value",
                    "description": "The value to trustAs.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "An object that can be passed to {@link ng.$sce#getTrustedHtml\n    $sce.getTrustedHtml(value)} to obtain the original value.  (privileged directives\n    only accept expressions that are either literal constants or are the\n    return value of {@link ng.$sce#trustAs $sce.trustAs}.)",
                "type": "*"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 18152,
            "ngdoc": "method",
            "name": "$sce#trustAsUrl",
            "description": "Shorthand method.  `$sce.trustAsUrl(value)` →\n    {@link ng.$sceDelegate#trustAs `$sceDelegate.trustAs($sce.URL, value)`}",
            "params": [
                {
                    "name": "value",
                    "description": "The value to trustAs.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "An object that can be passed to {@link ng.$sce#getTrustedUrl\n    $sce.getTrustedUrl(value)} to obtain the original value.  (privileged directives\n    only accept expressions that are either literal constants or are the\n    return value of {@link ng.$sce#trustAs $sce.trustAs}.)",
                "type": "*"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 18167,
            "ngdoc": "method",
            "name": "$sce#trustAsResourceUrl",
            "description": "Shorthand method.  `$sce.trustAsResourceUrl(value)` →\n    {@link ng.$sceDelegate#trustAs `$sceDelegate.trustAs($sce.RESOURCE_URL, value)`}",
            "params": [
                {
                    "name": "value",
                    "description": "The value to trustAs.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "An object that can be passed to {@link ng.$sce#getTrustedResourceUrl\n    $sce.getTrustedResourceUrl(value)} to obtain the original value.  (privileged directives\n    only accept expressions that are either literal constants or are the return\n    value of {@link ng.$sce#trustAs $sce.trustAs}.)",
                "type": "*"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 18182,
            "ngdoc": "method",
            "name": "$sce#trustAsJs",
            "description": "Shorthand method.  `$sce.trustAsJs(value)` →\n    {@link ng.$sceDelegate#trustAs `$sceDelegate.trustAs($sce.JS, value)`}",
            "params": [
                {
                    "name": "value",
                    "description": "The value to trustAs.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "An object that can be passed to {@link ng.$sce#getTrustedJs\n    $sce.getTrustedJs(value)} to obtain the original value.  (privileged directives\n    only accept expressions that are either literal constants or are the\n    return value of {@link ng.$sce#trustAs $sce.trustAs}.)",
                "type": "*"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 18197,
            "ngdoc": "method",
            "name": "$sce#getTrusted",
            "description": "Delegates to {@link ng.$sceDelegate#getTrusted `$sceDelegate.getTrusted`}.  As such,\ntakes the result of a {@link ng.$sce#trustAs `$sce.trustAs`}() call and returns the\noriginally supplied value if the queried context type is a supertype of the created type.\nIf this condition isn't satisfied, throws an exception.",
            "params": [
                {
                    "name": "type",
                    "description": "The kind of context in which this value is to be used.",
                    "type": "String"
                },
                {
                    "name": "maybeTrusted",
                    "description": "The result of a prior {@link ng.$sce#trustAs `$sce.trustAs`}\n                        call.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "The value the was originally provided to\n             {@link ng.$sce#trustAs `$sce.trustAs`} if valid in this context.\n             Otherwise, throws an exception.",
                "type": "*"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 18215,
            "ngdoc": "method",
            "name": "$sce#getTrustedHtml",
            "description": "Shorthand method.  `$sce.getTrustedHtml(value)` →\n    {@link ng.$sceDelegate#getTrusted `$sceDelegate.getTrusted($sce.HTML, value)`}",
            "params": [
                {
                    "name": "value",
                    "description": "The value to pass to `$sce.getTrusted`.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "The return value of `$sce.getTrusted($sce.HTML, value)`",
                "type": "*"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 18227,
            "ngdoc": "method",
            "name": "$sce#getTrustedCss",
            "description": "Shorthand method.  `$sce.getTrustedCss(value)` →\n    {@link ng.$sceDelegate#getTrusted `$sceDelegate.getTrusted($sce.CSS, value)`}",
            "params": [
                {
                    "name": "value",
                    "description": "The value to pass to `$sce.getTrusted`.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "The return value of `$sce.getTrusted($sce.CSS, value)`",
                "type": "*"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 18239,
            "ngdoc": "method",
            "name": "$sce#getTrustedUrl",
            "description": "Shorthand method.  `$sce.getTrustedUrl(value)` →\n    {@link ng.$sceDelegate#getTrusted `$sceDelegate.getTrusted($sce.URL, value)`}",
            "params": [
                {
                    "name": "value",
                    "description": "The value to pass to `$sce.getTrusted`.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "The return value of `$sce.getTrusted($sce.URL, value)`",
                "type": "*"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 18251,
            "ngdoc": "method",
            "name": "$sce#getTrustedResourceUrl",
            "description": "Shorthand method.  `$sce.getTrustedResourceUrl(value)` →\n    {@link ng.$sceDelegate#getTrusted `$sceDelegate.getTrusted($sce.RESOURCE_URL, value)`}",
            "params": [
                {
                    "name": "value",
                    "description": "The value to pass to `$sceDelegate.getTrusted`.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "The return value of `$sce.getTrusted($sce.RESOURCE_URL, value)`",
                "type": "*"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 18263,
            "ngdoc": "method",
            "name": "$sce#getTrustedJs",
            "description": "Shorthand method.  `$sce.getTrustedJs(value)` →\n    {@link ng.$sceDelegate#getTrusted `$sceDelegate.getTrusted($sce.JS, value)`}",
            "params": [
                {
                    "name": "value",
                    "description": "The value to pass to `$sce.getTrusted`.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "The return value of `$sce.getTrusted($sce.JS, value)`",
                "type": "*"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 18275,
            "ngdoc": "method",
            "name": "$sce#parseAsHtml",
            "description": "Shorthand method.  `$sce.parseAsHtml(expression string)` →\n    {@link ng.$sce#parseAs `$sce.parseAs($sce.HTML, value)`}",
            "params": [
                {
                    "name": "expression",
                    "description": "String expression to compile.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "a function which represents the compiled expression:\n\n   * `context` – `{object}` – an object against which any expressions embedded in the strings\n     are evaluated against (typically a scope object).\n   * `locals` – `{object=}` – local variables context object, useful for overriding values in\n     `context`.",
                "type": "Function(context, locals)"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 18292,
            "ngdoc": "method",
            "name": "$sce#parseAsCss",
            "description": "Shorthand method.  `$sce.parseAsCss(value)` →\n    {@link ng.$sce#parseAs `$sce.parseAs($sce.CSS, value)`}",
            "params": [
                {
                    "name": "expression",
                    "description": "String expression to compile.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "a function which represents the compiled expression:\n\n   * `context` – `{object}` – an object against which any expressions embedded in the strings\n     are evaluated against (typically a scope object).\n   * `locals` – `{object=}` – local variables context object, useful for overriding values in\n     `context`.",
                "type": "Function(context, locals)"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 18309,
            "ngdoc": "method",
            "name": "$sce#parseAsUrl",
            "description": "Shorthand method.  `$sce.parseAsUrl(value)` →\n    {@link ng.$sce#parseAs `$sce.parseAs($sce.URL, value)`}",
            "params": [
                {
                    "name": "expression",
                    "description": "String expression to compile.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "a function which represents the compiled expression:\n\n   * `context` – `{object}` – an object against which any expressions embedded in the strings\n     are evaluated against (typically a scope object).\n   * `locals` – `{object=}` – local variables context object, useful for overriding values in\n     `context`.",
                "type": "Function(context, locals)"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 18326,
            "ngdoc": "method",
            "name": "$sce#parseAsResourceUrl",
            "description": "Shorthand method.  `$sce.parseAsResourceUrl(value)` →\n    {@link ng.$sce#parseAs `$sce.parseAs($sce.RESOURCE_URL, value)`}",
            "params": [
                {
                    "name": "expression",
                    "description": "String expression to compile.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "a function which represents the compiled expression:\n\n   * `context` – `{object}` – an object against which any expressions embedded in the strings\n     are evaluated against (typically a scope object).\n   * `locals` – `{object=}` – local variables context object, useful for overriding values in\n     `context`.",
                "type": "Function(context, locals)"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 18343,
            "ngdoc": "method",
            "name": "$sce#parseAsJs",
            "description": "Shorthand method.  `$sce.parseAsJs(value)` →\n    {@link ng.$sce#parseAs `$sce.parseAs($sce.JS, value)`}",
            "params": [
                {
                    "name": "expression",
                    "description": "String expression to compile.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "a function which represents the compiled expression:\n\n   * `context` – `{object}` – an object against which any expressions embedded in the strings\n     are evaluated against (typically a scope object).\n   * `locals` – `{object=}` – local variables context object, useful for overriding values in\n     `context`.",
                "type": "Function(context, locals)"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 18382,
            "description": "This is very simple implementation of testing browser's features.",
            "name": "{boolean} animations Does the browser support CSS animation events ?",
            "requires": [
                "$window",
                "$document"
            ],
            "itemtype": "property",
            "type": "Boolean",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 18471,
            "ngdoc": "provider",
            "name": "$templateRequestProvider",
            "description": "Used to configure the options passed to the {@link $http} service when making a template request.\n\nFor example, it can be used for specifying the \"Accept\" header that is sent to the server, when\nrequesting a template.",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 18484,
            "ngdoc": "method",
            "name": "$templateRequestProvider#httpOptions",
            "description": "The options to be passed to the {@link $http} service when making the request.\nYou can use this to override options such as the \"Accept\" header for template requests.\n\nThe {@link $templateRequest} will set the `cache` and the `transformResponse` properties of the\noptions if not overridden here.",
            "params": [
                {
                    "name": "value",
                    "description": "new value for the {@link $http} options.",
                    "type": "String="
                }
            ],
            "return": {
                "description": "Returns the {@link $http} options when used as getter and self if used as setter.",
                "type": "String|self"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 18505,
            "ngdoc": "service",
            "name": "totalPendingRequests total amount of pending template requests being downloaded.",
            "description": "The `$templateRequest` service runs security checks then downloads the provided template using\n`$http` and, upon success, stores the contents inside of `$templateCache`. If the HTTP request\nfails or the response data of the HTTP request is empty, a `$compile` error will be thrown (the\nexception can be thwarted by setting the 2nd parameter of the function to true). Note that the\ncontents of `$templateCache` are trusted, so the call to `$sce.getTrustedUrl(tpl)` is omitted\nwhen `tpl` is of type string and `$templateCache` has the matching entry.\n\nIf you want to pass custom options to the `$http` service, such as setting the Accept header you\ncan configure this via {@link $templateRequestProvider#httpOptions}.",
            "return": {
                "description": "a promise for the HTTP response data of the given URL.",
                "type": "Promise"
            },
            "itemtype": "property",
            "type": "Number",
            "class": "",
            "module": "ng",
            "subprops": [
                {
                    "name": "tpl",
                    "description": "The HTTP request template URL",
                    "type": "String|TrustedResourceUrl"
                },
                {
                    "name": "ignoreRequestError",
                    "description": "Whether or not to ignore the exception when the request fails or the template is empty",
                    "type": "Boolean="
                }
            ]
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 18582,
            "name": "$testability",
            "description": "The private $$testability service provides a collection of methods for use when debugging\nor by automated test and debugging tools.",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 18591,
            "name": "$$testability#findBindings",
            "description": "Returns an array of elements that are bound (via ng-bind or {{}})\nto expressions matching the input.",
            "params": [
                {
                    "name": "element",
                    "description": "The element root to search from.",
                    "type": "Element"
                },
                {
                    "name": "expression",
                    "description": "The binding expression to match.",
                    "type": "String"
                },
                {
                    "name": "opt_exactMatch",
                    "description": "If true, only returns exact matches\n    for the expression. Filters and whitespace are ignored.",
                    "type": "Boolean"
                }
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 18626,
            "name": "$$testability#findModels",
            "description": "Returns an array of elements that are two-way found via ng-model to\nexpressions matching the input.",
            "params": [
                {
                    "name": "element",
                    "description": "The element root to search from.",
                    "type": "Element"
                },
                {
                    "name": "expression",
                    "description": "The model expression to match.",
                    "type": "String"
                },
                {
                    "name": "opt_exactMatch",
                    "description": "If true, only returns exact matches\n    for the expression.",
                    "type": "Boolean"
                }
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 18650,
            "name": "$$testability#getLocation",
            "description": "Shortcut for getting the location in a browser agnostic way. Returns\n    the path, search, and hash. (e.g. /path?a=b#hash)",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 18661,
            "name": "$$testability#setLocation",
            "description": "Shortcut for navigating to a location without doing a full page reload.",
            "params": [
                {
                    "name": "url",
                    "description": "The location url (path, search and hash,\n    e.g. /path?a=b#hash) to go to.",
                    "type": "String"
                }
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 18677,
            "name": "$$testability#whenStable",
            "description": "Calls the callback when $timeout and $http requests are completed.",
            "params": [
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 18700,
            "ngdoc": "service",
            "name": "$timeout",
            "description": "Angular's wrapper for `window.setTimeout`. The `fn` function is wrapped into a try/catch\nblock and delegates any exceptions to\n{@link ng.$exceptionHandler $exceptionHandler} service.\n\nThe return value of calling `$timeout` is a promise, which will be resolved when\nthe delay has passed and the timeout function, if provided, is executed.\n\nTo cancel a timeout request, call `$timeout.cancel(promise)`.\n\nIn tests you can use {@link ngMock.$timeout `$timeout.flush()`} to\nsynchronously flush the queue of deferred functions.\n\nIf you only want a promise that will be resolved after some specified delay\nthen you can call `$timeout` without the `fn` function.",
            "params": [
                {
                    "name": "fn",
                    "description": "A function, whose execution should be delayed.",
                    "type": "Function()="
                },
                {
                    "name": "delay",
                    "description": "Delay in milliseconds.",
                    "type": "Number=",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "invokeApply",
                    "description": "If set to `false` skips model dirty checking, otherwise\n  will invoke `fn` within the {@link ng.$rootScope.Scope#$apply $apply} block.",
                    "type": "Boolean=",
                    "optional": true,
                    "optdefault": "true"
                },
                {
                    "name": "Pass",
                    "description": "additional parameters to the executed function.",
                    "type": "...*="
                }
            ],
            "return": {
                "description": "Promise that will be resolved when the timeout is reached. The promise\n  will be resolved with the return value of the `fn` function.",
                "type": "Promise"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 18763,
            "ngdoc": "method",
            "name": "$timeout#cancel",
            "description": "Cancels a task associated with the `promise`. As a result of this, the promise will be\nresolved with a rejection.",
            "params": [
                {
                    "name": "promise",
                    "description": "Promise returned by the `$timeout` function.",
                    "type": "Promise="
                }
            ],
            "return": {
                "description": "Returns `true` if the task hasn't executed yet and was successfully\n  canceled.",
                "type": "Boolean"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 18799,
            "description": "Normalizes and parses a URL.",
            "kind": "function",
            "params": [
                {
                    "name": "url",
                    "description": "The URL to be parsed.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns the normalized URL as a dictionary.\n  | member name   | Description    |\n   |---------------|----------------|\n   | href          | A normalized version of the provided URL if it was not an absolute URL |\n   | protocol      | The protocol including the trailing colon                              |\n   | host          | The host and port (if the port is non-default) of the normalizedUrl    |\n   | search        | The search params, minus the question mark                             |\n   | hash          | The hash string, minus the hash symbol\n   | hostname      | The hostname\n   | port          | The port, without \":\"\n   | pathname      | The pathname, beginning with \"/\"",
                "type": "Object"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 18871,
            "description": "Parse a request URL and determine whether this is a same-origin request as the application document.",
            "params": [
                {
                    "name": "requestUrl",
                    "description": "The url of the request as a string that will be resolved\nor a parsed URL object.",
                    "type": "String|object"
                }
            ],
            "return": {
                "description": "Whether the request is for the same origin as the application document.",
                "type": "Boolean"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 18884,
            "ngdoc": "service",
            "name": "$window",
            "description": "A reference to the browser's `window` object. While `window`\nis globally available in JavaScript, it causes testability problems, because\nit is a global variable. In angular we always refer to it through the\n`$window` service, so it may be overridden, removed or mocked for testing.\n\nExpressions, like the one defined for the `ngClick` directive in the example\nbelow, are evaluated with respect to the current scope.  Therefore, there is\nno risk of inadvertently coding in a dependency on a global value in such an\nexpression.",
            "example": [
                "\n  <example module=\"windowExample\">\n    <file name=\"index.html\">\n      <script>\n        angular.module('windowExample', [])\n          .controller('ExampleController', ['$scope', '$window', function($scope, $window) {\n            $scope.greeting = 'Hello, World!';\n            $scope.doGreeting = function(greeting) {\n              $window.alert(greeting);\n            };\n          }]);\n      </script>\n      <div ng-controller=\"ExampleController\">\n        <input type=\"text\" ng-model=\"greeting\" aria-label=\"greeting\" />\n        <button ng-click=\"doGreeting(greeting)\">ALERT</button>\n      </div>\n    </file>\n    <file name=\"protractor.js\" type=\"protractor\">\n     it('should display the greeting in the input box', function() {\n      element(by.model('greeting')).sendKeys('Hello, E2E Tests');\n      // If we click the button it will block the test runner\n      // element(':button').click();\n     });\n    </file>\n  </example>"
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 18929,
            "name": "$$cookieReader",
            "requires": [
                "$document"
            ],
            "description": "This is a private service for reading cookies used by $http and ngCookies",
            "return": {
                "description": "a key/value map of the current cookies",
                "type": "Object"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 18995,
            "ngdoc": "provider",
            "name": "$filterProvider",
            "description": "Filters are just functions which transform input to an output. However filters need to be\nDependency Injected. To achieve this a filter definition consists of a factory function which is\nannotated with dependencies and is responsible for creating a filter function.\n\n<div class=\"alert alert-warning\">\n**Note:** Filter names must be valid angular {@link expression} identifiers, such as `uppercase` or `orderBy`.\nNames with special characters, such as hyphens and dots, are not allowed. If you wish to namespace\nyour filters, then you can use capitalization (`myappSubsectionFilterx`) or underscores\n(`myapp_subsection_filterx`).\n</div>\n\n```js\n  // Filter registration\n  function MyModule($provide, $filterProvider) {\n    // create a service to demonstrate injection (not always needed)\n    $provide.value('greet', function(name){\n      return 'Hello ' + name + '!';\n    });\n\n    // register a filter factory which uses the\n    // greet service to demonstrate DI.\n    $filterProvider.register('greet', function(greet){\n      // return the filter function which uses the greet service\n      // to generate salutation\n      return function(text) {\n        // filters need to be forgiving so check input validity\n        return text && greet(text) || text;\n      };\n    });\n  }\n```\n\nThe filter function is registered with the `$injector` under the filter name suffix with\n`Filter`.\n\n```js\n  it('should be the same instance', inject(\n    function($filterProvider) {\n      $filterProvider.register('reverse', function(){\n        return ...;\n      });\n    },\n    function($filter, reverseFilter) {\n      expect($filter('reverse')).toBe(reverseFilter);\n    });\n```\n\n\nFor more information about how angular filters work, and how to create your own filters, see\n{@link guide/filter Filters} in the Angular Developer Guide.",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 19052,
            "ngdoc": "service",
            "name": "$filter",
            "kind": "function",
            "description": "Filters are used for formatting data displayed to the user.\n\nThe general syntax in templates is as follows:\n\n        {{ expression [| filter_name[:parameter_value] ... ] }}",
            "params": [
                {
                    "name": "name",
                    "description": "Name of the filter function to retrieve",
                    "type": "String"
                }
            ],
            "return": {
                "description": "the filter function",
                "type": "Function"
            },
            "example": [
                "\n  <example name=\"$filter\" module=\"filterExample\">\n    <file name=\"index.html\">\n      <div ng-controller=\"MainCtrl\">\n       <h3>{{ originalText }}</h3>\n       <h3>{{ filteredText }}</h3>\n      </div>\n    </file>\n\n    <file name=\"script.js\">\n     angular.module('filterExample', [])\n     .controller('MainCtrl', function($scope, $filter) {\n       $scope.originalText = 'hello';\n       $scope.filteredText = $filter('uppercase')($scope.originalText);\n     });\n    </file>\n  </example>"
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 19087,
            "ngdoc": "method",
            "name": "$filterProvider#register",
            "params": [
                {
                    "name": "name",
                    "description": "Name of the filter function, or an object map of filters where\n   the keys are the filter names and the values are the filter factories.\n\n   <div class=\"alert alert-warning\">\n   **Note:** Filter names must be valid angular {@link expression} identifiers, such as `uppercase` or `orderBy`.\n   Names with special characters, such as hyphens and dots, are not allowed. If you wish to namespace\n   your filters, then you can use capitalization (`myappSubsectionFilterx`) or underscores\n   (`myapp_subsection_filterx`).\n   </div>",
                    "type": "String|Object"
                },
                {
                    "name": "factory",
                    "description": "If the first argument was a string, a factory function for the filter to be registered.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Registered filter instance, or if a map of filters was provided then a map\n   of the registered filter instances.",
                "type": "Object"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 19147,
            "ngdoc": "filter",
            "name": "filter",
            "kind": "function",
            "description": "Selects a subset of items from `array` and returns it as a new array.",
            "params": [
                {
                    "name": "array",
                    "description": "The source array.",
                    "type": "Array"
                },
                {
                    "name": "expression",
                    "description": "The predicate to be used for selecting items from\n  `array`.\n\n  Can be one of:\n\n  - `string`: The string is used for matching against the contents of the `array`. All strings or\n    objects with string properties in `array` that match this string will be returned. This also\n    applies to nested object properties.\n    The predicate can be negated by prefixing the string with `!`.\n\n  - `Object`: A pattern object can be used to filter specific properties on objects contained\n    by `array`. For example `{name:\"M\", phone:\"1\"}` predicate will return an array of items\n    which have property `name` containing \"M\" and property `phone` containing \"1\". A special\n    property name `$` can be used (as in `{$:\"text\"}`) to accept a match against any\n    property of the object or its nested object properties. That's equivalent to the simple\n    substring match with a `string` as described above. The predicate can be negated by prefixing\n    the string with `!`.\n    For example `{name: \"!M\"}` predicate will return an array of items which have property `name`\n    not containing \"M\".\n\n    Note that a named property will match properties on the same level only, while the special\n    `$` property will match properties on the same level or deeper. E.g. an array item like\n    `{name: {first: 'John', last: 'Doe'}}` will **not** be matched by `{name: 'John'}`, but\n    **will** be matched by `{$: 'John'}`.\n\n  - `function(value, index, array)`: A predicate function can be used to write arbitrary filters.\n    The function is called for each element of the array, with the element, its index, and\n    the entire array itself as arguments.\n\n    The final result is an array of those elements that the predicate returned true for.",
                    "type": "String|Object|function()"
                },
                {
                    "name": "comparator",
                    "description": "Comparator which is used in\n    determining if the expected value (from the filter expression) and actual value (from\n    the object in the array) should be considered a match.\n\n  Can be one of:\n\n  - `function(actual, expected)`:\n    The function will be given the object value and the predicate value to compare and\n    should return true if both values should be considered equal.\n\n  - `true`: A shorthand for `function(actual, expected) { return angular.equals(actual, expected)}`.\n    This is essentially strict comparison of expected and actual.\n\n  - `false|undefined`: A short hand for a function which will look for a substring match in case\n    insensitive way.\n\n    Primitive values are converted to strings. Objects are not compared against primitives,\n    unless they have a custom `toString` method (e.g. `Date` objects).",
                    "type": "Function(actual, expected)|true|undefined"
                }
            ],
            "example": [
                "\n  <example>\n    <file name=\"index.html\">\n      <div ng-init=\"friends = [{name:'John', phone:'555-1276'},\n                               {name:'Mary', phone:'800-BIG-MARY'},\n                               {name:'Mike', phone:'555-4321'},\n                               {name:'Adam', phone:'555-5678'},\n                               {name:'Julie', phone:'555-8765'},\n                               {name:'Juliette', phone:'555-5678'}]\"></div>\n\n      <label>Search: <input ng-model=\"searchText\"></label>\n      <table id=\"searchTextResults\">\n        <tr><th>Name</th><th>Phone</th></tr>\n        <tr ng-repeat=\"friend in friends | filter:searchText\">\n          <td>{{friend.name}}</td>\n          <td>{{friend.phone}}</td>\n        </tr>\n      </table>\n      <hr>\n      <label>Any: <input ng-model=\"search.$\"></label> <br>\n      <label>Name only <input ng-model=\"search.name\"></label><br>\n      <label>Phone only <input ng-model=\"search.phone\"></label><br>\n      <label>Equality <input type=\"checkbox\" ng-model=\"strict\"></label><br>\n      <table id=\"searchObjResults\">\n        <tr><th>Name</th><th>Phone</th></tr>\n        <tr ng-repeat=\"friendObj in friends | filter:search:strict\">\n          <td>{{friendObj.name}}</td>\n          <td>{{friendObj.phone}}</td>\n        </tr>\n      </table>\n    </file>\n    <file name=\"protractor.js\" type=\"protractor\">\n      var expectFriendNames = function(expectedNames, key) {\n        element.all(by.repeater(key + ' in friends').column(key + '.name')).then(function(arr) {\n          arr.forEach(function(wd, i) {\n            expect(wd.getText()).toMatch(expectedNames[i]);\n          });\n        });\n      };\n\n      it('should search across all fields when filtering with a string', function() {\n        var searchText = element(by.model('searchText'));\n        searchText.clear();\n        searchText.sendKeys('m');\n        expectFriendNames(['Mary', 'Mike', 'Adam'], 'friend');\n\n        searchText.clear();\n        searchText.sendKeys('76');\n        expectFriendNames(['John', 'Julie'], 'friend');\n      });\n\n      it('should search in specific fields when filtering with a predicate object', function() {\n        var searchAny = element(by.model('search.$'));\n        searchAny.clear();\n        searchAny.sendKeys('i');\n        expectFriendNames(['Mary', 'Mike', 'Julie', 'Juliette'], 'friendObj');\n      });\n      it('should use a equal comparison when comparator is true', function() {\n        var searchName = element(by.model('search.name'));\n        var strict = element(by.model('strict'));\n        searchName.clear();\n        searchName.sendKeys('Julie');\n        strict.click();\n        expectFriendNames(['Julie'], 'friendObj');\n      });\n    </file>\n  </example>"
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 19406,
            "ngdoc": "filter",
            "name": "currency",
            "kind": "function",
            "description": "Formats a number as a currency (ie $1,234.56). When no currency symbol is provided, default\nsymbol for current locale is used.",
            "params": [
                {
                    "name": "amount",
                    "description": "Input to filter.",
                    "type": "Number"
                },
                {
                    "name": "symbol",
                    "description": "Currency symbol or identifier to be displayed.",
                    "type": "String="
                },
                {
                    "name": "fractionSize",
                    "description": "Number of decimal places to round the amount to, defaults to default max fraction size for current locale",
                    "type": "Number="
                }
            ],
            "return": {
                "description": "Formatted number.",
                "type": "String"
            },
            "example": [
                "\n  <example module=\"currencyExample\">\n    <file name=\"index.html\">\n      <script>\n        angular.module('currencyExample', [])\n          .controller('ExampleController', ['$scope', function($scope) {\n            $scope.amount = 1234.56;\n          }]);\n      </script>\n      <div ng-controller=\"ExampleController\">\n        <input type=\"number\" ng-model=\"amount\" aria-label=\"amount\"> <br>\n        default currency symbol ($): <span id=\"currency-default\">{{amount | currency}}</span><br>\n        custom currency identifier (USD$): <span id=\"currency-custom\">{{amount | currency:\"USD$\"}}</span>\n        no fractions (0): <span id=\"currency-no-fractions\">{{amount | currency:\"USD$\":0}}</span>\n      </div>\n    </file>\n    <file name=\"protractor.js\" type=\"protractor\">\n      it('should init with 1234.56', function() {\n        expect(element(by.id('currency-default')).getText()).toBe('$1,234.56');\n        expect(element(by.id('currency-custom')).getText()).toBe('USD$1,234.56');\n        expect(element(by.id('currency-no-fractions')).getText()).toBe('USD$1,235');\n      });\n      it('should update', function() {\n        if (browser.params.browser == 'safari') {\n          // Safari does not understand the minus key. See\n          // https://github.com/angular/protractor/issues/481\n          return;\n        }\n        element(by.model('amount')).clear();\n        element(by.model('amount')).sendKeys('-1234');\n        expect(element(by.id('currency-default')).getText()).toBe('-$1,234.00');\n        expect(element(by.id('currency-custom')).getText()).toBe('-USD$1,234.00');\n        expect(element(by.id('currency-no-fractions')).getText()).toBe('-USD$1,234');\n      });\n    </file>\n  </example>"
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 19478,
            "ngdoc": "filter",
            "name": "number",
            "kind": "function",
            "description": "Formats a number as text.\n\nIf the input is null or undefined, it will just be returned.\nIf the input is infinite (Infinity/-Infinity) the Infinity symbol '∞' is returned.\nIf the input is not a number an empty string is returned.",
            "params": [
                {
                    "name": "number",
                    "description": "Number to format.",
                    "type": "Number|string"
                },
                {
                    "name": "fractionSize",
                    "description": "Number of decimal places to round the number to.\nIf this is not provided then the fraction size is computed from the current locale's number\nformatting pattern. In the case of the default locale, it will be 3.",
                    "type": "(number|string)="
                }
            ],
            "return": {
                "description": "Number rounded to fractionSize and places a “,” after each third digit.",
                "type": "String"
            },
            "example": [
                "\n  <example module=\"numberFilterExample\">\n    <file name=\"index.html\">\n      <script>\n        angular.module('numberFilterExample', [])\n          .controller('ExampleController', ['$scope', function($scope) {\n            $scope.val = 1234.56789;\n          }]);\n      </script>\n      <div ng-controller=\"ExampleController\">\n        <label>Enter number: <input ng-model='val'></label><br>\n        Default formatting: <span id='number-default'>{{val | number}}</span><br>\n        No fractions: <span>{{val | number:0}}</span><br>\n        Negative number: <span>{{-val | number:4}}</span>\n      </div>\n    </file>\n    <file name=\"protractor.js\" type=\"protractor\">\n      it('should format numbers', function() {\n        expect(element(by.id('number-default')).getText()).toBe('1,234.568');\n        expect(element(by.binding('val | number:0')).getText()).toBe('1,235');\n        expect(element(by.binding('-val | number:4')).getText()).toBe('-1,234.5679');\n      });\n\n      it('should update', function() {\n        element(by.model('val')).clear();\n        element(by.model('val')).sendKeys('3374.333');\n        expect(element(by.id('number-default')).getText()).toBe('3,374.333');\n        expect(element(by.binding('val | number:0')).getText()).toBe('3,374');\n        expect(element(by.binding('-val | number:4')).getText()).toBe('-3,374.3330');\n     });\n    </file>\n  </example>"
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 19543,
            "description": "Parse a number (as a string) into three components that can be used\nfor formatting the number.\n\n(Significant bits of this parse algorithm came from https://github.com/MikeMcl/big.js/)",
            "params": [
                {
                    "name": "numStr",
                    "description": "The number to parse",
                    "type": "String"
                }
            ],
            "return": {
                "description": "An object describing this number, containing the following keys:\n - d : an array of digits containing leading zeros as necessary\n - i : the number of the digits in `d` that are to the left of the decimal point\n - e : the exponent for numbers that would need more than `MAX_DIGITS` digits in `d`",
                "type": "Object"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 19607,
            "description": "Round the parsed number to the specified number of decimal places\nThis function changed the parsedNumber in-place",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 19649,
            "description": "Format a number into a string",
            "params": [
                {
                    "name": "number",
                    "description": "The number to format",
                    "type": "Number"
                },
                {
                    "name": "}",
                    "description": "pattern",
                    "type": "{!~YUIDOC_LINE~!          minFrac, // the minimum number of digits required in the fraction part of the number!~YUIDOC_LINE~!          maxFrac, // the maximum number of digits required in the fraction part of the number!~YUIDOC_LINE~!          gSize,   // number of digits in each group of separated digits!~YUIDOC_LINE~!          lgSize,  // number of digits in the last group of digits before the decimal separator!~YUIDOC_LINE~!          negPre,  // the string to go in front of a negative number (e.g. `-` or `(`))!~YUIDOC_LINE~!          posPre,  // the string to go in front of a positive number!~YUIDOC_LINE~!          negSuf,  // the string to go after a negative number (e.g. `)`)!~YUIDOC_LINE~!          posSuf   // the string to go after a positive number!~YUIDOC_LINE~!"
                },
                {
                    "name": "groupSep",
                    "description": "The string to separate groups of number (e.g. `,`)",
                    "type": "String"
                },
                {
                    "name": "decimalSep",
                    "description": "The string to act as the decimal separator (e.g. `.`)",
                    "type": "String"
                },
                {
                    "name": "fractionSize",
                    "description": "The size of the fractional part of the number",
                    "type": "[type]"
                }
            ],
            "return": {
                "description": "The number formatted as a string",
                "type": "String"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 19853,
            "ngdoc": "filter",
            "name": "date",
            "kind": "function",
            "description": "Formats `date` to a string based on the requested `format`.\n\n  `format` string can be composed of the following elements:\n\n  * `'yyyy'`: 4 digit representation of year (e.g. AD 1 => 0001, AD 2010 => 2010)\n  * `'yy'`: 2 digit representation of year, padded (00-99). (e.g. AD 2001 => 01, AD 2010 => 10)\n  * `'y'`: 1 digit representation of year, e.g. (AD 1 => 1, AD 199 => 199)\n  * `'MMMM'`: Month in year (January-December)\n  * `'MMM'`: Month in year (Jan-Dec)\n  * `'MM'`: Month in year, padded (01-12)\n  * `'M'`: Month in year (1-12)\n  * `'dd'`: Day in month, padded (01-31)\n  * `'d'`: Day in month (1-31)\n  * `'EEEE'`: Day in Week,(Sunday-Saturday)\n  * `'EEE'`: Day in Week, (Sun-Sat)\n  * `'HH'`: Hour in day, padded (00-23)\n  * `'H'`: Hour in day (0-23)\n  * `'hh'`: Hour in AM/PM, padded (01-12)\n  * `'h'`: Hour in AM/PM, (1-12)\n  * `'mm'`: Minute in hour, padded (00-59)\n  * `'m'`: Minute in hour (0-59)\n  * `'ss'`: Second in minute, padded (00-59)\n  * `'s'`: Second in minute (0-59)\n  * `'sss'`: Millisecond in second, padded (000-999)\n  * `'a'`: AM/PM marker\n  * `'Z'`: 4 digit (+sign) representation of the timezone offset (-1200-+1200)\n  * `'ww'`: Week of year, padded (00-53). Week 01 is the week with the first Thursday of the year\n  * `'w'`: Week of year (0-53). Week 1 is the week with the first Thursday of the year\n  * `'G'`, `'GG'`, `'GGG'`: The abbreviated form of the era string (e.g. 'AD')\n  * `'GGGG'`: The long form of the era string (e.g. 'Anno Domini')\n\n  `format` string can also be one of the following predefined\n  {@link guide/i18n localizable formats}:\n\n  * `'medium'`: equivalent to `'MMM d, y h:mm:ss a'` for en_US locale\n    (e.g. Sep 3, 2010 12:05:08 PM)\n  * `'short'`: equivalent to `'M/d/yy h:mm a'` for en_US  locale (e.g. 9/3/10 12:05 PM)\n  * `'fullDate'`: equivalent to `'EEEE, MMMM d, y'` for en_US  locale\n    (e.g. Friday, September 3, 2010)\n  * `'longDate'`: equivalent to `'MMMM d, y'` for en_US  locale (e.g. September 3, 2010)\n  * `'mediumDate'`: equivalent to `'MMM d, y'` for en_US  locale (e.g. Sep 3, 2010)\n  * `'shortDate'`: equivalent to `'M/d/yy'` for en_US locale (e.g. 9/3/10)\n  * `'mediumTime'`: equivalent to `'h:mm:ss a'` for en_US locale (e.g. 12:05:08 PM)\n  * `'shortTime'`: equivalent to `'h:mm a'` for en_US locale (e.g. 12:05 PM)\n\n  `format` string can contain literal values. These need to be escaped by surrounding with single quotes (e.g.\n  `\"h 'in the morning'\"`). In order to output a single quote, escape it - i.e., two single quotes in a sequence\n  (e.g. `\"h 'o''clock'\"`).",
            "params": [
                {
                    "name": "date",
                    "description": "Date to format either as Date object, milliseconds (string or\n   number) or various ISO 8601 datetime string formats (e.g. yyyy-MM-ddTHH:mm:ss.sssZ and its\n   shorter versions like yyyy-MM-ddTHH:mmZ, yyyy-MM-dd or yyyyMMddTHHmmssZ). If no timezone is\n   specified in the string input, the time is considered to be in the local timezone.",
                    "type": "(Date|number|string)"
                },
                {
                    "name": "format",
                    "description": "Formatting rules (see Description). If not specified,\n   `mediumDate` is used.",
                    "type": "String="
                },
                {
                    "name": "timezone",
                    "description": "Timezone to be used for formatting. It understands UTC/GMT and the\n   continental US time zone abbreviations, but for general use, use a time zone offset, for\n   example, `'+0430'` (4 hours, 30 minutes east of the Greenwich meridian)\n   If not specified, the timezone of the browser will be used.",
                    "type": "String="
                }
            ],
            "return": {
                "description": "Formatted string or the input if input is not recognized as date/millis.",
                "type": "String"
            },
            "example": [
                "\n  <example>\n    <file name=\"index.html\">\n      <span ng-non-bindable>{{1288323623006 | date:'medium'}}</span>:\n          <span>{{1288323623006 | date:'medium'}}</span><br>\n      <span ng-non-bindable>{{1288323623006 | date:'yyyy-MM-dd HH:mm:ss Z'}}</span>:\n         <span>{{1288323623006 | date:'yyyy-MM-dd HH:mm:ss Z'}}</span><br>\n      <span ng-non-bindable>{{1288323623006 | date:'MM/dd/yyyy @ h:mma'}}</span>:\n         <span>{{'1288323623006' | date:'MM/dd/yyyy @ h:mma'}}</span><br>\n      <span ng-non-bindable>{{1288323623006 | date:\"MM/dd/yyyy 'at' h:mma\"}}</span>:\n         <span>{{'1288323623006' | date:\"MM/dd/yyyy 'at' h:mma\"}}</span><br>\n    </file>\n    <file name=\"protractor.js\" type=\"protractor\">\n      it('should format date', function() {\n        expect(element(by.binding(\"1288323623006 | date:'medium'\")).getText()).\n           toMatch(/Oct 2\\d, 2010 \\d{1,2}:\\d{2}:\\d{2} (AM|PM)/);\n        expect(element(by.binding(\"1288323623006 | date:'yyyy-MM-dd HH:mm:ss Z'\")).getText()).\n           toMatch(/2010\\-10\\-2\\d \\d{2}:\\d{2}:\\d{2} (\\-|\\+)?\\d{4}/);\n        expect(element(by.binding(\"'1288323623006' | date:'MM/dd/yyyy @ h:mma'\")).getText()).\n           toMatch(/10\\/2\\d\\/2010 @ \\d{1,2}:\\d{2}(AM|PM)/);\n        expect(element(by.binding(\"'1288323623006' | date:\\\"MM/dd/yyyy 'at' h:mma\\\"\")).getText()).\n           toMatch(/10\\/2\\d\\/2010 at \\d{1,2}:\\d{2}(AM|PM)/);\n      });\n    </file>\n  </example>"
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 20023,
            "ngdoc": "filter",
            "name": "json",
            "kind": "function",
            "description": "Allows you to convert a JavaScript object into JSON string.\n\n  This filter is mostly useful for debugging. When using the double curly {{value}} notation\n  the binding is automatically converted to JSON.",
            "params": [
                {
                    "name": "object",
                    "description": "Any JavaScript object (including arrays and primitive types) to filter.",
                    "type": "*"
                },
                {
                    "name": "spacing",
                    "description": "The number of spaces to use per indentation, defaults to 2.",
                    "type": "Number="
                }
            ],
            "return": {
                "description": "JSON string.",
                "type": "String"
            },
            "example": [
                "\n  <example>\n    <file name=\"index.html\">\n      <pre id=\"default-spacing\">{{ {'name':'value'} | json }}</pre>\n      <pre id=\"custom-spacing\">{{ {'name':'value'} | json:4 }}</pre>\n    </file>\n    <file name=\"protractor.js\" type=\"protractor\">\n      it('should jsonify filtered objects', function() {\n        expect(element(by.id('default-spacing')).getText()).toMatch(/\\{\\n  \"name\": ?\"value\"\\n}/);\n        expect(element(by.id('custom-spacing')).getText()).toMatch(/\\{\\n    \"name\": ?\"value\"\\n}/);\n      });\n    </file>\n  </example>\n"
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 20064,
            "ngdoc": "filter",
            "name": "lowercase",
            "kind": "function",
            "description": "Converts string to lowercase.",
            "see": [
                "angular.lowercase"
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 20075,
            "ngdoc": "filter",
            "name": "uppercase",
            "kind": "function",
            "description": "Converts string to uppercase.",
            "see": [
                "angular.uppercase"
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 20085,
            "ngdoc": "filter",
            "name": "limitTo",
            "kind": "function",
            "description": "Creates a new array or string containing only a specified number of elements. The elements\nare taken from either the beginning or the end of the source array, string or number, as specified by\nthe value and sign (positive or negative) of `limit`. If a number is used as input, it is\nconverted to a string.",
            "params": [
                {
                    "name": "input",
                    "description": "Source array, string or number to be limited.",
                    "type": "Array|string|number"
                },
                {
                    "name": "limit",
                    "description": "The length of the returned array or string. If the `limit` number\n    is positive, `limit` number of items from the beginning of the source array/string are copied.\n    If the number is negative, `limit` number  of items from the end of the source array/string\n    are copied. The `limit` will be trimmed if it exceeds `array.length`. If `limit` is undefined,\n    the input will be returned unchanged.",
                    "type": "String|number"
                },
                {
                    "name": "begin",
                    "description": "Index at which to begin limitation. As a negative index, `begin`\n    indicates an offset from the end of `input`. Defaults to `0`.",
                    "type": "(string|number)="
                }
            ],
            "return": {
                "description": "A new sub-array or substring of length `limit` or less if input array\n    had less than `limit` elements.",
                "type": "Array|string"
            },
            "example": [
                "\n  <example module=\"limitToExample\">\n    <file name=\"index.html\">\n      <script>\n        angular.module('limitToExample', [])\n          .controller('ExampleController', ['$scope', function($scope) {\n            $scope.numbers = [1,2,3,4,5,6,7,8,9];\n            $scope.letters = \"abcdefghi\";\n            $scope.longNumber = 2345432342;\n            $scope.numLimit = 3;\n            $scope.letterLimit = 3;\n            $scope.longNumberLimit = 3;\n          }]);\n      </script>\n      <div ng-controller=\"ExampleController\">\n        <label>\n           Limit {{numbers}} to:\n           <input type=\"number\" step=\"1\" ng-model=\"numLimit\">\n        </label>\n        <p>Output numbers: {{ numbers | limitTo:numLimit }}</p>\n        <label>\n           Limit {{letters}} to:\n           <input type=\"number\" step=\"1\" ng-model=\"letterLimit\">\n        </label>\n        <p>Output letters: {{ letters | limitTo:letterLimit }}</p>\n        <label>\n           Limit {{longNumber}} to:\n           <input type=\"number\" step=\"1\" ng-model=\"longNumberLimit\">\n        </label>\n        <p>Output long number: {{ longNumber | limitTo:longNumberLimit }}</p>\n      </div>\n    </file>\n    <file name=\"protractor.js\" type=\"protractor\">\n      var numLimitInput = element(by.model('numLimit'));\n      var letterLimitInput = element(by.model('letterLimit'));\n      var longNumberLimitInput = element(by.model('longNumberLimit'));\n      var limitedNumbers = element(by.binding('numbers | limitTo:numLimit'));\n      var limitedLetters = element(by.binding('letters | limitTo:letterLimit'));\n      var limitedLongNumber = element(by.binding('longNumber | limitTo:longNumberLimit'));\n\n      it('should limit the number array to first three items', function() {\n        expect(numLimitInput.getAttribute('value')).toBe('3');\n        expect(letterLimitInput.getAttribute('value')).toBe('3');\n        expect(longNumberLimitInput.getAttribute('value')).toBe('3');\n        expect(limitedNumbers.getText()).toEqual('Output numbers: [1,2,3]');\n        expect(limitedLetters.getText()).toEqual('Output letters: abc');\n        expect(limitedLongNumber.getText()).toEqual('Output long number: 234');\n      });\n\n      // There is a bug in safari and protractor that doesn't like the minus key\n      // it('should update the output when -3 is entered', function() {\n      //   numLimitInput.clear();\n      //   numLimitInput.sendKeys('-3');\n      //   letterLimitInput.clear();\n      //   letterLimitInput.sendKeys('-3');\n      //   longNumberLimitInput.clear();\n      //   longNumberLimitInput.sendKeys('-3');\n      //   expect(limitedNumbers.getText()).toEqual('Output numbers: [7,8,9]');\n      //   expect(limitedLetters.getText()).toEqual('Output letters: ghi');\n      //   expect(limitedLongNumber.getText()).toEqual('Output long number: 342');\n      // });\n\n      it('should not exceed the maximum size of input array', function() {\n        numLimitInput.clear();\n        numLimitInput.sendKeys('100');\n        letterLimitInput.clear();\n        letterLimitInput.sendKeys('100');\n        longNumberLimitInput.clear();\n        longNumberLimitInput.sendKeys('100');\n        expect(limitedNumbers.getText()).toEqual('Output numbers: [1,2,3,4,5,6,7,8,9]');\n        expect(limitedLetters.getText()).toEqual('Output letters: abcdefghi');\n        expect(limitedLongNumber.getText()).toEqual('Output long number: 2345432342');\n      });\n    </file>\n  </example>"
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 20210,
            "ngdoc": "filter",
            "name": "orderBy",
            "kind": "function",
            "description": "Orders a specified `array` by the `expression` predicate. It is ordered alphabetically\nfor strings and numerically for numbers. Note: if you notice numbers are not being sorted\nas expected, make sure they are actually being saved as numbers and not strings.\nArray-like values (e.g. NodeLists, jQuery objects, TypedArrays, Strings, etc) are also supported.",
            "params": [
                {
                    "name": "array",
                    "description": "The array (or array-like object) to sort.",
                    "type": "Array"
                },
                {
                    "name": "expression",
                    "description": "A predicate to be\n   used by the comparator to determine the order of elements.\n\n   Can be one of:\n\n   - `function`: Getter function. The result of this function will be sorted using the\n     `<`, `===`, `>` operator.\n   - `string`: An Angular expression. The result of this expression is used to compare elements\n     (for example `name` to sort by a property called `name` or `name.substr(0, 3)` to sort by\n     3 first characters of a property called `name`). The result of a constant expression\n     is interpreted as a property name to be used in comparisons (for example `\"special name\"`\n     to sort object by the value of their `special name` property). An expression can be\n     optionally prefixed with `+` or `-` to control ascending or descending sort order\n     (for example, `+name` or `-name`). If no property is provided, (e.g. `'+'`) then the array\n     element itself is used to compare where sorting.\n   - `Array`: An array of function or string predicates. The first predicate in the array\n     is used for sorting, but when two items are equivalent, the next predicate is used.\n\n   If the predicate is missing or empty then it defaults to `'+'`.",
                    "type": "function(*)|string|Array.<(function(*)|string)>="
                },
                {
                    "name": "reverse",
                    "description": "Reverse the order of the array.",
                    "type": "Boolean="
                }
            ],
            "return": {
                "description": "Sorted copy of the source array.",
                "type": "Array"
            },
            "example": [
                "\nThe example below demonstrates a simple ngRepeat, where the data is sorted\nby age in descending order (predicate is set to `'-age'`).\n`reverse` is not set, which means it defaults to `false`.\n  <example module=\"orderByExample\">\n    <file name=\"index.html\">\n      <div ng-controller=\"ExampleController\">\n        <table class=\"friend\">\n          <tr>\n            <th>Name</th>\n            <th>Phone Number</th>\n            <th>Age</th>\n          </tr>\n          <tr ng-repeat=\"friend in friends | orderBy:'-age'\">\n            <td>{{friend.name}}</td>\n            <td>{{friend.phone}}</td>\n            <td>{{friend.age}}</td>\n          </tr>\n        </table>\n      </div>\n    </file>\n    <file name=\"script.js\">\n      angular.module('orderByExample', [])\n        .controller('ExampleController', ['$scope', function($scope) {\n          $scope.friends =\n              [{name:'John', phone:'555-1212', age:10},\n               {name:'Mary', phone:'555-9876', age:19},\n               {name:'Mike', phone:'555-4321', age:21},\n               {name:'Adam', phone:'555-5678', age:35},\n               {name:'Julie', phone:'555-8765', age:29}];\n        }]);\n    </file>\n  </example>\n\nThe predicate and reverse parameters can be controlled dynamically through scope properties,\nas shown in the next example.",
                "\n  <example module=\"orderByExample\">\n    <file name=\"index.html\">\n      <div ng-controller=\"ExampleController\">\n        <pre>Sorting predicate = {{predicate}}; reverse = {{reverse}}</pre>\n        <hr/>\n        <button ng-click=\"predicate=''\">Set to unsorted</button>\n        <table class=\"friend\">\n          <tr>\n           <th>\n               <button ng-click=\"order('name')\">Name</button>\n               <span class=\"sortorder\" ng-show=\"predicate === 'name'\" ng-class=\"{reverse:reverse}\"></span>\n           </th>\n           <th>\n               <button ng-click=\"order('phone')\">Phone Number</button>\n               <span class=\"sortorder\" ng-show=\"predicate === 'phone'\" ng-class=\"{reverse:reverse}\"></span>\n           </th>\n           <th>\n               <button ng-click=\"order('age')\">Age</button>\n               <span class=\"sortorder\" ng-show=\"predicate === 'age'\" ng-class=\"{reverse:reverse}\"></span>\n           </th>\n          </tr>\n          <tr ng-repeat=\"friend in friends | orderBy:predicate:reverse\">\n            <td>{{friend.name}}</td>\n            <td>{{friend.phone}}</td>\n            <td>{{friend.age}}</td>\n          </tr>\n        </table>\n      </div>\n    </file>\n    <file name=\"script.js\">\n      angular.module('orderByExample', [])\n        .controller('ExampleController', ['$scope', function($scope) {\n          $scope.friends =\n              [{name:'John', phone:'555-1212', age:10},\n               {name:'Mary', phone:'555-9876', age:19},\n               {name:'Mike', phone:'555-4321', age:21},\n               {name:'Adam', phone:'555-5678', age:35},\n               {name:'Julie', phone:'555-8765', age:29}];\n          $scope.predicate = 'age';\n          $scope.reverse = true;\n          $scope.order = function(predicate) {\n            $scope.reverse = ($scope.predicate === predicate) ? !$scope.reverse : false;\n            $scope.predicate = predicate;\n          };\n        }]);\n     </file>\n    <file name=\"style.css\">\n      .sortorder:after {\n        content: '\\25b2';\n      }\n      .sortorder.reverse:after {\n        content: '\\25bc';\n      }\n    </file>\n  </example>\n\nIt's also possible to call the orderBy filter manually, by injecting `$filter`, retrieving the\nfilter routine with `$filter('orderBy')`, and calling the returned filter routine with the\ndesired parameters.\n\nExample:",
                "\n <example module=\"orderByExample\">\n   <file name=\"index.html\">\n   <div ng-controller=\"ExampleController\">\n     <pre>Sorting predicate = {{predicate}}; reverse = {{reverse}}</pre>\n     <table class=\"friend\">\n       <tr>\n         <th>\n             <button ng-click=\"order('name')\">Name</button>\n             <span class=\"sortorder\" ng-show=\"predicate === 'name'\" ng-class=\"{reverse:reverse}\"></span>\n         </th>\n         <th>\n             <button ng-click=\"order('phone')\">Phone Number</button>\n             <span class=\"sortorder\" ng-show=\"predicate === 'phone'\" ng-class=\"{reverse:reverse}\"></span>\n         </th>\n         <th>\n             <button ng-click=\"order('age')\">Age</button>\n             <span class=\"sortorder\" ng-show=\"predicate === 'age'\" ng-class=\"{reverse:reverse}\"></span>\n         </th>\n       </tr>\n       <tr ng-repeat=\"friend in friends\">\n         <td>{{friend.name}}</td>\n         <td>{{friend.phone}}</td>\n         <td>{{friend.age}}</td>\n       </tr>\n     </table>\n   </div>\n   </file>\n\n   <file name=\"script.js\">\n     angular.module('orderByExample', [])\n       .controller('ExampleController', ['$scope', '$filter', function($scope, $filter) {\n         var orderBy = $filter('orderBy');\n         $scope.friends = [\n           { name: 'John',    phone: '555-1212',    age: 10 },\n           { name: 'Mary',    phone: '555-9876',    age: 19 },\n           { name: 'Mike',    phone: '555-4321',    age: 21 },\n           { name: 'Adam',    phone: '555-5678',    age: 35 },\n           { name: 'Julie',   phone: '555-8765',    age: 29 }\n         ];\n         $scope.order = function(predicate) {\n           $scope.predicate = predicate;\n           $scope.reverse = ($scope.predicate === predicate) ? !$scope.reverse : false;\n           $scope.friends = orderBy($scope.friends, predicate, $scope.reverse);\n         };\n         $scope.order('age', true);\n       }]);\n   </file>\n\n   <file name=\"style.css\">\n      .sortorder:after {\n        content: '\\25b2';\n      }\n      .sortorder.reverse:after {\n        content: '\\25bc';\n      }\n   </file>\n</example>"
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 20536,
            "ngdoc": "directive",
            "name": "a",
            "restrict": "E",
            "description": "Modifies the default behavior of the html A tag so that the default action is prevented when\nthe href attribute is empty.\n\nThis change permits the easy creation of action links with the `ngClick` directive\nwithout changing the location or causing page reloads, e.g.:\n`<a href=\"\" ng-click=\"list.addItem()\">Add Item</a>`",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 21011,
            "ngdoc": "type",
            "name": "{Object} $error Is an object hash, containing references to controls or\n forms with failing validators, where:\n\n - keys are validation tokens (error names),\n - values are arrays of controls or forms that have a failing validator for given error name.\n\n Built-in validation tokens:\n\n - `email`\n - `max`\n - `maxlength`\n - `min`\n - `minlength`\n - `number`\n - `pattern`\n - `required`\n - `url`\n - `date`\n - `datetimelocal`\n - `time`\n - `week`\n - `month`",
            "itemtype": "property",
            "type": "Boolean",
            "description": "`FormController` keeps track of all its controls and nested forms as well as the state of them,\nsuch as being valid/invalid or dirty/pristine.\n\nEach {@link ng.directive:form form} directive creates an instance\nof `FormController`.",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 21071,
            "ngdoc": "method",
            "name": "form.FormController#$rollbackViewValue",
            "description": "Rollback all form controls pending updates to the `$modelValue`.\n\nUpdates may be pending by a debounced event or because the input is waiting for a some future\nevent defined in `ng-model-options`. This method is typically needed by the reset button of\na form that uses `ng-model-options` to pend updates.",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 21088,
            "ngdoc": "method",
            "name": "form.FormController#$commitViewValue",
            "description": "Commit all form controls pending updates to the `$modelValue`.\n\nUpdates may be pending by a debounced event or because the input is waiting for a some future\nevent defined in `ng-model-options`. This method is rarely needed as `NgModelController`\nusually handles calling this in response to input events.",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 21105,
            "ngdoc": "method",
            "name": "form.FormController#$addControl",
            "params": [
                {
                    "name": "control",
                    "description": "control object, either a {@link form.FormController} or an\n{@link ngModel.NgModelController}",
                    "type": "Object"
                }
            ],
            "description": "Register a control with the form. Input elements using ngModelController do this automatically\nwhen they are linked.\n\nNote that the current state of the control will not be reflected on the new parent form. This\nis not an issue with normal use, as freshly compiled and linked controls are in a `$pristine`\nstate.\n\nHowever, if the method is used programmatically, for example by adding dynamically created controls,\nor controls that have been previously removed without destroying their corresponding DOM element,\nit's the developers responsibility to make sure the current state propagates to the parent form.\n\nFor example, if an input control is added that is already `$dirty` and has `$error` properties,\ncalling `$setDirty()` and `$validate()` afterwards will propagate the state to the parent form.",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 21150,
            "ngdoc": "method",
            "name": "form.FormController#$removeControl",
            "params": [
                {
                    "name": "control",
                    "description": "control object, either a {@link form.FormController} or an\n{@link ngModel.NgModelController}",
                    "type": "Object"
                }
            ],
            "description": "Deregister a control from the form.\n\nInput elements using ngModelController do this automatically when they are destroyed.\n\nNote that only the removed control's validation state (`$errors`etc.) will be removed from the\nform. `$dirty`, `$submitted` states will not be changed, because the expected behavior can be\ndifferent from case to case. For example, removing the only `$dirty` control from a form may or\nmay not mean that the form is still `$dirty`.",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 21185,
            "ngdoc": "method",
            "name": "form.FormController#$setValidity",
            "description": "Sets the validity of a form control.\n\nThis method will also propagate to parent forms.",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 21221,
            "ngdoc": "method",
            "name": "form.FormController#$setDirty",
            "description": "Sets the form to a dirty state.\n\nThis method can be called to add the 'ng-dirty' class and set the form to a dirty\nstate (ng-dirty class). This method will also propagate to parent forms.",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 21239,
            "ngdoc": "method",
            "name": "form.FormController#$setPristine",
            "description": "Sets the form to its pristine state.\n\nThis method can be called to remove the 'ng-dirty' class and set the form to its pristine\nstate (ng-pristine class). This method will also propagate to all the controls contained\nin this form.\n\nSetting a form back to a pristine state is often useful when we want to 'reuse' a form after\nsaving or resetting it.",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 21263,
            "ngdoc": "method",
            "name": "form.FormController#$setUntouched",
            "description": "Sets the form to its untouched state.\n\nThis method can be called to remove the 'ng-touched' class and set the form controls to their\nuntouched state (ng-untouched class).\n\nSetting a form controls back to their untouched state is often useful when setting the form\nback to its pristine state.",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 21282,
            "ngdoc": "method",
            "name": "form.FormController#$setSubmitted",
            "description": "Sets the form to its submitted state.",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 21296,
            "ngdoc": "directive",
            "name": "ngForm",
            "restrict": "EAC",
            "description": "Nestable alias of {@link ng.directive:form `form`} directive. HTML\ndoes not allow nesting of form elements. It is useful to nest forms, for example if the validity of a\nsub-group of controls needs to be determined.\n\nNote: the purpose of `ngForm` is to group controls,\nbut not to be a replacement for the `<form>` tag with all of its capabilities\n(e.g. posting to the server, ...).",
            "params": [
                {
                    "name": "ngForm|name",
                    "description": "Name of the form. If specified, the form controller will be published into\n                      related scope, under this name.",
                    "type": "String="
                }
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 21315,
            "ngdoc": "directive",
            "name": "form",
            "restrict": "E",
            "description": "Directive that instantiates\n{@link form.FormController FormController}.\n\nIf the `name` attribute is specified, the form controller is published onto the current scope under\nthis name.\n\n# Alias: {@link ng.directive:ngForm `ngForm`}\n\nIn Angular, forms can be nested. This means that the outer form is valid when all of the child\nforms are valid as well. However, browsers do not allow nesting of `<form>` elements, so\nAngular provides the {@link ng.directive:ngForm `ngForm`} directive, which behaves identically to\n`form` but can be nested. Nested forms can be useful, for example, if the validity of a sub-group\nof controls needs to be determined.\n\n# CSS classes\n - `ng-valid` is set if the form is valid.\n - `ng-invalid` is set if the form is invalid.\n - `ng-pending` is set if the form is pending.\n - `ng-pristine` is set if the form is pristine.\n - `ng-dirty` is set if the form is dirty.\n - `ng-submitted` is set if the form was submitted.\n\nKeep in mind that ngAnimate can detect each of these classes when added and removed.\n\n\n# Submitting a form and preventing the default action\n\nSince the role of forms in client-side Angular applications is different than in classical\nroundtrip apps, it is desirable for the browser not to translate the form submission into a full\npage reload that sends the data to the server. Instead some javascript logic should be triggered\nto handle the form submission in an application-specific way.\n\nFor this reason, Angular prevents the default action (form submission to the server) unless the\n`<form>` element has an `action` attribute specified.\n\nYou can use one of the following two ways to specify what javascript method should be called when\na form is submitted:\n\n- {@link ng.directive:ngSubmit ngSubmit} directive on the form element\n- {@link ng.directive:ngClick ngClick} directive on the first\n button or input field of type submit (input[type=submit])\n\nTo prevent double execution of the handler, use only one of the {@link ng.directive:ngSubmit ngSubmit}\nor {@link ng.directive:ngClick ngClick} directives.\nThis is because of the following form submission rules in the HTML specification:\n\n- If a form has only one input field then hitting enter in this field triggers form submit\n(`ngSubmit`)\n- if a form has 2+ input fields and no buttons or input[type=submit] then hitting enter\ndoesn't trigger submit\n- if a form has one or more input fields and one or more buttons or input[type=submit] then\nhitting enter in any of the input fields will trigger the click handler on the *first* button or\ninput[type=submit] (`ngClick`) *and* a submit handler on the enclosing form (`ngSubmit`)\n\nAny pending `ngModelOptions` changes will take place immediately when an enclosing form is\nsubmitted. Note that `ngClick` events will occur before the model is updated. Use `ngSubmit`\nto have access to the updated model.\n\n## Animation Hooks\n\nAnimations in ngForm are triggered when any of the associated CSS classes are added and removed.\nThese classes are: `.ng-pristine`, `.ng-dirty`, `.ng-invalid` and `.ng-valid` as well as any\nother validations that are performed within the form. Animations in ngForm are similar to how\nthey work in ngClass and animations can be hooked into using CSS transitions, keyframes as well\nas JS animations.\n\nThe following example shows a simple way to utilize CSS transitions to style a form element\nthat has been rendered as invalid after it has been validated:\n\n<pre>\n//be sure to include ngAnimate as a module to hook into more\n//advanced animations\n.my-form {\n  transition:0.5s linear all;\n  background: white;\n}\n.my-form.ng-invalid {\n  background: red;\n  color:white;\n}\n</pre>",
            "example": [
                "\n   <example deps=\"angular-animate.js\" animations=\"true\" fixBase=\"true\" module=\"formExample\">\n     <file name=\"index.html\">\n      <script>\n        angular.module('formExample', [])\n          .controller('FormController', ['$scope', function($scope) {\n            $scope.userType = 'guest';\n          }]);\n      </script>\n      <style>\n       .my-form {\n         transition:all linear 0.5s;\n         background: transparent;\n       }\n       .my-form.ng-invalid {\n         background: red;\n       }\n      </style>\n      <form name=\"myForm\" ng-controller=\"FormController\" class=\"my-form\">\n        userType: <input name=\"input\" ng-model=\"userType\" required>\n        <span class=\"error\" ng-show=\"myForm.input.$error.required\">Required!</span><br>\n        <code>userType = {{userType}}</code><br>\n        <code>myForm.input.$valid = {{myForm.input.$valid}}</code><br>\n        <code>myForm.input.$error = {{myForm.input.$error}}</code><br>\n        <code>myForm.$valid = {{myForm.$valid}}</code><br>\n        <code>myForm.$error.required = {{!!myForm.$error.required}}</code><br>\n       </form>\n     </file>\n     <file name=\"protractor.js\" type=\"protractor\">\n       it('should initialize to model', function() {\n         var userType = element(by.binding('userType'));\n         var valid = element(by.binding('myForm.input.$valid'));\n\n         expect(userType.getText()).toContain('guest');\n         expect(valid.getText()).toContain('true');\n       });\n\n       it('should be invalid if empty', function() {\n         var userType = element(by.binding('userType'));\n         var valid = element(by.binding('myForm.input.$valid'));\n         var userInput = element(by.model('userType'));\n\n         userInput.clear();\n         userInput.sendKeys('');\n\n         expect(userType.getText()).toEqual('userType =');\n         expect(valid.getText()).toContain('false');\n       });\n     </file>\n   </example>"
            ],
            "params": [
                {
                    "name": "name",
                    "description": "Name of the form. If specified, the form controller will be published into\n                      related scope, under this name.",
                    "type": "String="
                }
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 21576,
            "ngdoc": "input",
            "name": "input[text]",
            "description": "Standard HTML text input with angular data binding, inherited by most of the `input` elements.",
            "params": [
                {
                    "name": "ngModel",
                    "description": "Assignable angular expression to data-bind to.",
                    "type": "String"
                },
                {
                    "name": "name",
                    "description": "Property name of the form under which the control is published.",
                    "type": "String="
                },
                {
                    "name": "required",
                    "description": "Adds `required` validation error key if the value is not entered.",
                    "type": "String="
                },
                {
                    "name": "ngRequired",
                    "description": "Adds `required` attribute and `required` validation constraint to\n   the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of\n   `required` when you want to data-bind to the `required` attribute.",
                    "type": "String="
                },
                {
                    "name": "ngMinlength",
                    "description": "Sets `minlength` validation error key if the value is shorter than\n   minlength.",
                    "type": "Number="
                },
                {
                    "name": "ngMaxlength",
                    "description": "Sets `maxlength` validation error key if the value is longer than\n   maxlength. Setting the attribute to a negative or non-numeric value, allows view values of\n   any length.",
                    "type": "Number="
                },
                {
                    "name": "pattern",
                    "description": "Similar to `ngPattern` except that the attribute value is the actual string\n   that contains the regular expression body that will be converted to a regular expression\n   as in the ngPattern directive.",
                    "type": "String="
                },
                {
                    "name": "ngPattern",
                    "description": "Sets `pattern` validation error key if the ngModel {@link ngModel.NgModelController#$viewValue $viewValue}\n   does not match a RegExp found by evaluating the Angular expression given in the attribute value.\n   If the expression evaluates to a RegExp object, then this is used directly.\n   If the expression evaluates to a string, then it will be converted to a RegExp\n   after wrapping it in `^` and `$` characters. For instance, `\"abc\"` will be converted to\n   `new RegExp('^abc$')`.<br />\n   **Note:** Avoid using the `g` flag on the RegExp, as it will cause each successive search to\n   start at the index of the last search's match, thus not taking the whole input value into\n   account.",
                    "type": "String="
                },
                {
                    "name": "ngChange",
                    "description": "Angular expression to be executed when input changes due to user\n   interaction with the input element.",
                    "type": "String="
                },
                {
                    "name": "[ngTrim=true] If set to false Angular will not automatically trim the input.\n   This parameter is ignored for input[type=password]",
                    "description": "controls, which will never trim the\n   input.",
                    "type": "Boolean="
                }
            ],
            "example": [
                "\n     <example name=\"text-input-directive\" module=\"textInputExample\">\n       <file name=\"index.html\">\n        <script>\n          angular.module('textInputExample', [])\n            .controller('ExampleController', ['$scope', function($scope) {\n              $scope.example = {\n                text: 'guest',\n                word: /^\\s*\\w*\\s*$/\n              };\n            }]);\n        </script>\n        <form name=\"myForm\" ng-controller=\"ExampleController\">\n          <label>Single word:\n            <input type=\"text\" name=\"input\" ng-model=\"example.text\"\n                   ng-pattern=\"example.word\" required ng-trim=\"false\">\n          </label>\n          <div role=\"alert\">\n            <span class=\"error\" ng-show=\"myForm.input.$error.required\">\n              Required!</span>\n            <span class=\"error\" ng-show=\"myForm.input.$error.pattern\">\n              Single word only!</span>\n          </div>\n          <tt>text = {{example.text}}</tt><br/>\n          <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br/>\n          <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br/>\n          <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>\n          <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>\n         </form>\n       </file>\n       <file name=\"protractor.js\" type=\"protractor\">\n         var text = element(by.binding('example.text'));\n         var valid = element(by.binding('myForm.input.$valid'));\n         var input = element(by.model('example.text'));\n\n         it('should initialize to model', function() {\n           expect(text.getText()).toContain('guest');\n           expect(valid.getText()).toContain('true');\n         });\n\n         it('should be invalid if empty', function() {\n           input.clear();\n           input.sendKeys('');\n\n           expect(text.getText()).toEqual('text =');\n           expect(valid.getText()).toContain('false');\n         });\n\n         it('should be invalid if multi word', function() {\n           input.clear();\n           input.sendKeys('hello world');\n\n           expect(valid.getText()).toContain('false');\n         });\n       </file>\n     </example>"
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 21672,
            "ngdoc": "input",
            "name": "input[date]",
            "description": "Input with date validation and transformation. In browsers that do not yet support\nthe HTML5 date input, a text element will be used. In that case, text must be entered in a valid ISO-8601\ndate format (yyyy-MM-dd), for example: `2009-01-06`. Since many\nmodern browsers do not yet support this input type, it is important to provide cues to users on the\nexpected input format via a placeholder or label.\n\nThe model must always be a Date object, otherwise Angular will throw an error.\nInvalid `Date` objects (dates whose `getTime()` is `NaN`) will be rendered as an empty string.\n\nThe timezone to be used to read/write the `Date` instance in the model can be defined using\n{@link ng.directive:ngModelOptions ngModelOptions}. By default, this is the timezone of the browser.",
            "params": [
                {
                    "name": "ngModel",
                    "description": "Assignable angular expression to data-bind to.",
                    "type": "String"
                },
                {
                    "name": "name",
                    "description": "Property name of the form under which the control is published.",
                    "type": "String="
                },
                {
                    "name": "min",
                    "description": "Sets the `min` validation error key if the value entered is less than `min`. This must be a\n  valid ISO date string (yyyy-MM-dd). You can also use interpolation inside this attribute\n  (e.g. `min=\"{{minDate | date:'yyyy-MM-dd'}}\"`). Note that `min` will also add native HTML5\n  constraint validation.",
                    "type": "String="
                },
                {
                    "name": "max",
                    "description": "Sets the `max` validation error key if the value entered is greater than `max`. This must be\n  a valid ISO date string (yyyy-MM-dd). You can also use interpolation inside this attribute\n  (e.g. `max=\"{{maxDate | date:'yyyy-MM-dd'}}\"`). Note that `max` will also add native HTML5\n  constraint validation.",
                    "type": "String="
                },
                {
                    "name": "ngMin",
                    "description": "Sets the `min` validation constraint to the Date / ISO date string\n  the `ngMin` expression evaluates to. Note that it does not set the `min` attribute.",
                    "type": "(date|string)="
                },
                {
                    "name": "ngMax",
                    "description": "Sets the `max` validation constraint to the Date / ISO date string\n  the `ngMax` expression evaluates to. Note that it does not set the `max` attribute.",
                    "type": "(date|string)="
                },
                {
                    "name": "required",
                    "description": "Sets `required` validation error key if the value is not entered.",
                    "type": "String="
                },
                {
                    "name": "ngRequired",
                    "description": "Adds `required` attribute and `required` validation constraint to\n   the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of\n   `required` when you want to data-bind to the `required` attribute.",
                    "type": "String="
                },
                {
                    "name": "ngChange",
                    "description": "Angular expression to be executed when input changes due to user\n   interaction with the input element.",
                    "type": "String="
                }
            ],
            "example": [
                "\n    <example name=\"date-input-directive\" module=\"dateInputExample\">\n    <file name=\"index.html\">\n      <script>\n         angular.module('dateInputExample', [])\n           .controller('DateController', ['$scope', function($scope) {\n             $scope.example = {\n               value: new Date(2013, 9, 22)\n             };\n           }]);\n      </script>\n      <form name=\"myForm\" ng-controller=\"DateController as dateCtrl\">\n         <label for=\"exampleInput\">Pick a date in 2013:</label>\n         <input type=\"date\" id=\"exampleInput\" name=\"input\" ng-model=\"example.value\"\n             placeholder=\"yyyy-MM-dd\" min=\"2013-01-01\" max=\"2013-12-31\" required />\n         <div role=\"alert\">\n           <span class=\"error\" ng-show=\"myForm.input.$error.required\">\n               Required!</span>\n           <span class=\"error\" ng-show=\"myForm.input.$error.date\">\n               Not a valid date!</span>\n          </div>\n          <tt>value = {{example.value | date: \"yyyy-MM-dd\"}}</tt><br/>\n          <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br/>\n          <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br/>\n          <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>\n          <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>\n      </form>\n    </file>\n    <file name=\"protractor.js\" type=\"protractor\">\n       var value = element(by.binding('example.value | date: \"yyyy-MM-dd\"'));\n       var valid = element(by.binding('myForm.input.$valid'));\n       var input = element(by.model('example.value'));\n\n       // currently protractor/webdriver does not support\n       // sending keys to all known HTML5 input controls\n       // for various browsers (see https://github.com/angular/protractor/issues/562).\n       function setInput(val) {\n         // set the value of the element and force validation.\n         var scr = \"var ipt = document.getElementById('exampleInput'); \" +\n         \"ipt.value = '\" + val + \"';\" +\n         \"angular.element(ipt).scope().$apply(function(s) { s.myForm[ipt.name].$setViewValue('\" + val + \"'); });\";\n         browser.executeScript(scr);\n       }\n\n       it('should initialize to model', function() {\n         expect(value.getText()).toContain('2013-10-22');\n         expect(valid.getText()).toContain('myForm.input.$valid = true');\n       });\n\n       it('should be invalid if empty', function() {\n         setInput('');\n         expect(value.getText()).toEqual('value =');\n         expect(valid.getText()).toContain('myForm.input.$valid = false');\n       });\n\n       it('should be invalid if over max', function() {\n         setInput('2015-01-01');\n         expect(value.getText()).toContain('');\n         expect(valid.getText()).toContain('myForm.input.$valid = false');\n       });\n    </file>\n    </example>"
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 21777,
            "ngdoc": "input",
            "name": "input[datetime-local]",
            "description": "Input with datetime validation and transformation. In browsers that do not yet support\nthe HTML5 date input, a text element will be used. In that case, the text must be entered in a valid ISO-8601\nlocal datetime format (yyyy-MM-ddTHH:mm:ss), for example: `2010-12-28T14:57:00`.\n\nThe model must always be a Date object, otherwise Angular will throw an error.\nInvalid `Date` objects (dates whose `getTime()` is `NaN`) will be rendered as an empty string.\n\nThe timezone to be used to read/write the `Date` instance in the model can be defined using\n{@link ng.directive:ngModelOptions ngModelOptions}. By default, this is the timezone of the browser.",
            "params": [
                {
                    "name": "ngModel",
                    "description": "Assignable angular expression to data-bind to.",
                    "type": "String"
                },
                {
                    "name": "name",
                    "description": "Property name of the form under which the control is published.",
                    "type": "String="
                },
                {
                    "name": "min",
                    "description": "Sets the `min` validation error key if the value entered is less than `min`.\n  This must be a valid ISO datetime format (yyyy-MM-ddTHH:mm:ss). You can also use interpolation\n  inside this attribute (e.g. `min=\"{{minDatetimeLocal | date:'yyyy-MM-ddTHH:mm:ss'}}\"`).\n  Note that `min` will also add native HTML5 constraint validation.",
                    "type": "String="
                },
                {
                    "name": "max",
                    "description": "Sets the `max` validation error key if the value entered is greater than `max`.\n  This must be a valid ISO datetime format (yyyy-MM-ddTHH:mm:ss). You can also use interpolation\n  inside this attribute (e.g. `max=\"{{maxDatetimeLocal | date:'yyyy-MM-ddTHH:mm:ss'}}\"`).\n  Note that `max` will also add native HTML5 constraint validation.",
                    "type": "String="
                },
                {
                    "name": "ngMin",
                    "description": "Sets the `min` validation error key to the Date / ISO datetime string\n  the `ngMin` expression evaluates to. Note that it does not set the `min` attribute.",
                    "type": "(date|string)="
                },
                {
                    "name": "ngMax",
                    "description": "Sets the `max` validation error key to the Date / ISO datetime string\n  the `ngMax` expression evaluates to. Note that it does not set the `max` attribute.",
                    "type": "(date|string)="
                },
                {
                    "name": "required",
                    "description": "Sets `required` validation error key if the value is not entered.",
                    "type": "String="
                },
                {
                    "name": "ngRequired",
                    "description": "Adds `required` attribute and `required` validation constraint to\n   the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of\n   `required` when you want to data-bind to the `required` attribute.",
                    "type": "String="
                },
                {
                    "name": "ngChange",
                    "description": "Angular expression to be executed when input changes due to user\n   interaction with the input element.",
                    "type": "String="
                }
            ],
            "example": [
                "\n   <example name=\"datetimelocal-input-directive\" module=\"dateExample\">\n   <file name=\"index.html\">\n     <script>\n       angular.module('dateExample', [])\n         .controller('DateController', ['$scope', function($scope) {\n           $scope.example = {\n             value: new Date(2010, 11, 28, 14, 57)\n           };\n         }]);\n     </script>\n     <form name=\"myForm\" ng-controller=\"DateController as dateCtrl\">\n       <label for=\"exampleInput\">Pick a date between in 2013:</label>\n       <input type=\"datetime-local\" id=\"exampleInput\" name=\"input\" ng-model=\"example.value\"\n           placeholder=\"yyyy-MM-ddTHH:mm:ss\" min=\"2001-01-01T00:00:00\" max=\"2013-12-31T00:00:00\" required />\n       <div role=\"alert\">\n         <span class=\"error\" ng-show=\"myForm.input.$error.required\">\n             Required!</span>\n         <span class=\"error\" ng-show=\"myForm.input.$error.datetimelocal\">\n             Not a valid date!</span>\n       </div>\n       <tt>value = {{example.value | date: \"yyyy-MM-ddTHH:mm:ss\"}}</tt><br/>\n       <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br/>\n       <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br/>\n       <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>\n       <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>\n     </form>\n   </file>\n   <file name=\"protractor.js\" type=\"protractor\">\n     var value = element(by.binding('example.value | date: \"yyyy-MM-ddTHH:mm:ss\"'));\n     var valid = element(by.binding('myForm.input.$valid'));\n     var input = element(by.model('example.value'));\n\n     // currently protractor/webdriver does not support\n     // sending keys to all known HTML5 input controls\n     // for various browsers (https://github.com/angular/protractor/issues/562).\n     function setInput(val) {\n       // set the value of the element and force validation.\n       var scr = \"var ipt = document.getElementById('exampleInput'); \" +\n       \"ipt.value = '\" + val + \"';\" +\n       \"angular.element(ipt).scope().$apply(function(s) { s.myForm[ipt.name].$setViewValue('\" + val + \"'); });\";\n       browser.executeScript(scr);\n     }\n\n     it('should initialize to model', function() {\n       expect(value.getText()).toContain('2010-12-28T14:57:00');\n       expect(valid.getText()).toContain('myForm.input.$valid = true');\n     });\n\n     it('should be invalid if empty', function() {\n       setInput('');\n       expect(value.getText()).toEqual('value =');\n       expect(valid.getText()).toContain('myForm.input.$valid = false');\n     });\n\n     it('should be invalid if over max', function() {\n       setInput('2015-01-01T23:59:00');\n       expect(value.getText()).toContain('');\n       expect(valid.getText()).toContain('myForm.input.$valid = false');\n     });\n   </file>\n   </example>"
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 21880,
            "ngdoc": "input",
            "name": "input[time]",
            "description": "Input with time validation and transformation. In browsers that do not yet support\nthe HTML5 time input, a text element will be used. In that case, the text must be entered in a valid ISO-8601\nlocal time format (HH:mm:ss), for example: `14:57:00`. Model must be a Date object. This binding will always output a\nDate object to the model of January 1, 1970, or local date `new Date(1970, 0, 1, HH, mm, ss)`.\n\nThe model must always be a Date object, otherwise Angular will throw an error.\nInvalid `Date` objects (dates whose `getTime()` is `NaN`) will be rendered as an empty string.\n\nThe timezone to be used to read/write the `Date` instance in the model can be defined using\n{@link ng.directive:ngModelOptions ngModelOptions}. By default, this is the timezone of the browser.",
            "params": [
                {
                    "name": "ngModel",
                    "description": "Assignable angular expression to data-bind to.",
                    "type": "String"
                },
                {
                    "name": "name",
                    "description": "Property name of the form under which the control is published.",
                    "type": "String="
                },
                {
                    "name": "min",
                    "description": "Sets the `min` validation error key if the value entered is less than `min`.\n  This must be a valid ISO time format (HH:mm:ss). You can also use interpolation inside this\n  attribute (e.g. `min=\"{{minTime | date:'HH:mm:ss'}}\"`). Note that `min` will also add\n  native HTML5 constraint validation.",
                    "type": "String="
                },
                {
                    "name": "max",
                    "description": "Sets the `max` validation error key if the value entered is greater than `max`.\n  This must be a valid ISO time format (HH:mm:ss). You can also use interpolation inside this\n  attribute (e.g. `max=\"{{maxTime | date:'HH:mm:ss'}}\"`). Note that `max` will also add\n  native HTML5 constraint validation.",
                    "type": "String="
                },
                {
                    "name": "ngMin",
                    "description": "Sets the `min` validation constraint to the Date / ISO time string the\n  `ngMin` expression evaluates to. Note that it does not set the `min` attribute.",
                    "type": "(date|string)="
                },
                {
                    "name": "ngMax",
                    "description": "Sets the `max` validation constraint to the Date / ISO time string the\n  `ngMax` expression evaluates to. Note that it does not set the `max` attribute.",
                    "type": "(date|string)="
                },
                {
                    "name": "required",
                    "description": "Sets `required` validation error key if the value is not entered.",
                    "type": "String="
                },
                {
                    "name": "ngRequired",
                    "description": "Adds `required` attribute and `required` validation constraint to\n   the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of\n   `required` when you want to data-bind to the `required` attribute.",
                    "type": "String="
                },
                {
                    "name": "ngChange",
                    "description": "Angular expression to be executed when input changes due to user\n   interaction with the input element.",
                    "type": "String="
                }
            ],
            "example": [
                "\n  <example name=\"time-input-directive\" module=\"timeExample\">\n  <file name=\"index.html\">\n    <script>\n     angular.module('timeExample', [])\n       .controller('DateController', ['$scope', function($scope) {\n         $scope.example = {\n           value: new Date(1970, 0, 1, 14, 57, 0)\n         };\n       }]);\n    </script>\n    <form name=\"myForm\" ng-controller=\"DateController as dateCtrl\">\n       <label for=\"exampleInput\">Pick a between 8am and 5pm:</label>\n       <input type=\"time\" id=\"exampleInput\" name=\"input\" ng-model=\"example.value\"\n           placeholder=\"HH:mm:ss\" min=\"08:00:00\" max=\"17:00:00\" required />\n       <div role=\"alert\">\n         <span class=\"error\" ng-show=\"myForm.input.$error.required\">\n             Required!</span>\n         <span class=\"error\" ng-show=\"myForm.input.$error.time\">\n             Not a valid date!</span>\n       </div>\n       <tt>value = {{example.value | date: \"HH:mm:ss\"}}</tt><br/>\n       <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br/>\n       <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br/>\n       <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>\n       <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>\n    </form>\n  </file>\n  <file name=\"protractor.js\" type=\"protractor\">\n     var value = element(by.binding('example.value | date: \"HH:mm:ss\"'));\n     var valid = element(by.binding('myForm.input.$valid'));\n     var input = element(by.model('example.value'));\n\n     // currently protractor/webdriver does not support\n     // sending keys to all known HTML5 input controls\n     // for various browsers (https://github.com/angular/protractor/issues/562).\n     function setInput(val) {\n       // set the value of the element and force validation.\n       var scr = \"var ipt = document.getElementById('exampleInput'); \" +\n       \"ipt.value = '\" + val + \"';\" +\n       \"angular.element(ipt).scope().$apply(function(s) { s.myForm[ipt.name].$setViewValue('\" + val + \"'); });\";\n       browser.executeScript(scr);\n     }\n\n     it('should initialize to model', function() {\n       expect(value.getText()).toContain('14:57:00');\n       expect(valid.getText()).toContain('myForm.input.$valid = true');\n     });\n\n     it('should be invalid if empty', function() {\n       setInput('');\n       expect(value.getText()).toEqual('value =');\n       expect(valid.getText()).toContain('myForm.input.$valid = false');\n     });\n\n     it('should be invalid if over max', function() {\n       setInput('23:59:00');\n       expect(value.getText()).toContain('');\n       expect(valid.getText()).toContain('myForm.input.$valid = false');\n     });\n  </file>\n  </example>"
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 21984,
            "ngdoc": "input",
            "name": "input[week]",
            "description": "Input with week-of-the-year validation and transformation to Date. In browsers that do not yet support\nthe HTML5 week input, a text element will be used. In that case, the text must be entered in a valid ISO-8601\nweek format (yyyy-W##), for example: `2013-W02`.\n\nThe model must always be a Date object, otherwise Angular will throw an error.\nInvalid `Date` objects (dates whose `getTime()` is `NaN`) will be rendered as an empty string.\n\nThe timezone to be used to read/write the `Date` instance in the model can be defined using\n{@link ng.directive:ngModelOptions ngModelOptions}. By default, this is the timezone of the browser.",
            "params": [
                {
                    "name": "ngModel",
                    "description": "Assignable angular expression to data-bind to.",
                    "type": "String"
                },
                {
                    "name": "name",
                    "description": "Property name of the form under which the control is published.",
                    "type": "String="
                },
                {
                    "name": "min",
                    "description": "Sets the `min` validation error key if the value entered is less than `min`.\n  This must be a valid ISO week format (yyyy-W##). You can also use interpolation inside this\n  attribute (e.g. `min=\"{{minWeek | date:'yyyy-Www'}}\"`). Note that `min` will also add\n  native HTML5 constraint validation.",
                    "type": "String="
                },
                {
                    "name": "max",
                    "description": "Sets the `max` validation error key if the value entered is greater than `max`.\n  This must be a valid ISO week format (yyyy-W##). You can also use interpolation inside this\n  attribute (e.g. `max=\"{{maxWeek | date:'yyyy-Www'}}\"`). Note that `max` will also add\n  native HTML5 constraint validation.",
                    "type": "String="
                },
                {
                    "name": "ngMin",
                    "description": "Sets the `min` validation constraint to the Date / ISO week string\n  the `ngMin` expression evaluates to. Note that it does not set the `min` attribute.",
                    "type": "(date|string)="
                },
                {
                    "name": "ngMax",
                    "description": "Sets the `max` validation constraint to the Date / ISO week string\n  the `ngMax` expression evaluates to. Note that it does not set the `max` attribute.",
                    "type": "(date|string)="
                },
                {
                    "name": "required",
                    "description": "Sets `required` validation error key if the value is not entered.",
                    "type": "String="
                },
                {
                    "name": "ngRequired",
                    "description": "Adds `required` attribute and `required` validation constraint to\n   the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of\n   `required` when you want to data-bind to the `required` attribute.",
                    "type": "String="
                },
                {
                    "name": "ngChange",
                    "description": "Angular expression to be executed when input changes due to user\n   interaction with the input element.",
                    "type": "String="
                }
            ],
            "example": [
                "\n   <example name=\"week-input-directive\" module=\"weekExample\">\n   <file name=\"index.html\">\n     <script>\n     angular.module('weekExample', [])\n       .controller('DateController', ['$scope', function($scope) {\n         $scope.example = {\n           value: new Date(2013, 0, 3)\n         };\n       }]);\n     </script>\n     <form name=\"myForm\" ng-controller=\"DateController as dateCtrl\">\n       <label>Pick a date between in 2013:\n         <input id=\"exampleInput\" type=\"week\" name=\"input\" ng-model=\"example.value\"\n                placeholder=\"YYYY-W##\" min=\"2012-W32\"\n                max=\"2013-W52\" required />\n       </label>\n       <div role=\"alert\">\n         <span class=\"error\" ng-show=\"myForm.input.$error.required\">\n             Required!</span>\n         <span class=\"error\" ng-show=\"myForm.input.$error.week\">\n             Not a valid date!</span>\n       </div>\n       <tt>value = {{example.value | date: \"yyyy-Www\"}}</tt><br/>\n       <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br/>\n       <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br/>\n       <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>\n       <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>\n     </form>\n   </file>\n   <file name=\"protractor.js\" type=\"protractor\">\n     var value = element(by.binding('example.value | date: \"yyyy-Www\"'));\n     var valid = element(by.binding('myForm.input.$valid'));\n     var input = element(by.model('example.value'));\n\n     // currently protractor/webdriver does not support\n     // sending keys to all known HTML5 input controls\n     // for various browsers (https://github.com/angular/protractor/issues/562).\n     function setInput(val) {\n       // set the value of the element and force validation.\n       var scr = \"var ipt = document.getElementById('exampleInput'); \" +\n       \"ipt.value = '\" + val + \"';\" +\n       \"angular.element(ipt).scope().$apply(function(s) { s.myForm[ipt.name].$setViewValue('\" + val + \"'); });\";\n       browser.executeScript(scr);\n     }\n\n     it('should initialize to model', function() {\n       expect(value.getText()).toContain('2013-W01');\n       expect(valid.getText()).toContain('myForm.input.$valid = true');\n     });\n\n     it('should be invalid if empty', function() {\n       setInput('');\n       expect(value.getText()).toEqual('value =');\n       expect(valid.getText()).toContain('myForm.input.$valid = false');\n     });\n\n     it('should be invalid if over max', function() {\n       setInput('2015-W01');\n       expect(value.getText()).toContain('');\n       expect(valid.getText()).toContain('myForm.input.$valid = false');\n     });\n   </file>\n   </example>"
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 22087,
            "ngdoc": "input",
            "name": "input[month]",
            "description": "Input with month validation and transformation. In browsers that do not yet support\nthe HTML5 month input, a text element will be used. In that case, the text must be entered in a valid ISO-8601\nmonth format (yyyy-MM), for example: `2009-01`.\n\nThe model must always be a Date object, otherwise Angular will throw an error.\nInvalid `Date` objects (dates whose `getTime()` is `NaN`) will be rendered as an empty string.\nIf the model is not set to the first of the month, the next view to model update will set it\nto the first of the month.\n\nThe timezone to be used to read/write the `Date` instance in the model can be defined using\n{@link ng.directive:ngModelOptions ngModelOptions}. By default, this is the timezone of the browser.",
            "params": [
                {
                    "name": "ngModel",
                    "description": "Assignable angular expression to data-bind to.",
                    "type": "String"
                },
                {
                    "name": "name",
                    "description": "Property name of the form under which the control is published.",
                    "type": "String="
                },
                {
                    "name": "min",
                    "description": "Sets the `min` validation error key if the value entered is less than `min`.\n  This must be a valid ISO month format (yyyy-MM). You can also use interpolation inside this\n  attribute (e.g. `min=\"{{minMonth | date:'yyyy-MM'}}\"`). Note that `min` will also add\n  native HTML5 constraint validation.",
                    "type": "String="
                },
                {
                    "name": "max",
                    "description": "Sets the `max` validation error key if the value entered is greater than `max`.\n  This must be a valid ISO month format (yyyy-MM). You can also use interpolation inside this\n  attribute (e.g. `max=\"{{maxMonth | date:'yyyy-MM'}}\"`). Note that `max` will also add\n  native HTML5 constraint validation.",
                    "type": "String="
                },
                {
                    "name": "ngMin",
                    "description": "Sets the `min` validation constraint to the Date / ISO week string\n  the `ngMin` expression evaluates to. Note that it does not set the `min` attribute.",
                    "type": "(date|string)="
                },
                {
                    "name": "ngMax",
                    "description": "Sets the `max` validation constraint to the Date / ISO week string\n  the `ngMax` expression evaluates to. Note that it does not set the `max` attribute.",
                    "type": "(date|string)="
                },
                {
                    "name": "required",
                    "description": "Sets `required` validation error key if the value is not entered.",
                    "type": "String="
                },
                {
                    "name": "ngRequired",
                    "description": "Adds `required` attribute and `required` validation constraint to\n   the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of\n   `required` when you want to data-bind to the `required` attribute.",
                    "type": "String="
                },
                {
                    "name": "ngChange",
                    "description": "Angular expression to be executed when input changes due to user\n   interaction with the input element.",
                    "type": "String="
                }
            ],
            "example": [
                "\n  <example name=\"month-input-directive\" module=\"monthExample\">\n  <file name=\"index.html\">\n    <script>\n     angular.module('monthExample', [])\n       .controller('DateController', ['$scope', function($scope) {\n         $scope.example = {\n           value: new Date(2013, 9, 1)\n         };\n       }]);\n    </script>\n    <form name=\"myForm\" ng-controller=\"DateController as dateCtrl\">\n      <label for=\"exampleInput\">Pick a month in 2013:</label>\n      <input id=\"exampleInput\" type=\"month\" name=\"input\" ng-model=\"example.value\"\n         placeholder=\"yyyy-MM\" min=\"2013-01\" max=\"2013-12\" required />\n      <div role=\"alert\">\n        <span class=\"error\" ng-show=\"myForm.input.$error.required\">\n           Required!</span>\n        <span class=\"error\" ng-show=\"myForm.input.$error.month\">\n           Not a valid month!</span>\n      </div>\n      <tt>value = {{example.value | date: \"yyyy-MM\"}}</tt><br/>\n      <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br/>\n      <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br/>\n      <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>\n      <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>\n    </form>\n  </file>\n  <file name=\"protractor.js\" type=\"protractor\">\n     var value = element(by.binding('example.value | date: \"yyyy-MM\"'));\n     var valid = element(by.binding('myForm.input.$valid'));\n     var input = element(by.model('example.value'));\n\n     // currently protractor/webdriver does not support\n     // sending keys to all known HTML5 input controls\n     // for various browsers (https://github.com/angular/protractor/issues/562).\n     function setInput(val) {\n       // set the value of the element and force validation.\n       var scr = \"var ipt = document.getElementById('exampleInput'); \" +\n       \"ipt.value = '\" + val + \"';\" +\n       \"angular.element(ipt).scope().$apply(function(s) { s.myForm[ipt.name].$setViewValue('\" + val + \"'); });\";\n       browser.executeScript(scr);\n     }\n\n     it('should initialize to model', function() {\n       expect(value.getText()).toContain('2013-10');\n       expect(valid.getText()).toContain('myForm.input.$valid = true');\n     });\n\n     it('should be invalid if empty', function() {\n       setInput('');\n       expect(value.getText()).toEqual('value =');\n       expect(valid.getText()).toContain('myForm.input.$valid = false');\n     });\n\n     it('should be invalid if over max', function() {\n       setInput('2015-01');\n       expect(value.getText()).toContain('');\n       expect(valid.getText()).toContain('myForm.input.$valid = false');\n     });\n  </file>\n  </example>"
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 22193,
            "ngdoc": "input",
            "name": "input[number]",
            "description": "Text input with number validation and transformation. Sets the `number` validation\nerror if not a valid number.\n\n<div class=\"alert alert-warning\">\nThe model must always be of type `number` otherwise Angular will throw an error.\nBe aware that a string containing a number is not enough. See the {@link ngModel:numfmt}\nerror docs for more information and an example of how to convert your model if necessary.\n</div>\n\n## Issues with HTML5 constraint validation\n\nIn browsers that follow the\n[HTML5 specification](https://html.spec.whatwg.org/multipage/forms.html#number-state-%28type=number%29),\n`input[number]` does not work as expected with {@link ngModelOptions `ngModelOptions.allowInvalid`}.\nIf a non-number is entered in the input, the browser will report the value as an empty string,\nwhich means the view / model values in `ngModel` and subsequently the scope value\nwill also be an empty string.",
            "params": [
                {
                    "name": "ngModel",
                    "description": "Assignable angular expression to data-bind to.",
                    "type": "String"
                },
                {
                    "name": "name",
                    "description": "Property name of the form under which the control is published.",
                    "type": "String="
                },
                {
                    "name": "min",
                    "description": "Sets the `min` validation error key if the value entered is less than `min`.",
                    "type": "String="
                },
                {
                    "name": "max",
                    "description": "Sets the `max` validation error key if the value entered is greater than `max`.",
                    "type": "String="
                },
                {
                    "name": "required",
                    "description": "Sets `required` validation error key if the value is not entered.",
                    "type": "String="
                },
                {
                    "name": "ngRequired",
                    "description": "Adds `required` attribute and `required` validation constraint to\n   the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of\n   `required` when you want to data-bind to the `required` attribute.",
                    "type": "String="
                },
                {
                    "name": "ngMinlength",
                    "description": "Sets `minlength` validation error key if the value is shorter than\n   minlength.",
                    "type": "Number="
                },
                {
                    "name": "ngMaxlength",
                    "description": "Sets `maxlength` validation error key if the value is longer than\n   maxlength. Setting the attribute to a negative or non-numeric value, allows view values of\n   any length.",
                    "type": "Number="
                },
                {
                    "name": "pattern",
                    "description": "Similar to `ngPattern` except that the attribute value is the actual string\n   that contains the regular expression body that will be converted to a regular expression\n   as in the ngPattern directive.",
                    "type": "String="
                },
                {
                    "name": "ngPattern",
                    "description": "Sets `pattern` validation error key if the ngModel {@link ngModel.NgModelController#$viewValue $viewValue}\n   does not match a RegExp found by evaluating the Angular expression given in the attribute value.\n   If the expression evaluates to a RegExp object, then this is used directly.\n   If the expression evaluates to a string, then it will be converted to a RegExp\n   after wrapping it in `^` and `$` characters. For instance, `\"abc\"` will be converted to\n   `new RegExp('^abc$')`.<br />\n   **Note:** Avoid using the `g` flag on the RegExp, as it will cause each successive search to\n   start at the index of the last search's match, thus not taking the whole input value into\n   account.",
                    "type": "String="
                },
                {
                    "name": "ngChange",
                    "description": "Angular expression to be executed when input changes due to user\n   interaction with the input element.",
                    "type": "String="
                }
            ],
            "example": [
                "\n     <example name=\"number-input-directive\" module=\"numberExample\">\n       <file name=\"index.html\">\n        <script>\n          angular.module('numberExample', [])\n            .controller('ExampleController', ['$scope', function($scope) {\n              $scope.example = {\n                value: 12\n              };\n            }]);\n        </script>\n        <form name=\"myForm\" ng-controller=\"ExampleController\">\n          <label>Number:\n            <input type=\"number\" name=\"input\" ng-model=\"example.value\"\n                   min=\"0\" max=\"99\" required>\n         </label>\n          <div role=\"alert\">\n            <span class=\"error\" ng-show=\"myForm.input.$error.required\">\n              Required!</span>\n            <span class=\"error\" ng-show=\"myForm.input.$error.number\">\n              Not valid number!</span>\n          </div>\n          <tt>value = {{example.value}}</tt><br/>\n          <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br/>\n          <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br/>\n          <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>\n          <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>\n         </form>\n       </file>\n       <file name=\"protractor.js\" type=\"protractor\">\n         var value = element(by.binding('example.value'));\n         var valid = element(by.binding('myForm.input.$valid'));\n         var input = element(by.model('example.value'));\n\n         it('should initialize to model', function() {\n           expect(value.getText()).toContain('12');\n           expect(valid.getText()).toContain('true');\n         });\n\n         it('should be invalid if empty', function() {\n           input.clear();\n           input.sendKeys('');\n           expect(value.getText()).toEqual('value =');\n           expect(valid.getText()).toContain('false');\n         });\n\n         it('should be invalid if over max', function() {\n           input.clear();\n           input.sendKeys('123');\n           expect(value.getText()).toEqual('value =');\n           expect(valid.getText()).toContain('false');\n         });\n       </file>\n     </example>"
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 22303,
            "ngdoc": "input",
            "name": "input[url]",
            "description": "Text input with URL validation. Sets the `url` validation error key if the content is not a\nvalid URL.\n\n<div class=\"alert alert-warning\">\n**Note:** `input[url]` uses a regex to validate urls that is derived from the regex\nused in Chromium. If you need stricter validation, you can use `ng-pattern` or modify\nthe built-in validators (see the {@link guide/forms Forms guide})\n</div>",
            "params": [
                {
                    "name": "ngModel",
                    "description": "Assignable angular expression to data-bind to.",
                    "type": "String"
                },
                {
                    "name": "name",
                    "description": "Property name of the form under which the control is published.",
                    "type": "String="
                },
                {
                    "name": "required",
                    "description": "Sets `required` validation error key if the value is not entered.",
                    "type": "String="
                },
                {
                    "name": "ngRequired",
                    "description": "Adds `required` attribute and `required` validation constraint to\n   the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of\n   `required` when you want to data-bind to the `required` attribute.",
                    "type": "String="
                },
                {
                    "name": "ngMinlength",
                    "description": "Sets `minlength` validation error key if the value is shorter than\n   minlength.",
                    "type": "Number="
                },
                {
                    "name": "ngMaxlength",
                    "description": "Sets `maxlength` validation error key if the value is longer than\n   maxlength. Setting the attribute to a negative or non-numeric value, allows view values of\n   any length.",
                    "type": "Number="
                },
                {
                    "name": "pattern",
                    "description": "Similar to `ngPattern` except that the attribute value is the actual string\n   that contains the regular expression body that will be converted to a regular expression\n   as in the ngPattern directive.",
                    "type": "String="
                },
                {
                    "name": "ngPattern",
                    "description": "Sets `pattern` validation error key if the ngModel {@link ngModel.NgModelController#$viewValue $viewValue}\n   does not match a RegExp found by evaluating the Angular expression given in the attribute value.\n   If the expression evaluates to a RegExp object, then this is used directly.\n   If the expression evaluates to a string, then it will be converted to a RegExp\n   after wrapping it in `^` and `$` characters. For instance, `\"abc\"` will be converted to\n   `new RegExp('^abc$')`.<br />\n   **Note:** Avoid using the `g` flag on the RegExp, as it will cause each successive search to\n   start at the index of the last search's match, thus not taking the whole input value into\n   account.",
                    "type": "String="
                },
                {
                    "name": "ngChange",
                    "description": "Angular expression to be executed when input changes due to user\n   interaction with the input element.",
                    "type": "String="
                }
            ],
            "example": [
                "\n     <example name=\"url-input-directive\" module=\"urlExample\">\n       <file name=\"index.html\">\n        <script>\n          angular.module('urlExample', [])\n            .controller('ExampleController', ['$scope', function($scope) {\n              $scope.url = {\n                text: 'http://google.com'\n              };\n            }]);\n        </script>\n        <form name=\"myForm\" ng-controller=\"ExampleController\">\n          <label>URL:\n            <input type=\"url\" name=\"input\" ng-model=\"url.text\" required>\n          <label>\n          <div role=\"alert\">\n            <span class=\"error\" ng-show=\"myForm.input.$error.required\">\n              Required!</span>\n            <span class=\"error\" ng-show=\"myForm.input.$error.url\">\n              Not valid url!</span>\n          </div>\n          <tt>text = {{url.text}}</tt><br/>\n          <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br/>\n          <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br/>\n          <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>\n          <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>\n          <tt>myForm.$error.url = {{!!myForm.$error.url}}</tt><br/>\n         </form>\n       </file>\n       <file name=\"protractor.js\" type=\"protractor\">\n         var text = element(by.binding('url.text'));\n         var valid = element(by.binding('myForm.input.$valid'));\n         var input = element(by.model('url.text'));\n\n         it('should initialize to model', function() {\n           expect(text.getText()).toContain('http://google.com');\n           expect(valid.getText()).toContain('true');\n         });\n\n         it('should be invalid if empty', function() {\n           input.clear();\n           input.sendKeys('');\n\n           expect(text.getText()).toEqual('text =');\n           expect(valid.getText()).toContain('false');\n         });\n\n         it('should be invalid if not url', function() {\n           input.clear();\n           input.sendKeys('box');\n\n           expect(valid.getText()).toContain('false');\n         });\n       </file>\n     </example>"
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 22402,
            "ngdoc": "input",
            "name": "input[email]",
            "description": "Text input with email validation. Sets the `email` validation error key if not a valid email\naddress.\n\n<div class=\"alert alert-warning\">\n**Note:** `input[email]` uses a regex to validate email addresses that is derived from the regex\nused in Chromium. If you need stricter validation (e.g. requiring a top-level domain), you can\nuse `ng-pattern` or modify the built-in validators (see the {@link guide/forms Forms guide})\n</div>",
            "params": [
                {
                    "name": "ngModel",
                    "description": "Assignable angular expression to data-bind to.",
                    "type": "String"
                },
                {
                    "name": "name",
                    "description": "Property name of the form under which the control is published.",
                    "type": "String="
                },
                {
                    "name": "required",
                    "description": "Sets `required` validation error key if the value is not entered.",
                    "type": "String="
                },
                {
                    "name": "ngRequired",
                    "description": "Adds `required` attribute and `required` validation constraint to\n   the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of\n   `required` when you want to data-bind to the `required` attribute.",
                    "type": "String="
                },
                {
                    "name": "ngMinlength",
                    "description": "Sets `minlength` validation error key if the value is shorter than\n   minlength.",
                    "type": "Number="
                },
                {
                    "name": "ngMaxlength",
                    "description": "Sets `maxlength` validation error key if the value is longer than\n   maxlength. Setting the attribute to a negative or non-numeric value, allows view values of\n   any length.",
                    "type": "Number="
                },
                {
                    "name": "pattern",
                    "description": "Similar to `ngPattern` except that the attribute value is the actual string\n   that contains the regular expression body that will be converted to a regular expression\n   as in the ngPattern directive.",
                    "type": "String="
                },
                {
                    "name": "ngPattern",
                    "description": "Sets `pattern` validation error key if the ngModel {@link ngModel.NgModelController#$viewValue $viewValue}\n   does not match a RegExp found by evaluating the Angular expression given in the attribute value.\n   If the expression evaluates to a RegExp object, then this is used directly.\n   If the expression evaluates to a string, then it will be converted to a RegExp\n   after wrapping it in `^` and `$` characters. For instance, `\"abc\"` will be converted to\n   `new RegExp('^abc$')`.<br />\n   **Note:** Avoid using the `g` flag on the RegExp, as it will cause each successive search to\n   start at the index of the last search's match, thus not taking the whole input value into\n   account.",
                    "type": "String="
                },
                {
                    "name": "ngChange",
                    "description": "Angular expression to be executed when input changes due to user\n   interaction with the input element.",
                    "type": "String="
                }
            ],
            "example": [
                "\n     <example name=\"email-input-directive\" module=\"emailExample\">\n       <file name=\"index.html\">\n        <script>\n          angular.module('emailExample', [])\n            .controller('ExampleController', ['$scope', function($scope) {\n              $scope.email = {\n                text: 'me@example.com'\n              };\n            }]);\n        </script>\n          <form name=\"myForm\" ng-controller=\"ExampleController\">\n            <label>Email:\n              <input type=\"email\" name=\"input\" ng-model=\"email.text\" required>\n            </label>\n            <div role=\"alert\">\n              <span class=\"error\" ng-show=\"myForm.input.$error.required\">\n                Required!</span>\n              <span class=\"error\" ng-show=\"myForm.input.$error.email\">\n                Not valid email!</span>\n            </div>\n            <tt>text = {{email.text}}</tt><br/>\n            <tt>myForm.input.$valid = {{myForm.input.$valid}}</tt><br/>\n            <tt>myForm.input.$error = {{myForm.input.$error}}</tt><br/>\n            <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>\n            <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>\n            <tt>myForm.$error.email = {{!!myForm.$error.email}}</tt><br/>\n          </form>\n        </file>\n       <file name=\"protractor.js\" type=\"protractor\">\n         var text = element(by.binding('email.text'));\n         var valid = element(by.binding('myForm.input.$valid'));\n         var input = element(by.model('email.text'));\n\n         it('should initialize to model', function() {\n           expect(text.getText()).toContain('me@example.com');\n           expect(valid.getText()).toContain('true');\n         });\n\n         it('should be invalid if empty', function() {\n           input.clear();\n           input.sendKeys('');\n           expect(text.getText()).toEqual('text =');\n           expect(valid.getText()).toContain('false');\n         });\n\n         it('should be invalid if not email', function() {\n           input.clear();\n           input.sendKeys('xxx');\n\n           expect(valid.getText()).toContain('false');\n         });\n       </file>\n     </example>"
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 22500,
            "ngdoc": "input",
            "name": "input[radio]",
            "description": "HTML radio button.",
            "params": [
                {
                    "name": "ngModel",
                    "description": "Assignable angular expression to data-bind to.",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "The value to which the `ngModel` expression should be set when selected.\n   Note that `value` only supports `string` values, i.e. the scope model needs to be a string,\n   too. Use `ngValue` if you need complex models (`number`, `object`, ...).",
                    "type": "String"
                },
                {
                    "name": "name",
                    "description": "Property name of the form under which the control is published.",
                    "type": "String="
                },
                {
                    "name": "ngChange",
                    "description": "Angular expression to be executed when input changes due to user\n   interaction with the input element.",
                    "type": "String="
                },
                {
                    "name": "ngValue",
                    "description": "Angular expression to which `ngModel` will be be set when the radio\n   is selected. Should be used instead of the `value` attribute if you need\n   a non-string `ngModel` (`boolean`, `array`, ...).",
                    "type": "String"
                }
            ],
            "example": [
                "\n     <example name=\"radio-input-directive\" module=\"radioExample\">\n       <file name=\"index.html\">\n        <script>\n          angular.module('radioExample', [])\n            .controller('ExampleController', ['$scope', function($scope) {\n              $scope.color = {\n                name: 'blue'\n              };\n              $scope.specialValue = {\n                \"id\": \"12345\",\n                \"value\": \"green\"\n              };\n            }]);\n        </script>\n        <form name=\"myForm\" ng-controller=\"ExampleController\">\n          <label>\n            <input type=\"radio\" ng-model=\"color.name\" value=\"red\">\n            Red\n          </label><br/>\n          <label>\n            <input type=\"radio\" ng-model=\"color.name\" ng-value=\"specialValue\">\n            Green\n          </label><br/>\n          <label>\n            <input type=\"radio\" ng-model=\"color.name\" value=\"blue\">\n            Blue\n          </label><br/>\n          <tt>color = {{color.name | json}}</tt><br/>\n         </form>\n         Note that `ng-value=\"specialValue\"` sets radio item's value to be the value of `$scope.specialValue`.\n       </file>\n       <file name=\"protractor.js\" type=\"protractor\">\n         it('should change state', function() {\n           var color = element(by.binding('color.name'));\n\n           expect(color.getText()).toContain('blue');\n\n           element.all(by.model('color.name')).get(0).click();\n\n           expect(color.getText()).toContain('red');\n         });\n       </file>\n     </example>"
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 22566,
            "ngdoc": "input",
            "name": "input[checkbox]",
            "description": "HTML checkbox.",
            "params": [
                {
                    "name": "ngModel",
                    "description": "Assignable angular expression to data-bind to.",
                    "type": "String"
                },
                {
                    "name": "name",
                    "description": "Property name of the form under which the control is published.",
                    "type": "String="
                },
                {
                    "name": "ngTrueValue",
                    "description": "The value to which the expression should be set when selected.",
                    "type": "Expression="
                },
                {
                    "name": "ngFalseValue",
                    "description": "The value to which the expression should be set when not selected.",
                    "type": "Expression="
                },
                {
                    "name": "ngChange",
                    "description": "Angular expression to be executed when input changes due to user\n   interaction with the input element.",
                    "type": "String="
                }
            ],
            "example": [
                "\n     <example name=\"checkbox-input-directive\" module=\"checkboxExample\">\n       <file name=\"index.html\">\n        <script>\n          angular.module('checkboxExample', [])\n            .controller('ExampleController', ['$scope', function($scope) {\n              $scope.checkboxModel = {\n               value1 : true,\n               value2 : 'YES'\n             };\n            }]);\n        </script>\n        <form name=\"myForm\" ng-controller=\"ExampleController\">\n          <label>Value1:\n            <input type=\"checkbox\" ng-model=\"checkboxModel.value1\">\n          </label><br/>\n          <label>Value2:\n            <input type=\"checkbox\" ng-model=\"checkboxModel.value2\"\n                   ng-true-value=\"'YES'\" ng-false-value=\"'NO'\">\n           </label><br/>\n          <tt>value1 = {{checkboxModel.value1}}</tt><br/>\n          <tt>value2 = {{checkboxModel.value2}}</tt><br/>\n         </form>\n       </file>\n       <file name=\"protractor.js\" type=\"protractor\">\n         it('should change state', function() {\n           var value1 = element(by.binding('checkboxModel.value1'));\n           var value2 = element(by.binding('checkboxModel.value2'));\n\n           expect(value1.getText()).toContain('true');\n           expect(value2.getText()).toContain('YES');\n\n           element(by.model('checkboxModel.value1')).click();\n           element(by.model('checkboxModel.value2')).click();\n\n           expect(value1.getText()).toContain('false');\n           expect(value2.getText()).toContain('NO');\n         });\n       </file>\n     </example>"
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 23042,
            "ngdoc": "directive",
            "name": "textarea",
            "restrict": "E",
            "description": "HTML textarea element control with angular data-binding. The data-binding and validation\nproperties of this element are exactly the same as those of the\n{@link ng.directive:input input element}.",
            "params": [
                {
                    "name": "ngModel",
                    "description": "Assignable angular expression to data-bind to.",
                    "type": "String"
                },
                {
                    "name": "name",
                    "description": "Property name of the form under which the control is published.",
                    "type": "String="
                },
                {
                    "name": "required",
                    "description": "Sets `required` validation error key if the value is not entered.",
                    "type": "String="
                },
                {
                    "name": "ngRequired",
                    "description": "Adds `required` attribute and `required` validation constraint to\n   the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of\n   `required` when you want to data-bind to the `required` attribute.",
                    "type": "String="
                },
                {
                    "name": "ngMinlength",
                    "description": "Sets `minlength` validation error key if the value is shorter than\n   minlength.",
                    "type": "Number="
                },
                {
                    "name": "ngMaxlength",
                    "description": "Sets `maxlength` validation error key if the value is longer than\n   maxlength. Setting the attribute to a negative or non-numeric value, allows view values of any\n   length.",
                    "type": "Number="
                },
                {
                    "name": "ngPattern",
                    "description": "Sets `pattern` validation error key if the ngModel {@link ngModel.NgModelController#$viewValue $viewValue}\n   does not match a RegExp found by evaluating the Angular expression given in the attribute value.\n   If the expression evaluates to a RegExp object, then this is used directly.\n   If the expression evaluates to a string, then it will be converted to a RegExp\n   after wrapping it in `^` and `$` characters. For instance, `\"abc\"` will be converted to\n   `new RegExp('^abc$')`.<br />\n   **Note:** Avoid using the `g` flag on the RegExp, as it will cause each successive search to\n   start at the index of the last search's match, thus not taking the whole input value into\n   account.",
                    "type": "String="
                },
                {
                    "name": "ngChange",
                    "description": "Angular expression to be executed when input changes due to user\n   interaction with the input element.",
                    "type": "String="
                },
                {
                    "name": "ngTrim",
                    "description": "If set to false Angular will not automatically trim the input.",
                    "type": "Boolean=",
                    "optional": true,
                    "optdefault": "true"
                }
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 23078,
            "ngdoc": "directive",
            "name": "input",
            "restrict": "E",
            "description": "HTML input element control. When used together with {@link ngModel `ngModel`}, it provides data-binding,\ninput state control, and validation.\nInput control follows HTML5 input types and polyfills the HTML5 validation behavior for older browsers.\n\n<div class=\"alert alert-warning\">\n**Note:** Not every feature offered is available for all input types.\nSpecifically, data binding and event handling via `ng-model` is unsupported for `input[file]`.\n</div>",
            "params": [
                {
                    "name": "ngModel",
                    "description": "Assignable angular expression to data-bind to.",
                    "type": "String"
                },
                {
                    "name": "name",
                    "description": "Property name of the form under which the control is published.",
                    "type": "String="
                },
                {
                    "name": "required",
                    "description": "Sets `required` validation error key if the value is not entered.",
                    "type": "String="
                },
                {
                    "name": "ngRequired",
                    "description": "Sets `required` attribute if set to true",
                    "type": "Boolean="
                },
                {
                    "name": "ngMinlength",
                    "description": "Sets `minlength` validation error key if the value is shorter than\n   minlength.",
                    "type": "Number="
                },
                {
                    "name": "ngMaxlength",
                    "description": "Sets `maxlength` validation error key if the value is longer than\n   maxlength. Setting the attribute to a negative or non-numeric value, allows view values of any\n   length.",
                    "type": "Number="
                },
                {
                    "name": "ngPattern",
                    "description": "Sets `pattern` validation error key if the ngModel {@link ngModel.NgModelController#$viewValue $viewValue}\n   value does not match a RegExp found by evaluating the Angular expression given in the attribute value.\n   If the expression evaluates to a RegExp object, then this is used directly.\n   If the expression evaluates to a string, then it will be converted to a RegExp\n   after wrapping it in `^` and `$` characters. For instance, `\"abc\"` will be converted to\n   `new RegExp('^abc$')`.<br />\n   **Note:** Avoid using the `g` flag on the RegExp, as it will cause each successive search to\n   start at the index of the last search's match, thus not taking the whole input value into\n   account.",
                    "type": "String="
                },
                {
                    "name": "ngChange",
                    "description": "Angular expression to be executed when input changes due to user\n   interaction with the input element.",
                    "type": "String="
                },
                {
                    "name": "[ngTrim=true] If set to false Angular will not automatically trim the input.\n   This parameter is ignored for input[type=password]",
                    "description": "controls, which will never trim the\n   input.",
                    "type": "Boolean="
                }
            ],
            "example": [
                "\n   <example name=\"input-directive\" module=\"inputExample\">\n     <file name=\"index.html\">\n      <script>\n         angular.module('inputExample', [])\n           .controller('ExampleController', ['$scope', function($scope) {\n             $scope.user = {name: 'guest', last: 'visitor'};\n           }]);\n      </script>\n      <div ng-controller=\"ExampleController\">\n        <form name=\"myForm\">\n          <label>\n             User name:\n             <input type=\"text\" name=\"userName\" ng-model=\"user.name\" required>\n          </label>\n          <div role=\"alert\">\n            <span class=\"error\" ng-show=\"myForm.userName.$error.required\">\n             Required!</span>\n          </div>\n          <label>\n             Last name:\n             <input type=\"text\" name=\"lastName\" ng-model=\"user.last\"\n             ng-minlength=\"3\" ng-maxlength=\"10\">\n          </label>\n          <div role=\"alert\">\n            <span class=\"error\" ng-show=\"myForm.lastName.$error.minlength\">\n              Too short!</span>\n            <span class=\"error\" ng-show=\"myForm.lastName.$error.maxlength\">\n              Too long!</span>\n          </div>\n        </form>\n        <hr>\n        <tt>user = {{user}}</tt><br/>\n        <tt>myForm.userName.$valid = {{myForm.userName.$valid}}</tt><br/>\n        <tt>myForm.userName.$error = {{myForm.userName.$error}}</tt><br/>\n        <tt>myForm.lastName.$valid = {{myForm.lastName.$valid}}</tt><br/>\n        <tt>myForm.lastName.$error = {{myForm.lastName.$error}}</tt><br/>\n        <tt>myForm.$valid = {{myForm.$valid}}</tt><br/>\n        <tt>myForm.$error.required = {{!!myForm.$error.required}}</tt><br/>\n        <tt>myForm.$error.minlength = {{!!myForm.$error.minlength}}</tt><br/>\n        <tt>myForm.$error.maxlength = {{!!myForm.$error.maxlength}}</tt><br/>\n      </div>\n     </file>\n     <file name=\"protractor.js\" type=\"protractor\">\n       var user = element(by.exactBinding('user'));\n       var userNameValid = element(by.binding('myForm.userName.$valid'));\n       var lastNameValid = element(by.binding('myForm.lastName.$valid'));\n       var lastNameError = element(by.binding('myForm.lastName.$error'));\n       var formValid = element(by.binding('myForm.$valid'));\n       var userNameInput = element(by.model('user.name'));\n       var userLastInput = element(by.model('user.last'));\n\n       it('should initialize to model', function() {\n         expect(user.getText()).toContain('{\"name\":\"guest\",\"last\":\"visitor\"}');\n         expect(userNameValid.getText()).toContain('true');\n         expect(formValid.getText()).toContain('true');\n       });\n\n       it('should be invalid if empty when required', function() {\n         userNameInput.clear();\n         userNameInput.sendKeys('');\n\n         expect(user.getText()).toContain('{\"last\":\"visitor\"}');\n         expect(userNameValid.getText()).toContain('false');\n         expect(formValid.getText()).toContain('false');\n       });\n\n       it('should be valid if empty when min length is set', function() {\n         userLastInput.clear();\n         userLastInput.sendKeys('');\n\n         expect(user.getText()).toContain('{\"name\":\"guest\",\"last\":\"\"}');\n         expect(lastNameValid.getText()).toContain('true');\n         expect(formValid.getText()).toContain('true');\n       });\n\n       it('should be invalid if less than required min length', function() {\n         userLastInput.clear();\n         userLastInput.sendKeys('xx');\n\n         expect(user.getText()).toContain('{\"name\":\"guest\"}');\n         expect(lastNameValid.getText()).toContain('false');\n         expect(lastNameError.getText()).toContain('minlength');\n         expect(formValid.getText()).toContain('false');\n       });\n\n       it('should be invalid if longer than max length', function() {\n         userLastInput.clear();\n         userLastInput.sendKeys('some ridiculously long name');\n\n         expect(user.getText()).toContain('{\"name\":\"guest\"}');\n         expect(lastNameValid.getText()).toContain('false');\n         expect(lastNameError.getText()).toContain('maxlength');\n         expect(formValid.getText()).toContain('false');\n       });\n     </file>\n   </example>"
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 25093,
            "ngdoc": "directive",
            "name": "ngInclude",
            "restrict": "ECA",
            "description": "Fetches, compiles and includes an external HTML fragment.\n\nBy default, the template URL is restricted to the same domain and protocol as the\napplication document. This is done by calling {@link $sce#getTrustedResourceUrl\n$sce.getTrustedResourceUrl} on it. To load templates from other domains or protocols\nyou may either {@link ng.$sceDelegateProvider#resourceUrlWhitelist whitelist them} or\n{@link $sce#trustAsResourceUrl wrap them} as trusted values. Refer to Angular's {@link\nng.$sce Strict Contextual Escaping}.\n\nIn addition, the browser's\n[Same Origin Policy](https://code.google.com/p/browsersec/wiki/Part2#Same-origin_policy_for_XMLHttpRequest)\nand [Cross-Origin Resource Sharing (CORS)](http://www.w3.org/TR/cors/)\npolicy may further restrict whether the template is successfully loaded.\nFor example, `ngInclude` won't work for cross-domain requests on all browsers and for `file://`\naccess on some browsers.",
            "animations": "enter - animation is used to bring new content into the browser.\nleave - animation is used to animate existing content away.\n\nThe enter and leave animation occur concurrently.",
            "scope": "",
            "priority": "400",
            "params": [
                {
                    "name": "ngInclude|src",
                    "description": "angular expression evaluating to URL. If the source is a string constant,\n                make sure you wrap it in **single** quotes, e.g. `src=\"'myPartialTemplate.html'\"`.",
                    "type": "String"
                },
                {
                    "name": "onload",
                    "description": "Expression to evaluate when a new partial is loaded.\n                 <div class=\"alert alert-warning\">\n                 **Note:** When using onload on SVG elements in IE11, the browser will try to call\n                 a function with the name on the window element, which will usually throw a\n                 \"function is undefined\" error. To fix this, you can instead use `data-onload` or a\n                 different form that {@link guide/directive#normalization matches} `onload`.\n                 </div>",
                    "type": "String="
                },
                {
                    "name": "autoscroll",
                    "description": "Whether `ngInclude` should call {@link ng.$anchorScroll\n                 $anchorScroll} to scroll the viewport after the content is loaded.\n\n                 - If the attribute is not set, disable scrolling.\n                 - If the attribute is set without value, enable scrolling.\n                 - Otherwise enable scrolling only if the expression evaluates to truthy value.",
                    "type": "String="
                }
            ],
            "example": [
                "\n <example module=\"includeExample\" deps=\"angular-animate.js\" animations=\"true\">\n   <file name=\"index.html\">\n    <div ng-controller=\"ExampleController\">\n      <select ng-model=\"template\" ng-options=\"t.name for t in templates\">\n       <option value=\"\">(blank)</option>\n      </select>\n      url of the template: <code>{{template.url}}</code>\n      <hr/>\n      <div class=\"slide-animate-container\">\n        <div class=\"slide-animate\" ng-include=\"template.url\"></div>\n      </div>\n    </div>\n   </file>\n   <file name=\"script.js\">\n     angular.module('includeExample', ['ngAnimate'])\n       .controller('ExampleController', ['$scope', function($scope) {\n         $scope.templates =\n           [ { name: 'template1.html', url: 'template1.html'},\n             { name: 'template2.html', url: 'template2.html'} ];\n         $scope.template = $scope.templates[0];\n       }]);\n    </file>\n   <file name=\"template1.html\">\n     Content of template1.html\n   </file>\n   <file name=\"template2.html\">\n     Content of template2.html\n   </file>\n   <file name=\"animations.css\">\n     .slide-animate-container {\n       position:relative;\n       background:white;\n       border:1px solid black;\n       height:40px;\n       overflow:hidden;\n     }\n\n     .slide-animate {\n       padding:10px;\n     }\n\n     .slide-animate.ng-enter, .slide-animate.ng-leave {\n       transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) 0.5s;\n\n       position:absolute;\n       top:0;\n       left:0;\n       right:0;\n       bottom:0;\n       display:block;\n       padding:10px;\n     }\n\n     .slide-animate.ng-enter {\n       top:-50px;\n     }\n     .slide-animate.ng-enter.ng-enter-active {\n       top:0;\n     }\n\n     .slide-animate.ng-leave {\n       top:0;\n     }\n     .slide-animate.ng-leave.ng-leave-active {\n       top:50px;\n     }\n   </file>\n   <file name=\"protractor.js\" type=\"protractor\">\n     var templateSelect = element(by.model('template'));\n     var includeElem = element(by.css('[ng-include]'));\n\n     it('should load template1.html', function() {\n       expect(includeElem.getText()).toMatch(/Content of template1.html/);\n     });\n\n     it('should load template2.html', function() {\n       if (browser.params.browser == 'firefox') {\n         // Firefox can't handle using selects\n         // See https://github.com/angular/protractor/issues/480\n         return;\n       }\n       templateSelect.click();\n       templateSelect.all(by.css('option')).get(2).click();\n       expect(includeElem.getText()).toMatch(/Content of template2.html/);\n     });\n\n     it('should change to blank', function() {\n       if (browser.params.browser == 'firefox') {\n         // Firefox can't handle using selects\n         return;\n       }\n       templateSelect.click();\n       templateSelect.all(by.css('option')).get(0).click();\n       expect(includeElem.isPresent()).toBe(false);\n     });\n   </file>\n </example>"
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 25242,
            "ngdoc": "event",
            "name": "ngInclude#$includeContentRequested",
            "eventtype": "emit on the scope ngInclude was declared in",
            "description": "Emitted every time the ngInclude content is requested.",
            "params": [
                {
                    "name": "angularEvent",
                    "description": "Synthetic event object.",
                    "type": "Object"
                },
                {
                    "name": "src",
                    "description": "URL of content to load.",
                    "type": "String"
                }
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 25254,
            "ngdoc": "event",
            "name": "ngInclude#$includeContentLoaded",
            "eventtype": "emit on the current ngInclude scope",
            "description": "Emitted every time the ngInclude content is reloaded.",
            "params": [
                {
                    "name": "angularEvent",
                    "description": "Synthetic event object.",
                    "type": "Object"
                },
                {
                    "name": "src",
                    "description": "URL of content to load.",
                    "type": "String"
                }
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 25266,
            "ngdoc": "event",
            "name": "ngInclude#$includeContentError",
            "eventtype": "emit on the scope ngInclude was declared in",
            "description": "Emitted when a template HTTP request yields an erroneous response (status < 200 || status > 299)",
            "params": [
                {
                    "name": "angularEvent",
                    "description": "Synthetic event object.",
                    "type": "Object"
                },
                {
                    "name": "src",
                    "description": "URL of content to load.",
                    "type": "String"
                }
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 25613,
            "ngdoc": "type",
            "name": "{string} $name The name attribute of the control.",
            "itemtype": "property",
            "type": "*",
            "description": "`NgModelController` provides API for the {@link ngModel `ngModel`} directive.\nThe controller contains services for data-binding, validation, CSS updates, and value formatting\nand parsing. It purposefully does not contain any logic which deals with DOM rendering or\nlistening to DOM events.\nSuch DOM related logic should be provided by other directives which make use of\n`NgModelController` for data-binding to control elements.\nAngular provides this DOM logic for most {@link input `input`} elements.\nAt the end of this page you can find a {@link ngModel.NgModelController#custom-control-example\ncustom control example} that uses `ngModelController` to bind to `contenteditable` elements.",
            "example": [
                "\n### Custom Control Example\nThis example shows how to use `NgModelController` with a custom control to achieve\ndata-binding. Notice how different directives (`contenteditable`, `ng-model`, and `required`)\ncollaborate together to achieve the desired result.\n\n`contenteditable` is an HTML5 attribute, which tells the browser to let the element\ncontents be edited in place by the user.\n\nWe are using the {@link ng.service:$sce $sce} service here and include the {@link ngSanitize $sanitize}\nmodule to automatically remove \"bad\" content like inline event listener (e.g. `<span onclick=\"...\">`).\nHowever, as we are using `$sce` the model can still decide to provide unsafe content if it marks\nthat content using the `$sce` service.\n\n<example name=\"NgModelController\" module=\"customControl\" deps=\"angular-sanitize.js\">\n   <file name=\"style.css\">\n     [contenteditable] {\n       border: 1px solid black;\n       background-color: white;\n       min-height: 20px;\n     }\n\n     .ng-invalid {\n       border: 1px solid red;\n     }\n\n   </file>\n   <file name=\"script.js\">\n     angular.module('customControl', ['ngSanitize']).\n       directive('contenteditable', ['$sce', function($sce) {\n         return {\n           restrict: 'A', // only activate on element attribute\n           require: '?ngModel', // get a hold of NgModelController\n           link: function(scope, element, attrs, ngModel) {\n             if (!ngModel) return; // do nothing if no ng-model\n\n             // Specify how UI should be updated\n             ngModel.$render = function() {\n               element.html($sce.getTrustedHtml(ngModel.$viewValue || ''));\n             };\n\n             // Listen for change events to enable binding\n             element.on('blur keyup change', function() {\n               scope.$evalAsync(read);\n             });\n             read(); // initialize\n\n             // Write data to the model\n             function read() {\n               var html = element.html();\n               // When we clear the content editable the browser leaves a <br> behind\n               // If strip-br attribute is provided then we strip this out\n               if ( attrs.stripBr && html == '<br>' ) {\n                 html = '';\n               }\n               ngModel.$setViewValue(html);\n             }\n           }\n         };\n       }]);\n   </file>\n   <file name=\"index.html\">\n     <form name=\"myForm\">\n      <div contenteditable\n           name=\"myWidget\" ng-model=\"userContent\"\n           strip-br=\"true\"\n           required>Change me!</div>\n       <span ng-show=\"myForm.myWidget.$error.required\">Required!</span>\n      <hr>\n      <textarea ng-model=\"userContent\" aria-label=\"Dynamic textarea\"></textarea>\n     </form>\n   </file>\n   <file name=\"protractor.js\" type=\"protractor\">\n   it('should data-bind and become invalid', function() {\n     if (browser.params.browser == 'safari' || browser.params.browser == 'firefox') {\n       // SafariDriver can't handle contenteditable\n       // and Firefox driver can't clear contenteditables very well\n       return;\n     }\n     var contentEditable = element(by.css('[contenteditable]'));\n     var content = 'Change me!';\n\n     expect(contentEditable.getText()).toEqual(content);\n\n     contentEditable.clear();\n     contentEditable.sendKeys(protractor.Key.BACK_SPACE);\n     expect(contentEditable.getText()).toEqual('');\n     expect(contentEditable.getAttribute('class')).toMatch(/ng-invalid-required/);\n   });\n   </file>\n</example>\n\n"
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 25869,
            "ngdoc": "method",
            "name": "ngModel.NgModelController#$render",
            "description": "Called when the view needs to be updated. It is expected that the user of the ng-model\ndirective will implement this method.\n\nThe `$render()` method is invoked in the following situations:\n\n* `$rollbackViewValue()` is called.  If we are rolling back the view value to the last\n  committed value then `$render()` is called to update the input control.\n* The value referenced by `ng-model` is changed programmatically and both the `$modelValue` and\n  the `$viewValue` are different from last time.\n\nSince `ng-model` does not do a deep watch, `$render()` is only invoked if the values of\n`$modelValue` and `$viewValue` are actually different from their previous value. If `$modelValue`\nor `$viewValue` are objects (rather than a string or number) then `$render()` will not be\ninvoked if you only change a property on the objects.",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 25891,
            "ngdoc": "method",
            "name": "ngModel.NgModelController#$isEmpty",
            "description": "This is called when we need to determine if the value of an input is empty.\n\nFor instance, the required directive does this to work out if the input has data or not.\n\nThe default `$isEmpty` function checks whether the value is `undefined`, `''`, `null` or `NaN`.\n\nYou can override this for input directives whose concept of being empty is different from the\ndefault. The `checkboxInputType` directive does this because in its case a value of `false`\nimplies empty.",
            "params": [
                {
                    "name": "value",
                    "description": "The value of the input to check for emptiness.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "True if `value` is \"empty\".",
                "type": "Boolean"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 25926,
            "ngdoc": "method",
            "name": "ngModel.NgModelController#$setValidity",
            "description": "Change the validity state, and notify the form.\n\nThis method can be called within $parsers/$formatters or a custom validation implementation.\nHowever, in most cases it should be sufficient to use the `ngModel.$validators` and\n`ngModel.$asyncValidators` collections which will call `$setValidity` automatically.",
            "params": [
                {
                    "name": "validationErrorKey",
                    "description": "Name of the validator. The `validationErrorKey` will be assigned\n       to either `$error[validationErrorKey]` or `$pending[validationErrorKey]`\n       (for unfulfilled `$asyncValidators`), so that it is available for data-binding.\n       The `validationErrorKey` should be in camelCase and will get converted into dash-case\n       for class name. Example: `myError` will result in `ng-valid-my-error` and `ng-invalid-my-error`\n       class and can be bound to as  `{{someForm.someControl.$error.myError}}` .",
                    "type": "String"
                },
                {
                    "name": "isValid",
                    "description": "Whether the current state is valid (true), invalid (false), pending (undefined),\n                         or skipped (null). Pending is used for unfulfilled `$asyncValidators`.\n                         Skipped is used by Angular when validators do not run because of parse errors and\n                         when `$asyncValidators` do not run because any of the `$validators` failed.",
                    "type": "Boolean"
                }
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 25960,
            "ngdoc": "method",
            "name": "ngModel.NgModelController#$setPristine",
            "description": "Sets the control to its pristine state.\n\nThis method can be called to remove the `ng-dirty` class and set the control to its pristine\nstate (`ng-pristine` class). A model is considered to be pristine when the control\nhas not been changed from when first compiled.",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 25978,
            "ngdoc": "method",
            "name": "ngModel.NgModelController#$setDirty",
            "description": "Sets the control to its dirty state.\n\nThis method can be called to remove the `ng-pristine` class and set the control to its dirty\nstate (`ng-dirty` class). A model is considered to be dirty when the control has been changed\nfrom when first compiled.",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 25997,
            "ngdoc": "method",
            "name": "ngModel.NgModelController#$setUntouched",
            "description": "Sets the control to its untouched state.\n\nThis method can be called to remove the `ng-touched` class and set the control to its\nuntouched state (`ng-untouched` class). Upon compilation, a model is set as untouched\nby default, however this function can be used to restore that state if the model has\nalready been touched by the user.",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 26015,
            "ngdoc": "method",
            "name": "ngModel.NgModelController#$setTouched",
            "description": "Sets the control to its touched state.\n\nThis method can be called to remove the `ng-untouched` class and set the control to its\ntouched state (`ng-touched` class). A model is considered to be touched when the user has\nfirst focused the control element and then shifted focus away from the control (blur event).",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 26032,
            "ngdoc": "method",
            "name": "ngModel.NgModelController#$rollbackViewValue",
            "description": "Cancel an update and reset the input element's value to prevent an update to the `$modelValue`,\nwhich may be caused by a pending debounced event or because the input is waiting for a some\nfuture event.\n\nIf you have an input that uses `ng-model-options` to set up debounced updates or updates that\ndepend on special events such as blur, you can have a situation where there is a period when\nthe `$viewValue` is out of sync with the ngModel's `$modelValue`.\n\nIn this case, you can use `$rollbackViewValue()` to manually cancel the debounced / future update\nand reset the input to the last committed view value.\n\nIt is also possible that you run into difficulties if you try to update the ngModel's `$modelValue`\nprogrammatically before these debounced/future events have resolved/occurred, because Angular's\ndirty checking mechanism is not able to tell whether the model has actually changed or not.\n\nThe `$rollbackViewValue()` method should be called before programmatically changing the model of an\ninput which may have such events pending. This is important in order to make sure that the\ninput field will be updated with the new model value and any pending operations are cancelled.\n\n<example name=\"ng-model-cancel-update\" module=\"cancel-update-example\">\n  <file name=\"app.js\">\n    angular.module('cancel-update-example', [])\n\n    .controller('CancelUpdateController', ['$scope', function($scope) {\n      $scope.model = {};\n\n      $scope.setEmpty = function(e, value, rollback) {\n        if (e.keyCode == 27) {\n          e.preventDefault();\n          if (rollback) {\n            $scope.myForm[value].$rollbackViewValue();\n          }\n          $scope.model[value] = '';\n        }\n      };\n    }]);\n  </file>\n  <file name=\"index.html\">\n    <div ng-controller=\"CancelUpdateController\">\n       <p>Both of these inputs are only updated if they are blurred. Hitting escape should\n       empty them. Follow these steps and observe the difference:</p>\n      <ol>\n        <li>Type something in the input. You will see that the model is not yet updated</li>\n        <li>Press the Escape key.\n          <ol>\n            <li> In the first example, nothing happens, because the model is already '', and no\n            update is detected. If you blur the input, the model will be set to the current view.\n            </li>\n            <li> In the second example, the pending update is cancelled, and the input is set back\n            to the last committed view value (''). Blurring the input does nothing.\n            </li>\n          </ol>\n        </li>\n      </ol>\n\n      <form name=\"myForm\" ng-model-options=\"{ updateOn: 'blur' }\">\n        <div>\n       <p id=\"inputDescription1\">Without $rollbackViewValue():</p>\n        <input name=\"value1\" aria-describedby=\"inputDescription1\" ng-model=\"model.value1\"\n               ng-keydown=\"setEmpty($event, 'value1')\">\n        value1: \"{{ model.value1 }}\"\n        </div>\n\n        <div>\n       <p id=\"inputDescription2\">With $rollbackViewValue():</p>\n        <input name=\"value2\" aria-describedby=\"inputDescription2\" ng-model=\"model.value2\"\n               ng-keydown=\"setEmpty($event, 'value2', true)\">\n        value2: \"{{ model.value2 }}\"\n        </div>\n      </form>\n    </div>\n  </file>\n      <file name=\"style.css\">\n         div {\n           display: table-cell;\n         }\n         div:nth-child(1) {\n           padding-right: 30px;\n         }\n\n       </file>\n</example>",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 26126,
            "ngdoc": "method",
            "name": "ngModel.NgModelController#$validate",
            "description": "Runs each of the registered validators (first synchronous validators and then\nasynchronous validators).\nIf the validity changes to invalid, the model will be set to `undefined`,\nunless {@link ngModelOptions `ngModelOptions.allowInvalid`} is `true`.\nIf the validity changes to valid, it will set the model to the last available valid\n`$modelValue`, i.e. either the last parsed value or the last value set from the scope.",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 26265,
            "ngdoc": "method",
            "name": "ngModel.NgModelController#$commitViewValue",
            "description": "Commit a pending update to the `$modelValue`.\n\nUpdates may be pending by a debounced event or because the input is waiting for a some future\nevent defined in `ng-model-options`. this method is rarely needed as `NgModelController`\nusually handles calling this in response to input events.",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 26355,
            "ngdoc": "method",
            "name": "ngModel.NgModelController#$setViewValue",
            "description": "Update the view value.\n\nThis method should be called when a control wants to change the view value; typically,\nthis is done from within a DOM event handler. For example, the {@link ng.directive:input input}\ndirective calls it when the value of the input changes and {@link ng.directive:select select}\ncalls it when an option is selected.\n\nWhen `$setViewValue` is called, the new `value` will be staged for committing through the `$parsers`\nand `$validators` pipelines. If there are no special {@link ngModelOptions} specified then the staged\nvalue sent directly for processing, finally to be applied to `$modelValue` and then the\n**expression** specified in the `ng-model` attribute. Lastly, all the registered change listeners,\nin the `$viewChangeListeners` list, are called.\n\nIn case the {@link ng.directive:ngModelOptions ngModelOptions} directive is used with `updateOn`\nand the `default` trigger is not listed, all those actions will remain pending until one of the\n`updateOn` events is triggered on the DOM element.\nAll these actions will be debounced if the {@link ng.directive:ngModelOptions ngModelOptions}\ndirective is used with a custom debounce for this particular event.\nNote that a `$digest` is only triggered once the `updateOn` events are fired, or if `debounce`\nis specified, once the timer runs out.\n\nWhen used with standard inputs, the view value will always be a string (which is in some cases\nparsed into another type, such as a `Date` object for `input[date]`.)\nHowever, custom controls might also pass objects to this method. In this case, we should make\na copy of the object before passing it to `$setViewValue`. This is because `ngModel` does not\nperform a deep watch of objects, it only looks for a change of identity. If you only change\nthe property of the object then ngModel will not realize that the object has changed and\nwill not invoke the `$parsers` and `$validators` pipelines. For this reason, you should\nnot change properties of the copy once it has been passed to `$setViewValue`.\nOtherwise you may cause the model value on the scope to change incorrectly.\n\n<div class=\"alert alert-info\">\nIn any case, the value passed to the method should always reflect the current value\nof the control. For example, if you are calling `$setViewValue` for an input element,\nyou should pass the input DOM value. Otherwise, the control and the scope model become\nout of sync. It's also important to note that `$setViewValue` does not call `$render` or change\nthe control's DOM value in any way. If we want to change the control's DOM value\nprogrammatically, we should update the `ngModel` scope expression. Its new value will be\npicked up by the model controller, which will run it through the `$formatters`, `$render` it\nto update the DOM, and finally call `$validate` on it.\n</div>",
            "params": [
                {
                    "name": "value",
                    "description": "value from the view.",
                    "type": "*"
                },
                {
                    "name": "trigger",
                    "description": "Event that triggered the update.",
                    "type": "String"
                }
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 26728,
            "ngdoc": "directive",
            "name": "ngModelOptions",
            "description": "Allows tuning how model updates are done. Using `ngModelOptions` you can specify a custom list of\nevents that will trigger a model update and/or a debouncing delay so that the actual update only\ntakes place when a timer expires; this timer will be reset after another change takes place.\n\nGiven the nature of `ngModelOptions`, the value displayed inside input fields in the view might\nbe different from the value in the actual model. This means that if you update the model you\nshould also invoke {@link ngModel.NgModelController `$rollbackViewValue`} on the relevant input field in\norder to make sure it is synchronized with the model and that any debounced action is canceled.\n\nThe easiest way to reference the control's {@link ngModel.NgModelController `$rollbackViewValue`}\nmethod is by making sure the input is placed inside a form that has a `name` attribute. This is\nimportant because `form` controllers are published to the related scope under the name in their\n`name` attribute.\n\nAny pending changes will take place immediately when an enclosing form is submitted via the\n`submit` event. Note that `ngClick` events will occur before the model is updated. Use `ngSubmit`\nto have access to the updated model.\n\n`ngModelOptions` has an effect on the element it's declared on and its descendants.",
            "params": [
                {
                    "name": "ngModelOptions",
                    "description": "options to apply to the current model. Valid keys are:\n  - `updateOn`: string specifying which event should the input be bound to. You can set several\n    events using an space delimited list. There is a special event called `default` that\n    matches the default events belonging of the control.\n  - `debounce`: integer value which contains the debounce model update value in milliseconds. A\n    value of 0 triggers an immediate update. If an object is supplied instead, you can specify a\n    custom value for each event. For example:\n    `ng-model-options=\"{ updateOn: 'default blur', debounce: { 'default': 500, 'blur': 0 } }\"`\n  - `allowInvalid`: boolean value which indicates that the model can be set with values that did\n    not validate correctly instead of the default behavior of setting the model to undefined.\n  - `getterSetter`: boolean value which determines whether or not to treat functions bound to\n      `ngModel` as getters/setters.\n  - `timezone`: Defines the timezone to be used to read/write the `Date` instance in the model for\n    `<input type=\"date\">`, `<input type=\"time\">`, ... . It understands UTC/GMT and the\n    continental US time zone abbreviations, but for general use, use a time zone offset, for\n    example, `'+0430'` (4 hours, 30 minutes east of the Greenwich meridian)\n    If not specified, the timezone of the browser will be used.",
                    "type": "Object"
                }
            ],
            "example": [
                "\n\n The following example shows how to override immediate updates. Changes on the inputs within the\n form will update the model only when the control loses focus (blur event). If `escape` key is\n pressed while the input field is focused, the value is reset to the value in the current model.\n\n <example name=\"ngModelOptions-directive-blur\" module=\"optionsExample\">\n   <file name=\"index.html\">\n     <div ng-controller=\"ExampleController\">\n       <form name=\"userForm\">\n         <label>Name:\n           <input type=\"text\" name=\"userName\"\n                  ng-model=\"user.name\"\n                  ng-model-options=\"{ updateOn: 'blur' }\"\n                  ng-keyup=\"cancel($event)\" />\n         </label><br />\n         <label>Other data:\n           <input type=\"text\" ng-model=\"user.data\" />\n         </label><br />\n       </form>\n       <pre>user.name = <span ng-bind=\"user.name\"></span></pre>\n       <pre>user.data = <span ng-bind=\"user.data\"></span></pre>\n     </div>\n   </file>\n   <file name=\"app.js\">\n     angular.module('optionsExample', [])\n       .controller('ExampleController', ['$scope', function($scope) {\n         $scope.user = { name: 'John', data: '' };\n\n         $scope.cancel = function(e) {\n           if (e.keyCode == 27) {\n             $scope.userForm.userName.$rollbackViewValue();\n           }\n         };\n       }]);\n   </file>\n   <file name=\"protractor.js\" type=\"protractor\">\n     var model = element(by.binding('user.name'));\n     var input = element(by.model('user.name'));\n     var other = element(by.model('user.data'));\n\n     it('should allow custom events', function() {\n       input.sendKeys(' Doe');\n       input.click();\n       expect(model.getText()).toEqual('John');\n       other.click();\n       expect(model.getText()).toEqual('John Doe');\n     });\n\n     it('should $rollbackViewValue when model changes', function() {\n       input.sendKeys(' Doe');\n       expect(input.getAttribute('value')).toEqual('John Doe');\n       input.sendKeys(protractor.Key.ESCAPE);\n       expect(input.getAttribute('value')).toEqual('John');\n       other.click();\n       expect(model.getText()).toEqual('John');\n     });\n   </file>\n </example>\n\n This one shows how to debounce model changes. Model will be updated only 1 sec after last change.\n If the `Clear` button is pressed, any debounced action is canceled and the value becomes empty.\n\n <example name=\"ngModelOptions-directive-debounce\" module=\"optionsExample\">\n   <file name=\"index.html\">\n     <div ng-controller=\"ExampleController\">\n       <form name=\"userForm\">\n         <label>Name:\n           <input type=\"text\" name=\"userName\"\n                  ng-model=\"user.name\"\n                  ng-model-options=\"{ debounce: 1000 }\" />\n         </label>\n         <button ng-click=\"userForm.userName.$rollbackViewValue(); user.name=''\">Clear</button>\n         <br />\n       </form>\n       <pre>user.name = <span ng-bind=\"user.name\"></span></pre>\n     </div>\n   </file>\n   <file name=\"app.js\">\n     angular.module('optionsExample', [])\n       .controller('ExampleController', ['$scope', function($scope) {\n         $scope.user = { name: 'Igor' };\n       }]);\n   </file>\n </example>\n\n This one shows how to bind to getter/setters:\n\n <example name=\"ngModelOptions-directive-getter-setter\" module=\"getterSetterExample\">\n   <file name=\"index.html\">\n     <div ng-controller=\"ExampleController\">\n       <form name=\"userForm\">\n         <label>Name:\n           <input type=\"text\" name=\"userName\"\n                  ng-model=\"user.name\"\n                  ng-model-options=\"{ getterSetter: true }\" />\n         </label>\n       </form>\n       <pre>user.name = <span ng-bind=\"user.name()\"></span></pre>\n     </div>\n   </file>\n   <file name=\"app.js\">\n     angular.module('getterSetterExample', [])\n       .controller('ExampleController', ['$scope', function($scope) {\n         var _name = 'Brian';\n         $scope.user = {\n           name: function(newName) {\n             // Note that newName can be undefined for two reasons:\n             // 1. Because it is called as a getter and thus called with no arguments\n             // 2. Because the property should actually be set to undefined. This happens e.g. if the\n             //    input is invalid\n             return arguments.length ? (_name = newName) : _name;\n           }\n         };\n       }]);\n   </file>\n </example>"
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 27056,
            "ngdoc": "directive",
            "name": "ngOptions",
            "restrict": "A",
            "description": "The `ngOptions` attribute can be used to dynamically generate a list of `<option>`\nelements for the `<select>` element using the array or object obtained by evaluating the\n`ngOptions` comprehension expression.\n\nIn many cases, `ngRepeat` can be used on `<option>` elements instead of `ngOptions` to achieve a\nsimilar result. However, `ngOptions` provides some benefits such as reducing memory and\nincreasing speed by not creating a new scope for each repeated instance, as well as providing\nmore flexibility in how the `<select>`'s model is assigned via the `select` **`as`** part of the\ncomprehension expression. `ngOptions` should be used when the `<select>` model needs to be bound\n to a non-string value. This is because an option element can only be bound to string values at\npresent.\n\nWhen an item in the `<select>` menu is selected, the array element or object property\nrepresented by the selected option will be bound to the model identified by the `ngModel`\ndirective.\n\nOptionally, a single hard-coded `<option>` element, with the value set to an empty string, can\nbe nested into the `<select>` element. This element will then represent the `null` or \"not selected\"\noption. See example below for demonstration.\n\n## Complex Models (objects or collections)\n\nBy default, `ngModel` watches the model by reference, not value. This is important to know when\nbinding the select to a model that is an object or a collection.\n\nOne issue occurs if you want to preselect an option. For example, if you set\nthe model to an object that is equal to an object in your collection, `ngOptions` won't be able to set the selection,\nbecause the objects are not identical. So by default, you should always reference the item in your collection\nfor preselections, e.g.: `$scope.selected = $scope.collection[3]`.\n\nAnother solution is to use a `track by` clause, because then `ngOptions` will track the identity\nof the item not by reference, but by the result of the `track by` expression. For example, if your\ncollection items have an id property, you would `track by item.id`.\n\nA different issue with objects or collections is that ngModel won't detect if an object property or\na collection item changes. For that reason, `ngOptions` additionally watches the model using\n`$watchCollection`, when the expression contains a `track by` clause or the the select has the `multiple` attribute.\nThis allows ngOptions to trigger a re-rendering of the options even if the actual object/collection\nhas not changed identity, but only a property on the object or an item in the collection changes.\n\nNote that `$watchCollection` does a shallow comparison of the properties of the object (or the items in the collection\nif the model is an array). This means that changing a property deeper than the first level inside the\nobject/collection will not trigger a re-rendering.\n\n## `select` **`as`**\n\nUsing `select` **`as`** will bind the result of the `select` expression to the model, but\nthe value of the `<select>` and `<option>` html elements will be either the index (for array data sources)\nor property name (for object data sources) of the value within the collection. If a **`track by`** expression\nis used, the result of that expression will be set as the value of the `option` and `select` elements.\n\n\n### `select` **`as`** and **`track by`**\n\n<div class=\"alert alert-warning\">\nBe careful when using `select` **`as`** and **`track by`** in the same expression.\n</div>\n\nGiven this array of items on the $scope:\n\n```js\n$scope.items = [{\n  id: 1,\n  label: 'aLabel',\n  subItem: { name: 'aSubItem' }\n}, {\n  id: 2,\n  label: 'bLabel',\n  subItem: { name: 'bSubItem' }\n}];\n```\n\nThis will work:\n\n```html\n<select ng-options=\"item as item.label for item in items track by item.id\" ng-model=\"selected\"></select>\n```\n```js\n$scope.selected = $scope.items[0];\n```\n\nbut this will not work:\n\n```html\n<select ng-options=\"item.subItem as item.label for item in items track by item.id\" ng-model=\"selected\"></select>\n```\n```js\n$scope.selected = $scope.items[0].subItem;\n```\n\nIn both examples, the **`track by`** expression is applied successfully to each `item` in the\n`items` array. Because the selected option has been set programmatically in the controller, the\n**`track by`** expression is also applied to the `ngModel` value. In the first example, the\n`ngModel` value is `items[0]` and the **`track by`** expression evaluates to `items[0].id` with\nno issue. In the second example, the `ngModel` value is `items[0].subItem` and the **`track by`**\nexpression evaluates to `items[0].subItem.id` (which is undefined). As a result, the model value\nis not matched against any `<option>` and the `<select>` appears as having no selected value.",
            "params": [
                {
                    "name": "ngModel",
                    "description": "Assignable angular expression to data-bind to.",
                    "type": "String"
                },
                {
                    "name": "name",
                    "description": "Property name of the form under which the control is published.",
                    "type": "String="
                },
                {
                    "name": "required",
                    "description": "The control is considered valid only if value is entered.",
                    "type": "String="
                },
                {
                    "name": "ngRequired",
                    "description": "Adds `required` attribute and `required` validation constraint to\n   the element when the ngRequired expression evaluates to true. Use `ngRequired` instead of\n   `required` when you want to data-bind to the `required` attribute.",
                    "type": "String="
                },
                {
                    "name": "ngOptions",
                    "description": "in one of the following forms:\n\n  * for array data sources:\n    * `label` **`for`** `value` **`in`** `array`\n    * `select` **`as`** `label` **`for`** `value` **`in`** `array`\n    * `label` **`group by`** `group` **`for`** `value` **`in`** `array`\n    * `label` **`disable when`** `disable` **`for`** `value` **`in`** `array`\n    * `label` **`group by`** `group` **`for`** `value` **`in`** `array` **`track by`** `trackexpr`\n    * `label` **`disable when`** `disable` **`for`** `value` **`in`** `array` **`track by`** `trackexpr`\n    * `label` **`for`** `value` **`in`** `array` | orderBy:`orderexpr` **`track by`** `trackexpr`\n       (for including a filter with `track by`)\n  * for object data sources:\n    * `label` **`for (`**`key` **`,`** `value`**`) in`** `object`\n    * `select` **`as`** `label` **`for (`**`key` **`,`** `value`**`) in`** `object`\n    * `label` **`group by`** `group` **`for (`**`key`**`,`** `value`**`) in`** `object`\n    * `label` **`disable when`** `disable` **`for (`**`key`**`,`** `value`**`) in`** `object`\n    * `select` **`as`** `label` **`group by`** `group`\n        **`for` `(`**`key`**`,`** `value`**`) in`** `object`\n    * `select` **`as`** `label` **`disable when`** `disable`\n        **`for` `(`**`key`**`,`** `value`**`) in`** `object`\n\nWhere:\n\n  * `array` / `object`: an expression which evaluates to an array / object to iterate over.\n  * `value`: local variable which will refer to each item in the `array` or each property value\n     of `object` during iteration.\n  * `key`: local variable which will refer to a property name in `object` during iteration.\n  * `label`: The result of this expression will be the label for `<option>` element. The\n    `expression` will most likely refer to the `value` variable (e.g. `value.propertyName`).\n  * `select`: The result of this expression will be bound to the model of the parent `<select>`\n     element. If not specified, `select` expression will default to `value`.\n  * `group`: The result of this expression will be used to group options using the `<optgroup>`\n     DOM element.\n  * `disable`: The result of this expression will be used to disable the rendered `<option>`\n     element. Return `true` to disable.\n  * `trackexpr`: Used when working with an array of objects. The result of this expression will be\n     used to identify the objects in the array. The `trackexpr` will most likely refer to the\n    `value` variable (e.g. `value.propertyName`). With this the selection is preserved\n     even when the options are recreated (e.g. reloaded from the server).",
                    "type": "Comprehension_expression="
                }
            ],
            "example": [
                "\n   <example module=\"selectExample\">\n     <file name=\"index.html\">\n       <script>\n       angular.module('selectExample', [])\n         .controller('ExampleController', ['$scope', function($scope) {\n           $scope.colors = [\n             {name:'black', shade:'dark'},\n             {name:'white', shade:'light', notAnOption: true},\n             {name:'red', shade:'dark'},\n             {name:'blue', shade:'dark', notAnOption: true},\n             {name:'yellow', shade:'light', notAnOption: false}\n           ];\n           $scope.myColor = $scope.colors[2]; // red\n         }]);\n       </script>\n       <div ng-controller=\"ExampleController\">\n         <ul>\n           <li ng-repeat=\"color in colors\">\n             <label>Name: <input ng-model=\"color.name\"></label>\n             <label><input type=\"checkbox\" ng-model=\"color.notAnOption\"> Disabled?</label>\n             <button ng-click=\"colors.splice($index, 1)\" aria-label=\"Remove\">X</button>\n           </li>\n           <li>\n             <button ng-click=\"colors.push({})\">add</button>\n           </li>\n         </ul>\n         <hr/>\n         <label>Color (null not allowed):\n           <select ng-model=\"myColor\" ng-options=\"color.name for color in colors\"></select>\n         </label><br/>\n         <label>Color (null allowed):\n         <span  class=\"nullable\">\n           <select ng-model=\"myColor\" ng-options=\"color.name for color in colors\">\n             <option value=\"\">-- choose color --</option>\n           </select>\n         </span></label><br/>\n\n         <label>Color grouped by shade:\n           <select ng-model=\"myColor\" ng-options=\"color.name group by color.shade for color in colors\">\n           </select>\n         </label><br/>\n\n         <label>Color grouped by shade, with some disabled:\n           <select ng-model=\"myColor\"\n                 ng-options=\"color.name group by color.shade disable when color.notAnOption for color in colors\">\n           </select>\n         </label><br/>\n\n\n\n         Select <button ng-click=\"myColor = { name:'not in list', shade: 'other' }\">bogus</button>.\n         <br/>\n         <hr/>\n         Currently selected: {{ {selected_color:myColor} }}\n         <div style=\"border:solid 1px black; height:20px\"\n              ng-style=\"{'background-color':myColor.name}\">\n         </div>\n       </div>\n     </file>\n     <file name=\"protractor.js\" type=\"protractor\">\n        it('should check ng-options', function() {\n          expect(element(by.binding('{selected_color:myColor}')).getText()).toMatch('red');\n          element.all(by.model('myColor')).first().click();\n          element.all(by.css('select[ng-model=\"myColor\"] option')).first().click();\n          expect(element(by.binding('{selected_color:myColor}')).getText()).toMatch('black');\n          element(by.css('.nullable select[ng-model=\"myColor\"]')).click();\n          element.all(by.css('.nullable select[ng-model=\"myColor\"] option')).first().click();\n          expect(element(by.binding('{selected_color:myColor}')).getText()).toMatch('null');\n        });\n     </file>\n   </example>"
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 27811,
            "ngdoc": "directive",
            "name": "ngPluralize",
            "restrict": "EA",
            "description": "`ngPluralize` is a directive that displays messages according to en-US localization rules.\nThese rules are bundled with angular.js, but can be overridden\n(see {@link guide/i18n Angular i18n} dev guide). You configure ngPluralize directive\nby specifying the mappings between\n[plural categories](http://unicode.org/repos/cldr-tmp/trunk/diff/supplemental/language_plural_rules.html)\nand the strings to be displayed.\n\n# Plural categories and explicit number rules\nThere are two\n[plural categories](http://unicode.org/repos/cldr-tmp/trunk/diff/supplemental/language_plural_rules.html)\nin Angular's default en-US locale: \"one\" and \"other\".\n\nWhile a plural category may match many numbers (for example, in en-US locale, \"other\" can match\nany number that is not 1), an explicit number rule can only match one number. For example, the\nexplicit number rule for \"3\" matches the number 3. There are examples of plural categories\nand explicit number rules throughout the rest of this documentation.\n\n# Configuring ngPluralize\nYou configure ngPluralize by providing 2 attributes: `count` and `when`.\nYou can also provide an optional attribute, `offset`.\n\nThe value of the `count` attribute can be either a string or an {@link guide/expression\nAngular expression}; these are evaluated on the current scope for its bound value.\n\nThe `when` attribute specifies the mappings between plural categories and the actual\nstring to be displayed. The value of the attribute should be a JSON object.\n\nThe following example shows how to configure ngPluralize:\n\n```html\n<ng-pluralize count=\"personCount\"\n                when=\"{'0': 'Nobody is viewing.',\n                     'one': '1 person is viewing.',\n                     'other': '{} people are viewing.'}\">\n</ng-pluralize>\n```\n\nIn the example, `\"0: Nobody is viewing.\"` is an explicit number rule. If you did not\nspecify this rule, 0 would be matched to the \"other\" category and \"0 people are viewing\"\nwould be shown instead of \"Nobody is viewing\". You can specify an explicit number rule for\nother numbers, for example 12, so that instead of showing \"12 people are viewing\", you can\nshow \"a dozen people are viewing\".\n\nYou can use a set of closed braces (`{}`) as a placeholder for the number that you want substituted\ninto pluralized strings. In the previous example, Angular will replace `{}` with\n<span ng-non-bindable>`{{personCount}}`</span>. The closed braces `{}` is a placeholder\nfor <span ng-non-bindable>{{numberExpression}}</span>.\n\nIf no rule is defined for a category, then an empty string is displayed and a warning is generated.\nNote that some locales define more categories than `one` and `other`. For example, fr-fr defines `few` and `many`.\n\n# Configuring ngPluralize with offset\nThe `offset` attribute allows further customization of pluralized text, which can result in\na better user experience. For example, instead of the message \"4 people are viewing this document\",\nyou might display \"John, Kate and 2 others are viewing this document\".\nThe offset attribute allows you to offset a number by any desired value.\nLet's take a look at an example:\n\n```html\n<ng-pluralize count=\"personCount\" offset=2\n              when=\"{'0': 'Nobody is viewing.',\n                     '1': '{{person1}} is viewing.',\n                     '2': '{{person1}} and {{person2}} are viewing.',\n                     'one': '{{person1}}, {{person2}} and one other person are viewing.',\n                     'other': '{{person1}}, {{person2}} and {} other people are viewing.'}\">\n</ng-pluralize>\n```\n\nNotice that we are still using two plural categories(one, other), but we added\nthree explicit number rules 0, 1 and 2.\nWhen one person, perhaps John, views the document, \"John is viewing\" will be shown.\nWhen three people view the document, no explicit number rule is found, so\nan offset of 2 is taken off 3, and Angular uses 1 to decide the plural category.\nIn this case, plural category 'one' is matched and \"John, Mary and one other person are viewing\"\nis shown.\n\nNote that when you specify offsets, you must provide explicit number rules for\nnumbers from 0 up to and including the offset. If you use an offset of 3, for example,\nyou must provide explicit number rules for 0, 1, 2 and 3. You must also provide plural strings for\nplural categories \"one\" and \"other\".",
            "params": [
                {
                    "name": "count",
                    "description": "The variable to be bound to.",
                    "type": "String|expression"
                },
                {
                    "name": "when",
                    "description": "The mapping between plural category to its corresponding strings.",
                    "type": "String"
                },
                {
                    "name": "offset",
                    "description": "Offset to deduct from the total number.",
                    "type": "Number="
                }
            ],
            "example": [
                "\n   <example module=\"pluralizeExample\">\n     <file name=\"index.html\">\n       <script>\n         angular.module('pluralizeExample', [])\n           .controller('ExampleController', ['$scope', function($scope) {\n             $scope.person1 = 'Igor';\n             $scope.person2 = 'Misko';\n             $scope.personCount = 1;\n           }]);\n       </script>\n       <div ng-controller=\"ExampleController\">\n         <label>Person 1:<input type=\"text\" ng-model=\"person1\" value=\"Igor\" /></label><br/>\n         <label>Person 2:<input type=\"text\" ng-model=\"person2\" value=\"Misko\" /></label><br/>\n         <label>Number of People:<input type=\"text\" ng-model=\"personCount\" value=\"1\" /></label><br/>\n\n         <!--- Example with simple pluralization rules for en locale --->\n         Without Offset:\n         <ng-pluralize count=\"personCount\"\n                       when=\"{'0': 'Nobody is viewing.',\n                              'one': '1 person is viewing.',\n                              'other': '{} people are viewing.'}\">\n         </ng-pluralize><br>\n\n         <!--- Example with offset --->\n         With Offset(2):\n         <ng-pluralize count=\"personCount\" offset=2\n                       when=\"{'0': 'Nobody is viewing.',\n                              '1': '{{person1}} is viewing.',\n                              '2': '{{person1}} and {{person2}} are viewing.',\n                              'one': '{{person1}}, {{person2}} and one other person are viewing.',\n                              'other': '{{person1}}, {{person2}} and {} other people are viewing.'}\">\n         </ng-pluralize>\n       </div>\n     </file>\n     <file name=\"protractor.js\" type=\"protractor\">\n       it('should show correct pluralized string', function() {\n         var withoutOffset = element.all(by.css('ng-pluralize')).get(0);\n         var withOffset = element.all(by.css('ng-pluralize')).get(1);\n         var countInput = element(by.model('personCount'));\n\n         expect(withoutOffset.getText()).toEqual('1 person is viewing.');\n         expect(withOffset.getText()).toEqual('Igor is viewing.');\n\n         countInput.clear();\n         countInput.sendKeys('0');\n\n         expect(withoutOffset.getText()).toEqual('Nobody is viewing.');\n         expect(withOffset.getText()).toEqual('Nobody is viewing.');\n\n         countInput.clear();\n         countInput.sendKeys('2');\n\n         expect(withoutOffset.getText()).toEqual('2 people are viewing.');\n         expect(withOffset.getText()).toEqual('Igor and Misko are viewing.');\n\n         countInput.clear();\n         countInput.sendKeys('3');\n\n         expect(withoutOffset.getText()).toEqual('3 people are viewing.');\n         expect(withOffset.getText()).toEqual('Igor, Misko and one other person are viewing.');\n\n         countInput.clear();\n         countInput.sendKeys('4');\n\n         expect(withoutOffset.getText()).toEqual('4 people are viewing.');\n         expect(withOffset.getText()).toEqual('Igor, Misko and 2 other people are viewing.');\n       });\n       it('should show data-bound names', function() {\n         var withOffset = element.all(by.css('ng-pluralize')).get(1);\n         var personCount = element(by.model('personCount'));\n         var person1 = element(by.model('person1'));\n         var person2 = element(by.model('person2'));\n         personCount.clear();\n         personCount.sendKeys('4');\n         person1.clear();\n         person1.sendKeys('Di');\n         person2.clear();\n         person2.sendKeys('Vojta');\n         expect(withOffset.getText()).toEqual('Di, Vojta and 2 other people are viewing.');\n       });\n     </file>\n   </example>"
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 28985,
            "ngdoc": "directive",
            "name": "ngSwitch",
            "restrict": "EA",
            "description": "The `ngSwitch` directive is used to conditionally swap DOM structure on your template based on a scope expression.\nElements within `ngSwitch` but without `ngSwitchWhen` or `ngSwitchDefault` directives will be preserved at the location\nas specified in the template.\n\nThe directive itself works similar to ngInclude, however, instead of downloading template code (or loading it\nfrom the template cache), `ngSwitch` simply chooses one of the nested elements and makes it visible based on which element\nmatches the value obtained from the evaluated expression. In other words, you define a container element\n(where you place the directive), place an expression on the **`on=\"...\"` attribute**\n(or the **`ng-switch=\"...\"` attribute**), define any inner elements inside of the directive and place\na when attribute per element. The when attribute is used to inform ngSwitch which element to display when the on\nexpression is evaluated. If a matching expression is not found via a when attribute then an element with the default\nattribute is displayed.\n\n<div class=\"alert alert-info\">\nBe aware that the attribute values to match against cannot be expressions. They are interpreted\nas literal string values to match against.\nFor example, **`ng-switch-when=\"someVal\"`** will match against the string `\"someVal\"` not against the\nvalue of the expression `$scope.someVal`.\n</div>",
            "animations": "enter - happens after the ngSwitch contents change and the matched child element is placed inside the container\nleave - happens just after the ngSwitch contents change and just before the former contents are removed from the DOM",
            "usage": "```\n<ANY ng-switch=\"expression\">\n  <ANY ng-switch-when=\"matchValue1\">...</ANY>\n  <ANY ng-switch-when=\"matchValue2\">...</ANY>\n  <ANY ng-switch-default>...</ANY>\n</ANY>\n```",
            "scope": "",
            "priority": "1200",
            "params": [
                {
                    "name": "ngSwitch|on",
                    "description": "expression to match against <code>ng-switch-when</code>.\nOn child elements add:\n\n* `ngSwitchWhen`: the case statement to match against. If match then this\n  case will be displayed. If the same match appears multiple times, all the\n  elements will be displayed.\n* `ngSwitchDefault`: the default case when no other case match. If there\n  are multiple default cases, all of them will be displayed when no other\n  case match.",
                    "type": "*"
                }
            ],
            "example": [
                "\n <example module=\"switchExample\" deps=\"angular-animate.js\" animations=\"true\">\n   <file name=\"index.html\">\n     <div ng-controller=\"ExampleController\">\n       <select ng-model=\"selection\" ng-options=\"item for item in items\">\n       </select>\n       <code>selection={{selection}}</code>\n       <hr/>\n       <div class=\"animate-switch-container\"\n         ng-switch on=\"selection\">\n           <div class=\"animate-switch\" ng-switch-when=\"settings\">Settings Div</div>\n           <div class=\"animate-switch\" ng-switch-when=\"home\">Home Span</div>\n           <div class=\"animate-switch\" ng-switch-default>default</div>\n       </div>\n     </div>\n   </file>\n   <file name=\"script.js\">\n     angular.module('switchExample', ['ngAnimate'])\n       .controller('ExampleController', ['$scope', function($scope) {\n         $scope.items = ['settings', 'home', 'other'];\n         $scope.selection = $scope.items[0];\n       }]);\n   </file>\n   <file name=\"animations.css\">\n     .animate-switch-container {\n       position:relative;\n       background:white;\n       border:1px solid black;\n       height:40px;\n       overflow:hidden;\n     }\n\n     .animate-switch {\n       padding:10px;\n     }\n\n     .animate-switch.ng-animate {\n       transition:all cubic-bezier(0.250, 0.460, 0.450, 0.940) 0.5s;\n\n       position:absolute;\n       top:0;\n       left:0;\n       right:0;\n       bottom:0;\n     }\n\n     .animate-switch.ng-leave.ng-leave-active,\n     .animate-switch.ng-enter {\n       top:-50px;\n     }\n     .animate-switch.ng-leave,\n     .animate-switch.ng-enter.ng-enter-active {\n       top:0;\n     }\n   </file>\n   <file name=\"protractor.js\" type=\"protractor\">\n     var switchElem = element(by.css('[ng-switch]'));\n     var select = element(by.model('selection'));\n\n     it('should start in settings', function() {\n       expect(switchElem.getText()).toMatch(/Settings Div/);\n     });\n     it('should change to home', function() {\n       select.all(by.css('option')).get(1).click();\n       expect(switchElem.getText()).toMatch(/Home Span/);\n     });\n     it('should select default', function() {\n       select.all(by.css('option')).get(2).click();\n       expect(switchElem.getText()).toMatch(/default/);\n     });\n   </file>\n </example>"
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 29379,
            "ngdoc": "directive",
            "name": "script",
            "restrict": "E",
            "description": "Load the content of a `<script>` element into {@link ng.$templateCache `$templateCache`}, so that the\ntemplate can be used by {@link ng.directive:ngInclude `ngInclude`},\n{@link ngRoute.directive:ngView `ngView`}, or {@link guide/directive directives}. The type of the\n`<script>` element must be specified as `text/ng-template`, and a cache name for the template must be\nassigned through the element's `id`, which can then be used as a directive's `templateUrl`.",
            "params": [
                {
                    "name": "type",
                    "description": "Must be set to `'text/ng-template'`.",
                    "type": "String"
                },
                {
                    "name": "id",
                    "description": "Cache name of the template.",
                    "type": "String"
                }
            ],
            "example": [
                "\n <example>\n   <file name=\"index.html\">\n     <script type=\"text/ng-template\" id=\"/tpl.html\">\n       Content of the template.\n     </script>\n\n     <a ng-click=\"currentTpl='/tpl.html'\" id=\"tpl-link\">Load inlined template</a>\n     <div id=\"tpl-content\" ng-include src=\"currentTpl\"></div>\n   </file>\n   <file name=\"protractor.js\" type=\"protractor\">\n     it('should load template defined inside script tag', function() {\n       element(by.css('#tpl-link')).click();\n       expect(element(by.css('#tpl-content')).getText()).toMatch(/Content of the template/);\n     });\n   </file>\n </example>"
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 29438,
            "ngdoc": "type",
            "name": "select.SelectController",
            "description": "The controller for the `<select>` directive. This provides support for reading\nand writing the selected value(s) of the control and also coordinates dynamically\nadded `<option>` elements, perhaps by an `ngRepeat` directive.",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 29574,
            "ngdoc": "directive",
            "name": "select",
            "restrict": "E",
            "description": "HTML `SELECT` element with angular data-binding.\n\nThe `select` directive is used together with {@link ngModel `ngModel`} to provide data-binding\nbetween the scope and the `<select>` control (including setting default values).\nIt also handles dynamic `<option>` elements, which can be added using the {@link ngRepeat `ngRepeat}` or\n{@link ngOptions `ngOptions`} directives.\n\nWhen an item in the `<select>` menu is selected, the value of the selected option will be bound\nto the model identified by the `ngModel` directive. With static or repeated options, this is\nthe content of the `value` attribute or the textContent of the `<option>`, if the value attribute is missing.\nIf you want dynamic value attributes, you can use interpolation inside the value attribute.\n\n<div class=\"alert alert-warning\">\nNote that the value of a `select` directive used without `ngOptions` is always a string.\nWhen the model needs to be bound to a non-string value, you must either explicitly convert it\nusing a directive (see example below) or use `ngOptions` to specify the set of options.\nThis is because an option element can only be bound to string values at present.\n</div>\n\nIf the viewValue of `ngModel` does not match any of the options, then the control\nwill automatically add an \"unknown\" option, which it then removes when the mismatch is resolved.\n\nOptionally, a single hard-coded `<option>` element, with the value set to an empty string, can\nbe nested into the `<select>` element. This element will then represent the `null` or \"not selected\"\noption. See example below for demonstration.\n\n<div class=\"alert alert-info\">\nIn many cases, `ngRepeat` can be used on `<option>` elements instead of {@link ng.directive:ngOptions\nngOptions} to achieve a similar result. However, `ngOptions` provides some benefits, such as\nmore flexibility in how the `<select>`'s model is assigned via the `select` **`as`** part of the\ncomprehension expression, and additionally in reducing memory and increasing speed by not creating\na new scope for each repeated instance.\n</div>",
            "params": [
                {
                    "name": "ngModel",
                    "description": "Assignable angular expression to data-bind to.",
                    "type": "String"
                },
                {
                    "name": "name",
                    "description": "Property name of the form under which the control is published.",
                    "type": "String="
                },
                {
                    "name": "multiple",
                    "description": "Allows multiple options to be selected. The selected values will be\n    bound to the model as an array.",
                    "type": "String="
                },
                {
                    "name": "required",
                    "description": "Sets `required` validation error key if the value is not entered.",
                    "type": "String="
                },
                {
                    "name": "ngRequired",
                    "description": "Adds required attribute and required validation constraint to\nthe element when the ngRequired expression evaluates to true. Use ngRequired instead of required\nwhen you want to data-bind to the required attribute.",
                    "type": "String="
                },
                {
                    "name": "ngChange",
                    "description": "Angular expression to be executed when selected option(s) changes due to user\n   interaction with the select element.",
                    "type": "String="
                },
                {
                    "name": "ngOptions",
                    "description": "sets the options that the select is populated with and defines what is\nset on the model on selection. See {@link ngOptions `ngOptions`}.",
                    "type": "String="
                }
            ],
            "example": [
                "\n### Simple `select` elements with static options\n\n<example name=\"static-select\" module=\"staticSelect\">\n<file name=\"index.html\">\n<div ng-controller=\"ExampleController\">\n  <form name=\"myForm\">\n    <label for=\"singleSelect\"> Single select: </label><br>\n    <select name=\"singleSelect\" ng-model=\"data.singleSelect\">\n      <option value=\"option-1\">Option 1</option>\n      <option value=\"option-2\">Option 2</option>\n    </select><br>\n\n    <label for=\"singleSelect\"> Single select with \"not selected\" option and dynamic option values: </label><br>\n    <select name=\"singleSelect\" id=\"singleSelect\" ng-model=\"data.singleSelect\">\n      <option value=\"\">---Please select---</option> <!-- not selected / blank option -->\n      <option value=\"{{data.option1}}\">Option 1</option> <!-- interpolation -->\n      <option value=\"option-2\">Option 2</option>\n    </select><br>\n    <button ng-click=\"forceUnknownOption()\">Force unknown option</button><br>\n    <tt>singleSelect = {{data.singleSelect}}</tt>\n\n    <hr>\n    <label for=\"multipleSelect\"> Multiple select: </label><br>\n    <select name=\"multipleSelect\" id=\"multipleSelect\" ng-model=\"data.multipleSelect\" multiple>\n      <option value=\"option-1\">Option 1</option>\n      <option value=\"option-2\">Option 2</option>\n      <option value=\"option-3\">Option 3</option>\n    </select><br>\n    <tt>multipleSelect = {{data.multipleSelect}}</tt><br/>\n  </form>\n</div>\n</file>\n<file name=\"app.js\">\n angular.module('staticSelect', [])\n   .controller('ExampleController', ['$scope', function($scope) {\n     $scope.data = {\n      singleSelect: null,\n      multipleSelect: [],\n      option1: 'option-1',\n     };\n\n     $scope.forceUnknownOption = function() {\n       $scope.data.singleSelect = 'nonsense';\n     };\n  }]);\n</file>\n</example>\n\n### Using `ngRepeat` to generate `select` options\n<example name=\"ngrepeat-select\" module=\"ngrepeatSelect\">\n<file name=\"index.html\">\n<div ng-controller=\"ExampleController\">\n  <form name=\"myForm\">\n    <label for=\"repeatSelect\"> Repeat select: </label>\n    <select name=\"repeatSelect\" id=\"repeatSelect\" ng-model=\"data.repeatSelect\">\n      <option ng-repeat=\"option in data.availableOptions\" value=\"{{option.id}}\">{{option.name}}</option>\n    </select>\n  </form>\n  <hr>\n  <tt>repeatSelect = {{data.repeatSelect}}</tt><br/>\n</div>\n</file>\n<file name=\"app.js\">\n angular.module('ngrepeatSelect', [])\n   .controller('ExampleController', ['$scope', function($scope) {\n     $scope.data = {\n      repeatSelect: null,\n      availableOptions: [\n        {id: '1', name: 'Option A'},\n        {id: '2', name: 'Option B'},\n        {id: '3', name: 'Option C'}\n      ],\n     };\n  }]);\n</file>\n</example>\n\n\n### Using `select` with `ngOptions` and setting a default value\nSee the {@link ngOptions ngOptions documentation} for more `ngOptions` usage examples.\n\n<example name=\"select-with-default-values\" module=\"defaultValueSelect\">\n<file name=\"index.html\">\n<div ng-controller=\"ExampleController\">\n  <form name=\"myForm\">\n    <label for=\"mySelect\">Make a choice:</label>\n    <select name=\"mySelect\" id=\"mySelect\"\n      ng-options=\"option.name for option in data.availableOptions track by option.id\"\n      ng-model=\"data.selectedOption\"></select>\n  </form>\n  <hr>\n  <tt>option = {{data.selectedOption}}</tt><br/>\n</div>\n</file>\n<file name=\"app.js\">\n angular.module('defaultValueSelect', [])\n   .controller('ExampleController', ['$scope', function($scope) {\n     $scope.data = {\n      availableOptions: [\n        {id: '1', name: 'Option A'},\n        {id: '2', name: 'Option B'},\n        {id: '3', name: 'Option C'}\n      ],\n      selectedOption: {id: '3', name: 'Option C'} //This sets the default value of the select in the ui\n      };\n  }]);\n</file>\n</example>\n\n\n### Binding `select` to a non-string value via `ngModel` parsing / formatting\n\n<example name=\"select-with-non-string-options\" module=\"nonStringSelect\">\n  <file name=\"index.html\">\n    <select ng-model=\"model.id\" convert-to-number>\n      <option value=\"0\">Zero</option>\n      <option value=\"1\">One</option>\n      <option value=\"2\">Two</option>\n    </select>\n    {{ model }}\n  </file>\n  <file name=\"app.js\">\n    angular.module('nonStringSelect', [])\n      .run(function($rootScope) {\n        $rootScope.model = { id: 2 };\n      })\n      .directive('convertToNumber', function() {\n        return {\n          require: 'ngModel',\n          link: function(scope, element, attrs, ngModel) {\n            ngModel.$parsers.push(function(val) {\n              return parseInt(val, 10);\n            });\n            ngModel.$formatters.push(function(val) {\n              return '' + val;\n            });\n          }\n        };\n      });\n  </file>\n  <file name=\"protractor.js\" type=\"protractor\">\n    it('should initialize to model', function() {\n      var select = element(by.css('select'));\n      expect(element(by.model('model.id')).$('option:checked').getText()).toEqual('Two');\n    });\n  </file>\n</example>\n"
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 29915,
            "ngdoc": "directive",
            "name": "ngRequired",
            "description": "ngRequired adds the required {@link ngModel.NgModelController#$validators `validator`} to {@link ngModel `ngModel`}.\nIt is most often used for {@link input `input`} and {@link select `select`} controls, but can also be\napplied to custom controls.\n\nThe directive sets the `required` attribute on the element if the Angular expression inside\n`ngRequired` evaluates to true. A special directive for setting `required` is necessary because we\ncannot use interpolation inside `required`. See the {@link guide/interpolation interpolation guide}\nfor more info.\n\nThe validator will set the `required` error key to true if the `required` attribute is set and\ncalling {@link ngModel.NgModelController#$isEmpty `NgModelController.$isEmpty`} with the\n{@link ngModel.NgModelController#$viewValue `ngModel.$viewValue`} returns `true`. For example, the\n`$isEmpty()` implementation for `input[text]` checks the length of the `$viewValue`. When developing\ncustom controls, `$isEmpty()` can be overwritten to account for a $viewValue that is not string-based.",
            "example": [
                "\n<example name=\"ngRequiredDirective\" module=\"ngRequiredExample\">\n  <file name=\"index.html\">\n    <script>\n      angular.module('ngRequiredExample', [])\n        .controller('ExampleController', ['$scope', function($scope) {\n          $scope.required = true;\n        }]);\n    </script>\n    <div ng-controller=\"ExampleController\">\n      <form name=\"form\">\n        <label for=\"required\">Toggle required: </label>\n        <input type=\"checkbox\" ng-model=\"required\" id=\"required\" />\n        <br>\n        <label for=\"input\">This input must be filled if `required` is true: </label>\n        <input type=\"text\" ng-model=\"model\" id=\"input\" name=\"input\" ng-required=\"required\" /><br>\n        <hr>\n        required error set? = <code>{{form.input.$error.required}}</code><br>\n        model = <code>{{model}}</code>\n      </form>\n    </div>\n  </file>\n  <file name=\"protractor.js\" type=\"protractor\">\n      var required = element(by.binding('form.input.$error.required'));\n      var model = element(by.binding('model'));\n      var input = element(by.id('input'));\n\n      it('should set the required error', function() {\n        expect(required.getText()).toContain('true');\n\n        input.sendKeys('123');\n        expect(required.getText()).not.toContain('true');\n        expect(model.getText()).toContain('123');\n      });\n  </file>\n</example>"
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 29992,
            "ngdoc": "directive",
            "name": "ngPattern",
            "description": "ngPattern adds the pattern {@link ngModel.NgModelController#$validators `validator`} to {@link ngModel `ngModel`}.\nIt is most often used for text-based {@link input `input`} controls, but can also be applied to custom text-based controls.\n\nThe validator sets the `pattern` error key if the {@link ngModel.NgModelController#$viewValue `ngModel.$viewValue`}\ndoes not match a RegExp which is obtained by evaluating the Angular expression given in the\n`ngPattern` attribute value:\n* If the expression evaluates to a RegExp object, then this is used directly.\n* If the expression evaluates to a string, then it will be converted to a RegExp after wrapping it\nin `^` and `$` characters. For instance, `\"abc\"` will be converted to `new RegExp('^abc$')`.\n\n<div class=\"alert alert-info\">\n**Note:** Avoid using the `g` flag on the RegExp, as it will cause each successive search to\nstart at the index of the last search's match, thus not taking the whole input value into\naccount.\n</div>\n\n<div class=\"alert alert-info\">\n**Note:** This directive is also added when the plain `pattern` attribute is used, with two\ndifferences:\n<ol>\n  <li>\n    `ngPattern` does not set the `pattern` attribute and therefore HTML5 constraint validation is\n    not available.\n  </li>\n  <li>\n    The `ngPattern` attribute must be an expression, while the `pattern` value must be\n    interpolated.\n  </li>\n</ol>\n</div>",
            "example": [
                "\n<example name=\"ngPatternDirective\" module=\"ngPatternExample\">\n  <file name=\"index.html\">\n    <script>\n      angular.module('ngPatternExample', [])\n        .controller('ExampleController', ['$scope', function($scope) {\n          $scope.regex = '\\\\d+';\n        }]);\n    </script>\n    <div ng-controller=\"ExampleController\">\n      <form name=\"form\">\n        <label for=\"regex\">Set a pattern (regex string): </label>\n        <input type=\"text\" ng-model=\"regex\" id=\"regex\" />\n        <br>\n        <label for=\"input\">This input is restricted by the current pattern: </label>\n        <input type=\"text\" ng-model=\"model\" id=\"input\" name=\"input\" ng-pattern=\"regex\" /><br>\n        <hr>\n        input valid? = <code>{{form.input.$valid}}</code><br>\n        model = <code>{{model}}</code>\n      </form>\n    </div>\n  </file>\n  <file name=\"protractor.js\" type=\"protractor\">\n      var model = element(by.binding('model'));\n      var input = element(by.id('input'));\n\n      it('should validate the input with the default pattern', function() {\n        input.sendKeys('aaa');\n        expect(model.getText()).not.toContain('aaa');\n\n        input.clear().then(function() {\n          input.sendKeys('123');\n          expect(model.getText()).toContain('123');\n        });\n      });\n  </file>\n</example>"
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 30098,
            "ngdoc": "directive",
            "name": "ngMaxlength",
            "description": "ngMaxlength adds the maxlength {@link ngModel.NgModelController#$validators `validator`} to {@link ngModel `ngModel`}.\nIt is most often used for text-based {@link input `input`} controls, but can also be applied to custom text-based controls.\n\nThe validator sets the `maxlength` error key if the {@link ngModel.NgModelController#$viewValue `ngModel.$viewValue`}\nis longer than the integer obtained by evaluating the Angular expression given in the\n`ngMaxlength` attribute value.\n\n<div class=\"alert alert-info\">\n**Note:** This directive is also added when the plain `maxlength` attribute is used, with two\ndifferences:\n<ol>\n  <li>\n    `ngMaxlength` does not set the `maxlength` attribute and therefore HTML5 constraint\n    validation is not available.\n  </li>\n  <li>\n    The `ngMaxlength` attribute must be an expression, while the `maxlength` value must be\n    interpolated.\n  </li>\n</ol>\n</div>",
            "example": [
                "\n<example name=\"ngMaxlengthDirective\" module=\"ngMaxlengthExample\">\n  <file name=\"index.html\">\n    <script>\n      angular.module('ngMaxlengthExample', [])\n        .controller('ExampleController', ['$scope', function($scope) {\n          $scope.maxlength = 5;\n        }]);\n    </script>\n    <div ng-controller=\"ExampleController\">\n      <form name=\"form\">\n        <label for=\"maxlength\">Set a maxlength: </label>\n        <input type=\"number\" ng-model=\"maxlength\" id=\"maxlength\" />\n        <br>\n        <label for=\"input\">This input is restricted by the current maxlength: </label>\n        <input type=\"text\" ng-model=\"model\" id=\"input\" name=\"input\" ng-maxlength=\"maxlength\" /><br>\n        <hr>\n        input valid? = <code>{{form.input.$valid}}</code><br>\n        model = <code>{{model}}</code>\n      </form>\n    </div>\n  </file>\n  <file name=\"protractor.js\" type=\"protractor\">\n      var model = element(by.binding('model'));\n      var input = element(by.id('input'));\n\n      it('should validate the input with the default maxlength', function() {\n        input.sendKeys('abcdef');\n        expect(model.getText()).not.toContain('abcdef');\n\n        input.clear().then(function() {\n          input.sendKeys('abcde');\n          expect(model.getText()).toContain('abcde');\n        });\n      });\n  </file>\n</example>"
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular\\angular.js",
            "line": 30184,
            "ngdoc": "directive",
            "name": "ngMinlength",
            "description": "ngMinlength adds the minlength {@link ngModel.NgModelController#$validators `validator`} to {@link ngModel `ngModel`}.\nIt is most often used for text-based {@link input `input`} controls, but can also be applied to custom text-based controls.\n\nThe validator sets the `minlength` error key if the {@link ngModel.NgModelController#$viewValue `ngModel.$viewValue`}\nis shorter than the integer obtained by evaluating the Angular expression given in the\n`ngMinlength` attribute value.\n\n<div class=\"alert alert-info\">\n**Note:** This directive is also added when the plain `minlength` attribute is used, with two\ndifferences:\n<ol>\n  <li>\n    `ngMinlength` does not set the `minlength` attribute and therefore HTML5 constraint\n    validation is not available.\n  </li>\n  <li>\n    The `ngMinlength` value must be an expression, while the `minlength` value must be\n    interpolated.\n  </li>\n</ol>\n</div>",
            "example": [
                "\n<example name=\"ngMinlengthDirective\" module=\"ngMinlengthExample\">\n  <file name=\"index.html\">\n    <script>\n      angular.module('ngMinlengthExample', [])\n        .controller('ExampleController', ['$scope', function($scope) {\n          $scope.minlength = 3;\n        }]);\n    </script>\n    <div ng-controller=\"ExampleController\">\n      <form name=\"form\">\n        <label for=\"minlength\">Set a minlength: </label>\n        <input type=\"number\" ng-model=\"minlength\" id=\"minlength\" />\n        <br>\n        <label for=\"input\">This input is restricted by the current minlength: </label>\n        <input type=\"text\" ng-model=\"model\" id=\"input\" name=\"input\" ng-minlength=\"minlength\" /><br>\n        <hr>\n        input valid? = <code>{{form.input.$valid}}</code><br>\n        model = <code>{{model}}</code>\n      </form>\n    </div>\n  </file>\n  <file name=\"protractor.js\" type=\"protractor\">\n      var model = element(by.binding('model'));\n      var input = element(by.id('input'));\n\n      it('should validate the input with the default minlength', function() {\n        input.sendKeys('ab');\n        expect(model.getText()).not.toContain('ab');\n\n        input.sendKeys('abc');\n        expect(model.getText()).toContain('abc');\n      });\n  </file>\n</example>"
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular-animate\\angular-animate.js",
            "line": 1,
            "license": "AngularJS v1.5.0\n(c) 2010-2016 Google, Inc. http://angularjs.org\nLicense: MIT",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular-animate\\angular-animate.js",
            "line": 535,
            "ngdoc": "service",
            "name": "$animateCss",
            "kind": "object",
            "description": "The `$animateCss` service is a useful utility to trigger customized CSS-based transitions/keyframes\nfrom a JavaScript-based animation or directly from a directive. The purpose of `$animateCss` is NOT\nto side-step how `$animate` and ngAnimate work, but the goal is to allow pre-existing animations or\ndirectives to create more complex animations that can be purely driven using CSS code.\n\nNote that only browsers that support CSS transitions and/or keyframe animations are capable of\nrendering animations triggered via `$animateCss` (bad news for IE9 and lower).\n\n## Usage\nOnce again, `$animateCss` is designed to be used inside of a registered JavaScript animation that\nis powered by ngAnimate. It is possible to use `$animateCss` directly inside of a directive, however,\nany automatic control over cancelling animations and/or preventing animations from being run on\nchild elements will not be handled by Angular. For this to work as expected, please use `$animate` to\ntrigger the animation and then setup a JavaScript animation that injects `$animateCss` to trigger\nthe CSS animation.\n\nThe example below shows how we can create a folding animation on an element using `ng-if`:\n\n```html\n<!-- notice the `fold-animation` CSS class -->\n<div ng-if=\"onOff\" class=\"fold-animation\">\n  This element will go BOOM\n</div>\n<button ng-click=\"onOff=true\">Fold In</button>\n```\n\nNow we create the **JavaScript animation** that will trigger the CSS transition:\n\n```js\nngModule.animation('.fold-animation', ['$animateCss', function($animateCss) {\n  return {\n    enter: function(element, doneFn) {\n      var height = element[0].offsetHeight;\n      return $animateCss(element, {\n        from: { height:'0px' },\n        to: { height:height + 'px' },\n        duration: 1 // one second\n      });\n    }\n  }\n}]);\n```\n\n## More Advanced Uses\n\n`$animateCss` is the underlying code that ngAnimate uses to power **CSS-based animations** behind the scenes. Therefore CSS hooks\nlike `.ng-EVENT`, `.ng-EVENT-active`, `.ng-EVENT-stagger` are all features that can be triggered using `$animateCss` via JavaScript code.\n\nThis also means that just about any combination of adding classes, removing classes, setting styles, dynamically setting a keyframe animation,\napplying a hardcoded duration or delay value, changing the animation easing or applying a stagger animation are all options that work with\n`$animateCss`. The service itself is smart enough to figure out the combination of options and examine the element styling properties in order\nto provide a working animation that will run in CSS.\n\nThe example below showcases a more advanced version of the `.fold-animation` from the example above:\n\n```js\nngModule.animation('.fold-animation', ['$animateCss', function($animateCss) {\n  return {\n    enter: function(element, doneFn) {\n      var height = element[0].offsetHeight;\n      return $animateCss(element, {\n        addClass: 'red large-text pulse-twice',\n        easing: 'ease-out',\n        from: { height:'0px' },\n        to: { height:height + 'px' },\n        duration: 1 // one second\n      });\n    }\n  }\n}]);\n```\n\nSince we're adding/removing CSS classes then the CSS transition will also pick those up:\n\n```css\n/&#42; since a hardcoded duration value of 1 was provided in the JavaScript animation code,\nthe CSS classes below will be transitioned despite them being defined as regular CSS classes &#42;/\n.red { background:red; }\n.large-text { font-size:20px; }\n\n/&#42; we can also use a keyframe animation and $animateCss will make it work alongside the transition &#42;/\n.pulse-twice {\n  animation: 0.5s pulse linear 2;\n  -webkit-animation: 0.5s pulse linear 2;\n}",
            "keyframes": "rotate {\n  from { transform: rotate(0deg); }\n  to { transform: rotate(360deg); }\n}",
            "params": [
                {
                    "name": "element",
                    "description": "the element that will be animated",
                    "type": "DOMElement"
                },
                {
                    "name": "options",
                    "description": "the animation-related options that will be applied during the animation\n\n* `event` - The DOM event (e.g. enter, leave, move). When used, a generated CSS class of `ng-EVENT` and `ng-EVENT-active` will be applied\nto the element during the animation. Multiple events can be provided when spaces are used as a separator. (Note that this will not perform any DOM operation.)\n* `structural` - Indicates that the `ng-` prefix will be added to the event class. Setting to `false` or omitting will turn `ng-EVENT` and\n`ng-EVENT-active` in `EVENT` and `EVENT-active`. Unused if `event` is omitted.\n* `easing` - The CSS easing value that will be applied to the transition or keyframe animation (or both).\n* `transitionStyle` - The raw CSS transition style that will be used (e.g. `1s linear all`).\n* `keyframeStyle` - The raw CSS keyframe animation style that will be used (e.g. `1s my_animation linear`).\n* `from` - The starting CSS styles (a key/value object) that will be applied at the start of the animation.\n* `to` - The ending CSS styles (a key/value object) that will be applied across the animation via a CSS transition.\n* `addClass` - A space separated list of CSS classes that will be added to the element and spread across the animation.\n* `removeClass` - A space separated list of CSS classes that will be removed from the element and spread across the animation.\n* `duration` - A number value representing the total duration of the transition and/or keyframe (note that a value of 1 is 1000ms). If a value of `0`\nis provided then the animation will be skipped entirely.\n* `delay` - A number value representing the total delay of the transition and/or keyframe (note that a value of 1 is 1000ms). If a value of `true` is\nused then whatever delay value is detected from the CSS classes will be mirrored on the elements styles (e.g. by setting delay true then the style value\nof the element will be `transition-delay: DETECTED_VALUE`). Using `true` is useful when you want the CSS classes and inline styles to all share the same\nCSS delay value.\n* `stagger` - A numeric time value representing the delay between successively animated elements\n({@link ngAnimate#css-staggering-animations Click here to learn how CSS-based staggering works in ngAnimate.})\n* `staggerIndex` - The numeric index representing the stagger item (e.g. a value of 5 is equal to the sixth item in the stagger; therefore when a\n  `stagger` option value of `0.1` is used then there will be a stagger delay of `600ms`)\n* `applyClassesEarly` - Whether or not the classes being added or removed will be used when detecting the animation. This is set by `$animate` when enter/leave/move animations are fired to ensure that the CSS classes are resolved in time. (Note that this will prevent any transitions from occurring on the classes being added and removed.)\n* `cleanupStyles` - Whether or not the provided `from` and `to` styles will be removed once\n   the animation is closed. This is useful for when the styles are used purely for the sake of\n   the animation and do not have a lasting visual effect on the element (e.g. a collapse and open animation).\n   By default this value is set to `false`.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "an object with start and end methods and details about the animation.\n\n* `start` - The method to start the animation. This will return a `Promise` when called.\n* `end` - This method will cancel the animation and remove all applied CSS classes and styles.",
                "type": "Object"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular-animate\\angular-animate.js",
            "line": 2716,
            "description": "This fn returns false if any of the following is true:\na) animations on any parent element are disabled, and animations on the element aren't explicitly allowed\nb) a parent element has an ongoing structural animation, and animateChildren is false\nc) the element is not a child of the body\nd) the element is not a child of the $rootElement",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular-animate\\angular-animate.js",
            "line": 3231,
            "ngdoc": "directive",
            "name": "ngAnimateSwap",
            "restrict": "A",
            "scope": "",
            "description": "ngAnimateSwap is a animation-oriented directive that allows for the container to\nbe removed and entered in whenever the associated expression changes. A\ncommon usecase for this directive is a rotating banner component which\ncontains one image being present at a time. When the active image changes\nthen the old image will perform a `leave` animation and the new element\nwill be inserted via an `enter` animation.",
            "example": [
                "\n<example name=\"ngAnimateSwap-directive\" module=\"ngAnimateSwapExample\"\n         deps=\"angular-animate.js\"\n         animations=\"true\" fixBase=\"true\">\n  <file name=\"index.html\">\n    <div class=\"container\" ng-controller=\"AppCtrl\">\n      <div ng-animate-swap=\"number\" class=\"cell swap-animation\" ng-class=\"colorClass(number)\">\n        {{ number }}\n      </div>\n    </div>\n  </file>\n  <file name=\"script.js\">\n    angular.module('ngAnimateSwapExample', ['ngAnimate'])\n      .controller('AppCtrl', ['$scope', '$interval', function($scope, $interval) {\n        $scope.number = 0;\n        $interval(function() {\n          $scope.number++;\n        }, 1000);\n\n        var colors = ['red','blue','green','yellow','orange'];\n        $scope.colorClass = function(number) {\n          return colors[number % colors.length];\n        };\n      }]);\n  </file>\n <file name=\"animations.css\">\n .container {\n   height:250px;\n   width:250px;\n   position:relative;\n   overflow:hidden;\n   border:2px solid black;\n }\n .container .cell {\n   font-size:150px;\n   text-align:center;\n   line-height:250px;\n   position:absolute;\n   top:0;\n   left:0;\n   right:0;\n   border-bottom:2px solid black;\n }\n .swap-animation.ng-enter, .swap-animation.ng-leave {\n   transition:0.5s linear all;\n }\n .swap-animation.ng-enter {\n   top:-250px;\n }\n .swap-animation.ng-enter-active {\n   top:0px;\n }\n .swap-animation.ng-leave {\n   top:0px;\n }\n .swap-animation.ng-leave-active {\n   top:250px;\n }\n .red { background:red; }\n .green { background:green; }\n .blue { background:blue; }\n .yellow { background:yellow; }\n .orange { background:orange; }\n </file>\n</example>"
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular-animate\\angular-animate.js",
            "line": 3354,
            "ngdoc": "module",
            "name": "ngAnimate",
            "description": "The `ngAnimate` module provides support for CSS-based animations (keyframes and transitions) as well as JavaScript-based animations via\ncallback hooks. Animations are not enabled by default, however, by including `ngAnimate` the animation hooks are enabled for an Angular app.\n\n<div doc-module-components=\"ngAnimate\"></div>\n\n# Usage\nSimply put, there are two ways to make use of animations when ngAnimate is used: by using **CSS** and **JavaScript**. The former works purely based\nusing CSS (by using matching CSS selectors/styles) and the latter triggers animations that are registered via `module.animation()`. For\nboth CSS and JS animations the sole requirement is to have a matching `CSS class` that exists both in the registered animation and within\nthe HTML element that the animation will be triggered on.\n\n## Directive Support\nThe following directives are \"animation aware\":\n\n| Directive                                                                                                | Supported Animations                                                     |\n|----------------------------------------------------------------------------------------------------------|--------------------------------------------------------------------------|\n| {@link ng.directive:ngRepeat#animations ngRepeat}                                                        | enter, leave and move                                                    |\n| {@link ngRoute.directive:ngView#animations ngView}                                                       | enter and leave                                                          |\n| {@link ng.directive:ngInclude#animations ngInclude}                                                      | enter and leave                                                          |\n| {@link ng.directive:ngSwitch#animations ngSwitch}                                                        | enter and leave                                                          |\n| {@link ng.directive:ngIf#animations ngIf}                                                                | enter and leave                                                          |\n| {@link ng.directive:ngClass#animations ngClass}                                                          | add and remove (the CSS class(es) present)                               |\n| {@link ng.directive:ngShow#animations ngShow} & {@link ng.directive:ngHide#animations ngHide}            | add and remove (the ng-hide class value)                                 |\n| {@link ng.directive:form#animation-hooks form} & {@link ng.directive:ngModel#animation-hooks ngModel}    | add and remove (dirty, pristine, valid, invalid & all other validations) |\n| {@link module:ngMessages#animations ngMessages}                                                          | add and remove (ng-active & ng-inactive)                                 |\n| {@link module:ngMessages#animations ngMessage}                                                           | enter and leave                                                          |\n\n(More information can be found by visiting each the documentation associated with each directive.)\n\n## CSS-based Animations\n\nCSS-based animations with ngAnimate are unique since they require no JavaScript code at all. By using a CSS class that we reference between our HTML\nand CSS code we can create an animation that will be picked up by Angular when an the underlying directive performs an operation.\n\nThe example below shows how an `enter` animation can be made possible on an element using `ng-if`:\n\n```html\n<div ng-if=\"bool\" class=\"fade\">\n   Fade me in out\n</div>\n<button ng-click=\"bool=true\">Fade In!</button>\n<button ng-click=\"bool=false\">Fade Out!</button>\n```\n\nNotice the CSS class **fade**? We can now create the CSS transition code that references this class:\n\n```css\n/&#42; The starting CSS styles for the enter animation &#42;/\n.fade.ng-enter {\n  transition:0.5s linear all;\n  opacity:0;\n}\n\n/&#42; The finishing CSS styles for the enter animation &#42;/\n.fade.ng-enter.ng-enter-active {\n  opacity:1;\n}\n```\n\nThe key thing to remember here is that, depending on the animation event (which each of the directives above trigger depending on what's going on) two\ngenerated CSS classes will be applied to the element; in the example above we have `.ng-enter` and `.ng-enter-active`. For CSS transitions, the transition\ncode **must** be defined within the starting CSS class (in this case `.ng-enter`). The destination class is what the transition will animate towards.\n\nIf for example we wanted to create animations for `leave` and `move` (ngRepeat triggers move) then we can do so using the same CSS naming conventions:\n\n```css\n/&#42; now the element will fade out before it is removed from the DOM &#42;/\n.fade.ng-leave {\n  transition:0.5s linear all;\n  opacity:1;\n}\n.fade.ng-leave.ng-leave-active {\n  opacity:0;\n}\n```\n\nWe can also make use of **CSS Keyframes** by referencing the keyframe animation within the starting CSS class:\n\n```css\n/&#42; there is no need to define anything inside of the destination\nCSS class since the keyframe will take charge of the animation &#42;/\n.fade.ng-leave {\n  animation: my_fade_animation 0.5s linear;\n  -webkit-animation: my_fade_animation 0.5s linear;\n}",
            "keyframes": "my_fade_animation {\n  from { opacity:1; }\n  to { opacity:0; }\n}",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular-animate\\angular-animate.js",
            "line": 4095,
            "ngdoc": "service",
            "name": "$animate",
            "kind": "object",
            "description": "The ngAnimate `$animate` service documentation is the same for the core `$animate` service.\n\nClick here {@link ng.$animate to learn more about animations with `$animate`}.",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular-aria\\angular-aria.js",
            "line": 1,
            "license": "AngularJS v1.5.0\n(c) 2010-2016 Google, Inc. http://angularjs.org\nLicense: MIT",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular-aria\\angular-aria.js",
            "line": 8,
            "ngdoc": "module",
            "name": "ngAria",
            "description": "The `ngAria` module provides support for common\n[<abbr title=\"Accessible Rich Internet Applications\">ARIA</abbr>](http://www.w3.org/TR/wai-aria/)\nattributes that convey state or semantic information about the application for users\nof assistive technologies, such as screen readers.\n\n<div doc-module-components=\"ngAria\"></div>\n\n## Usage\n\nFor ngAria to do its magic, simply include the module `ngAria` as a dependency. The following\ndirectives are supported:\n`ngModel`, `ngChecked`, `ngRequired`, `ngValue`, `ngDisabled`, `ngShow`, `ngHide`, `ngClick`,\n`ngDblClick`, and `ngMessages`.\n\nBelow is a more detailed breakdown of the attributes handled by ngAria:\n\n| Directive                                   | Supported Attributes                                                                   |\n|---------------------------------------------|----------------------------------------------------------------------------------------|\n| {@link ng.directive:ngModel ngModel}        | aria-checked, aria-valuemin, aria-valuemax, aria-valuenow, aria-invalid, aria-required, input roles |\n| {@link ng.directive:ngDisabled ngDisabled}  | aria-disabled                                                                          |\n| {@link ng.directive:ngRequired ngRequired}  | aria-required                                                                          |\n| {@link ng.directive:ngChecked ngChecked}    | aria-checked                                                                           |\n| {@link ng.directive:ngValue ngValue}        | aria-checked                                                                           |\n| {@link ng.directive:ngShow ngShow}          | aria-hidden                                                                            |\n| {@link ng.directive:ngHide ngHide}          | aria-hidden                                                                            |\n| {@link ng.directive:ngDblclick ngDblclick}  | tabindex                                                                               |\n| {@link module:ngMessages ngMessages}        | aria-live                                                                              |\n| {@link ng.directive:ngClick ngClick}        | tabindex, keypress event, button role                                                  |\n\nFind out more information about each directive by reading the\n{@link guide/accessibility ngAria Developer Guide}.\n\n##Example\nUsing ngDisabled with ngAria:\n```html\n<md-checkbox ng-disabled=\"disabled\">\n```\nBecomes:\n```html\n<md-checkbox ng-disabled=\"disabled\" aria-disabled=\"true\">\n```\n\n##Disabling Attributes\nIt's possible to disable individual attributes added by ngAria with the\n{@link ngAria.$ariaProvider#config config} method. For more details, see the\n{@link guide/accessibility Developer Guide}.",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular-aria\\angular-aria.js",
            "line": 64,
            "description": "Internal Utilities",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular-aria\\angular-aria.js",
            "line": 74,
            "ngdoc": "provider",
            "name": "$ariaProvider",
            "description": "Used for configuring the ARIA attributes injected and managed by ngAria.\n\n```js\nangular.module('myApp', ['ngAria'], function config($ariaProvider) {\n  $ariaProvider.config({\n    ariaValue: true,\n    tabindex: false\n  });\n});\n```\n\n## Dependencies\nRequires the {@link ngAria} module to be installed.",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular-aria\\angular-aria.js",
            "line": 108,
            "ngdoc": "method",
            "name": "$ariaProvider#config",
            "params": [
                {
                    "name": "config",
                    "description": "object to enable/disable specific ARIA attributes\n\n - **ariaHidden** – `{boolean}` – Enables/disables aria-hidden tags\n - **ariaChecked** – `{boolean}` – Enables/disables aria-checked tags\n - **ariaDisabled** – `{boolean}` – Enables/disables aria-disabled tags\n - **ariaRequired** – `{boolean}` – Enables/disables aria-required tags\n - **ariaInvalid** – `{boolean}` – Enables/disables aria-invalid tags\n - **ariaValue** – `{boolean}` – Enables/disables aria-valuemin, aria-valuemax and aria-valuenow tags\n - **tabindex** – `{boolean}` – Enables/disables tabindex tags\n - **bindKeypress** – `{boolean}` – Enables/disables keypress event binding on `div` and\n   `li` elements with ng-click\n - **bindRoleForClick** – `{boolean}` – Adds role=button to non-interactive elements like `div`\n   using ng-click, making them more accessible to users of assistive technologies",
                    "type": "Object"
                }
            ],
            "description": "Enables/disables various ARIA attributes",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular-aria\\angular-aria.js",
            "line": 145,
            "ngdoc": "service",
            "name": "$aria",
            "description": "",
            "priority": "200\n\nThe $aria service contains helper methods for applying common\n[ARIA](http://www.w3.org/TR/wai-aria/) attributes to HTML directives.\n\nngAria injects common accessibility attributes that tell assistive technologies when HTML\nelements are enabled, selected, hidden, and more. To see how this is performed with ngAria,\nlet's review a code snippet from ngAria itself:\n\n```js\nngAriaModule.directive('ngDisabled', ['$aria', function($aria) {\n  return $aria.$$watchExpr('ngDisabled', 'aria-disabled', nodeBlackList, false);\n}])\n```\nShown above, the ngAria module creates a directive with the same signature as the\ntraditional `ng-disabled` directive. But this ngAria version is dedicated to\nsolely managing accessibility attributes on custom elements. The internal `$aria` service is\nused to watch the boolean attribute `ngDisabled`. If it has not been explicitly set by the\ndeveloper, `aria-disabled` is injected as an attribute with its value synchronized to the\nvalue in `ngDisabled`.\n\nBecause ngAria hooks into the `ng-disabled` directive, developers do not have to do\nanything to enable this feature. The `aria-disabled` attribute is automatically managed\nsimply as a silent side-effect of using `ng-disabled` with the ngAria module.\n\nThe full list of directives that interface with ngAria:\n* **ngModel**\n* **ngChecked**\n* **ngRequired**\n* **ngDisabled**\n* **ngValue**\n* **ngShow**\n* **ngHide**\n* **ngClick**\n* **ngDblclick**\n* **ngMessages**\n\nRead the {@link guide/accessibility ngAria Developer Guide} for a thorough explanation of each\ndirective.\n\n\n## Dependencies\nRequires the {@link ngAria} module to be installed.",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js",
            "line": 11,
            "ngdoc": "module",
            "name": "material.components.autocomplete",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js",
            "line": 83,
            "description": "Initialize the controller, setup watchers, gather elements",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js",
            "line": 98,
            "description": "Calculates the dropdown's position and applies the new styles to the menu element",
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js",
            "line": 136,
            "description": "Calculates the vertical offset for floating label examples to account for ngMessages",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js",
            "line": 154,
            "description": "Makes sure that the menu doesn't go off of the screen on either side.",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js",
            "line": 167,
            "description": "Moves the dropdown menu to the body tag in order to avoid z-index and overflow issues.",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js",
            "line": 178,
            "description": "Sends focus to the input element.",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js",
            "line": 185,
            "description": "Sets up any watchers used by autocomplete",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js",
            "line": 198,
            "description": "Removes any events or leftover elements created by this controller",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js",
            "line": 215,
            "description": "Gathers all of the elements needed for this controller",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js",
            "line": 233,
            "description": "Finds the element that the menu will base its position on",
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js",
            "line": 244,
            "description": "Gathers angular-wrapped versions of each element",
            "params": [
                {
                    "name": "elements",
                    "description": ""
                }
            ],
            "return": {
                "description": "}"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js",
            "line": 259,
            "description": "Handles changes to the `hidden` property.",
            "params": [
                {
                    "name": "hidden",
                    "description": ""
                },
                {
                    "name": "oldHidden",
                    "description": ""
                }
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js",
            "line": 280,
            "description": "When the user mouses over the dropdown menu, ignore blur events.",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js",
            "line": 287,
            "description": "When the user's mouse leaves the menu, blur events may hide the menu again.",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js",
            "line": 296,
            "description": "When the mouse button is released, send focus back to the input field.",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js",
            "line": 303,
            "description": "Handles changes to the selected item.",
            "params": [
                {
                    "name": "selectedItem",
                    "description": ""
                },
                {
                    "name": "previousSelectedItem",
                    "description": ""
                }
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js",
            "line": 319,
            "description": "Use the user-defined expression to announce changes each time a new item is selected",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js",
            "line": 326,
            "description": "Use the user-defined expression to announce changes each time the search text is changed",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js",
            "line": 333,
            "description": "Calls any external watchers listening for the selected item.  Used in conjunction with\n`registerSelectedItemWatcher`.",
            "params": [
                {
                    "name": "selectedItem",
                    "description": ""
                },
                {
                    "name": "previousSelectedItem",
                    "description": ""
                }
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js",
            "line": 343,
            "description": "Register a function to be called when the selected item changes.",
            "params": [
                {
                    "name": "cb",
                    "description": ""
                }
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js",
            "line": 353,
            "description": "Unregister a function previously registered for selected item changes.",
            "params": [
                {
                    "name": "cb",
                    "description": ""
                }
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js",
            "line": 364,
            "description": "Handles changes to the searchText property.",
            "params": [
                {
                    "name": "searchText",
                    "description": ""
                },
                {
                    "name": "previousSearchText",
                    "description": ""
                }
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js",
            "line": 395,
            "description": "Handles input blur event, determines if the dropdown should hide.",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js",
            "line": 405,
            "description": "Force blur on input element",
            "params": [
                {
                    "name": "forceBlur",
                    "description": ""
                }
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js",
            "line": 417,
            "description": "Handles input focus event, determines if the dropdown should show.",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js",
            "line": 428,
            "description": "Handles keyboard input.",
            "params": [
                {
                    "name": "event",
                    "description": ""
                }
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js",
            "line": 479,
            "description": "Returns the minimum length needed to display the dropdown.",
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js",
            "line": 487,
            "description": "Returns the display value for an item.",
            "params": [
                {
                    "name": "item",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js",
            "line": 495,
            "description": "Getter function to invoke user-defined expression (in the directive)\nto convert your object to a single string.",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js",
            "line": 504,
            "description": "Returns the locals object for compiling item templates.",
            "params": [
                {
                    "name": "item",
                    "description": ""
                }
            ],
            "return": {
                "description": "}"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js",
            "line": 518,
            "description": "Returns the default index based on whether or not autoselect is enabled.",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js",
            "line": 526,
            "description": "Sets the loading parameter and updates the hidden state.",
            "params": [
                {
                    "name": "value",
                    "description": "Whether or not the component is currently loading.",
                    "type": "Boolean"
                }
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js",
            "line": 539,
            "description": "Determines if the menu should be hidden.",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js",
            "line": 550,
            "description": "Determines if the menu should be shown.",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js",
            "line": 558,
            "description": "Returns true if the search text has matches.",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js",
            "line": 566,
            "description": "Returns true if the autocomplete has a valid selection.",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js",
            "line": 574,
            "description": "Returns true if the loading indicator is, or should be, visible.",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js",
            "line": 582,
            "description": "Returns the display value of the current item.",
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js",
            "line": 590,
            "description": "Determines if the minimum length is met by the search text.",
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js",
            "line": 600,
            "description": "Defines a public property with a handler and a default value.",
            "params": [
                {
                    "name": "key",
                    "description": ""
                },
                {
                    "name": "handler",
                    "description": ""
                },
                {
                    "name": "value",
                    "description": ""
                }
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js",
            "line": 617,
            "description": "Selects the item at the given index.",
            "params": [
                {
                    "name": "index",
                    "description": ""
                }
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js",
            "line": 635,
            "description": "Clears the searchText value and selected item.",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js",
            "line": 658,
            "description": "Fetches the results for the provided search text.",
            "params": [
                {
                    "name": "searchText",
                    "description": ""
                }
            ],
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js",
            "line": 690,
            "description": "Updates the ARIA messages",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js",
            "line": 699,
            "description": "Returns the ARIA message for how many results match the current query.",
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js",
            "line": 716,
            "description": "Makes sure that the focused element is within view.",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js",
            "line": 743,
            "description": "Starts the query to gather the results for the current searchText.  Attempts to return cached\nresults first, then forwards the process to `fetchResults` if necessary.",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js",
            "line": 761,
            "description": "If there is only one matching item and the search text matches its display value exactly,\nautomatically select that item.  Note: This function is only called if the user uses the\n`md-select-on-match` flag.",
            "class": "",
            "module": "ng"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js",
            "line": 1091,
            "description": "Creates a watcher for variables that are copied from the parent scope",
            "params": [
                {
                    "name": "variable",
                    "description": ""
                },
                {
                    "name": "alias",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.autocomplete"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js",
            "line": 1106,
            "description": "Creates watchers on scope and newScope that ensure that for any\n$digest of scope, newScope is also $digested.",
            "class": "",
            "module": "material.components.autocomplete"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\bottomSheet\\bottomSheet.js",
            "line": 10,
            "ngdoc": "module",
            "name": "material.components.bottomSheet",
            "description": "BottomSheet",
            "class": "",
            "module": "material.components.backdrop"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\bottomSheet\\bottomSheet.js",
            "line": 74,
            "ngdoc": "method",
            "name": "$mdBottomSheet#show",
            "description": "Show a bottom sheet with the specified options.",
            "params": [
                {
                    "name": "options",
                    "description": "An options object, with the following properties:\n\n  - `templateUrl` - `{string=}`: The url of an html template file that will\n  be used as the content of the bottom sheet. Restrictions: the template must\n  have an outer `md-bottom-sheet` element.\n  - `template` - `{string=}`: Same as templateUrl, except this is an actual\n  template string.\n  - `scope` - `{object=}`: the scope to link the template / controller to. If none is specified, it will create a new child scope.\n    This scope will be destroyed when the bottom sheet is removed unless `preserveScope` is set to true.\n  - `preserveScope` - `{boolean=}`: whether to preserve the scope when the element is removed. Default is false\n  - `controller` - `{string=}`: The controller to associate with this bottom sheet.\n  - `locals` - `{string=}`: An object containing key/value pairs. The keys will\n  be used as names of values to inject into the controller. For example,\n  `locals: {three: 3}` would inject `three` into the controller with the value\n  of 3.\n  - `clickOutsideToClose` - `{boolean=}`: Whether the user can click outside the bottom sheet to\n    close it. Default true.\n  - `escapeToClose` - `{boolean=}`: Whether the user can press escape to close the bottom sheet.\n    Default true.\n  - `resolve` - `{object=}`: Similar to locals, except it takes promises as values\n  and the bottom sheet will not open until the promises resolve.\n  - `controllerAs` - `{string=}`: An alias to assign the controller to on the scope.\n  - `parent` - `{element=}`: The element to append the bottom sheet to. The `parent` may be a `function`, `string`,\n  `object`, or null. Defaults to appending to the body of the root element (or the root element) of the application.\n  e.g. angular.element(document.getElementById('content')) or \"#content\"\n  - `disableParentScroll` - `{boolean=}`: Whether to disable scrolling while the bottom sheet is open.\n    Default true.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "A promise that can be resolved with `$mdBottomSheet.hide()` or\nrejected with `$mdBottomSheet.cancel()`.",
                "type": "Promise"
            },
            "class": "",
            "module": "material.components.bottomSheet"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\bottomSheet\\bottomSheet.js",
            "line": 113,
            "ngdoc": "method",
            "name": "$mdBottomSheet#hide",
            "description": "Hide the existing bottom sheet and resolve the promise returned from\n`$mdBottomSheet.show()`. This call will close the most recently opened/current bottomsheet (if any).",
            "params": [
                {
                    "name": "response",
                    "description": "An argument for the resolved promise.",
                    "type": "*="
                }
            ],
            "class": "",
            "module": "material.components.bottomSheet"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\bottomSheet\\bottomSheet.js",
            "line": 125,
            "ngdoc": "method",
            "name": "$mdBottomSheet#cancel",
            "description": "Hide the existing bottom sheet and reject the promise returned from\n`$mdBottomSheet.show()`.",
            "params": [
                {
                    "name": "response",
                    "description": "An argument for the rejected promise.",
                    "type": "*="
                }
            ],
            "class": "",
            "module": "material.components.bottomSheet"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\bottomSheet\\bottomSheet.js",
            "line": 225,
            "description": "BottomSheet class to apply bottom-sheet behavior to an element",
            "class": "",
            "module": "material.components.bottomSheet"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\button\\button.js",
            "line": 9,
            "ngdoc": "module",
            "name": "material.components.button",
            "description": "Button",
            "class": "",
            "module": "material.components.bottomSheet"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\card\\card.js",
            "line": 9,
            "ngdoc": "module",
            "name": "material.components.card",
            "description": "Card components.",
            "class": "",
            "module": "material.components.button"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\checkbox\\checkbox.js",
            "line": 9,
            "ngdoc": "module",
            "name": "material.components.checkbox",
            "description": "Checkbox module!",
            "class": "",
            "module": "material.components.card"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js",
            "line": 10,
            "ngdoc": "module",
            "name": "material.components.chips",
            "class": "",
            "module": "material.components.checkbox"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js",
            "line": 50,
            "description": "MDChip Directive Definition",
            "params": [
                {
                    "name": "$mdTheming",
                    "description": ""
                },
                {
                    "name": "$mdInkRipple\nngInject",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js",
            "line": 104,
            "description": "MdChipRemove Directive Definition.",
            "params": [
                {
                    "name": "$compile",
                    "description": ""
                },
                {
                    "name": "$timeout",
                    "description": ""
                }
            ],
            "return": {
                "description": "}",
                "type": "Restrict: string, require: string[], link: Function, scope: boolean"
            },
            "is_constructor": 1,
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js",
            "line": 168,
            "description": "Controller for the MdChips component. Responsible for adding to and\nremoving from the list of chips, marking chips as selected, and binding to\nthe models of various input components.",
            "params": [
                {
                    "name": "$scope",
                    "description": ""
                },
                {
                    "name": "$mdConstant",
                    "description": ""
                },
                {
                    "name": "$log",
                    "description": ""
                },
                {
                    "name": "$element",
                    "description": ""
                }
            ],
            "is_constructor": 1,
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js",
            "line": 180,
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js",
            "line": 183,
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js",
            "line": 186,
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js",
            "line": 189,
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js",
            "line": 192,
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js",
            "line": 195,
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js",
            "line": 198,
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js",
            "line": 201,
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js",
            "line": 204,
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js",
            "line": 207,
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js",
            "line": 210,
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js",
            "line": 213,
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js",
            "line": 217,
            "description": "Hidden hint text for how to delete a chip. Used to give context to screen readers.",
            "type": "{string}",
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js",
            "line": 223,
            "description": "Hidden label for the delete button. Used to give context to screen readers.",
            "type": "{string}",
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js",
            "line": 229,
            "description": "Model used by the input element.",
            "type": "{string}",
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js",
            "line": 235,
            "description": "Whether to use the onAppend expression to transform the chip buffer\nbefore appending it to the list.",
            "type": "{boolean}",
            "deprecated": true,
            "deprecationMessage": "Will remove in 1.0.",
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js",
            "line": 245,
            "description": "Whether to use the transformChip expression to transform the chip buffer\nbefore appending it to the list.",
            "type": "{boolean}",
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js",
            "line": 252,
            "description": "Whether to use the onAdd expression to notify of chip additions.",
            "type": "{boolean}",
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js",
            "line": 258,
            "description": "Whether to use the onRemove expression to notify of chip removals.",
            "type": "{boolean}",
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js",
            "line": 264,
            "description": "Whether to use the onSelect expression to notify the component's user\nafter selecting a chip from the list.",
            "type": "{boolean}",
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js",
            "line": 273,
            "description": "Handles the keydown event on the input element: by default <enter> appends\nthe buffer to the chip list, while backspace removes the last chip in the\nlist if the current buffer is empty.",
            "params": [
                {
                    "name": "event",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js",
            "line": 309,
            "description": "Handles the keydown event on the chip elements: backspace removes the selected chip, arrow\nkeys switch which chips is active",
            "params": [
                {
                    "name": "event",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js",
            "line": 341,
            "description": "Get the input's placeholder - uses `placeholder` when list is empty and `secondary-placeholder`\nwhen the list is non-empty. If `secondary-placeholder` is not provided, `placeholder` is used\nalways.",
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js",
            "line": 353,
            "description": "Removes chip at {@code index} and selects the adjacent chip.",
            "params": [
                {
                    "name": "index",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js",
            "line": 365,
            "description": "Sets the selected chip index to -1.",
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js",
            "line": 372,
            "description": "Gets the index of an adjacent chip to select after deletion. Adjacency is\ndetermined as the next chip in the list, unless the target chip is the\nlast in the list, then it is the chip immediately preceding the target. If\nthere is only one item in the list, -1 is returned (select none).\nThe number returned is the index to select AFTER the target has been\nremoved.\nIf the current chip is not selected, then -1 is returned to select none.",
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js",
            "line": 387,
            "description": "Append the contents of the buffer to the chip list. This method will first\ncall out to the md-transform-chip method, if provided.",
            "params": [
                {
                    "name": "newChip",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js",
            "line": 424,
            "description": "Sets whether to use the md-on-append expression. This expression is\nbound to scope and controller in {@code MdChipsDirective} as\n{@code onAppend}. Due to the nature of directive scope bindings, the\ncontroller cannot know on its own/from the scope whether an expression was\nactually provided.",
            "deprecated": true,
            "deprecationMessage": "TODO: Remove deprecated md-on-append functionality in 1.0",
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js",
            "line": 443,
            "description": "Sets whether to use the md-transform-chip expression. This expression is\nbound to scope and controller in {@code MdChipsDirective} as\n{@code transformChip}. Due to the nature of directive scope bindings, the\ncontroller cannot know on its own/from the scope whether an expression was\nactually provided.",
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js",
            "line": 454,
            "description": "Sets whether to use the md-on-add expression. This expression is\nbound to scope and controller in {@code MdChipsDirective} as\n{@code onAdd}. Due to the nature of directive scope bindings, the\ncontroller cannot know on its own/from the scope whether an expression was\nactually provided.",
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js",
            "line": 465,
            "description": "Sets whether to use the md-on-remove expression. This expression is\nbound to scope and controller in {@code MdChipsDirective} as\n{@code onRemove}. Due to the nature of directive scope bindings, the\ncontroller cannot know on its own/from the scope whether an expression was\nactually provided.",
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js",
            "line": 487,
            "description": "Gets the input buffer. The input buffer can be the model bound to the\ndefault input item {@code this.chipBuffer}, the {@code selectedItem}\nmodel of an {@code md-autocomplete}, or, through some magic, the model\nbound to any inpput or text area element found within a\n{@code md-input-container} element.",
            "return": {
                "description": "",
                "type": "Object|string"
            },
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js",
            "line": 501,
            "description": "Resets the input buffer for either the internal input or user provided input element.",
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js",
            "line": 517,
            "description": "Removes the chip at the given index.",
            "params": [
                {
                    "name": "index",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js",
            "line": 533,
            "description": "Selects the chip at `index`,",
            "params": [
                {
                    "name": "index",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js",
            "line": 550,
            "description": "Marks the chip at the given index as selected.",
            "params": [
                {
                    "name": "index",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js",
            "line": 567,
            "description": "Selects the chip at `index` and gives it focus.",
            "params": [
                {
                    "name": "index",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js",
            "line": 578,
            "description": "Call `focus()` on the chip at `index`",
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js",
            "line": 585,
            "description": "Configures the required interactions with the ngModel Controller.\nSpecifically, set {@code this.items} to the {@code NgModelCtrl#$viewVale}.",
            "params": [
                {
                    "name": "ngModelCtrl",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js",
            "line": 615,
            "description": "Configure event bindings on a user-provided input element.",
            "params": [
                {
                    "name": "inputElement",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js",
            "line": 816,
            "description": "MDChips Directive Definition",
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js",
            "line": 854,
            "description": "Builds the final template for `md-chips` and returns the postLink function.\n\nBuilding the template involves 3 key components:\nstatic chips\nchip template\ninput control\n\nIf no `ng-model` is provided, only the static chip work needs to be done.\n\nIf no user-passed `md-chip-template` exists, the default template is used. This resulting\ntemplate is appended to the chip content element.\n\nThe remove button may be overridden by passing an element with an md-chip-remove attribute.\n\nIf an `input` or `md-autocomplete` element is provided by the caller, it is set aside for\ntransclusion later. The transclusion happens in `postLink` as the parent scope is required.\nIf no user input is provided, a default one is appended to the input container node in the\ntemplate.\n\nStatic Chips (i.e. `md-chip` elements passed from the caller) are gathered and set aside for\ntransclusion in the `postLink` function.",
            "params": [
                {
                    "name": "element",
                    "description": ""
                },
                {
                    "name": "attr",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Function"
            },
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js",
            "line": 907,
            "description": "Configures controller and transcludes.",
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js",
            "line": 1002,
            "description": "Controller for the MdContactChips component",
            "is_constructor": 1,
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js",
            "line": 1007,
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js",
            "line": 1010,
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js",
            "line": 1125,
            "description": "MDContactChips Directive Definition",
            "params": [
                {
                    "name": "$mdTheming",
                    "description": ""
                }
            ],
            "return": {
                "description": "ngInject",
                "type": "*"
            },
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\content\\content.js",
            "line": 9,
            "ngdoc": "module",
            "name": "material.components.content",
            "description": "Scrollable content",
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 13,
            "description": "Initialization function that validates environment\nrequirements.",
            "class": "",
            "module": "material.components.content"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 29,
            "description": "Detect if the ng-Touch module is also being used.\nWarn if detected.",
            "class": "",
            "module": "material.components.content"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 58,
            "description": "Use this to throttle events that come in often.\nThe throttled function will always use the *last* invocation before the\ncoming frame.\n\nFor example, window resize events that fire many times a second:\nIf we set to use an raf-throttled callback on window resize, then\nour callback will only be fired once per frame, with the last resize\nevent that happened before that frame.",
            "params": [
                {
                    "name": "callback",
                    "description": "function to debounce",
                    "type": "Function"
                }
            ],
            "class": "",
            "module": "material.components.content"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 200,
            "description": "Factory function that creates the grab-bag $mdConstant service.\nngInject",
            "class": "",
            "module": "material.core.util"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 245,
            "description": "As defined in core/style/variables.scss\n\n$layout-breakpoint-xs:     600px !default;\n$layout-breakpoint-sm:     960px !default;\n$layout-breakpoint-md:     1280px !default;\n$layout-breakpoint-lg:     1920px !default;",
            "class": "",
            "module": "material.core.util"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 286,
            "description": "Inject the iterator facade to easily support iteration and accessors",
            "see": [
                "iterator below"
            ],
            "class": "",
            "module": "material.core.util"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 297,
            "description": "iterator is a list facade to easily support iteration and accessors",
            "params": [
                {
                    "name": "items",
                    "description": "Array list which this iterator will enumerate"
                },
                {
                    "name": "reloop",
                    "description": "Boolean enables iterator to consider the list as an endless reloop"
                }
            ],
            "class": "",
            "module": "material.core.util"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 338,
            "description": "Publish copy of the enumerable set",
            "return": {
                "description": "",
                "type": "Array|*"
            },
            "class": "",
            "module": "material.core.util"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 346,
            "description": "Determine length of the list",
            "return": {
                "description": "",
                "type": "Array.length|*|number"
            },
            "class": "",
            "module": "material.core.util"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 354,
            "description": "Is the index specified valid",
            "params": [
                {
                    "name": "index",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Array.length|*|number|boolean"
            },
            "class": "",
            "module": "material.core.util"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 363,
            "description": "Can the iterator proceed to the next item in the list; relative to\nthe specified item.",
            "params": [
                {
                    "name": "item",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Array.length|*|number|boolean"
            },
            "class": "",
            "module": "material.core.util"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 374,
            "description": "Can the iterator proceed to the previous item in the list; relative to\nthe specified item.",
            "params": [
                {
                    "name": "item",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Array.length|*|number|boolean"
            },
            "class": "",
            "module": "material.core.util"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 385,
            "description": "Get item at specified index/position",
            "params": [
                {
                    "name": "index",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "",
            "module": "material.core.util"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 394,
            "description": "Find all elements matching the key/value pair\notherwise return null",
            "params": [
                {
                    "name": "val",
                    "description": ""
                },
                {
                    "name": "key",
                    "description": ""
                }
            ],
            "return": {
                "description": "array"
            },
            "class": "",
            "module": "material.core.util"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 409,
            "description": "Add item to list",
            "params": [
                {
                    "name": "item",
                    "description": ""
                },
                {
                    "name": "index",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "",
            "module": "material.core.util"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 427,
            "description": "Remove item from list...",
            "params": [
                {
                    "name": "item",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.core.util"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 437,
            "description": "Get the zero-based index of the target item",
            "params": [
                {
                    "name": "item",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "",
            "module": "material.core.util"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 446,
            "description": "Boolean existence check",
            "params": [
                {
                    "name": "item",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "",
            "module": "material.core.util"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 455,
            "description": "Return first item in the list",
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "",
            "module": "material.core.util"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 463,
            "description": "Return last item in the list...",
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "",
            "module": "material.core.util"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 471,
            "description": "Find the next item. If reloop is true and at the end of the list, it will go back to the\nfirst item. If given, the `validate` callback will be used to determine whether the next item\nis valid. If not valid, it will try to find the next item again.",
            "params": [
                {
                    "name": "backwards",
                    "description": "Specifies the direction of searching (forwards/backwards)",
                    "type": "Boolean"
                },
                {
                    "name": "item",
                    "description": "The item whose subsequent item we are looking for",
                    "type": "*"
                },
                {
                    "name": "validate",
                    "description": "The `validate` function",
                    "type": "Function="
                },
                {
                    "name": "limit",
                    "description": "The recursion limit",
                    "type": "Integer="
                }
            ],
            "return": {
                "description": "The subsequent item or null",
                "type": "*"
            },
            "class": "",
            "module": "material.core.util"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 705,
            "ngdoc": "module",
            "name": "material.core.util",
            "description": "Util",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 721,
            "description": "Checks if the target element has the requested style by key",
            "params": [
                {
                    "name": "target",
                    "description": "Target element",
                    "type": "DOMElement|JQLite"
                },
                {
                    "name": "key",
                    "description": "Style key",
                    "type": "String"
                },
                {
                    "name": "expectedVal",
                    "description": "Optional expected value",
                    "type": "String="
                }
            ],
            "return": {
                "description": "Whether the target element has the style or not",
                "type": "Boolean"
            },
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 778,
            "description": "Calculate the positive scroll offset\nTODO: Check with pinch-zoom in IE/Chrome;\n      https://code.google.com/p/chromium/issues/detail?id=496285",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 793,
            "description": "Finds the proper focus target by searching the DOM.",
            "params": [
                {
                    "name": "containerEl",
                    "description": ""
                },
                {
                    "name": "attributeVal",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 818,
            "description": "Can target and nested children for specified Selector (attribute)\nwhose value may be an expression that evaluates to True/False.",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 976,
            "description": "facade to build md-backdrop element with desired styles\nNOTE: Use $compile to trigger backdrop postLink function",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 984,
            "description": "supplant() method from Crockford's `Remedial Javascript`\nEquivalent to use of $interpolate; without dependency on\ninterpolation symbols and scope. Note: the '{<token>}' can\nbe property names, property chains, or array indices.",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 1068,
            "description": "Measures the number of milliseconds taken to run the provided callback\nfunction. Uses a high-precision timer if available.",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 1078,
            "description": "Create an implicit getter that caches its `getter()`\nlookup value",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 1094,
            "description": "Get a unique ID.",
            "return": {
                "description": "an unique numeric string",
                "type": "String"
            },
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 1167,
            "description": "Build polyfill for the Node.contains feature (if needed)",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 1180,
            "description": "Functional equivalent for $element.filter(‘md-bottom-sheet’)\nuseful with interimElements where the element and its container are important...",
            "params": [
                {
                    "name": "elements",
                    "description": "to scan",
                    "type": "[]"
                },
                {
                    "name": "name",
                    "description": "of node to find (e.g. 'md-dialog')",
                    "type": "String"
                },
                {
                    "name": "optional",
                    "description": "flag to allow deep scans; defaults to 'false'.",
                    "type": "Boolean="
                },
                {
                    "name": "optional",
                    "description": "flag to enable log warnings; defaults to false",
                    "type": "Boolean="
                }
            ],
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 1197,
            "description": "Breadth-First tree scan for element with matching `nodeName`",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 1204,
            "description": "Case-insensitive scan of current elements only (do not descend).",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 1218,
            "description": "Scan children of specified node",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 1238,
            "description": "Give optional properties with no value a boolean true if attr provided or false otherwise",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 1251,
            "description": "Alternative to $timeout calls with 0 delay.\nnextTick() coalesces all calls within a single frame\nto minimize $digest thrashing",
            "params": [
                {
                    "name": "callback",
                    "description": ""
                },
                {
                    "name": "digest",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 1279,
            "description": "Grab a copy of the current queue\nClear the queue for future use\nProcess the existing queue\nTrigger digest if necessary",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 1302,
            "description": "Processes a template and replaces the start/end symbols if the application has\noverriden them.",
            "params": [
                {
                    "name": "template",
                    "description": "The template to process whose start/end tags may be replaced."
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 1318,
            "description": "Scan up dom hierarchy for enabled parent;",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 1391,
            "description": "Check if expected attribute has been specified on the target element or child",
            "params": [
                {
                    "name": "element",
                    "description": ""
                },
                {
                    "name": "attrName",
                    "description": ""
                },
                {
                    "name": "defaultValue",
                    "description": "What to set the attr to if no value is found",
                    "type": "Optional"
                }
            ],
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 1619,
            "description": "The position of the most recent click if that click was on a label element.",
            "type": "{{x: number, y: number}?}",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 1665,
            "description": "$get is used to build an instance of $mdGesture\nngInject",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 1676,
            "description": "MdGesture factory construction function\nngInject",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 1932,
            "description": "MdGestureHandler\nA GestureHandler is an object which is able to dispatch custom dom events\nbased on native dom {touch,pointer,mouse}{start,move,end} events.\n\nA gesture will manage its lifecycle through the start,move,end, and cancel\nfunctions, which are called by native dom events.\n\nA gesture has the concept of 'options' (eg a swipe's required velocity), which can be\noverridden by elements registering through $mdGesture.register()",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 2089,
            "description": "Attach Gestures: hook document and check shouldHijack clicks\nngInject",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 2260,
            "description": "Gets whether the given event is an input event that was caused by clicking on an\nassociated label element.\n\nThis is necessary because the browser will, upon clicking on a label element, fire an\n*extra* click event on its associated input (if any). mdGesture is able to flag the label\nclick as with `$material` correctly, but not the second input click.\n\nIn order to determine whether an input event is from a label click, we compare the (x, y) for\nthe event to the (x, y) for the most recent label click (which is cleared whenever a non-label\nclick occurs). Unfortunately, there are no event properties that tie the input and the label\ntogether (such as relatedTarget).",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "MouseEvent"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 2330,
            "description": "Enable directive attribute-to-class conversions\nDevelopers can use `<body md-layout-css />` to quickly\ndisable the Layout directives and prohibit the injection of Layout classNames",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 2337,
            "description": "List of mediaQuery breakpoints and associated suffixes\n\n  [\n   { suffix: \"sm\", mediaQuery: \"screen and (max-width: 599px)\" },\n   { suffix: \"md\", mediaQuery: \"screen and (min-width: 600px) and (max-width: 959px)\" }\n  ]",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 2350,
            "description": "registerLayoutAPI()\n\nThe original ngMaterial Layout solution used attribute selectors and CSS.\n\n  ```html\n  <div layout=\"column\"> My Content </div>\n  ```\n\n  ```css\n  [layout] {\n box-sizing: border-box;\n display:flex;\n  }\n  [layout=column] {\n flex-direction : column\n  }\n  ```\n\n  Use of attribute selectors creates significant performance impacts in some\n  browsers... mainly IE.\n\n  This module registers directives that allow the same layout attributes to be\n  interpreted and converted to class selectors. The directive will add equivalent classes to each element that\n  contains a Layout directive.\n\n ```html\n<div layout=\"column\" class=\"layout layout-column\"> My Content </div>\n```\n\n  ```css\n  .layout {\n box-sizing: border-box;\n display:flex;\n  }\n  .layout-column {\n flex-direction : column\n  }\n  ```",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 2446,
            "description": "Converts snake_case to camelCase.\nAlso there is special case for Moz prefix starting with upper case letter.",
            "params": [
                {
                    "name": "name",
                    "description": "Name to normalize"
                }
            ],
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 2461,
            "description": "Special directive that will disable ALL Layout conversions of layout\nattribute(s) to classname(s).\n\n<link rel=\"stylesheet\" href=\"angular-material.min.css\">\n<link rel=\"stylesheet\" href=\"angular-material.layout.css\">\n\n<body md-layout-css>\n ...\n</body>\n\nNote: Using md-layout-css directive requires the developer to load the Material\nLayout Attribute stylesheet (which only uses attribute selectors):\n\n      `angular-material.layout.css`\n\nAnother option is to use the LayoutProvider to configure and disable the attribute\nconversions; this would obviate the use of the `md-layout-css` directive",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 2492,
            "description": "Tail-hook ngCloak to delay the uncloaking while Layout transformers\nfinish processing. Eliminates flicker with Material.Layoouts",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 2530,
            "description": "Creates a directive registration function where a possible dynamic attribute\nvalue will be observed/watched.",
            "params": [
                {
                    "name": "className",
                    "description": "attribute name; eg `layout-gt-md` with value =\"row\"",
                    "type": "String"
                }
            ],
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 2565,
            "description": "Add as transformed class selector(s), then\nremove the deprecated attribute selector",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 2578,
            "description": "Creates a registration function for ngMaterial Layout attribute directive.\nThis is a `simple` transpose of attribute usage to class usage; where we ignore\nany attribute value",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 2612,
            "description": "Add as transformed class selector, then\nremove the deprecated attribute selector",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 2623,
            "description": "After link-phase, do NOT remove deprecated layout attribute selector.\nInstead watch the attribute so interpolated data-bindings to layout\nselectors will continue to be supported.\n\n$observe() the className and update with new class (after removing the last one)\n\ne.g. `layout=\"{{layoutDemo.direction}}\"` will update...\n\nNOTE: The value must match one of the specified styles in the CSS.\nFor example `flex-gt-md=\"{{size}}`  where `scope.size == 47` will NOT work since\nonly breakpoints for 0, 5, 10, 15... 100, 33, 34, 66, 67 are defined.",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 2650,
            "description": "Provide console warning that this layout attribute has been deprecated",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 2662,
            "description": "Centralize warnings for known flexbox issues (especially IE-related issues)",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 2686,
            "description": "For the Layout attribute value, validate or replace with default\nfallback value",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 2739,
            "description": "Replace current attribute value with fallback value",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 2753,
            "description": "See if the original value has interpolation symbols:\ne.g.  flex-gt-md=\"{{triggerPoint}}\"",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 2842,
            "description": "Returns a new provider which allows configuration of a new interimElement\nservice. Allows configuration of default options & methods for options,\nas well as configuration of 'preset' methods (eg dialog.basic(): basic is a preset method)",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 2862,
            "description": "all interim elements will come with the 'build' preset",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 2873,
            "description": "Save the configured defaults to be used when the factory is instantiated",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 2882,
            "description": "Add a method to the factory that isn't specific to any interim element operations",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 2891,
            "description": "Save the configured preset to be used when the factory is instantiated",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 2917,
            "description": "Create a factory that has the given methods & defaults implementing interimElement",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 3015,
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 3029,
            "description": "Special method to hide and destroy an interimElement WITHOUT\nany 'leave` or hide animations ( an immediate force hide/remove )\n\nNOTE: This calls the onRemove() subclass method for each component...\nwhich must have code to respond to `options.$destroy == true`",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 3040,
            "description": "Helper to call $injector.invoke with a local of the factory name for\nthis provider.\nIf an $mdDialog is providing options for a dialog and tries to inject\n$mdDialog, a circular dependency error will happen.\nWe get around that by manually injecting $mdDialog as a local.",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 3229,
            "description": "Compile, link, and show this interim element\nUse optional autoHided and transition-in effects",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 3255,
            "description": "After the show process has finished/rejected:\n- announce 'removing',\n- perform the transition-out, and\n- perform optional clean up scope.",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 3291,
            "description": "The `show()` returns a promise that will be resolved when the interim\nelement is hidden or cancelled...",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 3299,
            "description": "Force the '$md<xxx>.show()' promise to reject",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 3307,
            "description": "Prepare optional isolated scope and prepare $animate with default enter and leave\ntransitions for the new element instance.",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 3322,
            "description": "Default usage to enable $animate to transition-in; can be easily overridden via 'options'",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 3329,
            "description": "Default usage to enable $animate to transition-out; can be easily overridden via 'options'",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 3341,
            "description": "Compile an element with a templateUrl, controller, and locals",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 3358,
            "description": "Link an element with compiled configuration",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 3374,
            "description": "Search for parent at insertion time, if not specified",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 3406,
            "description": "If auto-hide is enabled, start timer and prepare cancel function",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 3426,
            "description": "Show the element ( with transitions), notify complete and start\noptional auto-Hide",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 3499,
            "ngdoc": "module",
            "name": "material.core.componentRegistry",
            "description": "A component instance registration service.\nNote: currently this as a private service in the SideNav component.",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 3524,
            "description": "Used to print an error when an instance for a handle isn't found.",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 3530,
            "description": "Return all registered instances as an array.",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 3537,
            "description": "Get a registered instance.",
            "params": [
                {
                    "name": "handle",
                    "description": "the String handle to look up for a registered instance."
                }
            ],
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 3554,
            "description": "Register an instance.",
            "params": [
                {
                    "name": "instance",
                    "description": "the instance to register"
                },
                {
                    "name": "handle",
                    "description": "the handle to identify the instance under."
                }
            ],
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 3568,
            "description": "Remove registration for an instance",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 3578,
            "description": "Resolve any pending promises for this instance",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 3590,
            "description": "Async accessor to registered component instance\nIf not available then a promise is created to notify\nall listeners when the instance is registered.",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 3995,
            "ngdoc": "method",
            "name": "$mdThemingProvider#setNonce",
            "params": [
                {
                    "name": "nonceValue",
                    "description": "The nonce to be added as an attribute to the theme style tags.\nSetting a value allows the use CSP policy without using the unsafe-inline directive.",
                    "type": "String"
                }
            ],
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 4002,
            "ngdoc": "method",
            "name": "$mdThemingProvider#setDefaultTheme",
            "params": [
                {
                    "name": "themeName",
                    "description": "Default theme name to be applied to elements. Default value is `default`.",
                    "type": "String"
                }
            ],
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 4008,
            "ngdoc": "method",
            "name": "$mdThemingProvider#alwaysWatchTheme",
            "params": [
                {
                    "name": "watch",
                    "description": "Whether or not to always watch themes for changes and re-apply\nclasses when they change. Default is `false`. Enabling can reduce performance.",
                    "type": "Boolean"
                }
            ],
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 4296,
            "ngdoc": "service",
            "name": "$mdTheming",
            "description": "Service that makes an element apply theming related classes to itself.\n\n```js\napp.directive('myFancyDirective', function($mdTheming) {\n  return {\n    restrict: 'e',\n    link: function(scope, el, attrs) {\n      $mdTheming(el);\n    }\n  };\n});\n```",
            "params": [
                {
                    "name": "element",
                    "description": "to apply theming to",
                    "type": "El="
                }
            ],
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 4782,
            "ngdoc": "module",
            "name": "material.core.ripple",
            "description": "Ripple",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 4871,
            "ngdoc": "method",
            "name": "$mdInkRipple#attach",
            "description": "Attaching given scope, element and options to inkRipple controller",
            "params": [
                {
                    "name": "scope",
                    "description": "Scope within the current context",
                    "type": "Object="
                },
                {
                    "name": "element",
                    "description": "The element the ripple effect should be applied to",
                    "type": "Object="
                },
                {
                    "name": "options",
                    "description": "(Optional) Configuration options to override the defaultRipple configuration\n* `center` -  Whether the ripple should start from the center of the container element\n* `dimBackground` - Whether the background should be dimmed with the ripple color\n* `colorElement` - The element the ripple should take its color from, defined by css property `color`\n* `fitRipple` - Whether the ripple should fill the element",
                    "type": "Object="
                }
            ],
            "class": "",
            "module": "material.core.ripple"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 4899,
            "description": "Controller used by the ripple service in order to apply ripples\nngInject",
            "class": "",
            "module": "material.core.ripple"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 4928,
            "description": "Either remove or unlock any remaining ripples when the user mouses off of the element (either by\nmouseup or mouseleave event)",
            "class": "",
            "module": "material.core.ripple"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 4942,
            "description": "Returns the color that the ripple should be (either based on CSS or hard-coded)",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "",
            "module": "material.core.ripple"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 4957,
            "description": "Finds the color element and returns its text color for use as default ripple color",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "",
            "module": "material.core.ripple"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 4969,
            "description": "Updating the ripple colors based on the current inkRipple value\nor the element's computed style color",
            "class": "",
            "module": "material.core.ripple"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 4978,
            "description": "Takes a string color and converts it to RGBA format",
            "params": [
                {
                    "name": "color",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "multiplier",
                    "description": "",
                    "type": "Int",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "",
            "module": "material.core.ripple"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 4993,
            "description": "Converts hex value to RGBA string",
            "params": [
                {
                    "name": "color",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "",
            "module": "material.core.ripple"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 5012,
            "description": "Converts an RGB color to RGBA",
            "params": [
                {
                    "name": "color",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "",
            "module": "material.core.ripple"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 5023,
            "description": "Binds events to the root element for",
            "class": "",
            "module": "material.core.ripple"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 5033,
            "description": "Create a new ripple on every mousedown event from the root element",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "MouseEvent"
                }
            ],
            "class": "",
            "module": "material.core.ripple"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 5060,
            "description": "Either remove or unlock any remaining ripples when the user mouses off of the element (either by\nmouseup, touchend or mouseleave event)",
            "class": "",
            "module": "material.core.ripple"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 5068,
            "description": "Either remove or unlock any remaining ripples when the user mouses off of the element (by\ntouchmove)",
            "class": "",
            "module": "material.core.ripple"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 5076,
            "description": "Cycles through all ripples and attempts to remove them.",
            "class": "",
            "module": "material.core.ripple"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 5085,
            "description": "Cycles through all ripples and attempts to remove them with fade.\nDepending on logic within `fadeInComplete`, some removals will be postponed.",
            "class": "",
            "module": "material.core.ripple"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 5095,
            "description": "Creates the ripple container element",
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "",
            "module": "material.core.ripple"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 5126,
            "description": "The attribute `md-ink-ripple` may be a static or interpolated\ncolor value OR a boolean indicator (used to disable ripples)",
            "class": "",
            "module": "material.core.ripple"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 5134,
            "description": "Creates a new ripple and adds it to the container.  Also tracks ripple in `this.ripples`.",
            "params": [
                {
                    "name": "left",
                    "description": ""
                },
                {
                    "name": "top",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.core.ripple"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 5198,
            "description": "After fadeIn finishes, either kicks off the fade-out animation or queues the element for removal on mouseup",
            "params": [
                {
                    "name": "ripple",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.core.ripple"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 5212,
            "description": "Kicks off the animation for removing a ripple",
            "params": [
                {
                    "name": "ripple",
                    "description": "",
                    "type": "Element"
                }
            ],
            "class": "",
            "module": "material.core.ripple"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 5230,
            "description": "Removes the provided ripple from the DOM",
            "params": [
                {
                    "name": "ripple",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.core.ripple"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 5239,
            "description": "Used to create an empty directive.  This is used to track flag-directives whose children may have\nfunctionality based on them.\n\nExample: `md-no-ink` will potentially be used by all child directives.",
            "class": "",
            "module": "material.core.ripple"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 5298,
            "description": "Factory function that requires special injections",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 5304,
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 5319,
            "description": "Specific reversal of the request translate animation above...",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 5332,
            "description": "Listen for transitionEnd event (with optional timeout)\nAnnounce completion or failure via promise handlers",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 5345,
            "description": "Upon timeout or transitionEnd, reject or resolve (respectively) this promise.\nNOTE: Make sure this transitionEnd didn't bubble up from a child",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 5363,
            "description": "Calculate the zoom transform from dialog to origin.\n\nWe use this to set the dialog position immediately;\nthen the md-transition-in actually translates back to\n`translate3d(0,0,0) scale(1.0)`...\n\nNOTE: all values are rounded to the nearest integer",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 5398,
            "description": "This is a fallback if the origin information is no longer valid, then the\norigin bounds simply becomes the current bounds for the dialogContainer's parent",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 5410,
            "description": "Enhance raw values to represent valid css stylings...",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 5446,
            "description": "Convert the translate CSS value to key/value pair(s).",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 5463,
            "description": "Clone the Rect and calculate the height/width if needed",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 5481,
            "description": "Calculate ClientRect of element; return null if hidden or zero size",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 5494,
            "description": "Calculate 'rounded' center point of Rect",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\core\\core.js",
            "line": 5895,
            "description": "Older browsers [FF31] expect camelCase\nproperty keys.\ne.g.\n animation-duration --> animationDuration",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 14,
            "ngdoc": "module",
            "name": "material.components.datepicker",
            "description": "Datepicker",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 41,
            "description": "Height of one calendar month tbody. This must be made known to the virtual-repeat and is\nsubsequently used for scrolling to specific months.",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 47,
            "description": "Height of a calendar month with a single row. This is needed to calculate the offset for\nrendering an extra month in virtual-repeat that only contains one row.",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 85,
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 88,
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 91,
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 94,
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 97,
            "description": "Controller for the mdCalendar component.\nngInject @constructor",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 104,
            "description": "Dummy array-like object for virtual-repeat to iterate over. The length is the total\nnumber of months that can be viewed. This is shorter than ideal because of (potential)\nFirefox bug https://bugzilla.mozilla.org/show_bug.cgi?id=1181658.",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 120,
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 123,
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 126,
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 129,
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 132,
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 135,
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 138,
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 141,
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 144,
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 147,
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 150,
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 153,
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 156,
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 170,
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 173,
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 176,
            "description": "The selected date. Keep track of this separately from the ng-model value so that we\ncan know, when the ng-model value changes, what the previous value was before it's updated\nin the component's UI.",
            "type": "{Date}",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 185,
            "description": "The date that is currently focused or showing in the calendar. This will initially be set\nto the ng-model value if set, otherwise to today. It will be updated as the user navigates\nto other months. The cell corresponding to the displayDate does not necesarily always have\nfocus in the document (such as for cases when the user is scrolling the calendar).",
            "type": "{Date}",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 194,
            "description": "The date that has or should have focus.",
            "type": "{Date}",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 200,
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 203,
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 215,
            "description": "Handles a click event on a date cell.\nCreated here so that every cell can use the same function instance.",
            "this": "{HTMLTableCellElement} The cell that was clicked.",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 235,
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 237,
            "description": "Sets up the controller's reference to ngModelController.",
            "params": [
                {
                    "name": "ngModelCtrl",
                    "description": "",
                    "type": "!angular.NgModelController"
                }
            ],
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 250,
            "description": "Initialize the calendar by building the months that are initially visible.\nInitialization should occur after the ngModel value is known.",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 262,
            "description": "Hides the vertical scrollbar on the calendar scroller by setting the width on the\ncalendar scroller and the `overflow: hidden` wrapper around the scroller, and then setting\na padding-right on the scroller equal to the width of the browser's scrollbar.\n\nThis will cause a reflow.",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 284,
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 290,
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 292,
            "description": "Handles a key event in the calendar with the appropriate action. The action will either\nbe to select the focused date or to navigate to focus a new date.",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "KeyboardEvent"
                }
            ],
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 336,
            "description": "Gets the date to focus as the result of a key event.",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "KeyboardEvent"
                }
            ],
            "return": {
                "description": "Date to navigate to, or null if the key does not match a calendar shortcut.",
                "type": "Date"
            },
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 364,
            "description": "Gets the \"index\" of the currently selected date as it would be in the virtual-repeat.",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 373,
            "description": "Scrolls to the month of the given date.",
            "params": [
                {
                    "name": "date",
                    "description": "",
                    "type": "Date"
                }
            ],
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 386,
            "description": "Sets the ng-model value for the calendar and emits a change event.",
            "params": [
                {
                    "name": "date",
                    "description": "",
                    "type": "Date"
                }
            ],
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 396,
            "description": "Focus the cell corresponding to the given date.",
            "params": [
                {
                    "name": "opt_date",
                    "description": "",
                    "type": "Date="
                }
            ],
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 418,
            "description": "If a date exceeds minDate or maxDate, returns date matching minDate or maxDate, respectively.\nOtherwise, returns the date.",
            "params": [
                {
                    "name": "date",
                    "description": "",
                    "type": "Date"
                }
            ],
            "return": {
                "description": "",
                "type": "Date"
            },
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 435,
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 437,
            "description": "Change the selected date in the calendar (ngModel value has already been changed).",
            "params": [
                {
                    "name": "date",
                    "description": "",
                    "type": "Date"
                }
            ],
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 469,
            "description": "Change the date that is being shown in the calendar. If the given date is in a different\nmonth, the displayed month will be transitioned.",
            "params": [
                {
                    "name": "date",
                    "description": "",
                    "type": "Date"
                }
            ],
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 500,
            "description": "Animates the transition from the calendar's current month to the given month.",
            "params": [
                {
                    "name": "date",
                    "description": "",
                    "type": "Date"
                }
            ],
            "return": {
                "description": "The animation promise.",
                "type": "angular.$q.Promise"
            },
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 510,
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 512,
            "description": "Builds and appends a day-of-the-week header to the calendar.\nThis should only need to be called once during initialization.",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 530,
            "description": "Gets an identifier for a date unique to the calendar instance for internal\npurposes. Not to be displayed.",
            "params": [
                {
                    "name": "date",
                    "description": "",
                    "type": "Date"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 555,
            "description": "Private directive consumed by md-calendar. Having this directive lets the calender use\nmd-virtual-repeat and also cleanly separates the month DOM construction functions from\nthe rest of the calendar controller logic.",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 587,
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 590,
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 593,
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 596,
            "description": "Controller for a single calendar month.\nngInject @constructor",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 606,
            "description": "Number of months from the start of the month \"items\" that the currently rendered month\noccurs. Set via angular data binding.",
            "type": "{number}",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 613,
            "description": "Date cell to focus after appending the month to the document.",
            "type": "{HTMLElement}",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 621,
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 636,
            "description": "Creates a single cell to contain a date in the calendar with all appropriate\nattributes and classes added. If a date is given, the cell content will be set\nbased on the date.",
            "params": [
                {
                    "name": "opt_date",
                    "description": "",
                    "type": "Date="
                }
            ],
            "return": {
                "description": "",
                "type": "HTMLElement"
            },
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 695,
            "description": "Check whether date is in range and enabled",
            "params": [
                {
                    "name": "opt_date",
                    "description": "",
                    "type": "Date="
                }
            ],
            "return": {
                "description": "Whether the date is enabled.",
                "type": "Boolean"
            },
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 707,
            "description": "Builds a `tr` element for the calendar grid.",
            "params": [
                {
                    "name": "rowNumber",
                    "description": "The week number within the month."
                }
            ],
            "return": {
                "description": "",
                "type": "HTMLElement"
            },
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 724,
            "description": "Builds the <tbody> content for the given date's month.",
            "params": [
                {
                    "name": "opt_dateInMonth",
                    "description": "",
                    "type": "Date="
                }
            ],
            "return": {
                "description": "A document fragment containing the <tr> elements.",
                "type": "DocumentFragment"
            },
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 824,
            "description": "Gets the day-of-the-week index for a date for the current locale.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "date",
                    "description": "",
                    "type": "Date"
                }
            ],
            "return": {
                "description": "The column index of the date in the calendar.",
                "type": "Number"
            },
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 915,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 917,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 920,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 923,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 926,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 929,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 932,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 935,
            "description": "Function that converts the date portion of a Date to a string.",
            "type": "{(function(Date): string)}",
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 941,
            "description": "Function that converts a date string to a Date object (the date portion)",
            "type": "{function(string): Date}",
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 947,
            "description": "Function that formats a Date into a month header string.",
            "type": "{function(Date): string}",
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 953,
            "description": "Function that formats a week number into a label for the week.",
            "type": "{function(number): string}",
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 959,
            "description": "Function that formats a date into a long aria-label that is read\nwhen the focused date changes.",
            "type": "{function(Date): string}",
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 966,
            "description": "ARIA label for the calendar \"dialog\" used in the datepicker.",
            "type": "{string}",
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 972,
            "description": "ARIA label for the datepicker's \"Open calendar\" buttons.",
            "type": "{string}",
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 979,
            "description": "Factory function that returns an instance of the dateLocale service.\nngInject",
            "params": [
                {
                    "name": "$locale",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "DateLocale"
            },
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 986,
            "description": "Default date-to-string formatting function.",
            "params": [
                {
                    "name": "date",
                    "description": "",
                    "type": "!Date"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 1011,
            "description": "Default string-to-date parsing function.",
            "params": [
                {
                    "name": "dateString",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "!Date"
            },
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 1020,
            "description": "Default function to determine whether a string makes sense to be\nparsed to a Date object.\n\nThis is very permissive and is just a basic sanity check to ensure that\nthings like single integers aren't able to be parsed into dates.",
            "params": [
                {
                    "name": "dateString",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 1038,
            "description": "Default date-to-string formatter to get a month header.",
            "params": [
                {
                    "name": "date",
                    "description": "",
                    "type": "!Date"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 1047,
            "description": "Default week number formatter.",
            "params": [
                {
                    "name": "number",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 1056,
            "description": "Default formatter for date cell aria-labels.",
            "params": [
                {
                    "name": "date",
                    "description": "",
                    "type": "!Date"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 1220,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 1223,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 1226,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 1229,
            "description": "Height of the calendar pane used to check if the pane is going outside the boundary of\nthe viewport. See calendar.scss for how $md-calendar-height is computed; an extra 20px is\nalso added to space the pane away from the exact edge of the screen.\n\n This is computed statically now, but can be changed to be measured if the circumstances\n of calendar sizing are changed.",
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 1239,
            "description": "Width of the calendar pane used to check if the pane is going outside the boundary of\nthe viewport. See calendar.scss for how $md-calendar-width is computed; an extra 20px is\nalso added to space the pane away from the exact edge of the screen.\n\n This is computed statically now, but can be changed to be measured if the circumstances\n of calendar sizing are changed.",
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 1249,
            "description": "Controller for md-datepicker.\n\nngInject @constructor",
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 1256,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 1259,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 1262,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 1265,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 1268,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 1271,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 1277,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 1280,
            "description": "The root document element. This is used for attaching a top-level click handler to\nclose the calendar panel when a click outside said panel occurs. We use `documentElement`\ninstead of body because, when scrolling is disabled, some browsers consider the body element\nto be completely off the screen and propagate events directly to the html element.",
            "type": "{!angular.JQLite}",
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 1289,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 1292,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 1295,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 1298,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 1301,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 1304,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 1307,
            "description": "Element covering everything but the input in the top of the floating calendar pane.",
            "type": "{HTMLElement}",
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 1313,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 1316,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 1319,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 1322,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 1325,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 1328,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 1332,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 1335,
            "description": "Element from which the calendar pane was opened. Keep track of this so that we can return\nfocus to it when the pane is closed.",
            "type": "{HTMLElement}",
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 1346,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 1349,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 1370,
            "description": "Sets up the controller's reference to ngModelController.",
            "params": [
                {
                    "name": "ngModelCtrl",
                    "description": "",
                    "type": "!angular.NgModelController"
                }
            ],
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 1393,
            "description": "Attach event listeners for both the text input and the md-calendar.\nEvents are used instead of ng-model so that updates don't infinitely update the other\non a change. This should also be more performant than using a $watch.",
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 1416,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 1435,
            "description": "Capture properties set to the date-picker and imperitively handle internal changes.\nThis is done to avoid setting up additional $watches.",
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 1460,
            "description": "Sets whether the date-picker is disabled.",
            "params": [
                {
                    "name": "isDisabled",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 1470,
            "description": "Sets the custom ngModel.$error flags to be consumed by ngMessages. Flags are:\n  - mindate: whether the selected date is before the minimum date.\n  - maxdate: whether the selected flag is after the maximum date.\n  - filtered: whether the selected date is allowed by the custom filtering function.\n  - valid: whether the entered text input is a valid date\n\nThe 'required' flag is handled automatically by ngModel.",
            "params": [
                {
                    "name": "opt_date",
                    "description": "Date to check. If not given, defaults to the datepicker's model value.",
                    "type": "Date="
                }
            ],
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 1518,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 1526,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 1531,
            "description": "Sets the model value if the user input is a valid date.\nAdds an invalid class to the input element if not.",
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 1557,
            "description": "Check whether date is in range and enabled",
            "params": [
                {
                    "name": "opt_date",
                    "description": "",
                    "type": "Date="
                }
            ],
            "return": {
                "description": "Whether the date is enabled.",
                "type": "Boolean"
            },
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 1567,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 1636,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 1649,
            "description": "Open the floating calendar pane.",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                }
            ],
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 1682,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 1698,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 1703,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 1712,
            "description": "Sets whether the input is currently focused.",
            "params": [
                {
                    "name": "isFocused",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 1723,
            "description": "Handles a click on the document body when the floating calendar pane is open.\nCloses the floating calendar pane if the click is not inside of it.",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "MouseEvent"
                }
            ],
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 1744,
            "description": "Utility for performing date calculations to facilitate operation of the calendar and\ndatepicker.",
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 1770,
            "description": "Gets the first day of the month for the given date's month.",
            "params": [
                {
                    "name": "date",
                    "description": "",
                    "type": "Date"
                }
            ],
            "return": {
                "description": "",
                "type": "Date"
            },
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 1779,
            "description": "Gets the number of days in the month for the given date's month.",
            "params": [
                {
                    "name": "date",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 1788,
            "description": "Get an arbitrary date in the month after the given date's month.",
            "params": [
                {
                    "name": "date",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Date"
            },
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 1797,
            "description": "Get an arbitrary date in the month before the given date's month.",
            "params": [
                {
                    "name": "date",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Date"
            },
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 1806,
            "description": "Gets whether two dates have the same month and year.",
            "params": [
                {
                    "name": "d1",
                    "description": "",
                    "type": "Date"
                },
                {
                    "name": "d2",
                    "description": "",
                    "type": "Date"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 1816,
            "description": "Gets whether two dates are the same day (not not necesarily the same time).",
            "params": [
                {
                    "name": "d1",
                    "description": "",
                    "type": "Date"
                },
                {
                    "name": "d2",
                    "description": "",
                    "type": "Date"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 1826,
            "description": "Gets whether a date is in the month immediately after some date.",
            "params": [
                {
                    "name": "startDate",
                    "description": "The date from which to compare.",
                    "type": "Date"
                },
                {
                    "name": "endDate",
                    "description": "The date to check.",
                    "type": "Date"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 1837,
            "description": "Gets whether a date is in the month immediately before some date.",
            "params": [
                {
                    "name": "startDate",
                    "description": "The date from which to compare.",
                    "type": "Date"
                },
                {
                    "name": "endDate",
                    "description": "The date to check.",
                    "type": "Date"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 1848,
            "description": "Gets the midpoint between two dates.",
            "params": [
                {
                    "name": "d1",
                    "description": "",
                    "type": "Date"
                },
                {
                    "name": "d2",
                    "description": "",
                    "type": "Date"
                }
            ],
            "return": {
                "description": "",
                "type": "Date"
            },
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 1858,
            "description": "Gets the week of the month that a given date occurs in.",
            "params": [
                {
                    "name": "date",
                    "description": "",
                    "type": "Date"
                }
            ],
            "return": {
                "description": "Index of the week of the month (zero-based).",
                "type": "Number"
            },
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 1868,
            "description": "Gets a new date incremented by the given number of days. Number of days can be negative.",
            "params": [
                {
                    "name": "date",
                    "description": "",
                    "type": "Date"
                },
                {
                    "name": "numberOfDays",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Date"
            },
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 1878,
            "description": "Gets a new date incremented by the given number of months. Number of months can be negative.\nIf the date of the given month does not match the target month, the date will be set to the\nlast day of the month.",
            "params": [
                {
                    "name": "date",
                    "description": "",
                    "type": "Date"
                },
                {
                    "name": "numberOfMonths",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Date"
            },
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 1902,
            "description": "Get the integer distance between two months. This *only* considers the month and year\nportion of the Date instances.",
            "params": [
                {
                    "name": "start",
                    "description": "",
                    "type": "Date"
                },
                {
                    "name": "end",
                    "description": "",
                    "type": "Date"
                }
            ],
            "return": {
                "description": "Number of months between `start` and `end`. If `end` is before `start`\n    chronologically, this number will be negative.",
                "type": "Number"
            },
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 1915,
            "description": "Gets the last day of the month for the given date.",
            "params": [
                {
                    "name": "date",
                    "description": "",
                    "type": "Date"
                }
            ],
            "return": {
                "description": "",
                "type": "Date"
            },
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 1924,
            "description": "Checks whether a date is valid.",
            "params": [
                {
                    "name": "date",
                    "description": "",
                    "type": "Date"
                }
            ],
            "return": {
                "description": "Whether the date is a valid Date.",
                "type": "Boolean"
            },
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 1933,
            "description": "Sets a date's time to midnight.",
            "params": [
                {
                    "name": "date",
                    "description": "",
                    "type": "Date"
                }
            ],
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 1943,
            "description": "Creates a date with the time set to midnight.\nDrop-in replacement for two forms of the Date constructor:\n1. No argument for Date representing now.\n2. Single-argument value representing number of seconds since Unix Epoch\nor a Date object.",
            "params": [
                {
                    "name": "opt_value",
                    "description": "",
                    "type": "Number|Date="
                }
            ],
            "return": {
                "description": "New date with time set to midnight.",
                "type": "Date"
            },
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js",
            "line": 1963,
            "description": "Checks if a date is within a min and max range, ignoring the time component.\nIf minDate or maxDate are not dates, they are ignored.",
            "params": [
                {
                    "name": "date",
                    "description": "",
                    "type": "Date"
                },
                {
                    "name": "minDate",
                    "description": "",
                    "type": "Date"
                },
                {
                    "name": "maxDate",
                    "description": "",
                    "type": "Date"
                }
            ],
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\dialog\\dialog.js",
            "line": 10,
            "ngdoc": "module",
            "name": "material.components.dialog",
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\dialog\\dialog.js",
            "line": 75,
            "class": "",
            "module": "material.components.dialog"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\dialog\\dialog.js",
            "line": 331,
            "ngdoc": "method",
            "name": "$mdDialog#alert",
            "description": "Builds a preconfigured dialog with the specified message.",
            "return": {
                "description": "an `$mdDialogPreset` with the chainable configuration methods:\n\n- $mdDialogPreset#title(string) - Sets the alert title.\n- $mdDialogPreset#textContent(string) - Sets the alert message.\n- $mdDialogPreset#htmlContent(string) - Sets the alert message as HTML. Requires ngSanitize\n    module to be loaded. HTML is not run through Angular's compiler.\n- $mdDialogPreset#ok(string) - Sets the alert \"Okay\" button text.\n- $mdDialogPreset#theme(string) - Sets the theme of the alert dialog.\n- $mdDialogPreset#targetEvent(DOMClickEvent=) - A click's event object. When passed in as an option,\n    the location of the click will be used as the starting point for the opening animation\n    of the the dialog.",
                "type": "Obj"
            },
            "class": "",
            "module": "material.components.dialog"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\dialog\\dialog.js",
            "line": 352,
            "ngdoc": "method",
            "name": "$mdDialog#confirm",
            "description": "Builds a preconfigured dialog with the specified message. You can call show and the promise returned\nwill be resolved only if the user clicks the confirm action on the dialog.",
            "return": {
                "description": "an `$mdDialogPreset` with the chainable configuration methods:\n\nAdditionally, it supports the following methods:\n\n- $mdDialogPreset#title(string) - Sets the confirm title.\n- $mdDialogPreset#textContent(string) - Sets the confirm message.\n- $mdDialogPreset#htmlContent(string) - Sets the confirm message as HTML. Requires ngSanitize\n    module to be loaded. HTML is not run through Angular's compiler.\n- $mdDialogPreset#ok(string) - Sets the confirm \"Okay\" button text.\n- $mdDialogPreset#cancel(string) - Sets the confirm \"Cancel\" button text.\n- $mdDialogPreset#theme(string) - Sets the theme of the confirm dialog.\n- $mdDialogPreset#targetEvent(DOMClickEvent=) - A click's event object. When passed in as an option,\n    the location of the click will be used as the starting point for the opening animation\n    of the the dialog.",
                "type": "Obj"
            },
            "class": "",
            "module": "material.components.dialog"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\dialog\\dialog.js",
            "line": 377,
            "ngdoc": "method",
            "name": "$mdDialog#show",
            "description": "Show a dialog with the specified options.",
            "params": [
                {
                    "name": "optionsOrPreset",
                    "description": "Either provide an `$mdDialogPreset` returned from `alert()`, and\n`confirm()`, or an options object with the following properties:\n  - `templateUrl` - `{string=}`: The url of a template that will be used as the content\n  of the dialog.\n  - `template` - `{string=}`: HTML template to show in the dialog. This **must** be trusted HTML\n     with respect to Angular's [$sce service](https://docs.angularjs.org/api/ng/service/$sce).\n     This template should **never** be constructed with any kind of user input or user data.\n  - `autoWrap` - `{boolean=}`: Whether or not to automatically wrap the template with a\n    `<md-dialog>` tag if one is not provided. Defaults to true. Can be disabled if you provide a\n    custom dialog directive.\n  - `targetEvent` - `{DOMClickEvent=}`: A click's event object. When passed in as an option,\n    the location of the click will be used as the starting point for the opening animation\n    of the the dialog.\n  - `openFrom` - `{string|Element|object}`: The query selector, DOM element or the Rect object\n    that is used to determine the bounds (top, left, height, width) from which the Dialog will\n    originate.\n  - `closeTo` - `{string|Element|object}`: The query selector, DOM element or the Rect object\n    that is used to determine the bounds (top, left, height, width) to which the Dialog will\n    target.\n  - `scope` - `{object=}`: the scope to link the template / controller to. If none is specified,\n    it will create a new isolate scope.\n    This scope will be destroyed when the dialog is removed unless `preserveScope` is set to true.\n  - `preserveScope` - `{boolean=}`: whether to preserve the scope when the element is removed. Default is false\n  - `disableParentScroll` - `{boolean=}`: Whether to disable scrolling while the dialog is open.\n    Default true.\n  - `hasBackdrop` - `{boolean=}`: Whether there should be an opaque backdrop behind the dialog.\n    Default true.\n  - `clickOutsideToClose` - `{boolean=}`: Whether the user can click outside the dialog to\n    close it. Default false.\n  - `escapeToClose` - `{boolean=}`: Whether the user can press escape to close the dialog.\n    Default true.\n  - `focusOnOpen` - `{boolean=}`: An option to override focus behavior on open. Only disable if\n    focusing some other way, as focus management is required for dialogs to be accessible.\n    Defaults to true.\n  - `controller` - `{function|string=}`: The controller to associate with the dialog. The controller\n    will be injected with the local `$mdDialog`, which passes along a scope for the dialog.\n  - `locals` - `{object=}`: An object containing key/value pairs. The keys will be used as names\n    of values to inject into the controller. For example, `locals: {three: 3}` would inject\n    `three` into the controller, with the value 3. If `bindToController` is true, they will be\n    copied to the controller instead.\n  - `bindToController` - `bool`: bind the locals to the controller, instead of passing them in.\n  - `resolve` - `{object=}`: Similar to locals, except it takes promises as values, and the\n    dialog will not open until all of the promises resolve.\n  - `controllerAs` - `{string=}`: An alias to assign the controller to on the scope.\n  - `parent` - `{element=}`: The element to append the dialog to. Defaults to appending\n    to the root element of the application.\n  - `onShowing` `{function=} Callback function used to announce the show() action is\n    starting.\n  - `onComplete` `{function=}`: Callback function used to announce when the show() action is\n    finished.\n  - `onRemoving` `{function=}`: Callback function used to announce the close/hide() action is\n    starting. This allows developers to run custom animations in parallel the close animations.\n  - `fullscreen` `{boolean=}`: An option to apply `.md-dialog-fullscreen` class on open.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "A promise that can be resolved with `$mdDialog.hide()` or\nrejected with `$mdDialog.cancel()`.",
                "type": "Promise"
            },
            "class": "",
            "module": "material.components.dialog"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\dialog\\dialog.js",
            "line": 441,
            "ngdoc": "method",
            "name": "$mdDialog#hide",
            "description": "Hide an existing dialog and resolve the promise returned from `$mdDialog.show()`.",
            "params": [
                {
                    "name": "response",
                    "description": "An argument for the resolved promise.",
                    "type": "*="
                }
            ],
            "return": {
                "description": "A promise that is resolved when the dialog has been closed.",
                "type": "Promise"
            },
            "class": "",
            "module": "material.components.dialog"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\dialog\\dialog.js",
            "line": 453,
            "ngdoc": "method",
            "name": "$mdDialog#cancel",
            "description": "Hide an existing dialog and reject the promise returned from `$mdDialog.show()`.",
            "params": [
                {
                    "name": "response",
                    "description": "An argument for the rejected promise.",
                    "type": "*="
                }
            ],
            "return": {
                "description": "A promise that is resolved when the dialog has been closed.",
                "type": "Promise"
            },
            "class": "",
            "module": "material.components.dialog"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\dialog\\dialog.js",
            "line": 546,
            "description": "The specified template should contain a <md-dialog> wrapper element....",
            "class": "",
            "module": "material.components.dialog"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\dialog\\dialog.js",
            "line": 575,
            "class": "",
            "module": "material.components.dialog"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\dialog\\dialog.js",
            "line": 591,
            "description": "Check to see if they used the deprecated .md-actions class and log a warning",
            "class": "",
            "module": "material.components.dialog"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\dialog\\dialog.js",
            "line": 602,
            "description": "For alerts, focus on content... otherwise focus on\nthe close button (or equivalent)",
            "class": "",
            "module": "material.components.dialog"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\dialog\\dialog.js",
            "line": 612,
            "description": "If no element with class dialog-close, try to find the last\nbutton child in md-actions and assume it is a close button.\n\nIf we find no actions at all, log a warning to the console.",
            "class": "",
            "module": "material.components.dialog"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\dialog\\dialog.js",
            "line": 629,
            "description": "Remove function for all dialogs",
            "class": "",
            "module": "material.components.dialog"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\dialog\\dialog.js",
            "line": 650,
            "description": "For normal closes, animate the removal.\nFor forced closes (like $destroy events), skip the animations",
            "class": "",
            "module": "material.components.dialog"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\dialog\\dialog.js",
            "line": 658,
            "description": "Detach the element",
            "class": "",
            "module": "material.components.dialog"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\dialog\\dialog.js",
            "line": 669,
            "description": "Capture originator/trigger/from/to element information (if available)\nand the parent container for the dialog; defaults to the $rootElement\nunless overridden in the options.parent",
            "class": "",
            "module": "material.components.dialog"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\dialog\\dialog.js",
            "line": 689,
            "description": "Identify the bounding RECT for the target element",
            "class": "",
            "module": "material.components.dialog"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\dialog\\dialog.js",
            "line": 712,
            "description": "If the specifier is a simple string selector, then query for\nthe DOM element.",
            "class": "",
            "module": "material.components.dialog"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\dialog\\dialog.js",
            "line": 729,
            "description": "Listen for escape keys and outside clicks to auto close",
            "class": "",
            "module": "material.components.dialog"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\dialog\\dialog.js",
            "line": 821,
            "description": "Show modal backdrop element...",
            "class": "",
            "module": "material.components.dialog"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\dialog\\dialog.js",
            "line": 837,
            "description": "Hide modal backdrop element...",
            "class": "",
            "module": "material.components.dialog"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\dialog\\dialog.js",
            "line": 855,
            "description": "Inject ARIA-specific attributes appropriate for Dialogs",
            "class": "",
            "module": "material.components.dialog"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\dialog\\dialog.js",
            "line": 909,
            "description": "Prevents screen reader interaction behind modal window\non swipe interfaces",
            "class": "",
            "module": "material.components.dialog"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\dialog\\dialog.js",
            "line": 926,
            "description": "Walk DOM to apply or remove aria-hidden on sibling nodes\nand parent sibling nodes",
            "class": "",
            "module": "material.components.dialog"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\dialog\\dialog.js",
            "line": 950,
            "description": "Ensure the dialog container fill-stretches to the viewport",
            "class": "",
            "module": "material.components.dialog"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\dialog\\dialog.js",
            "line": 966,
            "description": "Dialog open and pop-in animation",
            "class": "",
            "module": "material.components.dialog"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\dialog\\dialog.js",
            "line": 1015,
            "description": "Dialog close and pop-out animation",
            "class": "",
            "module": "material.components.dialog"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\dialog\\dialog.js",
            "line": 1022,
            "description": "Utility function to filter out raw DOM nodes",
            "class": "",
            "module": "material.components.dialog"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\divider\\divider.js",
            "line": 9,
            "ngdoc": "module",
            "name": "material.components.divider",
            "description": "Divider module!",
            "class": "",
            "module": "material.components.dialog"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\fabActions\\fabActions.js",
            "line": 12,
            "ngdoc": "module",
            "name": "material.components.fabActions",
            "class": "",
            "module": "material.components.divider"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\fabSpeedDial\\fabSpeedDial.js",
            "line": 310,
            "description": "The duration of the CSS animation in milliseconds.",
            "type": "{number}",
            "class": "",
            "module": "material.components.fabActions"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\fabSpeedDial\\fabSpeedDial.js",
            "line": 317,
            "ngdoc": "module",
            "name": "material.components.fabSpeedDial",
            "class": "",
            "module": "material.components.fabActions"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\fabToolbar\\fabToolbar.js",
            "line": 15,
            "ngdoc": "module",
            "name": "material.components.fabToolbar",
            "class": "",
            "module": "material.components.fabSpeedDial"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\fabTrigger\\fabTrigger.js",
            "line": 12,
            "ngdoc": "module",
            "name": "material.components.fabTrigger",
            "class": "",
            "module": "material.components.fabToolbar"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\gridList\\gridList.js",
            "line": 9,
            "ngdoc": "module",
            "name": "material.components.gridList",
            "class": "",
            "module": "material.components.fabSpeedDial"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\gridList\\gridList.js",
            "line": 125,
            "description": "Watches for changes in media, invalidating layout as necessary.",
            "class": "",
            "module": "material.components.gridList"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\gridList\\gridList.js",
            "line": 148,
            "description": "Performs grid layout if the provided mediaName matches the currently\nactive media type.",
            "class": "",
            "module": "material.components.gridList"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\gridList\\gridList.js",
            "line": 164,
            "description": "Invokes the layout engine, and uses its results to lay out our\ntile elements.",
            "params": [
                {
                    "name": "tilesInvalidated",
                    "description": "Whether tiles have been\n   added/removed/moved since the last layout. This is to avoid situations\n   where tiles are replaced with properties identical to their removed\n   counterparts.",
                    "type": "Boolean"
                }
            ],
            "class": "",
            "module": "material.components.gridList"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\gridList\\gridList.js",
            "line": 248,
            "description": "Gets the styles applied to a tile element described by the given parameters.",
            "params": [
                {
                    "name": "}",
                    "description": "position The row and column indices of the tile.",
                    "type": "Row: number, col: number"
                },
                {
                    "name": "}",
                    "description": "spans The rowSpan and colSpan of the tile.",
                    "type": "Row: number, col: number"
                },
                {
                    "name": "colCount",
                    "description": "The number of columns.",
                    "type": "Number"
                },
                {
                    "name": "rowCount",
                    "description": "The number of rows.",
                    "type": "Number"
                },
                {
                    "name": "gutter",
                    "description": "The amount of space between tiles. This will be something like\n    '5px' or '2em'.",
                    "type": "String"
                },
                {
                    "name": "rowMode",
                    "description": "The row height mode. Can be one of:\n    'fixed': all rows have a fixed size, given by rowHeight,\n    'ratio': row height defined as a ratio to width, or\n    'fit': fit to the grid-list element height, divinding evenly among rows.",
                    "type": "String"
                },
                {
                    "name": "rowHeight",
                    "description": "The height of a row. This is only used for 'fixed' mode and\n    for 'ratio' mode. For 'ratio' mode, this is the *ratio* of width-to-height (e.g., 0.75).",
                    "type": "String|number"
                }
            ],
            "return": {
                "description": "Map of CSS properties to be applied to the style element. Will define\n    values for top, left, width, height, marginTop, and paddingTop.",
                "type": "Object"
            },
            "class": "",
            "module": "material.components.gridList"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\gridList\\gridList.js",
            "line": 363,
            "description": "Gets an array of objects containing the rowspan and colspan for each tile.",
            "return": {
                "description": ">}",
                "type": "Array<row: number, col: number"
            },
            "class": "",
            "module": "material.components.gridList"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\gridList\\gridList.js",
            "line": 460,
            "description": "Set the reflow animator callback",
            "class": "",
            "module": "material.components.gridList"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\gridList\\gridList.js",
            "line": 469,
            "description": "Publish layout function",
            "class": "",
            "module": "material.components.gridList"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\gridList\\gridList.js",
            "line": 481,
            "description": "An array of objects describing each tile's position in the grid.",
            "class": "",
            "module": "material.components.gridList"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\gridList\\gridList.js",
            "line": 488,
            "description": "Maps grid positioning to an element and a set of styles using the\nprovided updateFn.",
            "class": "",
            "module": "material.components.gridList"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\gridList\\gridList.js",
            "line": 500,
            "description": "Default animator simply sets the element.css( <styles> ). An alternate\nanimator can be provided as an argument. The function has the following\nsignature:\n\n   function({grid: {element: JQLite, style: Object}, tiles: Array<{element: JQLite, style: Object}>)",
            "class": "",
            "module": "material.components.gridList"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\gridList\\gridList.js",
            "line": 515,
            "description": "Timing for the most recent layout run.",
            "class": "",
            "module": "material.components.gridList"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\gridList\\gridList.js",
            "line": 530,
            "description": "Default Gridlist animator simple sets the css for each element;\nNOTE: any transitions effects must be manually set in the CSS.\ne.g.\n\n md-grid-tile {\n   transition: all 700ms ease-out 50ms;\n }",
            "class": "",
            "module": "material.components.gridList"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\gridList\\gridList.js",
            "line": 547,
            "description": "Calculates the positions of tiles.\n\nThe algorithm works as follows:\n   An Array<Number> with length colCount (spaceTracker) keeps track of\n   available tiling positions, where elements of value 0 represents an\n   empty position. Space for a tile is reserved by finding a sequence of\n   0s with length <= than the tile's colspan. When such a space has been\n   found, the occupied tile positions are incremented by the tile's\n   rowspan value, as these positions have become unavailable for that\n   many rows.\n\n   If the end of a row has been reached without finding space for the\n   tile, spaceTracker's elements are each decremented by 1 to a minimum\n   of 0. Rows are searched in this fashion until space is found.",
            "class": "",
            "module": "material.components.gridList"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\icon\\icon.js",
            "line": 9,
            "ngdoc": "module",
            "name": "material.components.icon",
            "description": "Icon",
            "class": "",
            "module": "material.components.gridList"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\icon\\icon.js",
            "line": 197,
            "description": "Directive postLink\nSupports embedded SVGs, font-icons, & external SVGs",
            "class": "",
            "module": "material.components.icon"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\icon\\icon.js",
            "line": 330,
            "ngdoc": "method",
            "name": "$mdIconProvider#icon",
            "description": "Register a source URL for a specific icon name; the name may include optional 'icon set' name prefix.\nThese icons  will later be retrieved from the cache using `$mdIcon( <icon name> )`",
            "params": [
                {
                    "name": "id",
                    "description": "Icon name/id used to register the icon",
                    "type": "String"
                },
                {
                    "name": "url",
                    "description": "specifies the external location for the data file. Used internally by `$http` to load the\ndata or as part of the lookup in `$templateCache` if pre-loading was configured.",
                    "type": "String"
                },
                {
                    "name": "viewBoxSize",
                    "description": "Sets the width and height the icon's viewBox.\nIt is ignored for icons with an existing viewBox. Default size is 24.",
                    "type": "Number="
                }
            ],
            "return": {
                "description": "an `$mdIconProvider` reference; used to support method call chains for the API",
                "type": "Obj"
            },
            "usage": "<hljs lang=\"js\">\n  app.config(function($mdIconProvider) {\n\n    // Configure URLs for icons specified by [set:]id.\n\n    $mdIconProvider\n         .icon('android', 'my/app/android.svg')    // Register a specific icon (by name)\n         .icon('work:chair', 'my/app/chair.svg');  // Register icon in a specific set\n  });\n</hljs>",
            "class": "",
            "module": "material.components.icon"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\icon\\icon.js",
            "line": 359,
            "ngdoc": "method",
            "name": "$mdIconProvider#iconSet",
            "description": "Register a source URL for a 'named' set of icons; group of SVG definitions where each definition\nhas an icon id. Individual icons can be subsequently retrieved from this cached set using\n`$mdIcon(<icon set name>:<icon name>)`",
            "params": [
                {
                    "name": "id",
                    "description": "Icon name/id used to register the iconset",
                    "type": "String"
                },
                {
                    "name": "url",
                    "description": "specifies the external location for the data file. Used internally by `$http` to load the\ndata or as part of the lookup in `$templateCache` if pre-loading was configured.",
                    "type": "String"
                },
                {
                    "name": "viewBoxSize",
                    "description": "Sets the width and height of the viewBox of all icons in the set. \nIt is ignored for icons with an existing viewBox. All icons in the icon set should be the same size.\nDefault value is 24.",
                    "type": "Number="
                }
            ],
            "return": {
                "description": "an `$mdIconProvider` reference; used to support method call chains for the API",
                "type": "Obj"
            },
            "usage": "<hljs lang=\"js\">\n  app.config(function($mdIconProvider) {\n\n    // Configure URLs for icons specified by [set:]id.\n\n    $mdIconProvider\n         .iconSet('social', 'my/app/social.svg')   // Register a named icon set\n  });\n</hljs>",
            "class": "",
            "module": "material.components.icon"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\icon\\icon.js",
            "line": 390,
            "ngdoc": "method",
            "name": "$mdIconProvider#defaultIconSet",
            "description": "Register a source URL for the default 'named' set of icons. Unless explicitly registered,\nsubsequent lookups of icons will failover to search this 'default' icon set.\nIcon can be retrieved from this cached, default set using `$mdIcon(<name>)`",
            "params": [
                {
                    "name": "url",
                    "description": "specifies the external location for the data file. Used internally by `$http` to load the\ndata or as part of the lookup in `$templateCache` if pre-loading was configured.",
                    "type": "String"
                },
                {
                    "name": "viewBoxSize",
                    "description": "Sets the width and height of the viewBox of all icons in the set. \nIt is ignored for icons with an existing viewBox. All icons in the icon set should be the same size.\nDefault value is 24.",
                    "type": "Number="
                }
            ],
            "return": {
                "description": "an `$mdIconProvider` reference; used to support method call chains for the API",
                "type": "Obj"
            },
            "usage": "<hljs lang=\"js\">\n  app.config(function($mdIconProvider) {\n\n    // Configure URLs for icons specified by [set:]id.\n\n    $mdIconProvider\n         .defaultIconSet( 'my/app/social.svg' )   // Register a default icon set\n  });\n</hljs>",
            "class": "",
            "module": "material.components.icon"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\icon\\icon.js",
            "line": 419,
            "ngdoc": "method",
            "name": "$mdIconProvider#defaultFontSet",
            "description": "When using Font-Icons, Angular Material assumes the the Material Design icons will be used and automatically\nconfigures the default font-set == 'material-icons'. Note that the font-set references the font-icon library\nclass style that should be applied to the `<md-icon>`.\n\nConfiguring the default means that the attributes\n`md-font-set=\"material-icons\"` or `class=\"material-icons\"` do not need to be explicitly declared on the\n`<md-icon>` markup. For example:\n\n `<md-icon> face </md-icon>`\n will render as\n `<span class=\"material-icons\"> face </span>`, and\n\n `<md-icon md-font-set=\"fa\"> face </md-icon>`\n will render as\n `<span class=\"fa\"> face </span>`",
            "params": [
                {
                    "name": "name",
                    "description": "of the font-library style that should be applied to the md-icon DOM element",
                    "type": "String"
                }
            ],
            "usage": "<hljs lang=\"js\">\n  app.config(function($mdIconProvider) {\n    $mdIconProvider.defaultFontSet( 'fontawesome' );\n  });\n</hljs>",
            "class": "",
            "module": "material.components.icon"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\icon\\icon.js",
            "line": 451,
            "ngdoc": "method",
            "name": "$mdIconProvider#defaultViewBoxSize",
            "description": "While `<md-icon />` markup can also be style with sizing CSS, this method configures\nthe default width **and** height used for all icons; unless overridden by specific CSS.\nThe default sizing is (24px, 24px).",
            "params": [
                {
                    "name": "viewBoxSize",
                    "description": "Sets the width and height of the viewBox for an icon or an icon set.\nAll icons in a set should be the same size. The default value is 24.",
                    "type": "Number="
                }
            ],
            "return": {
                "description": "an `$mdIconProvider` reference; used to support method call chains for the API",
                "type": "Obj"
            },
            "usage": "<hljs lang=\"js\">\n  app.config(function($mdIconProvider) {\n\n    // Configure URLs for icons specified by [set:]id.\n\n    $mdIconProvider\n         .defaultViewBoxSize(36)   // Register a default icon size (width == height)\n  });\n</hljs>",
            "class": "",
            "module": "material.components.icon"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\icon\\icon.js",
            "line": 515,
            "description": "Register an alias name associated with a font-icon library style ;",
            "class": "",
            "module": "material.components.icon"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\icon\\icon.js",
            "line": 526,
            "description": "Specify a default style name associated with a font-icon library\nfallback to Material Icons.",
            "class": "",
            "module": "material.components.icon"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\icon\\icon.js",
            "line": 589,
            "description": "Configuration item stored in the Icon registry; used for lookups\nto load if not already cached in the `loaded` cache",
            "class": "",
            "module": "material.components.icon"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\icon\\icon.js",
            "line": 650,
            "description": "Actual $mdIcon service is essentially a lookup function",
            "class": "",
            "module": "material.components.icon"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\icon\\icon.js",
            "line": 668,
            "description": "Lookup registered fontSet style using its alias...\nIf not found,",
            "class": "",
            "module": "material.components.icon"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\icon\\icon.js",
            "line": 684,
            "description": "Prepare and cache the loaded icon for the specified `id`",
            "class": "",
            "module": "material.components.icon"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\icon\\icon.js",
            "line": 696,
            "description": "Lookup the configuration in the registry, if !registered throw an error\notherwise load the icon [on-demand] using the registered URL.",
            "class": "",
            "module": "material.components.icon"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\icon\\icon.js",
            "line": 708,
            "description": "Loads the file as XML and uses querySelector( <id> ) to find\nthe desired node...",
            "class": "",
            "module": "material.components.icon"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\icon\\icon.js",
            "line": 732,
            "description": "Load the icon by URL (may use the $templateCache).\nExtract the data for later conversion to Icon",
            "class": "",
            "module": "material.components.icon"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\icon\\icon.js",
            "line": 744,
            "description": "Catch HTTP or generic errors not related to incorrect icon IDs.",
            "class": "",
            "module": "material.components.icon"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\icon\\icon.js",
            "line": 754,
            "description": "Check target signature to see if it is an Icon instance.",
            "class": "",
            "module": "material.components.icon"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\icon\\icon.js",
            "line": 761,
            "description": "Define the Icon class",
            "class": "",
            "module": "material.components.icon"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\icon\\icon.js",
            "line": 779,
            "description": "Prepare the DOM element that will be cached in the\nloaded iconCache store.",
            "class": "",
            "module": "material.components.icon"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\icon\\icon.js",
            "line": 796,
            "description": "Clone the Icon DOM element.",
            "class": "",
            "module": "material.components.icon"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\input\\input.js",
            "line": 9,
            "ngdoc": "module",
            "name": "material.components.input",
            "class": "",
            "module": "material.components.icon"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\input\\input.js",
            "line": 331,
            "class": "",
            "module": "material.components.input"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\list\\list.js",
            "line": 9,
            "ngdoc": "module",
            "name": "material.components.list",
            "description": "List module",
            "class": "",
            "module": "material.components.input"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\menu\\menu.js",
            "line": 10,
            "ngdoc": "module",
            "name": "material.components.menu",
            "class": "",
            "module": "material.components.list"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\menu\\menu.js",
            "line": 26,
            "description": "ngInject",
            "class": "",
            "module": "material.components.list"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\menu\\menu.js",
            "line": 37,
            "description": "Called by our linking fn to provide access to the menu-content\nelement removed during link",
            "class": "",
            "module": "material.components.list"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\menu\\menu.js",
            "line": 126,
            "description": "Uses the $mdMenu interim element service to open the menu contents",
            "class": "",
            "module": "material.components.list"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\menu\\menu.js",
            "line": 203,
            "description": "Build a nice object out of our string attribute which specifies the\ntarget mode for left and top positioning",
            "class": "",
            "module": "material.components.list"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\menu\\menu.js",
            "line": 222,
            "description": "Build a nice object out of our string attribute which specifies\nthe offset of top and left in pixels.",
            "class": "",
            "module": "material.components.list"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\menu\\menu.js",
            "line": 391,
            "description": "ngInject",
            "class": "",
            "module": "material.components.menu"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\menu\\menu.js",
            "line": 502,
            "description": "Show modal backdrop element...",
            "return": {
                "description": "A function that removes this backdrop",
                "type": "Function(): void"
            },
            "class": "",
            "module": "material.components.menu"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\menu\\menu.js",
            "line": 524,
            "description": "Hide and destroys the backdrop created by showBackdrop()",
            "class": "",
            "module": "material.components.menu"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\menu\\menu.js",
            "line": 533,
            "description": "Removing the menu element from the DOM and remove all associated event listeners\nand backdrop",
            "class": "",
            "module": "material.components.menu"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\menu\\menu.js",
            "line": 547,
            "description": "For normal closes, animate the removal.\nFor forced closes (like $destroy events), skip the animations",
            "class": "",
            "module": "material.components.menu"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\menu\\menu.js",
            "line": 555,
            "description": "Detach the element",
            "class": "",
            "module": "material.components.menu"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\menu\\menu.js",
            "line": 566,
            "description": "Inserts and configures the staged Menu element into the DOM, positioning it,\nand wiring up various interaction events",
            "class": "",
            "module": "material.components.menu"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\menu\\menu.js",
            "line": 588,
            "description": "Place the menu into the DOM and call positioning related functions",
            "class": "",
            "module": "material.components.menu"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\menu\\menu.js",
            "line": 613,
            "description": "Check for valid opts and set some sane defaults",
            "class": "",
            "module": "material.components.menu"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\menu\\menu.js",
            "line": 631,
            "description": "Configure various resize listeners for screen changes",
            "class": "",
            "module": "material.components.menu"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\menu\\menu.js",
            "line": 657,
            "description": "Activate interaction on the menu. Wire up keyboard listerns for\nclicks, keypresses, backdrop closing, etc.",
            "class": "",
            "module": "material.components.menu"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\menu\\menu.js",
            "line": 793,
            "description": "Takes a keypress event and focuses the next/previous menu\nitem from the emitting element",
            "params": [
                {
                    "name": "e",
                    "description": "- The origin keypress event",
                    "type": "Event"
                },
                {
                    "name": "menuEl",
                    "description": "- The menu element",
                    "type": "angular.element"
                },
                {
                    "name": "opts",
                    "description": "- The interim element options for the mdMenu",
                    "type": "Object"
                },
                {
                    "name": "direction",
                    "description": "- The direction to move in (+1 = next, -1 = prev)",
                    "type": "Number"
                }
            ],
            "class": "",
            "module": "material.components.menu"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\menu\\menu.js",
            "line": 820,
            "description": "Attempts to focus an element. Checks whether that element is the currently\nfocused element after attempting.",
            "params": [
                {
                    "name": "el",
                    "description": "- the element to attempt focus on",
                    "type": "HTMLElement"
                }
            ],
            "return": {
                "description": "- whether the element was successfully focused",
                "type": "Bool"
            },
            "class": "",
            "module": "material.components.menu"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\menu\\menu.js",
            "line": 833,
            "description": "Use browser to remove this element without triggering a $destroy event",
            "class": "",
            "module": "material.components.menu"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\menu\\menu.js",
            "line": 846,
            "description": "Computes menu position and sets the style on the menu container",
            "params": [
                {
                    "name": "el",
                    "description": "- the menu container element",
                    "type": "HTMLElement"
                },
                {
                    "name": "opts",
                    "description": "- the interim element options object",
                    "type": "Object"
                }
            ],
            "class": "",
            "module": "material.components.menu"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\menu\\menu.js",
            "line": 945,
            "description": "Clamps the repositioning of the menu within the confines of\nbounding element (often the screen/body)",
            "class": "",
            "module": "material.components.menu"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\menu\\menu.js",
            "line": 954,
            "description": "Gets the first visible child in the openMenuNode\nNecessary incase menu nodes are being dynamically hidden",
            "class": "",
            "module": "material.components.menu"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\menuBar\\menuBar.js",
            "line": 10,
            "ngdoc": "module",
            "name": "material.components.menu-bar",
            "class": "",
            "module": "material.components.menu"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\menuBar\\menuBar.js",
            "line": 27,
            "description": "ngInject",
            "class": "",
            "module": "material.components.menu"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\menuBar\\menuBar.js",
            "line": 362,
            "nginjdect": "",
            "class": "",
            "module": "material.components.menu-bar"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\menuBar\\menuBar.js",
            "line": 426,
            "description": "ngInject",
            "class": "",
            "module": "material.components.menu-bar"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\menuBar\\menuBar.js",
            "line": 531,
            "nginjdect": "",
            "class": "",
            "module": "material.components.menu-bar"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\progressCircular\\progressCircular.js",
            "line": 9,
            "ngdoc": "module",
            "name": "material.components.progressCircular",
            "description": "Circular Progress module!",
            "class": "",
            "module": "material.components.menu-bar"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\progressCircular\\progressCircular.js",
            "line": 114,
            "description": "Watch the value and md-mode attributes",
            "class": "",
            "module": "material.components.progressCircular"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\progressCircular\\progressCircular.js",
            "line": 143,
            "description": "Update size/scaling of the progress indicator\nWatch the \"value\" and \"md-mode\" attributes",
            "class": "",
            "module": "material.components.progressCircular"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\progressCircular\\progressCircular.js",
            "line": 159,
            "description": "Auto-defaults the mode to either `determinate` or `indeterminate` mode; if not specified",
            "class": "",
            "module": "material.components.progressCircular"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\progressCircular\\progressCircular.js",
            "line": 177,
            "description": "Manually animate the Determinate indicator based on the specified\npercentage value (0-100).\n\nNote: this animation was previously done using SCSS.\n- generated 54K of styles\n- use attribute selectors which had poor performances in IE",
            "class": "",
            "module": "material.components.progressCircular"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\progressCircular\\progressCircular.js",
            "line": 211,
            "description": "We will scale the progress circle based on the default diameter.\n\nDetermine the diameter percentage (defaults to 100%)\nMay be express as float, percentage, or integer",
            "class": "",
            "module": "material.components.progressCircular"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\progressCircular\\progressCircular.js",
            "line": 227,
            "description": "Is the md-mode a valid option?",
            "class": "",
            "module": "material.components.progressCircular"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\progressCircular\\progressCircular.js",
            "line": 247,
            "description": "Clamps the value to be between 0 and 100.",
            "params": [
                {
                    "name": "value",
                    "description": "The value to clamp.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "",
            "module": "material.components.progressCircular"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\progressLinear\\progressLinear.js",
            "line": 9,
            "ngdoc": "module",
            "name": "material.components.progressLinear",
            "description": "Linear Progress module!",
            "class": "",
            "module": "material.components.progressCircular"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\progressLinear\\progressLinear.js",
            "line": 103,
            "description": "Watch the value, md-buffer-value, and md-mode attributes",
            "class": "",
            "module": "material.components.progressLinear"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\progressLinear\\progressLinear.js",
            "line": 136,
            "description": "Auto-defaults the mode to either `determinate` or `indeterminate` mode; if not specified",
            "class": "",
            "module": "material.components.progressLinear"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\progressLinear\\progressLinear.js",
            "line": 152,
            "description": "Is the md-mode a valid option?",
            "class": "",
            "module": "material.components.progressLinear"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\progressLinear\\progressLinear.js",
            "line": 172,
            "description": "Manually set CSS to animate the Determinate indicator based on the specified\npercentage value (0-100).",
            "class": "",
            "module": "material.components.progressLinear"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\progressLinear\\progressLinear.js",
            "line": 185,
            "description": "Clamps the value to be between 0 and 100.",
            "params": [
                {
                    "name": "value",
                    "description": "The value to clamp.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "",
            "module": "material.components.progressLinear"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\radioButton\\radioButton.js",
            "line": 9,
            "ngdoc": "module",
            "name": "material.components.radioButton",
            "description": "radioButton module!",
            "class": "",
            "module": "material.components.progressLinear"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\radioButton\\radioButton.js",
            "line": 94,
            "class": "",
            "module": "material.components.radioButton"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\radioButton\\radioButton.js",
            "line": 101,
            "class": "",
            "module": "material.components.radioButton"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\radioButton\\radioButton.js",
            "line": 186,
            "description": "Change the radio group's selected button by a given increment.\nIf no button is selected, select the first button.",
            "class": "",
            "module": "material.components.radioButton"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\radioButton\\radioButton.js",
            "line": 275,
            "class": "",
            "module": "material.components.radioButton"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\radioButton\\radioButton.js",
            "line": 293,
            "class": "",
            "module": "material.components.radioButton"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\radioButton\\radioButton.js",
            "line": 304,
            "description": "Add or remove the `.md-checked` class from the RadioButton (and conditionally its parent).\nUpdate the `aria-activedescendant` attribute.",
            "class": "",
            "module": "material.components.radioButton"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\radioButton\\radioButton.js",
            "line": 328,
            "description": "If the radioButton is inside a div, then add class so highlighting will work...",
            "class": "",
            "module": "material.components.radioButton"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\radioButton\\radioButton.js",
            "line": 339,
            "description": "Inject ARIA-specific attributes appropriate for each radio button",
            "class": "",
            "module": "material.components.radioButton"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\radioButton\\radioButton.js",
            "line": 353,
            "description": "Build a unique ID for each radio button that will be used with aria-activedescendant.\nPreserve existing ID if already specified.",
            "return": {
                "description": "",
                "type": "*|string"
            },
            "class": "",
            "module": "material.components.radioButton"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\select\\select.js",
            "line": 10,
            "ngdoc": "module",
            "name": "material.components.select",
            "class": "",
            "module": "material.components.radioButton"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\select\\select.js",
            "line": 15,
            "description": "### TODO - POST RC1 ###\n - [ ] Abstract placement logic in $mdSelect service to $mdMenu service",
            "class": "",
            "module": "material.components.radioButton"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\select\\select.js",
            "line": 920,
            "description": "Interim-element onRemove logic....",
            "class": "",
            "module": "material.components.select"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\select\\select.js",
            "line": 934,
            "description": "For normal closes (eg clicks), animate the removal.\nFor forced closes (like $destroy events from navigation),\nskip the animations",
            "class": "",
            "module": "material.components.select"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\select\\select.js",
            "line": 943,
            "description": "Restore the element to a closed state",
            "class": "",
            "module": "material.components.select"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\select\\select.js",
            "line": 961,
            "description": "Interim-element onShow logic....",
            "class": "",
            "module": "material.components.select"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\select\\select.js",
            "line": 985,
            "description": "Attach the select DOM element(s) and animate to the correct positions\nand scalings...",
            "class": "",
            "module": "material.components.select"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\select\\select.js",
            "line": 1008,
            "description": "Initialize container and dropDown menu positions/scale, then animate\nto show... and autoFocus.",
            "class": "",
            "module": "material.components.select"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\select\\select.js",
            "line": 1032,
            "description": "Show modal backdrop element...",
            "class": "",
            "module": "material.components.select"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\select\\select.js",
            "line": 1052,
            "description": "Hide modal backdrop element...",
            "class": "",
            "module": "material.components.select"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\select\\select.js",
            "line": 1063,
            "class": "",
            "module": "material.components.select"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\select\\select.js",
            "line": 1072,
            "description": "Check for valid opts and set some sane defaults",
            "class": "",
            "module": "material.components.select"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\select\\select.js",
            "line": 1092,
            "description": "Configure various resize listeners for screen changes",
            "class": "",
            "module": "material.components.select"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\select\\select.js",
            "line": 1124,
            "description": "If asynchronously loading, watch and update internal\n'$$loadingAsyncDone' flag",
            "class": "",
            "module": "material.components.select"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\select\\select.js",
            "line": 1144,
            "class": "",
            "module": "material.components.select"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\select\\select.js",
            "line": 1267,
            "description": "check if the mouseup event was on a scrollbar",
            "class": "",
            "module": "material.components.select"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\select\\select.js",
            "line": 1288,
            "description": "To notify listeners that the Select menu has closed,\ntrigger the [optional] user-defined expression",
            "class": "",
            "module": "material.components.select"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\select\\select.js",
            "line": 1302,
            "description": "Calculate the",
            "class": "",
            "module": "material.components.select"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\showHide\\showHide.js",
            "line": 9,
            "ngdoc": "module",
            "name": "material.components.showHide",
            "class": "",
            "module": "material.components.select"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\sidenav\\sidenav.js",
            "line": 10,
            "ngdoc": "module",
            "name": "material.components.sidenav",
            "description": "A Sidenav QP component.",
            "class": "",
            "module": "material.components.select"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\sidenav\\sidenav.js",
            "line": 109,
            "description": "Deferred lookup of component instance using $component registry",
            "class": "",
            "module": "material.components.sidenav"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\sidenav\\sidenav.js",
            "line": 235,
            "description": "Directive Post Link function...",
            "class": "",
            "module": "material.components.sidenav"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\sidenav\\sidenav.js",
            "line": 273,
            "description": "Toggle the DOM classes to indicate `locked`",
            "params": [
                {
                    "name": "isLocked",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.sidenav"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\sidenav\\sidenav.js",
            "line": 287,
            "description": "Toggle the SideNav view and attach/detach listeners",
            "params": [
                {
                    "name": "isOpen",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.sidenav"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\sidenav\\sidenav.js",
            "line": 318,
            "description": "Prevent parent scrolling (when the SideNav is open)",
            "class": "",
            "module": "material.components.sidenav"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\sidenav\\sidenav.js",
            "line": 336,
            "description": "Toggle the sideNav view and publish a promise to be resolved when\nthe view animation finishes.",
            "params": [
                {
                    "name": "isOpen",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "",
            "module": "material.components.sidenav"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\sidenav\\sidenav.js",
            "line": 372,
            "description": "Auto-close sideNav when the `escape` key is pressed.",
            "params": [
                {
                    "name": "evt",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.sidenav"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\sidenav\\sidenav.js",
            "line": 381,
            "description": "With backdrop `clicks` or `escape` key-press, immediately\napply the CSS close transition... Then notify the controller\nto close() and perform its own actions.",
            "class": "",
            "module": "material.components.sidenav"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\slider\\slider.js",
            "line": 9,
            "ngdoc": "module",
            "name": "material.components.slider",
            "class": "",
            "module": "material.components.sidenav"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\slider\\slider.js",
            "line": 166,
            "description": "Attributes",
            "class": "",
            "module": "material.components.slider"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\slider\\slider.js",
            "line": 226,
            "description": "Refreshing Dimensions",
            "class": "",
            "module": "material.components.slider"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\slider\\slider.js",
            "line": 239,
            "description": "left/right arrow listener",
            "class": "",
            "module": "material.components.slider"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\slider\\slider.js",
            "line": 265,
            "description": "ngModel setters and validators",
            "class": "",
            "module": "material.components.slider"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\slider\\slider.js",
            "line": 296,
            "params": [
                {
                    "name": "percent",
                    "description": "0-1"
                }
            ],
            "class": "",
            "module": "material.components.slider"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\slider\\slider.js",
            "line": 313,
            "description": "Slide listeners",
            "class": "",
            "module": "material.components.slider"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\slider\\slider.js",
            "line": 371,
            "description": "Slide the UI by changing the model value",
            "params": [
                {
                    "name": "x",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.slider"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\slider\\slider.js",
            "line": 381,
            "description": "Slide the UI without changing the model (while dragging/panning)",
            "params": [
                {
                    "name": "x",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.slider"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\slider\\slider.js",
            "line": 392,
            "description": "Clamps the value to be between 0 and 1.",
            "params": [
                {
                    "name": "value",
                    "description": "The value to clamp.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "",
            "module": "material.components.slider"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\slider\\slider.js",
            "line": 401,
            "description": "Convert horizontal position on slider to percentage value of offset from beginning...",
            "params": [
                {
                    "name": "x",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "",
            "module": "material.components.slider"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\slider\\slider.js",
            "line": 410,
            "description": "Convert percentage offset on slide to equivalent model value",
            "params": [
                {
                    "name": "percent",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "",
            "module": "material.components.slider"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\sticky\\sticky.js",
            "line": 10,
            "ngdoc": "module",
            "name": "material.components.sticky",
            "description": "Sticky effects for md",
            "class": "",
            "module": "material.components.slider"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\sticky\\sticky.js",
            "line": 84,
            "description": "Registers an element as sticky, used internally by directives to register themselves",
            "class": "",
            "module": "material.components.sticky"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\sticky\\sticky.js",
            "line": 135,
            "description": "Public",
            "class": "",
            "module": "material.components.sticky"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\sticky\\sticky.js",
            "line": 187,
            "description": "Private",
            "class": "",
            "module": "material.components.sticky"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\subheader\\subheader.js",
            "line": 10,
            "ngdoc": "module",
            "name": "material.components.subheader",
            "description": "SubHeader module\n\n Subheaders are special list tiles that delineate distinct sections of a\n list or grid list and are typically related to the current filtering or\n sorting criteria. Subheader tiles are either displayed inline with tiles or\n can be associated with content, for example, in an adjacent column.\n\n Upon scrolling, subheaders remain pinned to the top of the screen and remain\n pinned until pushed on or off screen by the next subheader. @see [Material\n Design Specifications](https://www.google.com/design/spec/components/subheaders.html)\n\n > To improve the visual grouping of content, use the system color for your subheaders.",
            "class": "",
            "module": "material.components.sticky"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\swipe\\swipe.js",
            "line": 9,
            "ngdoc": "module",
            "name": "material.components.swipe",
            "description": "Swipe module!",
            "class": "",
            "module": "material.components.subheader"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\switch\\switch.js",
            "line": 10,
            "access": "private",
            "tagname": "",
            "ngdoc": "module",
            "name": "material.components.switch",
            "class": "",
            "module": "material.components.swipe"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js",
            "line": 10,
            "ngdoc": "module",
            "name": "material.components.tabs",
            "description": "Tabs, created with the `<md-tabs>` directive provide *tabbed* navigation with different styles.\n The Tabs component consists of clickable tabs that are aligned horizontally side-by-side.\n\n Features include support for:\n\n - static or dynamic tabs,\n - responsive designs,\n - accessibility support (ARIA),\n - tab pagination,\n - external or internal tab content,\n - focus indicators and arrow-key navigations,\n - programmatic lookup and access to tab controllers, and\n - dynamic transitions through different tab contents.",
            "class": "",
            "module": "material.components.switch"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js",
            "line": 212,
            "description": "ngInject",
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js",
            "line": 275,
            "description": "Perform initialization for the controller, setup events and watcher(s)",
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js",
            "line": 294,
            "description": "Compiles the template provided by the user.  This is passed as an attribute from the tabs\ndirective's template function.",
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js",
            "line": 306,
            "description": "Binds events used by the tabs component.",
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js",
            "line": 314,
            "description": "Configure watcher(s) used by Tabs",
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js",
            "line": 321,
            "description": "Creates a one-way binding manually rather than relying on Angular's isolated scope",
            "params": [
                {
                    "name": "key",
                    "description": ""
                },
                {
                    "name": "handler",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js",
            "line": 332,
            "description": "Defines boolean attributes with default value set to true.  (ie. md-stretch-tabs with no value\nwill be treated as being truthy)",
            "params": [
                {
                    "name": "key",
                    "description": ""
                },
                {
                    "name": "handler",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js",
            "line": 348,
            "description": "Remove any events defined by this controller",
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js",
            "line": 358,
            "description": "Toggles stretch tabs class and updates inkbar when tab stretching changes",
            "params": [
                {
                    "name": "stretchTabs",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js",
            "line": 391,
            "description": "Add/remove the `md-no-tab-content` class depending on `ctrl.hasContent`",
            "params": [
                {
                    "name": "hasContent",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js",
            "line": 399,
            "description": "Apply ctrl.offsetLeft to the paging element when it changes",
            "params": [
                {
                    "name": "left",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js",
            "line": 409,
            "description": "Update the UI whenever `ctrl.focusIndex` is updated",
            "params": [
                {
                    "name": "newIndex",
                    "description": ""
                },
                {
                    "name": "oldIndex",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js",
            "line": 421,
            "description": "Update the UI whenever the selected index changes. Calls user-defined select/deselect methods.",
            "params": [
                {
                    "name": "newValue",
                    "description": ""
                },
                {
                    "name": "oldValue",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js",
            "line": 444,
            "description": "Queues up a call to `handleWindowResize` when a resize occurs while the tabs component is\nhidden.",
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js",
            "line": 470,
            "description": "Handle user keyboard interactions",
            "params": [
                {
                    "name": "event",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js",
            "line": 493,
            "description": "Update the selected index and trigger a click event on the original `md-tab` element in order\nto fire user-added click events.",
            "params": [
                {
                    "name": "index",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js",
            "line": 507,
            "description": "When pagination is on, this makes sure the selected index is in view.",
            "params": [
                {
                    "name": "event",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js",
            "line": 517,
            "description": "Slides the tabs over approximately one page forward.",
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js",
            "line": 531,
            "description": "Slides the tabs over approximately one page backward.",
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js",
            "line": 543,
            "description": "Update size calculations when the window is resized.",
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js",
            "line": 559,
            "description": "Toggle dynamic height class when value changes",
            "params": [
                {
                    "name": "value",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js",
            "line": 567,
            "description": "Remove a tab from the data and select the nearest valid tab.",
            "params": [
                {
                    "name": "tabData",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js",
            "line": 588,
            "description": "Create an entry in the tabs array for a new tab at the specified index.",
            "params": [
                {
                    "name": "tabData",
                    "description": ""
                },
                {
                    "name": "index",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js",
            "line": 628,
            "description": "Gathers references to all of the DOM elements used by this controller.",
            "return": {
                "description": "}"
            },
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js",
            "line": 651,
            "description": "Determines whether or not the left pagination arrow should be enabled.",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js",
            "line": 659,
            "description": "Determines whether or not the right pagination arrow should be enabled.",
            "return": {
                "description": "",
                "type": "*|boolean"
            },
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js",
            "line": 669,
            "description": "Determines if the UI should stretch the tabs to fill the available space.",
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js",
            "line": 685,
            "description": "Determines if the tabs should appear centered.",
            "return": {
                "description": "",
                "type": "String|boolean"
            },
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js",
            "line": 693,
            "description": "Determines if pagination is necessary to display the tabs within the available space.",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js",
            "line": 704,
            "description": "Finds the nearest tab index that is available.  This is primarily used for when the active\ntab is removed.",
            "params": [
                {
                    "name": "newIndex",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js",
            "line": 725,
            "description": "Defines a property using a getter and setter in order to trigger a change handler without\nusing `$watch` to observe changes.",
            "params": [
                {
                    "name": "key",
                    "description": ""
                },
                {
                    "name": "handler",
                    "description": ""
                },
                {
                    "name": "value",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js",
            "line": 743,
            "description": "Updates whether or not pagination should be displayed.",
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js",
            "line": 768,
            "description": "Re-orders the tabs and updates the selected and focus indexes to their new positions.\nThis is triggered by `tabDirective.js` when the user's tabs have been re-ordered.",
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js",
            "line": 782,
            "description": "This moves the selected or focus index left or right.  This is used by the keydown handler.",
            "params": [
                {
                    "name": "inc",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js",
            "line": 798,
            "description": "This is used to forward focus to dummy elements.  This method is necessary to avoid animation\nissues when attempting to focus an item that is out of view.",
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js",
            "line": 806,
            "description": "Forces the pagination to move the focused tab into view.",
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js",
            "line": 820,
            "description": "Iterates through all queued functions and clears the queue.  This is used for functions that\nare called before the UI is ready, such as size calculations.",
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js",
            "line": 829,
            "description": "Determines if the tab content area is needed.",
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js",
            "line": 840,
            "description": "Moves the indexes to their nearest valid values.",
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js",
            "line": 848,
            "description": "Calculates the content height of the current tab.",
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js",
            "line": 909,
            "description": "Repositions the ink bar to the selected tab.",
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js",
            "line": 938,
            "description": "Adds left/right classes so that the ink bar will animate properly.",
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js",
            "line": 951,
            "description": "Takes an offset value and makes sure that it is within the min/max allowed values.",
            "params": [
                {
                    "name": "value",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js",
            "line": 965,
            "description": "Attaches a ripple to the tab item element.",
            "params": [
                {
                    "name": "scope",
                    "description": ""
                },
                {
                    "name": "element",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\textField\\textField.js",
            "line": 12,
            "ngdoc": "module",
            "name": "material.components.textField",
            "description": "Form",
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\toast\\toast.js",
            "line": 10,
            "ngdoc": "module",
            "name": "material.components.toast",
            "description": "Toast",
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\toast\\toast.js",
            "line": 95,
            "ngdoc": "method",
            "name": "$mdToast#showSimple",
            "params": [
                {
                    "name": "message",
                    "description": "The message to display inside the toast",
                    "type": "String"
                }
            ],
            "description": "Convenience method which builds and shows a simple toast.",
            "return": {
                "description": "A promise that can be resolved with `$mdToast.hide()` or\nrejected with `$mdToast.cancel()`.",
                "type": "Promise"
            },
            "class": "",
            "module": "material.components.toast"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\toast\\toast.js",
            "line": 108,
            "ngdoc": "method",
            "name": "$mdToast#simple",
            "description": "Builds a preconfigured toast.",
            "return": {
                "description": "a `$mdToastPreset` with the following chainable configuration methods.\n\n_**Note:** These configuration methods are provided in addition to the methods provided by\n  the `build()` and `show()` methods below._\n\n- `.textContent(string)` - Sets the toast content to the specified string.\n\n- `.action(string)` - Adds an action button. If clicked, the promise (returned from `show()`)\nwill resolve with the value `'ok'`; otherwise, it is resolved with `true` after a `hideDelay`\ntimeout.\n\n- `.highlightAction(boolean)` - Whether or not the action button will have an additional\nhighlight class.\n\n- `.capsule(boolean)` - Whether or not to add the `md-capsule` class to the toast to provide\nrounded corners.\n\n- `.theme(string)` - Sets the theme on the toast to the requested theme. Default is\n`$mdThemingProvider`'s default.",
                "type": "Obj"
            },
            "class": "",
            "module": "material.components.toast"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\toast\\toast.js",
            "line": 136,
            "ngdoc": "method",
            "name": "$mdToast#updateTextContent",
            "description": "Updates the content of an existing toast. Useful for updating things like counts, etc.",
            "class": "",
            "module": "material.components.toast"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\toast\\toast.js",
            "line": 145,
            "ngdoc": "method",
            "name": "$mdToast#build",
            "description": "Creates a custom `$mdToastPreset` that you can configure.",
            "return": {
                "description": "a `$mdToastPreset` with the chainable configuration methods for shows' options (see below).",
                "type": "Obj"
            },
            "class": "",
            "module": "material.components.toast"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\toast\\toast.js",
            "line": 155,
            "ngdoc": "method",
            "name": "$mdToast#show",
            "description": "Shows the toast.",
            "params": [
                {
                    "name": "optionsOrPreset",
                    "description": "Either provide an `$mdToastPreset` returned from `simple()`\nand `build()`, or an options object with the following properties:\n\n  - `templateUrl` - `{string=}`: The url of an html template file that will\n    be used as the content of the toast. Restrictions: the template must\n    have an outer `md-toast` element.\n  - `template` - `{string=}`: Same as templateUrl, except this is an actual\n    template string.\n  - `autoWrap` - `{boolean=}`: Whether or not to automatically wrap the template content with a\n    `<div class=\"md-toast-content\">` if one is not provided. Defaults to true. Can be disabled if you provide a\n    custom toast directive.\n  - `scope` - `{object=}`: the scope to link the template / controller to. If none is specified, it will create a new child scope.\n    This scope will be destroyed when the toast is removed unless `preserveScope` is set to true.\n  - `preserveScope` - `{boolean=}`: whether to preserve the scope when the element is removed. Default is false\n  - `hideDelay` - `{number=}`: How many milliseconds the toast should stay\n    active before automatically closing.  Set to 0 or false to have the toast stay open until\n    closed manually. Default: 3000.\n  - `position` - `{string=}`: Where to place the toast. Available: any combination\n    of 'bottom', 'left', 'top', 'right'. Default: 'bottom left'.\n  - `controller` - `{string=}`: The controller to associate with this toast.\n    The controller will be injected the local `$mdToast.hide( )`, which is a function\n    used to hide the toast.\n  - `locals` - `{string=}`: An object containing key/value pairs. The keys will\n    be used as names of values to inject into the controller. For example,\n    `locals: {three: 3}` would inject `three` into the controller with the value\n    of 3.\n  - `bindToController` - `bool`: bind the locals to the controller, instead of passing them in.\n  - `resolve` - `{object=}`: Similar to locals, except it takes promises as values\n    and the toast will not open until the promises resolve.\n  - `controllerAs` - `{string=}`: An alias to assign the controller to on the scope.\n  - `parent` - `{element=}`: The element to append the toast to. Defaults to appending\n    to the root element of the application.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "A promise that can be resolved with `$mdToast.hide()` or\nrejected with `$mdToast.cancel()`. `$mdToast.hide()` will resolve either with a Boolean\nvalue == 'true' or the value passed as an argument to `$mdToast.hide()`.\nAnd `$mdToast.cancel()` will resolve the promise with a Boolean value == 'false'",
                "type": "Promise"
            },
            "class": "",
            "module": "material.components.toast"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\toast\\toast.js",
            "line": 200,
            "ngdoc": "method",
            "name": "$mdToast#hide",
            "description": "Hide an existing toast and resolve the promise returned from `$mdToast.show()`.",
            "params": [
                {
                    "name": "response",
                    "description": "An argument for the resolved promise.",
                    "type": "*="
                }
            ],
            "return": {
                "description": "a promise that is called when the existing element is removed from the DOM.\nThe promise is resolved with either a Boolean value == 'true' or the value passed as the\nargument to `.hide()`.",
                "type": "Promise"
            },
            "class": "",
            "module": "material.components.toast"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\toast\\toast.js",
            "line": 215,
            "ngdoc": "method",
            "name": "$mdToast#cancel",
            "description": "`DEPRECATED` - The promise returned from opening a toast is used only to notify about the closing of the toast.\nAs such, there isn't any reason to also allow that promise to be rejected,\nsince it's not clear what the difference between resolve and reject would be.\n\nHide the existing toast and reject the promise returned from\n`$mdToast.show()`.",
            "params": [
                {
                    "name": "response",
                    "description": "An argument for the rejected promise.",
                    "type": "*="
                }
            ],
            "return": {
                "description": "a promise that is called when the existing element is removed from the DOM\nThe promise is resolved with a Boolean value == 'false'.",
                "type": "Promise"
            },
            "class": "",
            "module": "material.components.toast"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\toolbar\\toolbar.js",
            "line": 10,
            "ngdoc": "module",
            "name": "material.components.toolbar",
            "class": "",
            "module": "material.components.toast"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\toolbar\\toolbar.js",
            "line": 126,
            "class": "",
            "module": "material.components.toolbar"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\toolbar\\toolbar.js",
            "line": 150,
            "class": "",
            "module": "material.components.toolbar"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\toolbar\\toolbar.js",
            "line": 166,
            "class": "",
            "module": "material.components.toolbar"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\toolbar\\toolbar.js",
            "line": 196,
            "class": "",
            "module": "material.components.toolbar"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\toolbar\\toolbar.js",
            "line": 215,
            "class": "",
            "module": "material.components.toolbar"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\tooltip\\tooltip.js",
            "line": 9,
            "ngdoc": "module",
            "name": "material.components.tooltip",
            "class": "",
            "module": "material.components.toolbar"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js",
            "line": 10,
            "ngdoc": "module",
            "name": "material.components.virtualRepeat",
            "class": "",
            "module": "material.components.tooltip"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js",
            "line": 73,
            "description": "Maximum size, in pixels, that can be explicitly set to an element. The actual value varies\nbetween browsers, but IE11 has the very lowest size at a mere 1,533,917px. Ideally we could\n*compute* this value, but Firefox always reports an element to have a size of zero if it\ngoes over the max, meaning that we'd have to binary search for the value.",
            "itemtype": "property",
            "name": "{number}",
            "final": "",
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js",
            "line": 82,
            "description": "Number of additional elements to render above and below the visible area inside\nof the virtual repeat container. A higher number results in less flicker when scrolling\nvery quickly in Safari, but comes with a higher rendering and dirty-checking cost.",
            "itemtype": "property",
            "name": "{number}",
            "final": "",
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js",
            "line": 90,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js",
            "line": 98,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js",
            "line": 100,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js",
            "line": 102,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js",
            "line": 104,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js",
            "line": 106,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js",
            "line": 108,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js",
            "line": 110,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js",
            "line": 112,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js",
            "line": 114,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js",
            "line": 116,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js",
            "line": 120,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js",
            "line": 122,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js",
            "line": 172,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js",
            "line": 181,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js",
            "line": 187,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js",
            "line": 193,
            "description": "Resizes the container.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "The",
                    "description": "new size to set.",
                    "type": "Number"
                }
            ],
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js",
            "line": 212,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js",
            "line": 229,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js",
            "line": 240,
            "description": "Sets the scroller element to the specified size.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "size",
                    "description": "The new size.",
                    "type": "Number"
                }
            ],
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js",
            "line": 280,
            "description": "If auto-shrinking is enabled, shrinks or unshrinks as appropriate.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "size",
                    "description": "The new size.",
                    "type": "Number"
                }
            ],
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js",
            "line": 310,
            "description": "Sets the scrollHeight or scrollWidth. Called by the repeater based on\nits item count and item size.",
            "params": [
                {
                    "name": "itemsSize",
                    "description": "The total size of the items.",
                    "type": "Number"
                }
            ],
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js",
            "line": 325,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js",
            "line": 330,
            "description": "Scrolls to a given scrollTop position.",
            "params": [
                {
                    "name": "position",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js",
            "line": 339,
            "description": "Scrolls the item with the given index to the top of the scroll container.",
            "params": [
                {
                    "name": "index",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js",
            "line": 452,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js",
            "line": 463,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js",
            "line": 465,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js",
            "line": 467,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js",
            "line": 469,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js",
            "line": 471,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js",
            "line": 473,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js",
            "line": 475,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js",
            "line": 479,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js",
            "line": 482,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js",
            "line": 485,
            "access": "private",
            "tagname": "{boolean} Whether the items in the list are already being updated. Used to prevent\n    nested calls to virtualRepeatUpdate_.",
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js",
            "line": 491,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js",
            "line": 494,
            "type": "{!Function} Unwatch callback for item size (when md-items-size is\n    not specified), or angular.noop otherwise.",
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js",
            "line": 500,
            "description": "Presently rendered blocks by repeat index.",
            "type": "{Object<number, !VirtualRepeatController.Block}",
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js",
            "line": 505,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js",
            "line": 511,
            "description": "An object representing a repeated item.",
            "typedef": "{{element: !jqLite, new: boolean, scope: !angular.Scope}}",
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js",
            "line": 518,
            "description": "Called at startup by the md-virtual-repeat postLink function.",
            "params": [
                {
                    "name": "container",
                    "description": "The container's controller.",
                    "type": "!VirtualRepeatContainerController"
                },
                {
                    "name": "transclude",
                    "description": "The repeated element's bound transclude function.",
                    "type": "!Function"
                },
                {
                    "name": "repeatName",
                    "description": "The left hand side of the repeat expression, indicating\n    the name for each item in the array.",
                    "type": "String"
                },
                {
                    "name": "repeatListExpression",
                    "description": "A compiled expression based on the right hand side\n    of the repeat expression. Points to the array to repeat over.",
                    "type": "!Function"
                },
                {
                    "name": "extraName",
                    "description": "The optional extra repeatName.",
                    "type": "String|undefined"
                }
            ],
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js",
            "line": 543,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js",
            "line": 569,
            "description": "Returns the user-specified repeat list, transforming it into an array-like\nobject in the case of infinite scroll/dynamic load mode.",
            "params": [
                {
                    "name": "The",
                    "description": "scope.",
                    "type": "!angular.Scope"
                }
            ],
            "return": {
                "description": "An array or array-like object for iteration.",
                "type": "!Array|!Object"
            },
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js",
            "line": 588,
            "description": "Called by the container. Informs us that the containers scroll or size has\nchanged.",
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js",
            "line": 633,
            "description": "Called by the container. Returns the size of a single repeated item.",
            "return": {
                "description": "Size of a repeated item.",
                "type": "?number"
            },
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js",
            "line": 642,
            "description": "Called by the container. Returns the size of a single repeated item.",
            "return": {
                "description": "Size of a repeated item.",
                "type": "?number"
            },
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js",
            "line": 651,
            "description": "Updates the order and visible offset of repeated blocks in response to scrolling\nor items updates.",
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js",
            "line": 754,
            "params": [
                {
                    "name": "index",
                    "description": "Where the block is to be in the repeated list.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "A new or pooled block to place at the specified index.",
                "type": "!VirtualRepeatController.Block"
            },
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js",
            "line": 780,
            "description": "Updates and if not in a digest cycle, digests the specified block's scope to the data\nat the specified index.",
            "params": [
                {
                    "name": "block",
                    "description": "The block whose scope should be updated.",
                    "type": "!VirtualRepeatController.Block"
                },
                {
                    "name": "index",
                    "description": "The index to set.",
                    "type": "Number"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js",
            "line": 808,
            "description": "Updates scope to the data at the specified index.",
            "params": [
                {
                    "name": "scope",
                    "description": "The scope which should be updated.",
                    "type": "!angular.Scope"
                },
                {
                    "name": "index",
                    "description": "The index to set.",
                    "type": "Number"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js",
            "line": 821,
            "description": "Pools the block at the specified index (Pulls its element out of the dom and stores it).",
            "params": [
                {
                    "name": "index",
                    "description": "The index at which the block to pool is stored.",
                    "type": "Number"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js",
            "line": 833,
            "description": "Produces a dom fragment containing the elements from the list of blocks.",
            "params": [
                {
                    "name": "blocks",
                    "description": "The blocks whose elements\n    should be added to the document fragment.",
                    "type": "!Array<!VirtualRepeatController.Block>"
                }
            ],
            "return": {
                "description": "",
                "type": "DocumentFragment"
            },
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js",
            "line": 849,
            "description": "Updates start and end indexes based on length of repeated items and container size.",
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js",
            "line": 865,
            "description": "This VirtualRepeatModelArrayLike class enforces the interface requirements\nfor infinite scrolling within a mdVirtualRepeatContainer. An object with this\ninterface must implement the following interface with two (2) methods:\n\ngetItemAtIndex: function(index) -> item at that index or null if it is not yet\n    loaded (It should start downloading the item in that case).\n\ngetLength: function() -> number The data legnth to which the repeater container\n    should be sized. Ideally, when the count is known, this method should return it.\n    Otherwise, return a higher number than the currently loaded items to produce an\n    infinite-scroll behavior.",
            "usage": "<hljs lang=\"html\">\n <md-virtual-repeat-container md-orient-horizontal>\n   <div md-virtual-repeat=\"i in items\" md-on-demand>\n     Hello {{i}}!\n   </div>\n </md-virtual-repeat-container>\n</hljs>",
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\closure\\whiteframe\\whiteframe.js",
            "line": 9,
            "ngdoc": "module",
            "name": "material.components.whiteframe",
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js",
            "line": 10,
            "ngdoc": "module",
            "name": "material.components.autocomplete",
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js",
            "line": 82,
            "description": "Initialize the controller, setup watchers, gather elements",
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js",
            "line": 97,
            "description": "Calculates the dropdown's position and applies the new styles to the menu element",
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js",
            "line": 135,
            "description": "Calculates the vertical offset for floating label examples to account for ngMessages",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js",
            "line": 153,
            "description": "Makes sure that the menu doesn't go off of the screen on either side.",
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js",
            "line": 166,
            "description": "Moves the dropdown menu to the body tag in order to avoid z-index and overflow issues.",
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js",
            "line": 177,
            "description": "Sends focus to the input element.",
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js",
            "line": 184,
            "description": "Sets up any watchers used by autocomplete",
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js",
            "line": 197,
            "description": "Removes any events or leftover elements created by this controller",
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js",
            "line": 214,
            "description": "Gathers all of the elements needed for this controller",
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js",
            "line": 232,
            "description": "Finds the element that the menu will base its position on",
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js",
            "line": 243,
            "description": "Gathers angular-wrapped versions of each element",
            "params": [
                {
                    "name": "elements",
                    "description": ""
                }
            ],
            "return": {
                "description": "}"
            },
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js",
            "line": 258,
            "description": "Handles changes to the `hidden` property.",
            "params": [
                {
                    "name": "hidden",
                    "description": ""
                },
                {
                    "name": "oldHidden",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js",
            "line": 279,
            "description": "When the user mouses over the dropdown menu, ignore blur events.",
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js",
            "line": 286,
            "description": "When the user's mouse leaves the menu, blur events may hide the menu again.",
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js",
            "line": 295,
            "description": "When the mouse button is released, send focus back to the input field.",
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js",
            "line": 302,
            "description": "Handles changes to the selected item.",
            "params": [
                {
                    "name": "selectedItem",
                    "description": ""
                },
                {
                    "name": "previousSelectedItem",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js",
            "line": 318,
            "description": "Use the user-defined expression to announce changes each time a new item is selected",
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js",
            "line": 325,
            "description": "Use the user-defined expression to announce changes each time the search text is changed",
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js",
            "line": 332,
            "description": "Calls any external watchers listening for the selected item.  Used in conjunction with\n`registerSelectedItemWatcher`.",
            "params": [
                {
                    "name": "selectedItem",
                    "description": ""
                },
                {
                    "name": "previousSelectedItem",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js",
            "line": 342,
            "description": "Register a function to be called when the selected item changes.",
            "params": [
                {
                    "name": "cb",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js",
            "line": 352,
            "description": "Unregister a function previously registered for selected item changes.",
            "params": [
                {
                    "name": "cb",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js",
            "line": 363,
            "description": "Handles changes to the searchText property.",
            "params": [
                {
                    "name": "searchText",
                    "description": ""
                },
                {
                    "name": "previousSearchText",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js",
            "line": 394,
            "description": "Handles input blur event, determines if the dropdown should hide.",
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js",
            "line": 404,
            "description": "Force blur on input element",
            "params": [
                {
                    "name": "forceBlur",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js",
            "line": 416,
            "description": "Handles input focus event, determines if the dropdown should show.",
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js",
            "line": 427,
            "description": "Handles keyboard input.",
            "params": [
                {
                    "name": "event",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js",
            "line": 478,
            "description": "Returns the minimum length needed to display the dropdown.",
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js",
            "line": 486,
            "description": "Returns the display value for an item.",
            "params": [
                {
                    "name": "item",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js",
            "line": 494,
            "description": "Getter function to invoke user-defined expression (in the directive)\nto convert your object to a single string.",
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js",
            "line": 503,
            "description": "Returns the locals object for compiling item templates.",
            "params": [
                {
                    "name": "item",
                    "description": ""
                }
            ],
            "return": {
                "description": "}"
            },
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js",
            "line": 517,
            "description": "Returns the default index based on whether or not autoselect is enabled.",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js",
            "line": 525,
            "description": "Sets the loading parameter and updates the hidden state.",
            "params": [
                {
                    "name": "value",
                    "description": "Whether or not the component is currently loading.",
                    "type": "Boolean"
                }
            ],
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js",
            "line": 538,
            "description": "Determines if the menu should be hidden.",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js",
            "line": 549,
            "description": "Determines if the menu should be shown.",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js",
            "line": 557,
            "description": "Returns true if the search text has matches.",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js",
            "line": 565,
            "description": "Returns true if the autocomplete has a valid selection.",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js",
            "line": 573,
            "description": "Returns true if the loading indicator is, or should be, visible.",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js",
            "line": 581,
            "description": "Returns the display value of the current item.",
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js",
            "line": 589,
            "description": "Determines if the minimum length is met by the search text.",
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js",
            "line": 599,
            "description": "Defines a public property with a handler and a default value.",
            "params": [
                {
                    "name": "key",
                    "description": ""
                },
                {
                    "name": "handler",
                    "description": ""
                },
                {
                    "name": "value",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js",
            "line": 616,
            "description": "Selects the item at the given index.",
            "params": [
                {
                    "name": "index",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js",
            "line": 634,
            "description": "Clears the searchText value and selected item.",
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js",
            "line": 657,
            "description": "Fetches the results for the provided search text.",
            "params": [
                {
                    "name": "searchText",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js",
            "line": 689,
            "description": "Updates the ARIA messages",
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js",
            "line": 698,
            "description": "Returns the ARIA message for how many results match the current query.",
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js",
            "line": 715,
            "description": "Makes sure that the focused element is within view.",
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js",
            "line": 742,
            "description": "Starts the query to gather the results for the current searchText.  Attempts to return cached\nresults first, then forwards the process to `fetchResults` if necessary.",
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js",
            "line": 760,
            "description": "If there is only one matching item and the search text matches its display value exactly,\nautomatically select that item.  Note: This function is only called if the user uses the\n`md-select-on-match` flag.",
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js",
            "line": 1090,
            "description": "Creates a watcher for variables that are copied from the parent scope",
            "params": [
                {
                    "name": "variable",
                    "description": ""
                },
                {
                    "name": "alias",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.autocomplete"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js",
            "line": 1105,
            "description": "Creates watchers on scope and newScope that ensure that for any\n$digest of scope, newScope is also $digested.",
            "class": "",
            "module": "material.components.autocomplete"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\bottomSheet\\bottomSheet.js",
            "line": 10,
            "ngdoc": "module",
            "name": "material.components.bottomSheet",
            "description": "BottomSheet",
            "class": "",
            "module": "material.components.backdrop"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\bottomSheet\\bottomSheet.js",
            "line": 74,
            "ngdoc": "method",
            "name": "$mdBottomSheet#show",
            "description": "Show a bottom sheet with the specified options.",
            "params": [
                {
                    "name": "options",
                    "description": "An options object, with the following properties:\n\n  - `templateUrl` - `{string=}`: The url of an html template file that will\n  be used as the content of the bottom sheet. Restrictions: the template must\n  have an outer `md-bottom-sheet` element.\n  - `template` - `{string=}`: Same as templateUrl, except this is an actual\n  template string.\n  - `scope` - `{object=}`: the scope to link the template / controller to. If none is specified, it will create a new child scope.\n    This scope will be destroyed when the bottom sheet is removed unless `preserveScope` is set to true.\n  - `preserveScope` - `{boolean=}`: whether to preserve the scope when the element is removed. Default is false\n  - `controller` - `{string=}`: The controller to associate with this bottom sheet.\n  - `locals` - `{string=}`: An object containing key/value pairs. The keys will\n  be used as names of values to inject into the controller. For example,\n  `locals: {three: 3}` would inject `three` into the controller with the value\n  of 3.\n  - `clickOutsideToClose` - `{boolean=}`: Whether the user can click outside the bottom sheet to\n    close it. Default true.\n  - `escapeToClose` - `{boolean=}`: Whether the user can press escape to close the bottom sheet.\n    Default true.\n  - `resolve` - `{object=}`: Similar to locals, except it takes promises as values\n  and the bottom sheet will not open until the promises resolve.\n  - `controllerAs` - `{string=}`: An alias to assign the controller to on the scope.\n  - `parent` - `{element=}`: The element to append the bottom sheet to. The `parent` may be a `function`, `string`,\n  `object`, or null. Defaults to appending to the body of the root element (or the root element) of the application.\n  e.g. angular.element(document.getElementById('content')) or \"#content\"\n  - `disableParentScroll` - `{boolean=}`: Whether to disable scrolling while the bottom sheet is open.\n    Default true.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "A promise that can be resolved with `$mdBottomSheet.hide()` or\nrejected with `$mdBottomSheet.cancel()`.",
                "type": "Promise"
            },
            "class": "",
            "module": "material.components.bottomSheet"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\bottomSheet\\bottomSheet.js",
            "line": 113,
            "ngdoc": "method",
            "name": "$mdBottomSheet#hide",
            "description": "Hide the existing bottom sheet and resolve the promise returned from\n`$mdBottomSheet.show()`. This call will close the most recently opened/current bottomsheet (if any).",
            "params": [
                {
                    "name": "response",
                    "description": "An argument for the resolved promise.",
                    "type": "*="
                }
            ],
            "class": "",
            "module": "material.components.bottomSheet"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\bottomSheet\\bottomSheet.js",
            "line": 125,
            "ngdoc": "method",
            "name": "$mdBottomSheet#cancel",
            "description": "Hide the existing bottom sheet and reject the promise returned from\n`$mdBottomSheet.show()`.",
            "params": [
                {
                    "name": "response",
                    "description": "An argument for the rejected promise.",
                    "type": "*="
                }
            ],
            "class": "",
            "module": "material.components.bottomSheet"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\bottomSheet\\bottomSheet.js",
            "line": 225,
            "description": "BottomSheet class to apply bottom-sheet behavior to an element",
            "class": "",
            "module": "material.components.bottomSheet"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\button\\button.js",
            "line": 10,
            "ngdoc": "module",
            "name": "material.components.button",
            "description": "Button",
            "class": "",
            "module": "material.components.bottomSheet"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\card\\card.js",
            "line": 10,
            "ngdoc": "module",
            "name": "material.components.card",
            "description": "Card components.",
            "class": "",
            "module": "material.components.button"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\checkbox\\checkbox.js",
            "line": 10,
            "ngdoc": "module",
            "name": "material.components.checkbox",
            "description": "Checkbox module!",
            "class": "",
            "module": "material.components.card"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js",
            "line": 10,
            "ngdoc": "module",
            "name": "material.components.chips",
            "class": "",
            "module": "material.components.checkbox"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js",
            "line": 50,
            "description": "MDChip Directive Definition",
            "params": [
                {
                    "name": "$mdTheming",
                    "description": ""
                },
                {
                    "name": "$mdInkRipple\nngInject",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js",
            "line": 104,
            "description": "MdChipRemove Directive Definition.",
            "params": [
                {
                    "name": "$compile",
                    "description": ""
                },
                {
                    "name": "$timeout",
                    "description": ""
                }
            ],
            "return": {
                "description": "}",
                "type": "Restrict: string, require: string[], link: Function, scope: boolean"
            },
            "is_constructor": 1,
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js",
            "line": 168,
            "description": "Controller for the MdChips component. Responsible for adding to and\nremoving from the list of chips, marking chips as selected, and binding to\nthe models of various input components.",
            "params": [
                {
                    "name": "$scope",
                    "description": ""
                },
                {
                    "name": "$mdConstant",
                    "description": ""
                },
                {
                    "name": "$log",
                    "description": ""
                },
                {
                    "name": "$element",
                    "description": ""
                }
            ],
            "is_constructor": 1,
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js",
            "line": 180,
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js",
            "line": 183,
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js",
            "line": 186,
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js",
            "line": 189,
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js",
            "line": 192,
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js",
            "line": 195,
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js",
            "line": 198,
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js",
            "line": 201,
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js",
            "line": 204,
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js",
            "line": 207,
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js",
            "line": 210,
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js",
            "line": 213,
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js",
            "line": 217,
            "description": "Hidden hint text for how to delete a chip. Used to give context to screen readers.",
            "type": "{string}",
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js",
            "line": 223,
            "description": "Hidden label for the delete button. Used to give context to screen readers.",
            "type": "{string}",
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js",
            "line": 229,
            "description": "Model used by the input element.",
            "type": "{string}",
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js",
            "line": 235,
            "description": "Whether to use the onAppend expression to transform the chip buffer\nbefore appending it to the list.",
            "type": "{boolean}",
            "deprecated": true,
            "deprecationMessage": "Will remove in 1.0.",
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js",
            "line": 245,
            "description": "Whether to use the transformChip expression to transform the chip buffer\nbefore appending it to the list.",
            "type": "{boolean}",
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js",
            "line": 252,
            "description": "Whether to use the onAdd expression to notify of chip additions.",
            "type": "{boolean}",
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js",
            "line": 258,
            "description": "Whether to use the onRemove expression to notify of chip removals.",
            "type": "{boolean}",
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js",
            "line": 264,
            "description": "Whether to use the onSelect expression to notify the component's user\nafter selecting a chip from the list.",
            "type": "{boolean}",
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js",
            "line": 273,
            "description": "Handles the keydown event on the input element: by default <enter> appends\nthe buffer to the chip list, while backspace removes the last chip in the\nlist if the current buffer is empty.",
            "params": [
                {
                    "name": "event",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js",
            "line": 309,
            "description": "Handles the keydown event on the chip elements: backspace removes the selected chip, arrow\nkeys switch which chips is active",
            "params": [
                {
                    "name": "event",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js",
            "line": 341,
            "description": "Get the input's placeholder - uses `placeholder` when list is empty and `secondary-placeholder`\nwhen the list is non-empty. If `secondary-placeholder` is not provided, `placeholder` is used\nalways.",
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js",
            "line": 353,
            "description": "Removes chip at {@code index} and selects the adjacent chip.",
            "params": [
                {
                    "name": "index",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js",
            "line": 365,
            "description": "Sets the selected chip index to -1.",
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js",
            "line": 372,
            "description": "Gets the index of an adjacent chip to select after deletion. Adjacency is\ndetermined as the next chip in the list, unless the target chip is the\nlast in the list, then it is the chip immediately preceding the target. If\nthere is only one item in the list, -1 is returned (select none).\nThe number returned is the index to select AFTER the target has been\nremoved.\nIf the current chip is not selected, then -1 is returned to select none.",
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js",
            "line": 387,
            "description": "Append the contents of the buffer to the chip list. This method will first\ncall out to the md-transform-chip method, if provided.",
            "params": [
                {
                    "name": "newChip",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js",
            "line": 424,
            "description": "Sets whether to use the md-on-append expression. This expression is\nbound to scope and controller in {@code MdChipsDirective} as\n{@code onAppend}. Due to the nature of directive scope bindings, the\ncontroller cannot know on its own/from the scope whether an expression was\nactually provided.",
            "deprecated": true,
            "deprecationMessage": "TODO: Remove deprecated md-on-append functionality in 1.0",
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js",
            "line": 443,
            "description": "Sets whether to use the md-transform-chip expression. This expression is\nbound to scope and controller in {@code MdChipsDirective} as\n{@code transformChip}. Due to the nature of directive scope bindings, the\ncontroller cannot know on its own/from the scope whether an expression was\nactually provided.",
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js",
            "line": 454,
            "description": "Sets whether to use the md-on-add expression. This expression is\nbound to scope and controller in {@code MdChipsDirective} as\n{@code onAdd}. Due to the nature of directive scope bindings, the\ncontroller cannot know on its own/from the scope whether an expression was\nactually provided.",
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js",
            "line": 465,
            "description": "Sets whether to use the md-on-remove expression. This expression is\nbound to scope and controller in {@code MdChipsDirective} as\n{@code onRemove}. Due to the nature of directive scope bindings, the\ncontroller cannot know on its own/from the scope whether an expression was\nactually provided.",
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js",
            "line": 487,
            "description": "Gets the input buffer. The input buffer can be the model bound to the\ndefault input item {@code this.chipBuffer}, the {@code selectedItem}\nmodel of an {@code md-autocomplete}, or, through some magic, the model\nbound to any inpput or text area element found within a\n{@code md-input-container} element.",
            "return": {
                "description": "",
                "type": "Object|string"
            },
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js",
            "line": 501,
            "description": "Resets the input buffer for either the internal input or user provided input element.",
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js",
            "line": 517,
            "description": "Removes the chip at the given index.",
            "params": [
                {
                    "name": "index",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js",
            "line": 533,
            "description": "Selects the chip at `index`,",
            "params": [
                {
                    "name": "index",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js",
            "line": 550,
            "description": "Marks the chip at the given index as selected.",
            "params": [
                {
                    "name": "index",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js",
            "line": 567,
            "description": "Selects the chip at `index` and gives it focus.",
            "params": [
                {
                    "name": "index",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js",
            "line": 578,
            "description": "Call `focus()` on the chip at `index`",
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js",
            "line": 585,
            "description": "Configures the required interactions with the ngModel Controller.\nSpecifically, set {@code this.items} to the {@code NgModelCtrl#$viewVale}.",
            "params": [
                {
                    "name": "ngModelCtrl",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js",
            "line": 615,
            "description": "Configure event bindings on a user-provided input element.",
            "params": [
                {
                    "name": "inputElement",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js",
            "line": 816,
            "description": "MDChips Directive Definition",
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js",
            "line": 854,
            "description": "Builds the final template for `md-chips` and returns the postLink function.\n\nBuilding the template involves 3 key components:\nstatic chips\nchip template\ninput control\n\nIf no `ng-model` is provided, only the static chip work needs to be done.\n\nIf no user-passed `md-chip-template` exists, the default template is used. This resulting\ntemplate is appended to the chip content element.\n\nThe remove button may be overridden by passing an element with an md-chip-remove attribute.\n\nIf an `input` or `md-autocomplete` element is provided by the caller, it is set aside for\ntransclusion later. The transclusion happens in `postLink` as the parent scope is required.\nIf no user input is provided, a default one is appended to the input container node in the\ntemplate.\n\nStatic Chips (i.e. `md-chip` elements passed from the caller) are gathered and set aside for\ntransclusion in the `postLink` function.",
            "params": [
                {
                    "name": "element",
                    "description": ""
                },
                {
                    "name": "attr",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Function"
            },
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js",
            "line": 907,
            "description": "Configures controller and transcludes.",
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js",
            "line": 1002,
            "description": "Controller for the MdContactChips component",
            "is_constructor": 1,
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js",
            "line": 1007,
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js",
            "line": 1010,
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js",
            "line": 1125,
            "description": "MDContactChips Directive Definition",
            "params": [
                {
                    "name": "$mdTheming",
                    "description": ""
                }
            ],
            "return": {
                "description": "ngInject",
                "type": "*"
            },
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\content\\content.js",
            "line": 10,
            "ngdoc": "module",
            "name": "material.components.content",
            "description": "Scrollable content",
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 10,
            "description": "Initialization function that validates environment\nrequirements.",
            "class": "",
            "module": "material.components.content"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 26,
            "description": "Detect if the ng-Touch module is also being used.\nWarn if detected.",
            "class": "",
            "module": "material.components.content"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 55,
            "description": "Use this to throttle events that come in often.\nThe throttled function will always use the *last* invocation before the\ncoming frame.\n\nFor example, window resize events that fire many times a second:\nIf we set to use an raf-throttled callback on window resize, then\nour callback will only be fired once per frame, with the last resize\nevent that happened before that frame.",
            "params": [
                {
                    "name": "callback",
                    "description": "function to debounce",
                    "type": "Function"
                }
            ],
            "class": "",
            "module": "material.components.content"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 197,
            "description": "Factory function that creates the grab-bag $mdConstant service.\nngInject",
            "class": "",
            "module": "material.core.util"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 242,
            "description": "As defined in core/style/variables.scss\n\n$layout-breakpoint-xs:     600px !default;\n$layout-breakpoint-sm:     960px !default;\n$layout-breakpoint-md:     1280px !default;\n$layout-breakpoint-lg:     1920px !default;",
            "class": "",
            "module": "material.core.util"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 283,
            "description": "Inject the iterator facade to easily support iteration and accessors",
            "see": [
                "iterator below"
            ],
            "class": "",
            "module": "material.core.util"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 294,
            "description": "iterator is a list facade to easily support iteration and accessors",
            "params": [
                {
                    "name": "items",
                    "description": "Array list which this iterator will enumerate"
                },
                {
                    "name": "reloop",
                    "description": "Boolean enables iterator to consider the list as an endless reloop"
                }
            ],
            "class": "",
            "module": "material.core.util"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 335,
            "description": "Publish copy of the enumerable set",
            "return": {
                "description": "",
                "type": "Array|*"
            },
            "class": "",
            "module": "material.core.util"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 343,
            "description": "Determine length of the list",
            "return": {
                "description": "",
                "type": "Array.length|*|number"
            },
            "class": "",
            "module": "material.core.util"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 351,
            "description": "Is the index specified valid",
            "params": [
                {
                    "name": "index",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Array.length|*|number|boolean"
            },
            "class": "",
            "module": "material.core.util"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 360,
            "description": "Can the iterator proceed to the next item in the list; relative to\nthe specified item.",
            "params": [
                {
                    "name": "item",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Array.length|*|number|boolean"
            },
            "class": "",
            "module": "material.core.util"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 371,
            "description": "Can the iterator proceed to the previous item in the list; relative to\nthe specified item.",
            "params": [
                {
                    "name": "item",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Array.length|*|number|boolean"
            },
            "class": "",
            "module": "material.core.util"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 382,
            "description": "Get item at specified index/position",
            "params": [
                {
                    "name": "index",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "",
            "module": "material.core.util"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 391,
            "description": "Find all elements matching the key/value pair\notherwise return null",
            "params": [
                {
                    "name": "val",
                    "description": ""
                },
                {
                    "name": "key",
                    "description": ""
                }
            ],
            "return": {
                "description": "array"
            },
            "class": "",
            "module": "material.core.util"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 406,
            "description": "Add item to list",
            "params": [
                {
                    "name": "item",
                    "description": ""
                },
                {
                    "name": "index",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "",
            "module": "material.core.util"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 424,
            "description": "Remove item from list...",
            "params": [
                {
                    "name": "item",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.core.util"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 434,
            "description": "Get the zero-based index of the target item",
            "params": [
                {
                    "name": "item",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "",
            "module": "material.core.util"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 443,
            "description": "Boolean existence check",
            "params": [
                {
                    "name": "item",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "",
            "module": "material.core.util"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 452,
            "description": "Return first item in the list",
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "",
            "module": "material.core.util"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 460,
            "description": "Return last item in the list...",
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "",
            "module": "material.core.util"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 468,
            "description": "Find the next item. If reloop is true and at the end of the list, it will go back to the\nfirst item. If given, the `validate` callback will be used to determine whether the next item\nis valid. If not valid, it will try to find the next item again.",
            "params": [
                {
                    "name": "backwards",
                    "description": "Specifies the direction of searching (forwards/backwards)",
                    "type": "Boolean"
                },
                {
                    "name": "item",
                    "description": "The item whose subsequent item we are looking for",
                    "type": "*"
                },
                {
                    "name": "validate",
                    "description": "The `validate` function",
                    "type": "Function="
                },
                {
                    "name": "limit",
                    "description": "The recursion limit",
                    "type": "Integer="
                }
            ],
            "return": {
                "description": "The subsequent item or null",
                "type": "*"
            },
            "class": "",
            "module": "material.core.util"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 702,
            "ngdoc": "module",
            "name": "material.core.util",
            "description": "Util",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 718,
            "description": "Checks if the target element has the requested style by key",
            "params": [
                {
                    "name": "target",
                    "description": "Target element",
                    "type": "DOMElement|JQLite"
                },
                {
                    "name": "key",
                    "description": "Style key",
                    "type": "String"
                },
                {
                    "name": "expectedVal",
                    "description": "Optional expected value",
                    "type": "String="
                }
            ],
            "return": {
                "description": "Whether the target element has the style or not",
                "type": "Boolean"
            },
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 775,
            "description": "Calculate the positive scroll offset\nTODO: Check with pinch-zoom in IE/Chrome;\n      https://code.google.com/p/chromium/issues/detail?id=496285",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 790,
            "description": "Finds the proper focus target by searching the DOM.",
            "params": [
                {
                    "name": "containerEl",
                    "description": ""
                },
                {
                    "name": "attributeVal",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 815,
            "description": "Can target and nested children for specified Selector (attribute)\nwhose value may be an expression that evaluates to True/False.",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 973,
            "description": "facade to build md-backdrop element with desired styles\nNOTE: Use $compile to trigger backdrop postLink function",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 981,
            "description": "supplant() method from Crockford's `Remedial Javascript`\nEquivalent to use of $interpolate; without dependency on\ninterpolation symbols and scope. Note: the '{<token>}' can\nbe property names, property chains, or array indices.",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 1065,
            "description": "Measures the number of milliseconds taken to run the provided callback\nfunction. Uses a high-precision timer if available.",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 1075,
            "description": "Create an implicit getter that caches its `getter()`\nlookup value",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 1091,
            "description": "Get a unique ID.",
            "return": {
                "description": "an unique numeric string",
                "type": "String"
            },
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 1164,
            "description": "Build polyfill for the Node.contains feature (if needed)",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 1177,
            "description": "Functional equivalent for $element.filter(‘md-bottom-sheet’)\nuseful with interimElements where the element and its container are important...",
            "params": [
                {
                    "name": "elements",
                    "description": "to scan",
                    "type": "[]"
                },
                {
                    "name": "name",
                    "description": "of node to find (e.g. 'md-dialog')",
                    "type": "String"
                },
                {
                    "name": "optional",
                    "description": "flag to allow deep scans; defaults to 'false'.",
                    "type": "Boolean="
                },
                {
                    "name": "optional",
                    "description": "flag to enable log warnings; defaults to false",
                    "type": "Boolean="
                }
            ],
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 1194,
            "description": "Breadth-First tree scan for element with matching `nodeName`",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 1201,
            "description": "Case-insensitive scan of current elements only (do not descend).",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 1215,
            "description": "Scan children of specified node",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 1235,
            "description": "Give optional properties with no value a boolean true if attr provided or false otherwise",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 1248,
            "description": "Alternative to $timeout calls with 0 delay.\nnextTick() coalesces all calls within a single frame\nto minimize $digest thrashing",
            "params": [
                {
                    "name": "callback",
                    "description": ""
                },
                {
                    "name": "digest",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 1276,
            "description": "Grab a copy of the current queue\nClear the queue for future use\nProcess the existing queue\nTrigger digest if necessary",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 1299,
            "description": "Processes a template and replaces the start/end symbols if the application has\noverriden them.",
            "params": [
                {
                    "name": "template",
                    "description": "The template to process whose start/end tags may be replaced."
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 1315,
            "description": "Scan up dom hierarchy for enabled parent;",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 1388,
            "description": "Check if expected attribute has been specified on the target element or child",
            "params": [
                {
                    "name": "element",
                    "description": ""
                },
                {
                    "name": "attrName",
                    "description": ""
                },
                {
                    "name": "defaultValue",
                    "description": "What to set the attr to if no value is found",
                    "type": "Optional"
                }
            ],
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 1638,
            "description": "Returns a new provider which allows configuration of a new interimElement\nservice. Allows configuration of default options & methods for options,\nas well as configuration of 'preset' methods (eg dialog.basic(): basic is a preset method)",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 1658,
            "description": "all interim elements will come with the 'build' preset",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 1669,
            "description": "Save the configured defaults to be used when the factory is instantiated",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 1678,
            "description": "Add a method to the factory that isn't specific to any interim element operations",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 1687,
            "description": "Save the configured preset to be used when the factory is instantiated",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 1713,
            "description": "Create a factory that has the given methods & defaults implementing interimElement",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 1811,
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 1825,
            "description": "Special method to hide and destroy an interimElement WITHOUT\nany 'leave` or hide animations ( an immediate force hide/remove )\n\nNOTE: This calls the onRemove() subclass method for each component...\nwhich must have code to respond to `options.$destroy == true`",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 1836,
            "description": "Helper to call $injector.invoke with a local of the factory name for\nthis provider.\nIf an $mdDialog is providing options for a dialog and tries to inject\n$mdDialog, a circular dependency error will happen.\nWe get around that by manually injecting $mdDialog as a local.",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 2025,
            "description": "Compile, link, and show this interim element\nUse optional autoHided and transition-in effects",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 2051,
            "description": "After the show process has finished/rejected:\n- announce 'removing',\n- perform the transition-out, and\n- perform optional clean up scope.",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 2087,
            "description": "The `show()` returns a promise that will be resolved when the interim\nelement is hidden or cancelled...",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 2095,
            "description": "Force the '$md<xxx>.show()' promise to reject",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 2103,
            "description": "Prepare optional isolated scope and prepare $animate with default enter and leave\ntransitions for the new element instance.",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 2118,
            "description": "Default usage to enable $animate to transition-in; can be easily overridden via 'options'",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 2125,
            "description": "Default usage to enable $animate to transition-out; can be easily overridden via 'options'",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 2137,
            "description": "Compile an element with a templateUrl, controller, and locals",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 2154,
            "description": "Link an element with compiled configuration",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 2170,
            "description": "Search for parent at insertion time, if not specified",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 2202,
            "description": "If auto-hide is enabled, start timer and prepare cancel function",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 2222,
            "description": "Show the element ( with transitions), notify complete and start\noptional auto-Hide",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 2305,
            "description": "The position of the most recent click if that click was on a label element.",
            "type": "{{x: number, y: number}?}",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 2351,
            "description": "$get is used to build an instance of $mdGesture\nngInject",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 2362,
            "description": "MdGesture factory construction function\nngInject",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 2618,
            "description": "MdGestureHandler\nA GestureHandler is an object which is able to dispatch custom dom events\nbased on native dom {touch,pointer,mouse}{start,move,end} events.\n\nA gesture will manage its lifecycle through the start,move,end, and cancel\nfunctions, which are called by native dom events.\n\nA gesture has the concept of 'options' (eg a swipe's required velocity), which can be\noverridden by elements registering through $mdGesture.register()",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 2775,
            "description": "Attach Gestures: hook document and check shouldHijack clicks\nngInject",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 2946,
            "description": "Gets whether the given event is an input event that was caused by clicking on an\nassociated label element.\n\nThis is necessary because the browser will, upon clicking on a label element, fire an\n*extra* click event on its associated input (if any). mdGesture is able to flag the label\nclick as with `$material` correctly, but not the second input click.\n\nIn order to determine whether an input event is from a label click, we compare the (x, y) for\nthe event to the (x, y) for the most recent label click (which is cleared whenever a non-label\nclick occurs). Unfortunately, there are no event properties that tie the input and the label\ntogether (such as relatedTarget).",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "MouseEvent"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 3016,
            "description": "Enable directive attribute-to-class conversions\nDevelopers can use `<body md-layout-css />` to quickly\ndisable the Layout directives and prohibit the injection of Layout classNames",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 3023,
            "description": "List of mediaQuery breakpoints and associated suffixes\n\n  [\n   { suffix: \"sm\", mediaQuery: \"screen and (max-width: 599px)\" },\n   { suffix: \"md\", mediaQuery: \"screen and (min-width: 600px) and (max-width: 959px)\" }\n  ]",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 3036,
            "description": "registerLayoutAPI()\n\nThe original ngMaterial Layout solution used attribute selectors and CSS.\n\n  ```html\n  <div layout=\"column\"> My Content </div>\n  ```\n\n  ```css\n  [layout] {\n box-sizing: border-box;\n display:flex;\n  }\n  [layout=column] {\n flex-direction : column\n  }\n  ```\n\n  Use of attribute selectors creates significant performance impacts in some\n  browsers... mainly IE.\n\n  This module registers directives that allow the same layout attributes to be\n  interpreted and converted to class selectors. The directive will add equivalent classes to each element that\n  contains a Layout directive.\n\n ```html\n<div layout=\"column\" class=\"layout layout-column\"> My Content </div>\n```\n\n  ```css\n  .layout {\n box-sizing: border-box;\n display:flex;\n  }\n  .layout-column {\n flex-direction : column\n  }\n  ```",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 3132,
            "description": "Converts snake_case to camelCase.\nAlso there is special case for Moz prefix starting with upper case letter.",
            "params": [
                {
                    "name": "name",
                    "description": "Name to normalize"
                }
            ],
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 3147,
            "description": "Special directive that will disable ALL Layout conversions of layout\nattribute(s) to classname(s).\n\n<link rel=\"stylesheet\" href=\"angular-material.min.css\">\n<link rel=\"stylesheet\" href=\"angular-material.layout.css\">\n\n<body md-layout-css>\n ...\n</body>\n\nNote: Using md-layout-css directive requires the developer to load the Material\nLayout Attribute stylesheet (which only uses attribute selectors):\n\n      `angular-material.layout.css`\n\nAnother option is to use the LayoutProvider to configure and disable the attribute\nconversions; this would obviate the use of the `md-layout-css` directive",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 3178,
            "description": "Tail-hook ngCloak to delay the uncloaking while Layout transformers\nfinish processing. Eliminates flicker with Material.Layoouts",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 3216,
            "description": "Creates a directive registration function where a possible dynamic attribute\nvalue will be observed/watched.",
            "params": [
                {
                    "name": "className",
                    "description": "attribute name; eg `layout-gt-md` with value =\"row\"",
                    "type": "String"
                }
            ],
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 3251,
            "description": "Add as transformed class selector(s), then\nremove the deprecated attribute selector",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 3264,
            "description": "Creates a registration function for ngMaterial Layout attribute directive.\nThis is a `simple` transpose of attribute usage to class usage; where we ignore\nany attribute value",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 3298,
            "description": "Add as transformed class selector, then\nremove the deprecated attribute selector",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 3309,
            "description": "After link-phase, do NOT remove deprecated layout attribute selector.\nInstead watch the attribute so interpolated data-bindings to layout\nselectors will continue to be supported.\n\n$observe() the className and update with new class (after removing the last one)\n\ne.g. `layout=\"{{layoutDemo.direction}}\"` will update...\n\nNOTE: The value must match one of the specified styles in the CSS.\nFor example `flex-gt-md=\"{{size}}`  where `scope.size == 47` will NOT work since\nonly breakpoints for 0, 5, 10, 15... 100, 33, 34, 66, 67 are defined.",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 3336,
            "description": "Provide console warning that this layout attribute has been deprecated",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 3348,
            "description": "Centralize warnings for known flexbox issues (especially IE-related issues)",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 3372,
            "description": "For the Layout attribute value, validate or replace with default\nfallback value",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 3425,
            "description": "Replace current attribute value with fallback value",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 3439,
            "description": "See if the original value has interpolation symbols:\ne.g.  flex-gt-md=\"{{triggerPoint}}\"",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 3496,
            "ngdoc": "module",
            "name": "material.core.componentRegistry",
            "description": "A component instance registration service.\nNote: currently this as a private service in the SideNav component.",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 3521,
            "description": "Used to print an error when an instance for a handle isn't found.",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 3527,
            "description": "Return all registered instances as an array.",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 3534,
            "description": "Get a registered instance.",
            "params": [
                {
                    "name": "handle",
                    "description": "the String handle to look up for a registered instance."
                }
            ],
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 3551,
            "description": "Register an instance.",
            "params": [
                {
                    "name": "instance",
                    "description": "the instance to register"
                },
                {
                    "name": "handle",
                    "description": "the handle to identify the instance under."
                }
            ],
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 3565,
            "description": "Remove registration for an instance",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 3575,
            "description": "Resolve any pending promises for this instance",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 3587,
            "description": "Async accessor to registered component instance\nIf not available then a promise is created to notify\nall listeners when the instance is registered.",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 3734,
            "ngdoc": "module",
            "name": "material.core.ripple",
            "description": "Ripple",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 3823,
            "ngdoc": "method",
            "name": "$mdInkRipple#attach",
            "description": "Attaching given scope, element and options to inkRipple controller",
            "params": [
                {
                    "name": "scope",
                    "description": "Scope within the current context",
                    "type": "Object="
                },
                {
                    "name": "element",
                    "description": "The element the ripple effect should be applied to",
                    "type": "Object="
                },
                {
                    "name": "options",
                    "description": "(Optional) Configuration options to override the defaultRipple configuration\n* `center` -  Whether the ripple should start from the center of the container element\n* `dimBackground` - Whether the background should be dimmed with the ripple color\n* `colorElement` - The element the ripple should take its color from, defined by css property `color`\n* `fitRipple` - Whether the ripple should fill the element",
                    "type": "Object="
                }
            ],
            "class": "",
            "module": "material.core.ripple"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 3851,
            "description": "Controller used by the ripple service in order to apply ripples\nngInject",
            "class": "",
            "module": "material.core.ripple"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 3880,
            "description": "Either remove or unlock any remaining ripples when the user mouses off of the element (either by\nmouseup or mouseleave event)",
            "class": "",
            "module": "material.core.ripple"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 3894,
            "description": "Returns the color that the ripple should be (either based on CSS or hard-coded)",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "",
            "module": "material.core.ripple"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 3909,
            "description": "Finds the color element and returns its text color for use as default ripple color",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "",
            "module": "material.core.ripple"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 3921,
            "description": "Updating the ripple colors based on the current inkRipple value\nor the element's computed style color",
            "class": "",
            "module": "material.core.ripple"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 3930,
            "description": "Takes a string color and converts it to RGBA format",
            "params": [
                {
                    "name": "color",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "multiplier",
                    "description": "",
                    "type": "Int",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "",
            "module": "material.core.ripple"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 3945,
            "description": "Converts hex value to RGBA string",
            "params": [
                {
                    "name": "color",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "",
            "module": "material.core.ripple"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 3964,
            "description": "Converts an RGB color to RGBA",
            "params": [
                {
                    "name": "color",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "",
            "module": "material.core.ripple"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 3975,
            "description": "Binds events to the root element for",
            "class": "",
            "module": "material.core.ripple"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 3985,
            "description": "Create a new ripple on every mousedown event from the root element",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "MouseEvent"
                }
            ],
            "class": "",
            "module": "material.core.ripple"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 4012,
            "description": "Either remove or unlock any remaining ripples when the user mouses off of the element (either by\nmouseup, touchend or mouseleave event)",
            "class": "",
            "module": "material.core.ripple"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 4020,
            "description": "Either remove or unlock any remaining ripples when the user mouses off of the element (by\ntouchmove)",
            "class": "",
            "module": "material.core.ripple"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 4028,
            "description": "Cycles through all ripples and attempts to remove them.",
            "class": "",
            "module": "material.core.ripple"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 4037,
            "description": "Cycles through all ripples and attempts to remove them with fade.\nDepending on logic within `fadeInComplete`, some removals will be postponed.",
            "class": "",
            "module": "material.core.ripple"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 4047,
            "description": "Creates the ripple container element",
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "",
            "module": "material.core.ripple"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 4078,
            "description": "The attribute `md-ink-ripple` may be a static or interpolated\ncolor value OR a boolean indicator (used to disable ripples)",
            "class": "",
            "module": "material.core.ripple"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 4086,
            "description": "Creates a new ripple and adds it to the container.  Also tracks ripple in `this.ripples`.",
            "params": [
                {
                    "name": "left",
                    "description": ""
                },
                {
                    "name": "top",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.core.ripple"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 4150,
            "description": "After fadeIn finishes, either kicks off the fade-out animation or queues the element for removal on mouseup",
            "params": [
                {
                    "name": "ripple",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.core.ripple"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 4164,
            "description": "Kicks off the animation for removing a ripple",
            "params": [
                {
                    "name": "ripple",
                    "description": "",
                    "type": "Element"
                }
            ],
            "class": "",
            "module": "material.core.ripple"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 4182,
            "description": "Removes the provided ripple from the DOM",
            "params": [
                {
                    "name": "ripple",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.core.ripple"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 4191,
            "description": "Used to create an empty directive.  This is used to track flag-directives whose children may have\nfunctionality based on them.\n\nExample: `md-no-ink` will potentially be used by all child directives.",
            "class": "",
            "module": "material.core.ripple"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 4612,
            "ngdoc": "method",
            "name": "$mdThemingProvider#setNonce",
            "params": [
                {
                    "name": "nonceValue",
                    "description": "The nonce to be added as an attribute to the theme style tags.\nSetting a value allows the use CSP policy without using the unsafe-inline directive.",
                    "type": "String"
                }
            ],
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 4619,
            "ngdoc": "method",
            "name": "$mdThemingProvider#setDefaultTheme",
            "params": [
                {
                    "name": "themeName",
                    "description": "Default theme name to be applied to elements. Default value is `default`.",
                    "type": "String"
                }
            ],
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 4625,
            "ngdoc": "method",
            "name": "$mdThemingProvider#alwaysWatchTheme",
            "params": [
                {
                    "name": "watch",
                    "description": "Whether or not to always watch themes for changes and re-apply\nclasses when they change. Default is `false`. Enabling can reduce performance.",
                    "type": "Boolean"
                }
            ],
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 4913,
            "ngdoc": "service",
            "name": "$mdTheming",
            "description": "Service that makes an element apply theming related classes to itself.\n\n```js\napp.directive('myFancyDirective', function($mdTheming) {\n  return {\n    restrict: 'e',\n    link: function(scope, el, attrs) {\n      $mdTheming(el);\n    }\n  };\n});\n```",
            "params": [
                {
                    "name": "element",
                    "description": "to apply theming to",
                    "type": "El="
                }
            ],
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 5295,
            "description": "Factory function that requires special injections",
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 5301,
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 5316,
            "description": "Specific reversal of the request translate animation above...",
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 5329,
            "description": "Listen for transitionEnd event (with optional timeout)\nAnnounce completion or failure via promise handlers",
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 5342,
            "description": "Upon timeout or transitionEnd, reject or resolve (respectively) this promise.\nNOTE: Make sure this transitionEnd didn't bubble up from a child",
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 5360,
            "description": "Calculate the zoom transform from dialog to origin.\n\nWe use this to set the dialog position immediately;\nthen the md-transition-in actually translates back to\n`translate3d(0,0,0) scale(1.0)`...\n\nNOTE: all values are rounded to the nearest integer",
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 5395,
            "description": "This is a fallback if the origin information is no longer valid, then the\norigin bounds simply becomes the current bounds for the dialogContainer's parent",
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 5407,
            "description": "Enhance raw values to represent valid css stylings...",
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 5443,
            "description": "Convert the translate CSS value to key/value pair(s).",
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 5460,
            "description": "Clone the Rect and calculate the height/width if needed",
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 5478,
            "description": "Calculate ClientRect of element; return null if hidden or zero size",
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 5491,
            "description": "Calculate 'rounded' center point of Rect",
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\core\\core.js",
            "line": 5892,
            "description": "Older browsers [FF31] expect camelCase\nproperty keys.\ne.g.\n animation-duration --> animationDuration",
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 13,
            "ngdoc": "module",
            "name": "material.components.datepicker",
            "description": "Datepicker",
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 40,
            "description": "Height of one calendar month tbody. This must be made known to the virtual-repeat and is\nsubsequently used for scrolling to specific months.",
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 46,
            "description": "Height of a calendar month with a single row. This is needed to calculate the offset for\nrendering an extra month in virtual-repeat that only contains one row.",
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 84,
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 87,
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 90,
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 93,
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 96,
            "description": "Controller for the mdCalendar component.\nngInject @constructor",
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 103,
            "description": "Dummy array-like object for virtual-repeat to iterate over. The length is the total\nnumber of months that can be viewed. This is shorter than ideal because of (potential)\nFirefox bug https://bugzilla.mozilla.org/show_bug.cgi?id=1181658.",
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 119,
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 122,
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 125,
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 128,
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 131,
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 134,
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 137,
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 140,
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 143,
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 146,
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 149,
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 152,
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 155,
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 169,
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 172,
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 175,
            "description": "The selected date. Keep track of this separately from the ng-model value so that we\ncan know, when the ng-model value changes, what the previous value was before it's updated\nin the component's UI.",
            "type": "{Date}",
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 184,
            "description": "The date that is currently focused or showing in the calendar. This will initially be set\nto the ng-model value if set, otherwise to today. It will be updated as the user navigates\nto other months. The cell corresponding to the displayDate does not necesarily always have\nfocus in the document (such as for cases when the user is scrolling the calendar).",
            "type": "{Date}",
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 193,
            "description": "The date that has or should have focus.",
            "type": "{Date}",
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 199,
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 202,
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 214,
            "description": "Handles a click event on a date cell.\nCreated here so that every cell can use the same function instance.",
            "this": "{HTMLTableCellElement} The cell that was clicked.",
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 234,
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 236,
            "description": "Sets up the controller's reference to ngModelController.",
            "params": [
                {
                    "name": "ngModelCtrl",
                    "description": "",
                    "type": "!angular.NgModelController"
                }
            ],
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 249,
            "description": "Initialize the calendar by building the months that are initially visible.\nInitialization should occur after the ngModel value is known.",
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 261,
            "description": "Hides the vertical scrollbar on the calendar scroller by setting the width on the\ncalendar scroller and the `overflow: hidden` wrapper around the scroller, and then setting\na padding-right on the scroller equal to the width of the browser's scrollbar.\n\nThis will cause a reflow.",
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 283,
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 289,
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 291,
            "description": "Handles a key event in the calendar with the appropriate action. The action will either\nbe to select the focused date or to navigate to focus a new date.",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "KeyboardEvent"
                }
            ],
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 335,
            "description": "Gets the date to focus as the result of a key event.",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "KeyboardEvent"
                }
            ],
            "return": {
                "description": "Date to navigate to, or null if the key does not match a calendar shortcut.",
                "type": "Date"
            },
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 363,
            "description": "Gets the \"index\" of the currently selected date as it would be in the virtual-repeat.",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 372,
            "description": "Scrolls to the month of the given date.",
            "params": [
                {
                    "name": "date",
                    "description": "",
                    "type": "Date"
                }
            ],
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 385,
            "description": "Sets the ng-model value for the calendar and emits a change event.",
            "params": [
                {
                    "name": "date",
                    "description": "",
                    "type": "Date"
                }
            ],
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 395,
            "description": "Focus the cell corresponding to the given date.",
            "params": [
                {
                    "name": "opt_date",
                    "description": "",
                    "type": "Date="
                }
            ],
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 417,
            "description": "If a date exceeds minDate or maxDate, returns date matching minDate or maxDate, respectively.\nOtherwise, returns the date.",
            "params": [
                {
                    "name": "date",
                    "description": "",
                    "type": "Date"
                }
            ],
            "return": {
                "description": "",
                "type": "Date"
            },
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 434,
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 436,
            "description": "Change the selected date in the calendar (ngModel value has already been changed).",
            "params": [
                {
                    "name": "date",
                    "description": "",
                    "type": "Date"
                }
            ],
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 468,
            "description": "Change the date that is being shown in the calendar. If the given date is in a different\nmonth, the displayed month will be transitioned.",
            "params": [
                {
                    "name": "date",
                    "description": "",
                    "type": "Date"
                }
            ],
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 499,
            "description": "Animates the transition from the calendar's current month to the given month.",
            "params": [
                {
                    "name": "date",
                    "description": "",
                    "type": "Date"
                }
            ],
            "return": {
                "description": "The animation promise.",
                "type": "angular.$q.Promise"
            },
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 509,
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 511,
            "description": "Builds and appends a day-of-the-week header to the calendar.\nThis should only need to be called once during initialization.",
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 529,
            "description": "Gets an identifier for a date unique to the calendar instance for internal\npurposes. Not to be displayed.",
            "params": [
                {
                    "name": "date",
                    "description": "",
                    "type": "Date"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 554,
            "description": "Private directive consumed by md-calendar. Having this directive lets the calender use\nmd-virtual-repeat and also cleanly separates the month DOM construction functions from\nthe rest of the calendar controller logic.",
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 586,
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 589,
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 592,
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 595,
            "description": "Controller for a single calendar month.\nngInject @constructor",
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 605,
            "description": "Number of months from the start of the month \"items\" that the currently rendered month\noccurs. Set via angular data binding.",
            "type": "{number}",
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 612,
            "description": "Date cell to focus after appending the month to the document.",
            "type": "{HTMLElement}",
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 620,
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 635,
            "description": "Creates a single cell to contain a date in the calendar with all appropriate\nattributes and classes added. If a date is given, the cell content will be set\nbased on the date.",
            "params": [
                {
                    "name": "opt_date",
                    "description": "",
                    "type": "Date="
                }
            ],
            "return": {
                "description": "",
                "type": "HTMLElement"
            },
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 694,
            "description": "Check whether date is in range and enabled",
            "params": [
                {
                    "name": "opt_date",
                    "description": "",
                    "type": "Date="
                }
            ],
            "return": {
                "description": "Whether the date is enabled.",
                "type": "Boolean"
            },
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 706,
            "description": "Builds a `tr` element for the calendar grid.",
            "params": [
                {
                    "name": "rowNumber",
                    "description": "The week number within the month."
                }
            ],
            "return": {
                "description": "",
                "type": "HTMLElement"
            },
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 723,
            "description": "Builds the <tbody> content for the given date's month.",
            "params": [
                {
                    "name": "opt_dateInMonth",
                    "description": "",
                    "type": "Date="
                }
            ],
            "return": {
                "description": "A document fragment containing the <tr> elements.",
                "type": "DocumentFragment"
            },
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 823,
            "description": "Gets the day-of-the-week index for a date for the current locale.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "date",
                    "description": "",
                    "type": "Date"
                }
            ],
            "return": {
                "description": "The column index of the date in the calendar.",
                "type": "Number"
            },
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 914,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 916,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 919,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 922,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 925,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 928,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 931,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 934,
            "description": "Function that converts the date portion of a Date to a string.",
            "type": "{(function(Date): string)}",
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 940,
            "description": "Function that converts a date string to a Date object (the date portion)",
            "type": "{function(string): Date}",
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 946,
            "description": "Function that formats a Date into a month header string.",
            "type": "{function(Date): string}",
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 952,
            "description": "Function that formats a week number into a label for the week.",
            "type": "{function(number): string}",
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 958,
            "description": "Function that formats a date into a long aria-label that is read\nwhen the focused date changes.",
            "type": "{function(Date): string}",
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 965,
            "description": "ARIA label for the calendar \"dialog\" used in the datepicker.",
            "type": "{string}",
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 971,
            "description": "ARIA label for the datepicker's \"Open calendar\" buttons.",
            "type": "{string}",
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 978,
            "description": "Factory function that returns an instance of the dateLocale service.\nngInject",
            "params": [
                {
                    "name": "$locale",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "DateLocale"
            },
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 985,
            "description": "Default date-to-string formatting function.",
            "params": [
                {
                    "name": "date",
                    "description": "",
                    "type": "!Date"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 1010,
            "description": "Default string-to-date parsing function.",
            "params": [
                {
                    "name": "dateString",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "!Date"
            },
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 1019,
            "description": "Default function to determine whether a string makes sense to be\nparsed to a Date object.\n\nThis is very permissive and is just a basic sanity check to ensure that\nthings like single integers aren't able to be parsed into dates.",
            "params": [
                {
                    "name": "dateString",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 1037,
            "description": "Default date-to-string formatter to get a month header.",
            "params": [
                {
                    "name": "date",
                    "description": "",
                    "type": "!Date"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 1046,
            "description": "Default week number formatter.",
            "params": [
                {
                    "name": "number",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 1055,
            "description": "Default formatter for date cell aria-labels.",
            "params": [
                {
                    "name": "date",
                    "description": "",
                    "type": "!Date"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 1219,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 1222,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 1225,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 1228,
            "description": "Height of the calendar pane used to check if the pane is going outside the boundary of\nthe viewport. See calendar.scss for how $md-calendar-height is computed; an extra 20px is\nalso added to space the pane away from the exact edge of the screen.\n\n This is computed statically now, but can be changed to be measured if the circumstances\n of calendar sizing are changed.",
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 1238,
            "description": "Width of the calendar pane used to check if the pane is going outside the boundary of\nthe viewport. See calendar.scss for how $md-calendar-width is computed; an extra 20px is\nalso added to space the pane away from the exact edge of the screen.\n\n This is computed statically now, but can be changed to be measured if the circumstances\n of calendar sizing are changed.",
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 1248,
            "description": "Controller for md-datepicker.\n\nngInject @constructor",
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 1255,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 1258,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 1261,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 1264,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 1267,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 1270,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 1276,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 1279,
            "description": "The root document element. This is used for attaching a top-level click handler to\nclose the calendar panel when a click outside said panel occurs. We use `documentElement`\ninstead of body because, when scrolling is disabled, some browsers consider the body element\nto be completely off the screen and propagate events directly to the html element.",
            "type": "{!angular.JQLite}",
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 1288,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 1291,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 1294,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 1297,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 1300,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 1303,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 1306,
            "description": "Element covering everything but the input in the top of the floating calendar pane.",
            "type": "{HTMLElement}",
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 1312,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 1315,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 1318,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 1321,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 1324,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 1327,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 1331,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 1334,
            "description": "Element from which the calendar pane was opened. Keep track of this so that we can return\nfocus to it when the pane is closed.",
            "type": "{HTMLElement}",
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 1345,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 1348,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 1369,
            "description": "Sets up the controller's reference to ngModelController.",
            "params": [
                {
                    "name": "ngModelCtrl",
                    "description": "",
                    "type": "!angular.NgModelController"
                }
            ],
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 1392,
            "description": "Attach event listeners for both the text input and the md-calendar.\nEvents are used instead of ng-model so that updates don't infinitely update the other\non a change. This should also be more performant than using a $watch.",
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 1415,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 1434,
            "description": "Capture properties set to the date-picker and imperitively handle internal changes.\nThis is done to avoid setting up additional $watches.",
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 1459,
            "description": "Sets whether the date-picker is disabled.",
            "params": [
                {
                    "name": "isDisabled",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 1469,
            "description": "Sets the custom ngModel.$error flags to be consumed by ngMessages. Flags are:\n  - mindate: whether the selected date is before the minimum date.\n  - maxdate: whether the selected flag is after the maximum date.\n  - filtered: whether the selected date is allowed by the custom filtering function.\n  - valid: whether the entered text input is a valid date\n\nThe 'required' flag is handled automatically by ngModel.",
            "params": [
                {
                    "name": "opt_date",
                    "description": "Date to check. If not given, defaults to the datepicker's model value.",
                    "type": "Date="
                }
            ],
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 1517,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 1525,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 1530,
            "description": "Sets the model value if the user input is a valid date.\nAdds an invalid class to the input element if not.",
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 1556,
            "description": "Check whether date is in range and enabled",
            "params": [
                {
                    "name": "opt_date",
                    "description": "",
                    "type": "Date="
                }
            ],
            "return": {
                "description": "Whether the date is enabled.",
                "type": "Boolean"
            },
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 1566,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 1635,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 1648,
            "description": "Open the floating calendar pane.",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                }
            ],
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 1681,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 1697,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 1702,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 1711,
            "description": "Sets whether the input is currently focused.",
            "params": [
                {
                    "name": "isFocused",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 1722,
            "description": "Handles a click on the document body when the floating calendar pane is open.\nCloses the floating calendar pane if the click is not inside of it.",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "MouseEvent"
                }
            ],
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 1743,
            "description": "Utility for performing date calculations to facilitate operation of the calendar and\ndatepicker.",
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 1769,
            "description": "Gets the first day of the month for the given date's month.",
            "params": [
                {
                    "name": "date",
                    "description": "",
                    "type": "Date"
                }
            ],
            "return": {
                "description": "",
                "type": "Date"
            },
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 1778,
            "description": "Gets the number of days in the month for the given date's month.",
            "params": [
                {
                    "name": "date",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 1787,
            "description": "Get an arbitrary date in the month after the given date's month.",
            "params": [
                {
                    "name": "date",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Date"
            },
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 1796,
            "description": "Get an arbitrary date in the month before the given date's month.",
            "params": [
                {
                    "name": "date",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Date"
            },
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 1805,
            "description": "Gets whether two dates have the same month and year.",
            "params": [
                {
                    "name": "d1",
                    "description": "",
                    "type": "Date"
                },
                {
                    "name": "d2",
                    "description": "",
                    "type": "Date"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 1815,
            "description": "Gets whether two dates are the same day (not not necesarily the same time).",
            "params": [
                {
                    "name": "d1",
                    "description": "",
                    "type": "Date"
                },
                {
                    "name": "d2",
                    "description": "",
                    "type": "Date"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 1825,
            "description": "Gets whether a date is in the month immediately after some date.",
            "params": [
                {
                    "name": "startDate",
                    "description": "The date from which to compare.",
                    "type": "Date"
                },
                {
                    "name": "endDate",
                    "description": "The date to check.",
                    "type": "Date"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 1836,
            "description": "Gets whether a date is in the month immediately before some date.",
            "params": [
                {
                    "name": "startDate",
                    "description": "The date from which to compare.",
                    "type": "Date"
                },
                {
                    "name": "endDate",
                    "description": "The date to check.",
                    "type": "Date"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 1847,
            "description": "Gets the midpoint between two dates.",
            "params": [
                {
                    "name": "d1",
                    "description": "",
                    "type": "Date"
                },
                {
                    "name": "d2",
                    "description": "",
                    "type": "Date"
                }
            ],
            "return": {
                "description": "",
                "type": "Date"
            },
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 1857,
            "description": "Gets the week of the month that a given date occurs in.",
            "params": [
                {
                    "name": "date",
                    "description": "",
                    "type": "Date"
                }
            ],
            "return": {
                "description": "Index of the week of the month (zero-based).",
                "type": "Number"
            },
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 1867,
            "description": "Gets a new date incremented by the given number of days. Number of days can be negative.",
            "params": [
                {
                    "name": "date",
                    "description": "",
                    "type": "Date"
                },
                {
                    "name": "numberOfDays",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Date"
            },
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 1877,
            "description": "Gets a new date incremented by the given number of months. Number of months can be negative.\nIf the date of the given month does not match the target month, the date will be set to the\nlast day of the month.",
            "params": [
                {
                    "name": "date",
                    "description": "",
                    "type": "Date"
                },
                {
                    "name": "numberOfMonths",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Date"
            },
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 1901,
            "description": "Get the integer distance between two months. This *only* considers the month and year\nportion of the Date instances.",
            "params": [
                {
                    "name": "start",
                    "description": "",
                    "type": "Date"
                },
                {
                    "name": "end",
                    "description": "",
                    "type": "Date"
                }
            ],
            "return": {
                "description": "Number of months between `start` and `end`. If `end` is before `start`\n    chronologically, this number will be negative.",
                "type": "Number"
            },
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 1914,
            "description": "Gets the last day of the month for the given date.",
            "params": [
                {
                    "name": "date",
                    "description": "",
                    "type": "Date"
                }
            ],
            "return": {
                "description": "",
                "type": "Date"
            },
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 1923,
            "description": "Checks whether a date is valid.",
            "params": [
                {
                    "name": "date",
                    "description": "",
                    "type": "Date"
                }
            ],
            "return": {
                "description": "Whether the date is a valid Date.",
                "type": "Boolean"
            },
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 1932,
            "description": "Sets a date's time to midnight.",
            "params": [
                {
                    "name": "date",
                    "description": "",
                    "type": "Date"
                }
            ],
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 1942,
            "description": "Creates a date with the time set to midnight.\nDrop-in replacement for two forms of the Date constructor:\n1. No argument for Date representing now.\n2. Single-argument value representing number of seconds since Unix Epoch\nor a Date object.",
            "params": [
                {
                    "name": "opt_value",
                    "description": "",
                    "type": "Number|Date="
                }
            ],
            "return": {
                "description": "New date with time set to midnight.",
                "type": "Date"
            },
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js",
            "line": 1962,
            "description": "Checks if a date is within a min and max range, ignoring the time component.\nIf minDate or maxDate are not dates, they are ignored.",
            "params": [
                {
                    "name": "date",
                    "description": "",
                    "type": "Date"
                },
                {
                    "name": "minDate",
                    "description": "",
                    "type": "Date"
                },
                {
                    "name": "maxDate",
                    "description": "",
                    "type": "Date"
                }
            ],
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\dialog\\dialog.js",
            "line": 10,
            "ngdoc": "module",
            "name": "material.components.dialog",
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\dialog\\dialog.js",
            "line": 75,
            "class": "",
            "module": "material.components.dialog"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\dialog\\dialog.js",
            "line": 331,
            "ngdoc": "method",
            "name": "$mdDialog#alert",
            "description": "Builds a preconfigured dialog with the specified message.",
            "return": {
                "description": "an `$mdDialogPreset` with the chainable configuration methods:\n\n- $mdDialogPreset#title(string) - Sets the alert title.\n- $mdDialogPreset#textContent(string) - Sets the alert message.\n- $mdDialogPreset#htmlContent(string) - Sets the alert message as HTML. Requires ngSanitize\n    module to be loaded. HTML is not run through Angular's compiler.\n- $mdDialogPreset#ok(string) - Sets the alert \"Okay\" button text.\n- $mdDialogPreset#theme(string) - Sets the theme of the alert dialog.\n- $mdDialogPreset#targetEvent(DOMClickEvent=) - A click's event object. When passed in as an option,\n    the location of the click will be used as the starting point for the opening animation\n    of the the dialog.",
                "type": "Obj"
            },
            "class": "",
            "module": "material.components.dialog"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\dialog\\dialog.js",
            "line": 352,
            "ngdoc": "method",
            "name": "$mdDialog#confirm",
            "description": "Builds a preconfigured dialog with the specified message. You can call show and the promise returned\nwill be resolved only if the user clicks the confirm action on the dialog.",
            "return": {
                "description": "an `$mdDialogPreset` with the chainable configuration methods:\n\nAdditionally, it supports the following methods:\n\n- $mdDialogPreset#title(string) - Sets the confirm title.\n- $mdDialogPreset#textContent(string) - Sets the confirm message.\n- $mdDialogPreset#htmlContent(string) - Sets the confirm message as HTML. Requires ngSanitize\n    module to be loaded. HTML is not run through Angular's compiler.\n- $mdDialogPreset#ok(string) - Sets the confirm \"Okay\" button text.\n- $mdDialogPreset#cancel(string) - Sets the confirm \"Cancel\" button text.\n- $mdDialogPreset#theme(string) - Sets the theme of the confirm dialog.\n- $mdDialogPreset#targetEvent(DOMClickEvent=) - A click's event object. When passed in as an option,\n    the location of the click will be used as the starting point for the opening animation\n    of the the dialog.",
                "type": "Obj"
            },
            "class": "",
            "module": "material.components.dialog"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\dialog\\dialog.js",
            "line": 377,
            "ngdoc": "method",
            "name": "$mdDialog#show",
            "description": "Show a dialog with the specified options.",
            "params": [
                {
                    "name": "optionsOrPreset",
                    "description": "Either provide an `$mdDialogPreset` returned from `alert()`, and\n`confirm()`, or an options object with the following properties:\n  - `templateUrl` - `{string=}`: The url of a template that will be used as the content\n  of the dialog.\n  - `template` - `{string=}`: HTML template to show in the dialog. This **must** be trusted HTML\n     with respect to Angular's [$sce service](https://docs.angularjs.org/api/ng/service/$sce).\n     This template should **never** be constructed with any kind of user input or user data.\n  - `autoWrap` - `{boolean=}`: Whether or not to automatically wrap the template with a\n    `<md-dialog>` tag if one is not provided. Defaults to true. Can be disabled if you provide a\n    custom dialog directive.\n  - `targetEvent` - `{DOMClickEvent=}`: A click's event object. When passed in as an option,\n    the location of the click will be used as the starting point for the opening animation\n    of the the dialog.\n  - `openFrom` - `{string|Element|object}`: The query selector, DOM element or the Rect object\n    that is used to determine the bounds (top, left, height, width) from which the Dialog will\n    originate.\n  - `closeTo` - `{string|Element|object}`: The query selector, DOM element or the Rect object\n    that is used to determine the bounds (top, left, height, width) to which the Dialog will\n    target.\n  - `scope` - `{object=}`: the scope to link the template / controller to. If none is specified,\n    it will create a new isolate scope.\n    This scope will be destroyed when the dialog is removed unless `preserveScope` is set to true.\n  - `preserveScope` - `{boolean=}`: whether to preserve the scope when the element is removed. Default is false\n  - `disableParentScroll` - `{boolean=}`: Whether to disable scrolling while the dialog is open.\n    Default true.\n  - `hasBackdrop` - `{boolean=}`: Whether there should be an opaque backdrop behind the dialog.\n    Default true.\n  - `clickOutsideToClose` - `{boolean=}`: Whether the user can click outside the dialog to\n    close it. Default false.\n  - `escapeToClose` - `{boolean=}`: Whether the user can press escape to close the dialog.\n    Default true.\n  - `focusOnOpen` - `{boolean=}`: An option to override focus behavior on open. Only disable if\n    focusing some other way, as focus management is required for dialogs to be accessible.\n    Defaults to true.\n  - `controller` - `{function|string=}`: The controller to associate with the dialog. The controller\n    will be injected with the local `$mdDialog`, which passes along a scope for the dialog.\n  - `locals` - `{object=}`: An object containing key/value pairs. The keys will be used as names\n    of values to inject into the controller. For example, `locals: {three: 3}` would inject\n    `three` into the controller, with the value 3. If `bindToController` is true, they will be\n    copied to the controller instead.\n  - `bindToController` - `bool`: bind the locals to the controller, instead of passing them in.\n  - `resolve` - `{object=}`: Similar to locals, except it takes promises as values, and the\n    dialog will not open until all of the promises resolve.\n  - `controllerAs` - `{string=}`: An alias to assign the controller to on the scope.\n  - `parent` - `{element=}`: The element to append the dialog to. Defaults to appending\n    to the root element of the application.\n  - `onShowing` `{function=} Callback function used to announce the show() action is\n    starting.\n  - `onComplete` `{function=}`: Callback function used to announce when the show() action is\n    finished.\n  - `onRemoving` `{function=}`: Callback function used to announce the close/hide() action is\n    starting. This allows developers to run custom animations in parallel the close animations.\n  - `fullscreen` `{boolean=}`: An option to apply `.md-dialog-fullscreen` class on open.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "A promise that can be resolved with `$mdDialog.hide()` or\nrejected with `$mdDialog.cancel()`.",
                "type": "Promise"
            },
            "class": "",
            "module": "material.components.dialog"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\dialog\\dialog.js",
            "line": 441,
            "ngdoc": "method",
            "name": "$mdDialog#hide",
            "description": "Hide an existing dialog and resolve the promise returned from `$mdDialog.show()`.",
            "params": [
                {
                    "name": "response",
                    "description": "An argument for the resolved promise.",
                    "type": "*="
                }
            ],
            "return": {
                "description": "A promise that is resolved when the dialog has been closed.",
                "type": "Promise"
            },
            "class": "",
            "module": "material.components.dialog"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\dialog\\dialog.js",
            "line": 453,
            "ngdoc": "method",
            "name": "$mdDialog#cancel",
            "description": "Hide an existing dialog and reject the promise returned from `$mdDialog.show()`.",
            "params": [
                {
                    "name": "response",
                    "description": "An argument for the rejected promise.",
                    "type": "*="
                }
            ],
            "return": {
                "description": "A promise that is resolved when the dialog has been closed.",
                "type": "Promise"
            },
            "class": "",
            "module": "material.components.dialog"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\dialog\\dialog.js",
            "line": 546,
            "description": "The specified template should contain a <md-dialog> wrapper element....",
            "class": "",
            "module": "material.components.dialog"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\dialog\\dialog.js",
            "line": 575,
            "class": "",
            "module": "material.components.dialog"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\dialog\\dialog.js",
            "line": 591,
            "description": "Check to see if they used the deprecated .md-actions class and log a warning",
            "class": "",
            "module": "material.components.dialog"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\dialog\\dialog.js",
            "line": 602,
            "description": "For alerts, focus on content... otherwise focus on\nthe close button (or equivalent)",
            "class": "",
            "module": "material.components.dialog"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\dialog\\dialog.js",
            "line": 612,
            "description": "If no element with class dialog-close, try to find the last\nbutton child in md-actions and assume it is a close button.\n\nIf we find no actions at all, log a warning to the console.",
            "class": "",
            "module": "material.components.dialog"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\dialog\\dialog.js",
            "line": 629,
            "description": "Remove function for all dialogs",
            "class": "",
            "module": "material.components.dialog"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\dialog\\dialog.js",
            "line": 650,
            "description": "For normal closes, animate the removal.\nFor forced closes (like $destroy events), skip the animations",
            "class": "",
            "module": "material.components.dialog"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\dialog\\dialog.js",
            "line": 658,
            "description": "Detach the element",
            "class": "",
            "module": "material.components.dialog"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\dialog\\dialog.js",
            "line": 669,
            "description": "Capture originator/trigger/from/to element information (if available)\nand the parent container for the dialog; defaults to the $rootElement\nunless overridden in the options.parent",
            "class": "",
            "module": "material.components.dialog"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\dialog\\dialog.js",
            "line": 689,
            "description": "Identify the bounding RECT for the target element",
            "class": "",
            "module": "material.components.dialog"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\dialog\\dialog.js",
            "line": 712,
            "description": "If the specifier is a simple string selector, then query for\nthe DOM element.",
            "class": "",
            "module": "material.components.dialog"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\dialog\\dialog.js",
            "line": 729,
            "description": "Listen for escape keys and outside clicks to auto close",
            "class": "",
            "module": "material.components.dialog"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\dialog\\dialog.js",
            "line": 821,
            "description": "Show modal backdrop element...",
            "class": "",
            "module": "material.components.dialog"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\dialog\\dialog.js",
            "line": 837,
            "description": "Hide modal backdrop element...",
            "class": "",
            "module": "material.components.dialog"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\dialog\\dialog.js",
            "line": 855,
            "description": "Inject ARIA-specific attributes appropriate for Dialogs",
            "class": "",
            "module": "material.components.dialog"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\dialog\\dialog.js",
            "line": 909,
            "description": "Prevents screen reader interaction behind modal window\non swipe interfaces",
            "class": "",
            "module": "material.components.dialog"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\dialog\\dialog.js",
            "line": 926,
            "description": "Walk DOM to apply or remove aria-hidden on sibling nodes\nand parent sibling nodes",
            "class": "",
            "module": "material.components.dialog"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\dialog\\dialog.js",
            "line": 950,
            "description": "Ensure the dialog container fill-stretches to the viewport",
            "class": "",
            "module": "material.components.dialog"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\dialog\\dialog.js",
            "line": 966,
            "description": "Dialog open and pop-in animation",
            "class": "",
            "module": "material.components.dialog"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\dialog\\dialog.js",
            "line": 1015,
            "description": "Dialog close and pop-out animation",
            "class": "",
            "module": "material.components.dialog"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\dialog\\dialog.js",
            "line": 1022,
            "description": "Utility function to filter out raw DOM nodes",
            "class": "",
            "module": "material.components.dialog"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\divider\\divider.js",
            "line": 10,
            "ngdoc": "module",
            "name": "material.components.divider",
            "description": "Divider module!",
            "class": "",
            "module": "material.components.dialog"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\fabActions\\fabActions.js",
            "line": 13,
            "ngdoc": "module",
            "name": "material.components.fabActions",
            "class": "",
            "module": "material.components.divider"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\fabSpeedDial\\fabSpeedDial.js",
            "line": 311,
            "description": "The duration of the CSS animation in milliseconds.",
            "type": "{number}",
            "class": "",
            "module": "material.components.fabActions"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\fabSpeedDial\\fabSpeedDial.js",
            "line": 318,
            "ngdoc": "module",
            "name": "material.components.fabSpeedDial",
            "class": "",
            "module": "material.components.fabActions"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\fabToolbar\\fabToolbar.js",
            "line": 13,
            "ngdoc": "module",
            "name": "material.components.fabToolbar",
            "class": "",
            "module": "material.components.fabSpeedDial"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\fabTrigger\\fabTrigger.js",
            "line": 13,
            "ngdoc": "module",
            "name": "material.components.fabTrigger",
            "class": "",
            "module": "material.components.fabToolbar"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\gridList\\gridList.js",
            "line": 10,
            "ngdoc": "module",
            "name": "material.components.gridList",
            "class": "",
            "module": "material.components.fabSpeedDial"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\gridList\\gridList.js",
            "line": 126,
            "description": "Watches for changes in media, invalidating layout as necessary.",
            "class": "",
            "module": "material.components.gridList"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\gridList\\gridList.js",
            "line": 149,
            "description": "Performs grid layout if the provided mediaName matches the currently\nactive media type.",
            "class": "",
            "module": "material.components.gridList"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\gridList\\gridList.js",
            "line": 165,
            "description": "Invokes the layout engine, and uses its results to lay out our\ntile elements.",
            "params": [
                {
                    "name": "tilesInvalidated",
                    "description": "Whether tiles have been\n   added/removed/moved since the last layout. This is to avoid situations\n   where tiles are replaced with properties identical to their removed\n   counterparts.",
                    "type": "Boolean"
                }
            ],
            "class": "",
            "module": "material.components.gridList"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\gridList\\gridList.js",
            "line": 249,
            "description": "Gets the styles applied to a tile element described by the given parameters.",
            "params": [
                {
                    "name": "}",
                    "description": "position The row and column indices of the tile.",
                    "type": "Row: number, col: number"
                },
                {
                    "name": "}",
                    "description": "spans The rowSpan and colSpan of the tile.",
                    "type": "Row: number, col: number"
                },
                {
                    "name": "colCount",
                    "description": "The number of columns.",
                    "type": "Number"
                },
                {
                    "name": "rowCount",
                    "description": "The number of rows.",
                    "type": "Number"
                },
                {
                    "name": "gutter",
                    "description": "The amount of space between tiles. This will be something like\n    '5px' or '2em'.",
                    "type": "String"
                },
                {
                    "name": "rowMode",
                    "description": "The row height mode. Can be one of:\n    'fixed': all rows have a fixed size, given by rowHeight,\n    'ratio': row height defined as a ratio to width, or\n    'fit': fit to the grid-list element height, divinding evenly among rows.",
                    "type": "String"
                },
                {
                    "name": "rowHeight",
                    "description": "The height of a row. This is only used for 'fixed' mode and\n    for 'ratio' mode. For 'ratio' mode, this is the *ratio* of width-to-height (e.g., 0.75).",
                    "type": "String|number"
                }
            ],
            "return": {
                "description": "Map of CSS properties to be applied to the style element. Will define\n    values for top, left, width, height, marginTop, and paddingTop.",
                "type": "Object"
            },
            "class": "",
            "module": "material.components.gridList"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\gridList\\gridList.js",
            "line": 364,
            "description": "Gets an array of objects containing the rowspan and colspan for each tile.",
            "return": {
                "description": ">}",
                "type": "Array<row: number, col: number"
            },
            "class": "",
            "module": "material.components.gridList"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\gridList\\gridList.js",
            "line": 461,
            "description": "Set the reflow animator callback",
            "class": "",
            "module": "material.components.gridList"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\gridList\\gridList.js",
            "line": 470,
            "description": "Publish layout function",
            "class": "",
            "module": "material.components.gridList"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\gridList\\gridList.js",
            "line": 482,
            "description": "An array of objects describing each tile's position in the grid.",
            "class": "",
            "module": "material.components.gridList"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\gridList\\gridList.js",
            "line": 489,
            "description": "Maps grid positioning to an element and a set of styles using the\nprovided updateFn.",
            "class": "",
            "module": "material.components.gridList"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\gridList\\gridList.js",
            "line": 501,
            "description": "Default animator simply sets the element.css( <styles> ). An alternate\nanimator can be provided as an argument. The function has the following\nsignature:\n\n   function({grid: {element: JQLite, style: Object}, tiles: Array<{element: JQLite, style: Object}>)",
            "class": "",
            "module": "material.components.gridList"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\gridList\\gridList.js",
            "line": 516,
            "description": "Timing for the most recent layout run.",
            "class": "",
            "module": "material.components.gridList"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\gridList\\gridList.js",
            "line": 531,
            "description": "Default Gridlist animator simple sets the css for each element;\nNOTE: any transitions effects must be manually set in the CSS.\ne.g.\n\n md-grid-tile {\n   transition: all 700ms ease-out 50ms;\n }",
            "class": "",
            "module": "material.components.gridList"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\gridList\\gridList.js",
            "line": 548,
            "description": "Calculates the positions of tiles.\n\nThe algorithm works as follows:\n   An Array<Number> with length colCount (spaceTracker) keeps track of\n   available tiling positions, where elements of value 0 represents an\n   empty position. Space for a tile is reserved by finding a sequence of\n   0s with length <= than the tile's colspan. When such a space has been\n   found, the occupied tile positions are incremented by the tile's\n   rowspan value, as these positions have become unavailable for that\n   many rows.\n\n   If the end of a row has been reached without finding space for the\n   tile, spaceTracker's elements are each decremented by 1 to a minimum\n   of 0. Rows are searched in this fashion until space is found.",
            "class": "",
            "module": "material.components.gridList"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\icon\\icon.js",
            "line": 10,
            "ngdoc": "module",
            "name": "material.components.icon",
            "description": "Icon",
            "class": "",
            "module": "material.components.gridList"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\icon\\icon.js",
            "line": 198,
            "description": "Directive postLink\nSupports embedded SVGs, font-icons, & external SVGs",
            "class": "",
            "module": "material.components.icon"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\icon\\icon.js",
            "line": 331,
            "ngdoc": "method",
            "name": "$mdIconProvider#icon",
            "description": "Register a source URL for a specific icon name; the name may include optional 'icon set' name prefix.\nThese icons  will later be retrieved from the cache using `$mdIcon( <icon name> )`",
            "params": [
                {
                    "name": "id",
                    "description": "Icon name/id used to register the icon",
                    "type": "String"
                },
                {
                    "name": "url",
                    "description": "specifies the external location for the data file. Used internally by `$http` to load the\ndata or as part of the lookup in `$templateCache` if pre-loading was configured.",
                    "type": "String"
                },
                {
                    "name": "viewBoxSize",
                    "description": "Sets the width and height the icon's viewBox.\nIt is ignored for icons with an existing viewBox. Default size is 24.",
                    "type": "Number="
                }
            ],
            "return": {
                "description": "an `$mdIconProvider` reference; used to support method call chains for the API",
                "type": "Obj"
            },
            "usage": "<hljs lang=\"js\">\n  app.config(function($mdIconProvider) {\n\n    // Configure URLs for icons specified by [set:]id.\n\n    $mdIconProvider\n         .icon('android', 'my/app/android.svg')    // Register a specific icon (by name)\n         .icon('work:chair', 'my/app/chair.svg');  // Register icon in a specific set\n  });\n</hljs>",
            "class": "",
            "module": "material.components.icon"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\icon\\icon.js",
            "line": 360,
            "ngdoc": "method",
            "name": "$mdIconProvider#iconSet",
            "description": "Register a source URL for a 'named' set of icons; group of SVG definitions where each definition\nhas an icon id. Individual icons can be subsequently retrieved from this cached set using\n`$mdIcon(<icon set name>:<icon name>)`",
            "params": [
                {
                    "name": "id",
                    "description": "Icon name/id used to register the iconset",
                    "type": "String"
                },
                {
                    "name": "url",
                    "description": "specifies the external location for the data file. Used internally by `$http` to load the\ndata or as part of the lookup in `$templateCache` if pre-loading was configured.",
                    "type": "String"
                },
                {
                    "name": "viewBoxSize",
                    "description": "Sets the width and height of the viewBox of all icons in the set. \nIt is ignored for icons with an existing viewBox. All icons in the icon set should be the same size.\nDefault value is 24.",
                    "type": "Number="
                }
            ],
            "return": {
                "description": "an `$mdIconProvider` reference; used to support method call chains for the API",
                "type": "Obj"
            },
            "usage": "<hljs lang=\"js\">\n  app.config(function($mdIconProvider) {\n\n    // Configure URLs for icons specified by [set:]id.\n\n    $mdIconProvider\n         .iconSet('social', 'my/app/social.svg')   // Register a named icon set\n  });\n</hljs>",
            "class": "",
            "module": "material.components.icon"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\icon\\icon.js",
            "line": 391,
            "ngdoc": "method",
            "name": "$mdIconProvider#defaultIconSet",
            "description": "Register a source URL for the default 'named' set of icons. Unless explicitly registered,\nsubsequent lookups of icons will failover to search this 'default' icon set.\nIcon can be retrieved from this cached, default set using `$mdIcon(<name>)`",
            "params": [
                {
                    "name": "url",
                    "description": "specifies the external location for the data file. Used internally by `$http` to load the\ndata or as part of the lookup in `$templateCache` if pre-loading was configured.",
                    "type": "String"
                },
                {
                    "name": "viewBoxSize",
                    "description": "Sets the width and height of the viewBox of all icons in the set. \nIt is ignored for icons with an existing viewBox. All icons in the icon set should be the same size.\nDefault value is 24.",
                    "type": "Number="
                }
            ],
            "return": {
                "description": "an `$mdIconProvider` reference; used to support method call chains for the API",
                "type": "Obj"
            },
            "usage": "<hljs lang=\"js\">\n  app.config(function($mdIconProvider) {\n\n    // Configure URLs for icons specified by [set:]id.\n\n    $mdIconProvider\n         .defaultIconSet( 'my/app/social.svg' )   // Register a default icon set\n  });\n</hljs>",
            "class": "",
            "module": "material.components.icon"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\icon\\icon.js",
            "line": 420,
            "ngdoc": "method",
            "name": "$mdIconProvider#defaultFontSet",
            "description": "When using Font-Icons, Angular Material assumes the the Material Design icons will be used and automatically\nconfigures the default font-set == 'material-icons'. Note that the font-set references the font-icon library\nclass style that should be applied to the `<md-icon>`.\n\nConfiguring the default means that the attributes\n`md-font-set=\"material-icons\"` or `class=\"material-icons\"` do not need to be explicitly declared on the\n`<md-icon>` markup. For example:\n\n `<md-icon> face </md-icon>`\n will render as\n `<span class=\"material-icons\"> face </span>`, and\n\n `<md-icon md-font-set=\"fa\"> face </md-icon>`\n will render as\n `<span class=\"fa\"> face </span>`",
            "params": [
                {
                    "name": "name",
                    "description": "of the font-library style that should be applied to the md-icon DOM element",
                    "type": "String"
                }
            ],
            "usage": "<hljs lang=\"js\">\n  app.config(function($mdIconProvider) {\n    $mdIconProvider.defaultFontSet( 'fontawesome' );\n  });\n</hljs>",
            "class": "",
            "module": "material.components.icon"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\icon\\icon.js",
            "line": 452,
            "ngdoc": "method",
            "name": "$mdIconProvider#defaultViewBoxSize",
            "description": "While `<md-icon />` markup can also be style with sizing CSS, this method configures\nthe default width **and** height used for all icons; unless overridden by specific CSS.\nThe default sizing is (24px, 24px).",
            "params": [
                {
                    "name": "viewBoxSize",
                    "description": "Sets the width and height of the viewBox for an icon or an icon set.\nAll icons in a set should be the same size. The default value is 24.",
                    "type": "Number="
                }
            ],
            "return": {
                "description": "an `$mdIconProvider` reference; used to support method call chains for the API",
                "type": "Obj"
            },
            "usage": "<hljs lang=\"js\">\n  app.config(function($mdIconProvider) {\n\n    // Configure URLs for icons specified by [set:]id.\n\n    $mdIconProvider\n         .defaultViewBoxSize(36)   // Register a default icon size (width == height)\n  });\n</hljs>",
            "class": "",
            "module": "material.components.icon"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\icon\\icon.js",
            "line": 516,
            "description": "Register an alias name associated with a font-icon library style ;",
            "class": "",
            "module": "material.components.icon"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\icon\\icon.js",
            "line": 527,
            "description": "Specify a default style name associated with a font-icon library\nfallback to Material Icons.",
            "class": "",
            "module": "material.components.icon"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\icon\\icon.js",
            "line": 590,
            "description": "Configuration item stored in the Icon registry; used for lookups\nto load if not already cached in the `loaded` cache",
            "class": "",
            "module": "material.components.icon"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\icon\\icon.js",
            "line": 651,
            "description": "Actual $mdIcon service is essentially a lookup function",
            "class": "",
            "module": "material.components.icon"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\icon\\icon.js",
            "line": 669,
            "description": "Lookup registered fontSet style using its alias...\nIf not found,",
            "class": "",
            "module": "material.components.icon"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\icon\\icon.js",
            "line": 685,
            "description": "Prepare and cache the loaded icon for the specified `id`",
            "class": "",
            "module": "material.components.icon"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\icon\\icon.js",
            "line": 697,
            "description": "Lookup the configuration in the registry, if !registered throw an error\notherwise load the icon [on-demand] using the registered URL.",
            "class": "",
            "module": "material.components.icon"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\icon\\icon.js",
            "line": 709,
            "description": "Loads the file as XML and uses querySelector( <id> ) to find\nthe desired node...",
            "class": "",
            "module": "material.components.icon"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\icon\\icon.js",
            "line": 733,
            "description": "Load the icon by URL (may use the $templateCache).\nExtract the data for later conversion to Icon",
            "class": "",
            "module": "material.components.icon"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\icon\\icon.js",
            "line": 745,
            "description": "Catch HTTP or generic errors not related to incorrect icon IDs.",
            "class": "",
            "module": "material.components.icon"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\icon\\icon.js",
            "line": 755,
            "description": "Check target signature to see if it is an Icon instance.",
            "class": "",
            "module": "material.components.icon"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\icon\\icon.js",
            "line": 762,
            "description": "Define the Icon class",
            "class": "",
            "module": "material.components.icon"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\icon\\icon.js",
            "line": 780,
            "description": "Prepare the DOM element that will be cached in the\nloaded iconCache store.",
            "class": "",
            "module": "material.components.icon"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\icon\\icon.js",
            "line": 797,
            "description": "Clone the Icon DOM element.",
            "class": "",
            "module": "material.components.icon"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\input\\input.js",
            "line": 10,
            "ngdoc": "module",
            "name": "material.components.input",
            "class": "",
            "module": "material.components.icon"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\input\\input.js",
            "line": 332,
            "class": "",
            "module": "material.components.input"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\list\\list.js",
            "line": 10,
            "ngdoc": "module",
            "name": "material.components.list",
            "description": "List module",
            "class": "",
            "module": "material.components.input"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\menu\\menu.js",
            "line": 10,
            "ngdoc": "module",
            "name": "material.components.menu",
            "class": "",
            "module": "material.components.list"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\menu\\menu.js",
            "line": 26,
            "description": "ngInject",
            "class": "",
            "module": "material.components.list"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\menu\\menu.js",
            "line": 37,
            "description": "Called by our linking fn to provide access to the menu-content\nelement removed during link",
            "class": "",
            "module": "material.components.list"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\menu\\menu.js",
            "line": 126,
            "description": "Uses the $mdMenu interim element service to open the menu contents",
            "class": "",
            "module": "material.components.list"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\menu\\menu.js",
            "line": 203,
            "description": "Build a nice object out of our string attribute which specifies the\ntarget mode for left and top positioning",
            "class": "",
            "module": "material.components.list"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\menu\\menu.js",
            "line": 222,
            "description": "Build a nice object out of our string attribute which specifies\nthe offset of top and left in pixels.",
            "class": "",
            "module": "material.components.list"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\menu\\menu.js",
            "line": 391,
            "description": "ngInject",
            "class": "",
            "module": "material.components.menu"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\menu\\menu.js",
            "line": 502,
            "description": "Show modal backdrop element...",
            "return": {
                "description": "A function that removes this backdrop",
                "type": "Function(): void"
            },
            "class": "",
            "module": "material.components.menu"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\menu\\menu.js",
            "line": 524,
            "description": "Hide and destroys the backdrop created by showBackdrop()",
            "class": "",
            "module": "material.components.menu"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\menu\\menu.js",
            "line": 533,
            "description": "Removing the menu element from the DOM and remove all associated event listeners\nand backdrop",
            "class": "",
            "module": "material.components.menu"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\menu\\menu.js",
            "line": 547,
            "description": "For normal closes, animate the removal.\nFor forced closes (like $destroy events), skip the animations",
            "class": "",
            "module": "material.components.menu"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\menu\\menu.js",
            "line": 555,
            "description": "Detach the element",
            "class": "",
            "module": "material.components.menu"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\menu\\menu.js",
            "line": 566,
            "description": "Inserts and configures the staged Menu element into the DOM, positioning it,\nand wiring up various interaction events",
            "class": "",
            "module": "material.components.menu"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\menu\\menu.js",
            "line": 588,
            "description": "Place the menu into the DOM and call positioning related functions",
            "class": "",
            "module": "material.components.menu"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\menu\\menu.js",
            "line": 613,
            "description": "Check for valid opts and set some sane defaults",
            "class": "",
            "module": "material.components.menu"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\menu\\menu.js",
            "line": 631,
            "description": "Configure various resize listeners for screen changes",
            "class": "",
            "module": "material.components.menu"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\menu\\menu.js",
            "line": 657,
            "description": "Activate interaction on the menu. Wire up keyboard listerns for\nclicks, keypresses, backdrop closing, etc.",
            "class": "",
            "module": "material.components.menu"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\menu\\menu.js",
            "line": 793,
            "description": "Takes a keypress event and focuses the next/previous menu\nitem from the emitting element",
            "params": [
                {
                    "name": "e",
                    "description": "- The origin keypress event",
                    "type": "Event"
                },
                {
                    "name": "menuEl",
                    "description": "- The menu element",
                    "type": "angular.element"
                },
                {
                    "name": "opts",
                    "description": "- The interim element options for the mdMenu",
                    "type": "Object"
                },
                {
                    "name": "direction",
                    "description": "- The direction to move in (+1 = next, -1 = prev)",
                    "type": "Number"
                }
            ],
            "class": "",
            "module": "material.components.menu"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\menu\\menu.js",
            "line": 820,
            "description": "Attempts to focus an element. Checks whether that element is the currently\nfocused element after attempting.",
            "params": [
                {
                    "name": "el",
                    "description": "- the element to attempt focus on",
                    "type": "HTMLElement"
                }
            ],
            "return": {
                "description": "- whether the element was successfully focused",
                "type": "Bool"
            },
            "class": "",
            "module": "material.components.menu"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\menu\\menu.js",
            "line": 833,
            "description": "Use browser to remove this element without triggering a $destroy event",
            "class": "",
            "module": "material.components.menu"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\menu\\menu.js",
            "line": 846,
            "description": "Computes menu position and sets the style on the menu container",
            "params": [
                {
                    "name": "el",
                    "description": "- the menu container element",
                    "type": "HTMLElement"
                },
                {
                    "name": "opts",
                    "description": "- the interim element options object",
                    "type": "Object"
                }
            ],
            "class": "",
            "module": "material.components.menu"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\menu\\menu.js",
            "line": 945,
            "description": "Clamps the repositioning of the menu within the confines of\nbounding element (often the screen/body)",
            "class": "",
            "module": "material.components.menu"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\menu\\menu.js",
            "line": 954,
            "description": "Gets the first visible child in the openMenuNode\nNecessary incase menu nodes are being dynamically hidden",
            "class": "",
            "module": "material.components.menu"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\menuBar\\menuBar.js",
            "line": 10,
            "ngdoc": "module",
            "name": "material.components.menu-bar",
            "class": "",
            "module": "material.components.menu"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\menuBar\\menuBar.js",
            "line": 27,
            "description": "ngInject",
            "class": "",
            "module": "material.components.menu"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\menuBar\\menuBar.js",
            "line": 362,
            "nginjdect": "",
            "class": "",
            "module": "material.components.menu-bar"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\menuBar\\menuBar.js",
            "line": 426,
            "description": "ngInject",
            "class": "",
            "module": "material.components.menu-bar"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\menuBar\\menuBar.js",
            "line": 531,
            "nginjdect": "",
            "class": "",
            "module": "material.components.menu-bar"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\progressCircular\\progressCircular.js",
            "line": 10,
            "ngdoc": "module",
            "name": "material.components.progressCircular",
            "description": "Circular Progress module!",
            "class": "",
            "module": "material.components.menu-bar"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\progressCircular\\progressCircular.js",
            "line": 115,
            "description": "Watch the value and md-mode attributes",
            "class": "",
            "module": "material.components.progressCircular"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\progressCircular\\progressCircular.js",
            "line": 144,
            "description": "Update size/scaling of the progress indicator\nWatch the \"value\" and \"md-mode\" attributes",
            "class": "",
            "module": "material.components.progressCircular"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\progressCircular\\progressCircular.js",
            "line": 160,
            "description": "Auto-defaults the mode to either `determinate` or `indeterminate` mode; if not specified",
            "class": "",
            "module": "material.components.progressCircular"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\progressCircular\\progressCircular.js",
            "line": 178,
            "description": "Manually animate the Determinate indicator based on the specified\npercentage value (0-100).\n\nNote: this animation was previously done using SCSS.\n- generated 54K of styles\n- use attribute selectors which had poor performances in IE",
            "class": "",
            "module": "material.components.progressCircular"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\progressCircular\\progressCircular.js",
            "line": 212,
            "description": "We will scale the progress circle based on the default diameter.\n\nDetermine the diameter percentage (defaults to 100%)\nMay be express as float, percentage, or integer",
            "class": "",
            "module": "material.components.progressCircular"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\progressCircular\\progressCircular.js",
            "line": 228,
            "description": "Is the md-mode a valid option?",
            "class": "",
            "module": "material.components.progressCircular"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\progressCircular\\progressCircular.js",
            "line": 248,
            "description": "Clamps the value to be between 0 and 100.",
            "params": [
                {
                    "name": "value",
                    "description": "The value to clamp.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "",
            "module": "material.components.progressCircular"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\progressLinear\\progressLinear.js",
            "line": 10,
            "ngdoc": "module",
            "name": "material.components.progressLinear",
            "description": "Linear Progress module!",
            "class": "",
            "module": "material.components.progressCircular"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\progressLinear\\progressLinear.js",
            "line": 104,
            "description": "Watch the value, md-buffer-value, and md-mode attributes",
            "class": "",
            "module": "material.components.progressLinear"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\progressLinear\\progressLinear.js",
            "line": 137,
            "description": "Auto-defaults the mode to either `determinate` or `indeterminate` mode; if not specified",
            "class": "",
            "module": "material.components.progressLinear"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\progressLinear\\progressLinear.js",
            "line": 153,
            "description": "Is the md-mode a valid option?",
            "class": "",
            "module": "material.components.progressLinear"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\progressLinear\\progressLinear.js",
            "line": 173,
            "description": "Manually set CSS to animate the Determinate indicator based on the specified\npercentage value (0-100).",
            "class": "",
            "module": "material.components.progressLinear"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\progressLinear\\progressLinear.js",
            "line": 186,
            "description": "Clamps the value to be between 0 and 100.",
            "params": [
                {
                    "name": "value",
                    "description": "The value to clamp.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "",
            "module": "material.components.progressLinear"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\radioButton\\radioButton.js",
            "line": 10,
            "ngdoc": "module",
            "name": "material.components.radioButton",
            "description": "radioButton module!",
            "class": "",
            "module": "material.components.progressLinear"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\radioButton\\radioButton.js",
            "line": 95,
            "class": "",
            "module": "material.components.radioButton"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\radioButton\\radioButton.js",
            "line": 102,
            "class": "",
            "module": "material.components.radioButton"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\radioButton\\radioButton.js",
            "line": 187,
            "description": "Change the radio group's selected button by a given increment.\nIf no button is selected, select the first button.",
            "class": "",
            "module": "material.components.radioButton"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\radioButton\\radioButton.js",
            "line": 276,
            "class": "",
            "module": "material.components.radioButton"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\radioButton\\radioButton.js",
            "line": 294,
            "class": "",
            "module": "material.components.radioButton"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\radioButton\\radioButton.js",
            "line": 305,
            "description": "Add or remove the `.md-checked` class from the RadioButton (and conditionally its parent).\nUpdate the `aria-activedescendant` attribute.",
            "class": "",
            "module": "material.components.radioButton"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\radioButton\\radioButton.js",
            "line": 329,
            "description": "If the radioButton is inside a div, then add class so highlighting will work...",
            "class": "",
            "module": "material.components.radioButton"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\radioButton\\radioButton.js",
            "line": 340,
            "description": "Inject ARIA-specific attributes appropriate for each radio button",
            "class": "",
            "module": "material.components.radioButton"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\radioButton\\radioButton.js",
            "line": 354,
            "description": "Build a unique ID for each radio button that will be used with aria-activedescendant.\nPreserve existing ID if already specified.",
            "return": {
                "description": "",
                "type": "*|string"
            },
            "class": "",
            "module": "material.components.radioButton"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\select\\select.js",
            "line": 10,
            "ngdoc": "module",
            "name": "material.components.select",
            "class": "",
            "module": "material.components.radioButton"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\select\\select.js",
            "line": 15,
            "description": "### TODO - POST RC1 ###\n - [ ] Abstract placement logic in $mdSelect service to $mdMenu service",
            "class": "",
            "module": "material.components.radioButton"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\select\\select.js",
            "line": 920,
            "description": "Interim-element onRemove logic....",
            "class": "",
            "module": "material.components.select"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\select\\select.js",
            "line": 934,
            "description": "For normal closes (eg clicks), animate the removal.\nFor forced closes (like $destroy events from navigation),\nskip the animations",
            "class": "",
            "module": "material.components.select"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\select\\select.js",
            "line": 943,
            "description": "Restore the element to a closed state",
            "class": "",
            "module": "material.components.select"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\select\\select.js",
            "line": 961,
            "description": "Interim-element onShow logic....",
            "class": "",
            "module": "material.components.select"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\select\\select.js",
            "line": 985,
            "description": "Attach the select DOM element(s) and animate to the correct positions\nand scalings...",
            "class": "",
            "module": "material.components.select"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\select\\select.js",
            "line": 1008,
            "description": "Initialize container and dropDown menu positions/scale, then animate\nto show... and autoFocus.",
            "class": "",
            "module": "material.components.select"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\select\\select.js",
            "line": 1032,
            "description": "Show modal backdrop element...",
            "class": "",
            "module": "material.components.select"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\select\\select.js",
            "line": 1052,
            "description": "Hide modal backdrop element...",
            "class": "",
            "module": "material.components.select"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\select\\select.js",
            "line": 1063,
            "class": "",
            "module": "material.components.select"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\select\\select.js",
            "line": 1072,
            "description": "Check for valid opts and set some sane defaults",
            "class": "",
            "module": "material.components.select"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\select\\select.js",
            "line": 1092,
            "description": "Configure various resize listeners for screen changes",
            "class": "",
            "module": "material.components.select"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\select\\select.js",
            "line": 1124,
            "description": "If asynchronously loading, watch and update internal\n'$$loadingAsyncDone' flag",
            "class": "",
            "module": "material.components.select"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\select\\select.js",
            "line": 1144,
            "class": "",
            "module": "material.components.select"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\select\\select.js",
            "line": 1267,
            "description": "check if the mouseup event was on a scrollbar",
            "class": "",
            "module": "material.components.select"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\select\\select.js",
            "line": 1288,
            "description": "To notify listeners that the Select menu has closed,\ntrigger the [optional] user-defined expression",
            "class": "",
            "module": "material.components.select"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\select\\select.js",
            "line": 1302,
            "description": "Calculate the",
            "class": "",
            "module": "material.components.select"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\showHide\\showHide.js",
            "line": 10,
            "ngdoc": "module",
            "name": "material.components.showHide",
            "class": "",
            "module": "material.components.select"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\sidenav\\sidenav.js",
            "line": 10,
            "ngdoc": "module",
            "name": "material.components.sidenav",
            "description": "A Sidenav QP component.",
            "class": "",
            "module": "material.components.select"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\sidenav\\sidenav.js",
            "line": 109,
            "description": "Deferred lookup of component instance using $component registry",
            "class": "",
            "module": "material.components.sidenav"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\sidenav\\sidenav.js",
            "line": 235,
            "description": "Directive Post Link function...",
            "class": "",
            "module": "material.components.sidenav"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\sidenav\\sidenav.js",
            "line": 273,
            "description": "Toggle the DOM classes to indicate `locked`",
            "params": [
                {
                    "name": "isLocked",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.sidenav"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\sidenav\\sidenav.js",
            "line": 287,
            "description": "Toggle the SideNav view and attach/detach listeners",
            "params": [
                {
                    "name": "isOpen",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.sidenav"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\sidenav\\sidenav.js",
            "line": 318,
            "description": "Prevent parent scrolling (when the SideNav is open)",
            "class": "",
            "module": "material.components.sidenav"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\sidenav\\sidenav.js",
            "line": 336,
            "description": "Toggle the sideNav view and publish a promise to be resolved when\nthe view animation finishes.",
            "params": [
                {
                    "name": "isOpen",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "",
            "module": "material.components.sidenav"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\sidenav\\sidenav.js",
            "line": 372,
            "description": "Auto-close sideNav when the `escape` key is pressed.",
            "params": [
                {
                    "name": "evt",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.sidenav"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\sidenav\\sidenav.js",
            "line": 381,
            "description": "With backdrop `clicks` or `escape` key-press, immediately\napply the CSS close transition... Then notify the controller\nto close() and perform its own actions.",
            "class": "",
            "module": "material.components.sidenav"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\slider\\slider.js",
            "line": 10,
            "ngdoc": "module",
            "name": "material.components.slider",
            "class": "",
            "module": "material.components.sidenav"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\slider\\slider.js",
            "line": 167,
            "description": "Attributes",
            "class": "",
            "module": "material.components.slider"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\slider\\slider.js",
            "line": 227,
            "description": "Refreshing Dimensions",
            "class": "",
            "module": "material.components.slider"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\slider\\slider.js",
            "line": 240,
            "description": "left/right arrow listener",
            "class": "",
            "module": "material.components.slider"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\slider\\slider.js",
            "line": 266,
            "description": "ngModel setters and validators",
            "class": "",
            "module": "material.components.slider"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\slider\\slider.js",
            "line": 297,
            "params": [
                {
                    "name": "percent",
                    "description": "0-1"
                }
            ],
            "class": "",
            "module": "material.components.slider"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\slider\\slider.js",
            "line": 314,
            "description": "Slide listeners",
            "class": "",
            "module": "material.components.slider"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\slider\\slider.js",
            "line": 372,
            "description": "Slide the UI by changing the model value",
            "params": [
                {
                    "name": "x",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.slider"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\slider\\slider.js",
            "line": 382,
            "description": "Slide the UI without changing the model (while dragging/panning)",
            "params": [
                {
                    "name": "x",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.slider"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\slider\\slider.js",
            "line": 393,
            "description": "Clamps the value to be between 0 and 1.",
            "params": [
                {
                    "name": "value",
                    "description": "The value to clamp.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "",
            "module": "material.components.slider"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\slider\\slider.js",
            "line": 402,
            "description": "Convert horizontal position on slider to percentage value of offset from beginning...",
            "params": [
                {
                    "name": "x",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "",
            "module": "material.components.slider"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\slider\\slider.js",
            "line": 411,
            "description": "Convert percentage offset on slide to equivalent model value",
            "params": [
                {
                    "name": "percent",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "",
            "module": "material.components.slider"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\sticky\\sticky.js",
            "line": 10,
            "ngdoc": "module",
            "name": "material.components.sticky",
            "description": "Sticky effects for md",
            "class": "",
            "module": "material.components.slider"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\sticky\\sticky.js",
            "line": 84,
            "description": "Registers an element as sticky, used internally by directives to register themselves",
            "class": "",
            "module": "material.components.sticky"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\sticky\\sticky.js",
            "line": 135,
            "description": "Public",
            "class": "",
            "module": "material.components.sticky"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\sticky\\sticky.js",
            "line": 187,
            "description": "Private",
            "class": "",
            "module": "material.components.sticky"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\subheader\\subheader.js",
            "line": 10,
            "ngdoc": "module",
            "name": "material.components.subheader",
            "description": "SubHeader module\n\n Subheaders are special list tiles that delineate distinct sections of a\n list or grid list and are typically related to the current filtering or\n sorting criteria. Subheader tiles are either displayed inline with tiles or\n can be associated with content, for example, in an adjacent column.\n\n Upon scrolling, subheaders remain pinned to the top of the screen and remain\n pinned until pushed on or off screen by the next subheader. @see [Material\n Design Specifications](https://www.google.com/design/spec/components/subheaders.html)\n\n > To improve the visual grouping of content, use the system color for your subheaders.",
            "class": "",
            "module": "material.components.sticky"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\swipe\\swipe.js",
            "line": 10,
            "ngdoc": "module",
            "name": "material.components.swipe",
            "description": "Swipe module!",
            "class": "",
            "module": "material.components.subheader"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\switch\\switch.js",
            "line": 10,
            "access": "private",
            "tagname": "",
            "ngdoc": "module",
            "name": "material.components.switch",
            "class": "",
            "module": "material.components.swipe"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js",
            "line": 10,
            "ngdoc": "module",
            "name": "material.components.tabs",
            "description": "Tabs, created with the `<md-tabs>` directive provide *tabbed* navigation with different styles.\n The Tabs component consists of clickable tabs that are aligned horizontally side-by-side.\n\n Features include support for:\n\n - static or dynamic tabs,\n - responsive designs,\n - accessibility support (ARIA),\n - tab pagination,\n - external or internal tab content,\n - focus indicators and arrow-key navigations,\n - programmatic lookup and access to tab controllers, and\n - dynamic transitions through different tab contents.",
            "class": "",
            "module": "material.components.switch"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js",
            "line": 212,
            "description": "ngInject",
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js",
            "line": 275,
            "description": "Perform initialization for the controller, setup events and watcher(s)",
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js",
            "line": 294,
            "description": "Compiles the template provided by the user.  This is passed as an attribute from the tabs\ndirective's template function.",
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js",
            "line": 306,
            "description": "Binds events used by the tabs component.",
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js",
            "line": 314,
            "description": "Configure watcher(s) used by Tabs",
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js",
            "line": 321,
            "description": "Creates a one-way binding manually rather than relying on Angular's isolated scope",
            "params": [
                {
                    "name": "key",
                    "description": ""
                },
                {
                    "name": "handler",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js",
            "line": 332,
            "description": "Defines boolean attributes with default value set to true.  (ie. md-stretch-tabs with no value\nwill be treated as being truthy)",
            "params": [
                {
                    "name": "key",
                    "description": ""
                },
                {
                    "name": "handler",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js",
            "line": 348,
            "description": "Remove any events defined by this controller",
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js",
            "line": 358,
            "description": "Toggles stretch tabs class and updates inkbar when tab stretching changes",
            "params": [
                {
                    "name": "stretchTabs",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js",
            "line": 391,
            "description": "Add/remove the `md-no-tab-content` class depending on `ctrl.hasContent`",
            "params": [
                {
                    "name": "hasContent",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js",
            "line": 399,
            "description": "Apply ctrl.offsetLeft to the paging element when it changes",
            "params": [
                {
                    "name": "left",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js",
            "line": 409,
            "description": "Update the UI whenever `ctrl.focusIndex` is updated",
            "params": [
                {
                    "name": "newIndex",
                    "description": ""
                },
                {
                    "name": "oldIndex",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js",
            "line": 421,
            "description": "Update the UI whenever the selected index changes. Calls user-defined select/deselect methods.",
            "params": [
                {
                    "name": "newValue",
                    "description": ""
                },
                {
                    "name": "oldValue",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js",
            "line": 444,
            "description": "Queues up a call to `handleWindowResize` when a resize occurs while the tabs component is\nhidden.",
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js",
            "line": 470,
            "description": "Handle user keyboard interactions",
            "params": [
                {
                    "name": "event",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js",
            "line": 493,
            "description": "Update the selected index and trigger a click event on the original `md-tab` element in order\nto fire user-added click events.",
            "params": [
                {
                    "name": "index",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js",
            "line": 507,
            "description": "When pagination is on, this makes sure the selected index is in view.",
            "params": [
                {
                    "name": "event",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js",
            "line": 517,
            "description": "Slides the tabs over approximately one page forward.",
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js",
            "line": 531,
            "description": "Slides the tabs over approximately one page backward.",
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js",
            "line": 543,
            "description": "Update size calculations when the window is resized.",
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js",
            "line": 559,
            "description": "Toggle dynamic height class when value changes",
            "params": [
                {
                    "name": "value",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js",
            "line": 567,
            "description": "Remove a tab from the data and select the nearest valid tab.",
            "params": [
                {
                    "name": "tabData",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js",
            "line": 588,
            "description": "Create an entry in the tabs array for a new tab at the specified index.",
            "params": [
                {
                    "name": "tabData",
                    "description": ""
                },
                {
                    "name": "index",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js",
            "line": 628,
            "description": "Gathers references to all of the DOM elements used by this controller.",
            "return": {
                "description": "}"
            },
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js",
            "line": 651,
            "description": "Determines whether or not the left pagination arrow should be enabled.",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js",
            "line": 659,
            "description": "Determines whether or not the right pagination arrow should be enabled.",
            "return": {
                "description": "",
                "type": "*|boolean"
            },
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js",
            "line": 669,
            "description": "Determines if the UI should stretch the tabs to fill the available space.",
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js",
            "line": 685,
            "description": "Determines if the tabs should appear centered.",
            "return": {
                "description": "",
                "type": "String|boolean"
            },
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js",
            "line": 693,
            "description": "Determines if pagination is necessary to display the tabs within the available space.",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js",
            "line": 704,
            "description": "Finds the nearest tab index that is available.  This is primarily used for when the active\ntab is removed.",
            "params": [
                {
                    "name": "newIndex",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js",
            "line": 725,
            "description": "Defines a property using a getter and setter in order to trigger a change handler without\nusing `$watch` to observe changes.",
            "params": [
                {
                    "name": "key",
                    "description": ""
                },
                {
                    "name": "handler",
                    "description": ""
                },
                {
                    "name": "value",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js",
            "line": 743,
            "description": "Updates whether or not pagination should be displayed.",
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js",
            "line": 768,
            "description": "Re-orders the tabs and updates the selected and focus indexes to their new positions.\nThis is triggered by `tabDirective.js` when the user's tabs have been re-ordered.",
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js",
            "line": 782,
            "description": "This moves the selected or focus index left or right.  This is used by the keydown handler.",
            "params": [
                {
                    "name": "inc",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js",
            "line": 798,
            "description": "This is used to forward focus to dummy elements.  This method is necessary to avoid animation\nissues when attempting to focus an item that is out of view.",
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js",
            "line": 806,
            "description": "Forces the pagination to move the focused tab into view.",
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js",
            "line": 820,
            "description": "Iterates through all queued functions and clears the queue.  This is used for functions that\nare called before the UI is ready, such as size calculations.",
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js",
            "line": 829,
            "description": "Determines if the tab content area is needed.",
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js",
            "line": 840,
            "description": "Moves the indexes to their nearest valid values.",
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js",
            "line": 848,
            "description": "Calculates the content height of the current tab.",
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js",
            "line": 909,
            "description": "Repositions the ink bar to the selected tab.",
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js",
            "line": 938,
            "description": "Adds left/right classes so that the ink bar will animate properly.",
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js",
            "line": 951,
            "description": "Takes an offset value and makes sure that it is within the min/max allowed values.",
            "params": [
                {
                    "name": "value",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js",
            "line": 965,
            "description": "Attaches a ripple to the tab item element.",
            "params": [
                {
                    "name": "scope",
                    "description": ""
                },
                {
                    "name": "element",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\textField\\textField.js",
            "line": 10,
            "ngdoc": "module",
            "name": "material.components.textField",
            "description": "Form",
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\toast\\toast.js",
            "line": 10,
            "ngdoc": "module",
            "name": "material.components.toast",
            "description": "Toast",
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\toast\\toast.js",
            "line": 95,
            "ngdoc": "method",
            "name": "$mdToast#showSimple",
            "params": [
                {
                    "name": "message",
                    "description": "The message to display inside the toast",
                    "type": "String"
                }
            ],
            "description": "Convenience method which builds and shows a simple toast.",
            "return": {
                "description": "A promise that can be resolved with `$mdToast.hide()` or\nrejected with `$mdToast.cancel()`.",
                "type": "Promise"
            },
            "class": "",
            "module": "material.components.toast"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\toast\\toast.js",
            "line": 108,
            "ngdoc": "method",
            "name": "$mdToast#simple",
            "description": "Builds a preconfigured toast.",
            "return": {
                "description": "a `$mdToastPreset` with the following chainable configuration methods.\n\n_**Note:** These configuration methods are provided in addition to the methods provided by\n  the `build()` and `show()` methods below._\n\n- `.textContent(string)` - Sets the toast content to the specified string.\n\n- `.action(string)` - Adds an action button. If clicked, the promise (returned from `show()`)\nwill resolve with the value `'ok'`; otherwise, it is resolved with `true` after a `hideDelay`\ntimeout.\n\n- `.highlightAction(boolean)` - Whether or not the action button will have an additional\nhighlight class.\n\n- `.capsule(boolean)` - Whether or not to add the `md-capsule` class to the toast to provide\nrounded corners.\n\n- `.theme(string)` - Sets the theme on the toast to the requested theme. Default is\n`$mdThemingProvider`'s default.",
                "type": "Obj"
            },
            "class": "",
            "module": "material.components.toast"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\toast\\toast.js",
            "line": 136,
            "ngdoc": "method",
            "name": "$mdToast#updateTextContent",
            "description": "Updates the content of an existing toast. Useful for updating things like counts, etc.",
            "class": "",
            "module": "material.components.toast"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\toast\\toast.js",
            "line": 145,
            "ngdoc": "method",
            "name": "$mdToast#build",
            "description": "Creates a custom `$mdToastPreset` that you can configure.",
            "return": {
                "description": "a `$mdToastPreset` with the chainable configuration methods for shows' options (see below).",
                "type": "Obj"
            },
            "class": "",
            "module": "material.components.toast"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\toast\\toast.js",
            "line": 155,
            "ngdoc": "method",
            "name": "$mdToast#show",
            "description": "Shows the toast.",
            "params": [
                {
                    "name": "optionsOrPreset",
                    "description": "Either provide an `$mdToastPreset` returned from `simple()`\nand `build()`, or an options object with the following properties:\n\n  - `templateUrl` - `{string=}`: The url of an html template file that will\n    be used as the content of the toast. Restrictions: the template must\n    have an outer `md-toast` element.\n  - `template` - `{string=}`: Same as templateUrl, except this is an actual\n    template string.\n  - `autoWrap` - `{boolean=}`: Whether or not to automatically wrap the template content with a\n    `<div class=\"md-toast-content\">` if one is not provided. Defaults to true. Can be disabled if you provide a\n    custom toast directive.\n  - `scope` - `{object=}`: the scope to link the template / controller to. If none is specified, it will create a new child scope.\n    This scope will be destroyed when the toast is removed unless `preserveScope` is set to true.\n  - `preserveScope` - `{boolean=}`: whether to preserve the scope when the element is removed. Default is false\n  - `hideDelay` - `{number=}`: How many milliseconds the toast should stay\n    active before automatically closing.  Set to 0 or false to have the toast stay open until\n    closed manually. Default: 3000.\n  - `position` - `{string=}`: Where to place the toast. Available: any combination\n    of 'bottom', 'left', 'top', 'right'. Default: 'bottom left'.\n  - `controller` - `{string=}`: The controller to associate with this toast.\n    The controller will be injected the local `$mdToast.hide( )`, which is a function\n    used to hide the toast.\n  - `locals` - `{string=}`: An object containing key/value pairs. The keys will\n    be used as names of values to inject into the controller. For example,\n    `locals: {three: 3}` would inject `three` into the controller with the value\n    of 3.\n  - `bindToController` - `bool`: bind the locals to the controller, instead of passing them in.\n  - `resolve` - `{object=}`: Similar to locals, except it takes promises as values\n    and the toast will not open until the promises resolve.\n  - `controllerAs` - `{string=}`: An alias to assign the controller to on the scope.\n  - `parent` - `{element=}`: The element to append the toast to. Defaults to appending\n    to the root element of the application.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "A promise that can be resolved with `$mdToast.hide()` or\nrejected with `$mdToast.cancel()`. `$mdToast.hide()` will resolve either with a Boolean\nvalue == 'true' or the value passed as an argument to `$mdToast.hide()`.\nAnd `$mdToast.cancel()` will resolve the promise with a Boolean value == 'false'",
                "type": "Promise"
            },
            "class": "",
            "module": "material.components.toast"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\toast\\toast.js",
            "line": 200,
            "ngdoc": "method",
            "name": "$mdToast#hide",
            "description": "Hide an existing toast and resolve the promise returned from `$mdToast.show()`.",
            "params": [
                {
                    "name": "response",
                    "description": "An argument for the resolved promise.",
                    "type": "*="
                }
            ],
            "return": {
                "description": "a promise that is called when the existing element is removed from the DOM.\nThe promise is resolved with either a Boolean value == 'true' or the value passed as the\nargument to `.hide()`.",
                "type": "Promise"
            },
            "class": "",
            "module": "material.components.toast"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\toast\\toast.js",
            "line": 215,
            "ngdoc": "method",
            "name": "$mdToast#cancel",
            "description": "`DEPRECATED` - The promise returned from opening a toast is used only to notify about the closing of the toast.\nAs such, there isn't any reason to also allow that promise to be rejected,\nsince it's not clear what the difference between resolve and reject would be.\n\nHide the existing toast and reject the promise returned from\n`$mdToast.show()`.",
            "params": [
                {
                    "name": "response",
                    "description": "An argument for the rejected promise.",
                    "type": "*="
                }
            ],
            "return": {
                "description": "a promise that is called when the existing element is removed from the DOM\nThe promise is resolved with a Boolean value == 'false'.",
                "type": "Promise"
            },
            "class": "",
            "module": "material.components.toast"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\toolbar\\toolbar.js",
            "line": 10,
            "ngdoc": "module",
            "name": "material.components.toolbar",
            "class": "",
            "module": "material.components.toast"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\toolbar\\toolbar.js",
            "line": 126,
            "class": "",
            "module": "material.components.toolbar"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\toolbar\\toolbar.js",
            "line": 150,
            "class": "",
            "module": "material.components.toolbar"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\toolbar\\toolbar.js",
            "line": 166,
            "class": "",
            "module": "material.components.toolbar"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\toolbar\\toolbar.js",
            "line": 196,
            "class": "",
            "module": "material.components.toolbar"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\toolbar\\toolbar.js",
            "line": 215,
            "class": "",
            "module": "material.components.toolbar"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\tooltip\\tooltip.js",
            "line": 10,
            "ngdoc": "module",
            "name": "material.components.tooltip",
            "class": "",
            "module": "material.components.toolbar"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js",
            "line": 10,
            "ngdoc": "module",
            "name": "material.components.virtualRepeat",
            "class": "",
            "module": "material.components.tooltip"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js",
            "line": 73,
            "description": "Maximum size, in pixels, that can be explicitly set to an element. The actual value varies\nbetween browsers, but IE11 has the very lowest size at a mere 1,533,917px. Ideally we could\n*compute* this value, but Firefox always reports an element to have a size of zero if it\ngoes over the max, meaning that we'd have to binary search for the value.",
            "itemtype": "property",
            "name": "{number}",
            "final": "",
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js",
            "line": 82,
            "description": "Number of additional elements to render above and below the visible area inside\nof the virtual repeat container. A higher number results in less flicker when scrolling\nvery quickly in Safari, but comes with a higher rendering and dirty-checking cost.",
            "itemtype": "property",
            "name": "{number}",
            "final": "",
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js",
            "line": 90,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js",
            "line": 98,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js",
            "line": 100,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js",
            "line": 102,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js",
            "line": 104,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js",
            "line": 106,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js",
            "line": 108,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js",
            "line": 110,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js",
            "line": 112,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js",
            "line": 114,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js",
            "line": 116,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js",
            "line": 120,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js",
            "line": 122,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js",
            "line": 172,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js",
            "line": 181,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js",
            "line": 187,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js",
            "line": 193,
            "description": "Resizes the container.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "The",
                    "description": "new size to set.",
                    "type": "Number"
                }
            ],
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js",
            "line": 212,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js",
            "line": 229,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js",
            "line": 240,
            "description": "Sets the scroller element to the specified size.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "size",
                    "description": "The new size.",
                    "type": "Number"
                }
            ],
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js",
            "line": 280,
            "description": "If auto-shrinking is enabled, shrinks or unshrinks as appropriate.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "size",
                    "description": "The new size.",
                    "type": "Number"
                }
            ],
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js",
            "line": 310,
            "description": "Sets the scrollHeight or scrollWidth. Called by the repeater based on\nits item count and item size.",
            "params": [
                {
                    "name": "itemsSize",
                    "description": "The total size of the items.",
                    "type": "Number"
                }
            ],
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js",
            "line": 325,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js",
            "line": 330,
            "description": "Scrolls to a given scrollTop position.",
            "params": [
                {
                    "name": "position",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js",
            "line": 339,
            "description": "Scrolls the item with the given index to the top of the scroll container.",
            "params": [
                {
                    "name": "index",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js",
            "line": 452,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js",
            "line": 463,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js",
            "line": 465,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js",
            "line": 467,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js",
            "line": 469,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js",
            "line": 471,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js",
            "line": 473,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js",
            "line": 475,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js",
            "line": 479,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js",
            "line": 482,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js",
            "line": 485,
            "access": "private",
            "tagname": "{boolean} Whether the items in the list are already being updated. Used to prevent\n    nested calls to virtualRepeatUpdate_.",
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js",
            "line": 491,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js",
            "line": 494,
            "type": "{!Function} Unwatch callback for item size (when md-items-size is\n    not specified), or angular.noop otherwise.",
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js",
            "line": 500,
            "description": "Presently rendered blocks by repeat index.",
            "type": "{Object<number, !VirtualRepeatController.Block}",
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js",
            "line": 505,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js",
            "line": 511,
            "description": "An object representing a repeated item.",
            "typedef": "{{element: !jqLite, new: boolean, scope: !angular.Scope}}",
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js",
            "line": 518,
            "description": "Called at startup by the md-virtual-repeat postLink function.",
            "params": [
                {
                    "name": "container",
                    "description": "The container's controller.",
                    "type": "!VirtualRepeatContainerController"
                },
                {
                    "name": "transclude",
                    "description": "The repeated element's bound transclude function.",
                    "type": "!Function"
                },
                {
                    "name": "repeatName",
                    "description": "The left hand side of the repeat expression, indicating\n    the name for each item in the array.",
                    "type": "String"
                },
                {
                    "name": "repeatListExpression",
                    "description": "A compiled expression based on the right hand side\n    of the repeat expression. Points to the array to repeat over.",
                    "type": "!Function"
                },
                {
                    "name": "extraName",
                    "description": "The optional extra repeatName.",
                    "type": "String|undefined"
                }
            ],
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js",
            "line": 543,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js",
            "line": 569,
            "description": "Returns the user-specified repeat list, transforming it into an array-like\nobject in the case of infinite scroll/dynamic load mode.",
            "params": [
                {
                    "name": "The",
                    "description": "scope.",
                    "type": "!angular.Scope"
                }
            ],
            "return": {
                "description": "An array or array-like object for iteration.",
                "type": "!Array|!Object"
            },
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js",
            "line": 588,
            "description": "Called by the container. Informs us that the containers scroll or size has\nchanged.",
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js",
            "line": 633,
            "description": "Called by the container. Returns the size of a single repeated item.",
            "return": {
                "description": "Size of a repeated item.",
                "type": "?number"
            },
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js",
            "line": 642,
            "description": "Called by the container. Returns the size of a single repeated item.",
            "return": {
                "description": "Size of a repeated item.",
                "type": "?number"
            },
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js",
            "line": 651,
            "description": "Updates the order and visible offset of repeated blocks in response to scrolling\nor items updates.",
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js",
            "line": 754,
            "params": [
                {
                    "name": "index",
                    "description": "Where the block is to be in the repeated list.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "A new or pooled block to place at the specified index.",
                "type": "!VirtualRepeatController.Block"
            },
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js",
            "line": 780,
            "description": "Updates and if not in a digest cycle, digests the specified block's scope to the data\nat the specified index.",
            "params": [
                {
                    "name": "block",
                    "description": "The block whose scope should be updated.",
                    "type": "!VirtualRepeatController.Block"
                },
                {
                    "name": "index",
                    "description": "The index to set.",
                    "type": "Number"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js",
            "line": 808,
            "description": "Updates scope to the data at the specified index.",
            "params": [
                {
                    "name": "scope",
                    "description": "The scope which should be updated.",
                    "type": "!angular.Scope"
                },
                {
                    "name": "index",
                    "description": "The index to set.",
                    "type": "Number"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js",
            "line": 821,
            "description": "Pools the block at the specified index (Pulls its element out of the dom and stores it).",
            "params": [
                {
                    "name": "index",
                    "description": "The index at which the block to pool is stored.",
                    "type": "Number"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js",
            "line": 833,
            "description": "Produces a dom fragment containing the elements from the list of blocks.",
            "params": [
                {
                    "name": "blocks",
                    "description": "The blocks whose elements\n    should be added to the document fragment.",
                    "type": "!Array<!VirtualRepeatController.Block>"
                }
            ],
            "return": {
                "description": "",
                "type": "DocumentFragment"
            },
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js",
            "line": 849,
            "description": "Updates start and end indexes based on length of repeated items and container size.",
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js",
            "line": 865,
            "description": "This VirtualRepeatModelArrayLike class enforces the interface requirements\nfor infinite scrolling within a mdVirtualRepeatContainer. An object with this\ninterface must implement the following interface with two (2) methods:\n\ngetItemAtIndex: function(index) -> item at that index or null if it is not yet\n    loaded (It should start downloading the item in that case).\n\ngetLength: function() -> number The data legnth to which the repeater container\n    should be sized. Ideally, when the count is known, this method should return it.\n    Otherwise, return a higher number than the currently loaded items to produce an\n    infinite-scroll behavior.",
            "usage": "<hljs lang=\"html\">\n <md-virtual-repeat-container md-orient-horizontal>\n   <div md-virtual-repeat=\"i in items\" md-on-demand>\n     Hello {{i}}!\n   </div>\n </md-virtual-repeat-container>\n</hljs>",
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\modules\\js\\whiteframe\\whiteframe.js",
            "line": 10,
            "ngdoc": "module",
            "name": "material.components.whiteframe",
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material-mocks.js",
            "line": 1,
            "description": "Angular-Material-Mocks\nDevelopers interested in running their own custom unit tests WITH angular-material.js loaded...\n must also include this *mocks* file. Similar to `angular-mocks.js`, `angular-material-mocks.js`\n will override and disable specific Angular Material performance settings:\n - Disabled Theme CSS rule generations\n  - Forces $mdAria.expectWithText() to be synchronous\n  - Mocks $$rAF.throttle()\n  - Captures flush exceptions from $$rAF",
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material-mocks.js",
            "line": 19,
            "ngdoc": "module",
            "name": "ngMaterial-mock",
            "packagename": "angular-material-mocks",
            "description": "The `ngMaterial-mock` module provides support",
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material-mocks.js",
            "line": 56,
            "description": "Angular Material dynamically generates Style tags\nbased on themes and palletes; for each ng-app.\n\nFor testing, we want to disable generation and\n<style> DOM injections. So we clear the huge THEME\nstyles while testing...",
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material-mocks.js",
            "line": 66,
            "description": "Add throttle() and wrap .flush() to catch `no callbacks present`\nerrors",
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material-mocks.js",
            "line": 87,
            "description": "Capture $timeout.flush() errors: \"No deferred tasks to be flushed\"\nerrors",
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material-mocks.js",
            "line": 105,
            "description": "Stylesheet Mocks used by `animateCss.spec.js`",
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material-mocks.js",
            "line": 138,
            "description": "Decompose styles, attached specific vendor prefixes\nand recompose...\ne.g.\n   'transition:0.5s linear all; font-size:100px;'\nbecomes\n   '-webkit-transition:0.5s linear all; transition:0.5s linear all; font-size:100px;'",
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 18,
            "description": "Initialization function that validates environment\nrequirements.",
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 34,
            "description": "Detect if the ng-Touch module is also being used.\nWarn if detected.",
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 63,
            "description": "Use this to throttle events that come in often.\nThe throttled function will always use the *last* invocation before the\ncoming frame.\n\nFor example, window resize events that fire many times a second:\nIf we set to use an raf-throttled callback on window resize, then\nour callback will only be fired once per frame, with the last resize\nevent that happened before that frame.",
            "params": [
                {
                    "name": "callback",
                    "description": "function to debounce",
                    "type": "Function"
                }
            ],
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 213,
            "description": "Factory function that creates the grab-bag $mdConstant service.",
            "nginject": "",
            "class": "",
            "module": "material.core.util"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 258,
            "description": "As defined in core/style/variables.scss\n\n$layout-breakpoint-xs:     600px !default;\n$layout-breakpoint-sm:     960px !default;\n$layout-breakpoint-md:     1280px !default;\n$layout-breakpoint-lg:     1920px !default;",
            "class": "",
            "module": "material.core.util"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 303,
            "description": "Inject the iterator facade to easily support iteration and accessors",
            "see": [
                "iterator below"
            ],
            "class": "",
            "module": "material.core.util"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 314,
            "description": "iterator is a list facade to easily support iteration and accessors",
            "params": [
                {
                    "name": "items",
                    "description": "Array list which this iterator will enumerate"
                },
                {
                    "name": "reloop",
                    "description": "Boolean enables iterator to consider the list as an endless reloop"
                }
            ],
            "class": "",
            "module": "material.core.util"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 355,
            "description": "Publish copy of the enumerable set",
            "return": {
                "description": "",
                "type": "Array|*"
            },
            "class": "",
            "module": "material.core.util"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 363,
            "description": "Determine length of the list",
            "return": {
                "description": "",
                "type": "Array.length|*|number"
            },
            "class": "",
            "module": "material.core.util"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 371,
            "description": "Is the index specified valid",
            "params": [
                {
                    "name": "index",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Array.length|*|number|boolean"
            },
            "class": "",
            "module": "material.core.util"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 380,
            "description": "Can the iterator proceed to the next item in the list; relative to\nthe specified item.",
            "params": [
                {
                    "name": "item",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Array.length|*|number|boolean"
            },
            "class": "",
            "module": "material.core.util"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 391,
            "description": "Can the iterator proceed to the previous item in the list; relative to\nthe specified item.",
            "params": [
                {
                    "name": "item",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Array.length|*|number|boolean"
            },
            "class": "",
            "module": "material.core.util"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 402,
            "description": "Get item at specified index/position",
            "params": [
                {
                    "name": "index",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "",
            "module": "material.core.util"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 411,
            "description": "Find all elements matching the key/value pair\notherwise return null",
            "params": [
                {
                    "name": "val",
                    "description": ""
                },
                {
                    "name": "key",
                    "description": ""
                }
            ],
            "return": {
                "description": "array"
            },
            "class": "",
            "module": "material.core.util"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 426,
            "description": "Add item to list",
            "params": [
                {
                    "name": "item",
                    "description": ""
                },
                {
                    "name": "index",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "",
            "module": "material.core.util"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 444,
            "description": "Remove item from list...",
            "params": [
                {
                    "name": "item",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.core.util"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 454,
            "description": "Get the zero-based index of the target item",
            "params": [
                {
                    "name": "item",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "",
            "module": "material.core.util"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 463,
            "description": "Boolean existence check",
            "params": [
                {
                    "name": "item",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "",
            "module": "material.core.util"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 472,
            "description": "Return first item in the list",
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "",
            "module": "material.core.util"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 480,
            "description": "Return last item in the list...",
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "",
            "module": "material.core.util"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 488,
            "description": "Find the next item. If reloop is true and at the end of the list, it will go back to the\nfirst item. If given, the `validate` callback will be used to determine whether the next item\nis valid. If not valid, it will try to find the next item again.",
            "params": [
                {
                    "name": "backwards",
                    "description": "Specifies the direction of searching (forwards/backwards)",
                    "type": "Boolean"
                },
                {
                    "name": "item",
                    "description": "The item whose subsequent item we are looking for",
                    "type": "*"
                },
                {
                    "name": "validate",
                    "description": "The `validate` function",
                    "type": "Function="
                },
                {
                    "name": "limit",
                    "description": "The recursion limit",
                    "type": "Integer="
                }
            ],
            "return": {
                "description": "The subsequent item or null",
                "type": "*"
            },
            "class": "",
            "module": "material.core.util"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 730,
            "ngdoc": "module",
            "name": "material.core.util",
            "description": "Util",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 746,
            "description": "Checks if the target element has the requested style by key",
            "params": [
                {
                    "name": "target",
                    "description": "Target element",
                    "type": "DOMElement|JQLite"
                },
                {
                    "name": "key",
                    "description": "Style key",
                    "type": "String"
                },
                {
                    "name": "expectedVal",
                    "description": "Optional expected value",
                    "type": "String="
                }
            ],
            "return": {
                "description": "Whether the target element has the style or not",
                "type": "Boolean"
            },
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 803,
            "description": "Calculate the positive scroll offset\nTODO: Check with pinch-zoom in IE/Chrome;\n      https://code.google.com/p/chromium/issues/detail?id=496285",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 818,
            "description": "Finds the proper focus target by searching the DOM.",
            "params": [
                {
                    "name": "containerEl",
                    "description": ""
                },
                {
                    "name": "attributeVal",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 843,
            "description": "Can target and nested children for specified Selector (attribute)\nwhose value may be an expression that evaluates to True/False.",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 1001,
            "description": "facade to build md-backdrop element with desired styles\nNOTE: Use $compile to trigger backdrop postLink function",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 1009,
            "description": "supplant() method from Crockford's `Remedial Javascript`\nEquivalent to use of $interpolate; without dependency on\ninterpolation symbols and scope. Note: the '{<token>}' can\nbe property names, property chains, or array indices.",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 1093,
            "description": "Measures the number of milliseconds taken to run the provided callback\nfunction. Uses a high-precision timer if available.",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 1103,
            "description": "Create an implicit getter that caches its `getter()`\nlookup value",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 1119,
            "description": "Get a unique ID.",
            "return": {
                "description": "an unique numeric string",
                "type": "String"
            },
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 1192,
            "description": "Build polyfill for the Node.contains feature (if needed)",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 1205,
            "description": "Functional equivalent for $element.filter(‘md-bottom-sheet’)\nuseful with interimElements where the element and its container are important...",
            "params": [
                {
                    "name": "elements",
                    "description": "to scan",
                    "type": "[]"
                },
                {
                    "name": "name",
                    "description": "of node to find (e.g. 'md-dialog')",
                    "type": "String"
                },
                {
                    "name": "optional",
                    "description": "flag to allow deep scans; defaults to 'false'.",
                    "type": "Boolean="
                },
                {
                    "name": "optional",
                    "description": "flag to enable log warnings; defaults to false",
                    "type": "Boolean="
                }
            ],
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 1222,
            "description": "Breadth-First tree scan for element with matching `nodeName`",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 1229,
            "description": "Case-insensitive scan of current elements only (do not descend).",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 1243,
            "description": "Scan children of specified node",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 1263,
            "description": "Give optional properties with no value a boolean true if attr provided or false otherwise",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 1276,
            "description": "Alternative to $timeout calls with 0 delay.\nnextTick() coalesces all calls within a single frame\nto minimize $digest thrashing",
            "params": [
                {
                    "name": "callback",
                    "description": ""
                },
                {
                    "name": "digest",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 1304,
            "description": "Grab a copy of the current queue\nClear the queue for future use\nProcess the existing queue\nTrigger digest if necessary",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 1327,
            "description": "Processes a template and replaces the start/end symbols if the application has\noverriden them.",
            "params": [
                {
                    "name": "template",
                    "description": "The template to process whose start/end tags may be replaced."
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 1343,
            "description": "Scan up dom hierarchy for enabled parent;",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 1420,
            "description": "Check if expected attribute has been specified on the target element or child",
            "params": [
                {
                    "name": "element",
                    "description": ""
                },
                {
                    "name": "attrName",
                    "description": ""
                },
                {
                    "name": "defaultValue",
                    "description": "What to set the attr to if no value is found",
                    "type": "Optional"
                }
            ],
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 1656,
            "description": "The position of the most recent click if that click was on a label element.",
            "type": "{{x: number, y: number}?}",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 1702,
            "description": "$get is used to build an instance of $mdGesture",
            "nginject": "",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 1713,
            "description": "MdGesture factory construction function",
            "nginject": "",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 1969,
            "description": "MdGestureHandler\nA GestureHandler is an object which is able to dispatch custom dom events\nbased on native dom {touch,pointer,mouse}{start,move,end} events.\n\nA gesture will manage its lifecycle through the start,move,end, and cancel\nfunctions, which are called by native dom events.\n\nA gesture has the concept of 'options' (eg a swipe's required velocity), which can be\noverridden by elements registering through $mdGesture.register()",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 2126,
            "description": "Attach Gestures: hook document and check shouldHijack clicks",
            "nginject": "",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 2297,
            "description": "Gets whether the given event is an input event that was caused by clicking on an\nassociated label element.\n\nThis is necessary because the browser will, upon clicking on a label element, fire an\n*extra* click event on its associated input (if any). mdGesture is able to flag the label\nclick as with `$material` correctly, but not the second input click.\n\nIn order to determine whether an input event is from a label click, we compare the (x, y) for\nthe event to the (x, y) for the most recent label click (which is cleared whenever a non-label\nclick occurs). Unfortunately, there are no event properties that tie the input and the label\ntogether (such as relatedTarget).",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "MouseEvent"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 2389,
            "description": "Returns a new provider which allows configuration of a new interimElement\nservice. Allows configuration of default options & methods for options,\nas well as configuration of 'preset' methods (eg dialog.basic(): basic is a preset method)",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 2409,
            "description": "all interim elements will come with the 'build' preset",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 2420,
            "description": "Save the configured defaults to be used when the factory is instantiated",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 2429,
            "description": "Add a method to the factory that isn't specific to any interim element operations",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 2438,
            "description": "Save the configured preset to be used when the factory is instantiated",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 2464,
            "description": "Create a factory that has the given methods & defaults implementing interimElement",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 2562,
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 2576,
            "description": "Special method to hide and destroy an interimElement WITHOUT\nany 'leave` or hide animations ( an immediate force hide/remove )\n\nNOTE: This calls the onRemove() subclass method for each component...\nwhich must have code to respond to `options.$destroy == true`",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 2587,
            "description": "Helper to call $injector.invoke with a local of the factory name for\nthis provider.\nIf an $mdDialog is providing options for a dialog and tries to inject\n$mdDialog, a circular dependency error will happen.\nWe get around that by manually injecting $mdDialog as a local.",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 2776,
            "description": "Compile, link, and show this interim element\nUse optional autoHided and transition-in effects",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 2802,
            "description": "After the show process has finished/rejected:\n- announce 'removing',\n- perform the transition-out, and\n- perform optional clean up scope.",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 2838,
            "description": "The `show()` returns a promise that will be resolved when the interim\nelement is hidden or cancelled...",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 2846,
            "description": "Force the '$md<xxx>.show()' promise to reject",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 2854,
            "description": "Prepare optional isolated scope and prepare $animate with default enter and leave\ntransitions for the new element instance.",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 2869,
            "description": "Default usage to enable $animate to transition-in; can be easily overridden via 'options'",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 2876,
            "description": "Default usage to enable $animate to transition-out; can be easily overridden via 'options'",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 2888,
            "description": "Compile an element with a templateUrl, controller, and locals",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 2905,
            "description": "Link an element with compiled configuration",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 2921,
            "description": "Search for parent at insertion time, if not specified",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 2953,
            "description": "If auto-hide is enabled, start timer and prepare cancel function",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 2973,
            "description": "Show the element ( with transitions), notify complete and start\noptional auto-Hide",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 3064,
            "description": "Enable directive attribute-to-class conversions\nDevelopers can use `<body md-layout-css />` to quickly\ndisable the Layout directives and prohibit the injection of Layout classNames",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 3071,
            "description": "List of mediaQuery breakpoints and associated suffixes\n\n  [\n   { suffix: \"sm\", mediaQuery: \"screen and (max-width: 599px)\" },\n   { suffix: \"md\", mediaQuery: \"screen and (min-width: 600px) and (max-width: 959px)\" }\n  ]",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 3084,
            "description": "registerLayoutAPI()\n\nThe original ngMaterial Layout solution used attribute selectors and CSS.\n\n  ```html\n  <div layout=\"column\"> My Content </div>\n  ```\n\n  ```css\n  [layout] {\n box-sizing: border-box;\n display:flex;\n  }\n  [layout=column] {\n flex-direction : column\n  }\n  ```\n\n  Use of attribute selectors creates significant performance impacts in some\n  browsers... mainly IE.\n\n  This module registers directives that allow the same layout attributes to be\n  interpreted and converted to class selectors. The directive will add equivalent classes to each element that\n  contains a Layout directive.\n\n ```html\n<div layout=\"column\" class=\"layout layout-column\"> My Content </div>\n```\n\n  ```css\n  .layout {\n box-sizing: border-box;\n display:flex;\n  }\n  .layout-column {\n flex-direction : column\n  }\n  ```",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 3180,
            "description": "Converts snake_case to camelCase.\nAlso there is special case for Moz prefix starting with upper case letter.",
            "params": [
                {
                    "name": "name",
                    "description": "Name to normalize"
                }
            ],
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 3195,
            "description": "Special directive that will disable ALL Layout conversions of layout\nattribute(s) to classname(s).\n\n<link rel=\"stylesheet\" href=\"angular-material.min.css\">\n<link rel=\"stylesheet\" href=\"angular-material.layout.css\">\n\n<body md-layout-css>\n ...\n</body>\n\nNote: Using md-layout-css directive requires the developer to load the Material\nLayout Attribute stylesheet (which only uses attribute selectors):\n\n      `angular-material.layout.css`\n\nAnother option is to use the LayoutProvider to configure and disable the attribute\nconversions; this would obviate the use of the `md-layout-css` directive",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 3226,
            "description": "Tail-hook ngCloak to delay the uncloaking while Layout transformers\nfinish processing. Eliminates flicker with Material.Layoouts",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 3264,
            "description": "Creates a directive registration function where a possible dynamic attribute\nvalue will be observed/watched.",
            "params": [
                {
                    "name": "className",
                    "description": "attribute name; eg `layout-gt-md` with value =\"row\"",
                    "type": "String"
                }
            ],
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 3299,
            "description": "Add as transformed class selector(s), then\nremove the deprecated attribute selector",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 3312,
            "description": "Creates a registration function for ngMaterial Layout attribute directive.\nThis is a `simple` transpose of attribute usage to class usage; where we ignore\nany attribute value",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 3346,
            "description": "Add as transformed class selector, then\nremove the deprecated attribute selector",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 3357,
            "description": "After link-phase, do NOT remove deprecated layout attribute selector.\nInstead watch the attribute so interpolated data-bindings to layout\nselectors will continue to be supported.\n\n$observe() the className and update with new class (after removing the last one)\n\ne.g. `layout=\"{{layoutDemo.direction}}\"` will update...\n\nNOTE: The value must match one of the specified styles in the CSS.\nFor example `flex-gt-md=\"{{size}}`  where `scope.size == 47` will NOT work since\nonly breakpoints for 0, 5, 10, 15... 100, 33, 34, 66, 67 are defined.",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 3384,
            "description": "Provide console warning that this layout attribute has been deprecated",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 3396,
            "description": "Centralize warnings for known flexbox issues (especially IE-related issues)",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 3420,
            "description": "For the Layout attribute value, validate or replace with default\nfallback value",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 3473,
            "description": "Replace current attribute value with fallback value",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 3487,
            "description": "See if the original value has interpolation symbols:\ne.g.  flex-gt-md=\"{{triggerPoint}}\"",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 3548,
            "ngdoc": "module",
            "name": "material.core.componentRegistry",
            "description": "A component instance registration service.\nNote: currently this as a private service in the SideNav component.",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 3573,
            "description": "Used to print an error when an instance for a handle isn't found.",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 3579,
            "description": "Return all registered instances as an array.",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 3586,
            "description": "Get a registered instance.",
            "params": [
                {
                    "name": "handle",
                    "description": "the String handle to look up for a registered instance."
                }
            ],
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 3603,
            "description": "Register an instance.",
            "params": [
                {
                    "name": "instance",
                    "description": "the instance to register"
                },
                {
                    "name": "handle",
                    "description": "the handle to identify the instance under."
                }
            ],
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 3617,
            "description": "Remove registration for an instance",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 3627,
            "description": "Resolve any pending promises for this instance",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 3639,
            "description": "Async accessor to registered component instance\nIf not available then a promise is created to notify\nall listeners when the instance is registered.",
            "class": "",
            "module": "material.core.gestures"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 3802,
            "ngdoc": "module",
            "name": "material.core.ripple",
            "description": "Ripple",
            "class": "",
            "module": "material.core"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 3891,
            "ngdoc": "method",
            "name": "$mdInkRipple#attach",
            "description": "Attaching given scope, element and options to inkRipple controller",
            "params": [
                {
                    "name": "scope",
                    "description": "Scope within the current context",
                    "type": "Object="
                },
                {
                    "name": "element",
                    "description": "The element the ripple effect should be applied to",
                    "type": "Object="
                },
                {
                    "name": "options",
                    "description": "(Optional) Configuration options to override the defaultRipple configuration\n* `center` -  Whether the ripple should start from the center of the container element\n* `dimBackground` - Whether the background should be dimmed with the ripple color\n* `colorElement` - The element the ripple should take its color from, defined by css property `color`\n* `fitRipple` - Whether the ripple should fill the element",
                    "type": "Object="
                }
            ],
            "class": "",
            "module": "material.core.ripple"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 3919,
            "description": "Controller used by the ripple service in order to apply ripples",
            "nginject": "",
            "class": "",
            "module": "material.core.ripple"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 3948,
            "description": "Either remove or unlock any remaining ripples when the user mouses off of the element (either by\nmouseup or mouseleave event)",
            "class": "",
            "module": "material.core.ripple"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 3962,
            "description": "Returns the color that the ripple should be (either based on CSS or hard-coded)",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "",
            "module": "material.core.ripple"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 3977,
            "description": "Finds the color element and returns its text color for use as default ripple color",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "",
            "module": "material.core.ripple"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 3989,
            "description": "Updating the ripple colors based on the current inkRipple value\nor the element's computed style color",
            "class": "",
            "module": "material.core.ripple"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 3998,
            "description": "Takes a string color and converts it to RGBA format",
            "params": [
                {
                    "name": "color",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "multiplier",
                    "description": "",
                    "type": "Int",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "",
            "module": "material.core.ripple"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 4013,
            "description": "Converts hex value to RGBA string",
            "params": [
                {
                    "name": "color",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "",
            "module": "material.core.ripple"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 4032,
            "description": "Converts an RGB color to RGBA",
            "params": [
                {
                    "name": "color",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "",
            "module": "material.core.ripple"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 4043,
            "description": "Binds events to the root element for",
            "class": "",
            "module": "material.core.ripple"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 4053,
            "description": "Create a new ripple on every mousedown event from the root element",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "MouseEvent"
                }
            ],
            "class": "",
            "module": "material.core.ripple"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 4080,
            "description": "Either remove or unlock any remaining ripples when the user mouses off of the element (either by\nmouseup, touchend or mouseleave event)",
            "class": "",
            "module": "material.core.ripple"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 4088,
            "description": "Either remove or unlock any remaining ripples when the user mouses off of the element (by\ntouchmove)",
            "class": "",
            "module": "material.core.ripple"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 4096,
            "description": "Cycles through all ripples and attempts to remove them.",
            "class": "",
            "module": "material.core.ripple"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 4105,
            "description": "Cycles through all ripples and attempts to remove them with fade.\nDepending on logic within `fadeInComplete`, some removals will be postponed.",
            "class": "",
            "module": "material.core.ripple"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 4115,
            "description": "Creates the ripple container element",
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "",
            "module": "material.core.ripple"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 4146,
            "description": "The attribute `md-ink-ripple` may be a static or interpolated\ncolor value OR a boolean indicator (used to disable ripples)",
            "class": "",
            "module": "material.core.ripple"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 4154,
            "description": "Creates a new ripple and adds it to the container.  Also tracks ripple in `this.ripples`.",
            "params": [
                {
                    "name": "left",
                    "description": ""
                },
                {
                    "name": "top",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.core.ripple"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 4218,
            "description": "After fadeIn finishes, either kicks off the fade-out animation or queues the element for removal on mouseup",
            "params": [
                {
                    "name": "ripple",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.core.ripple"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 4232,
            "description": "Kicks off the animation for removing a ripple",
            "params": [
                {
                    "name": "ripple",
                    "description": "",
                    "type": "Element"
                }
            ],
            "class": "",
            "module": "material.core.ripple"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 4250,
            "description": "Removes the provided ripple from the DOM",
            "params": [
                {
                    "name": "ripple",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.core.ripple"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 4259,
            "description": "Used to create an empty directive.  This is used to track flag-directives whose children may have\nfunctionality based on them.\n\nExample: `md-no-ink` will potentially be used by all child directives.",
            "class": "",
            "module": "material.core.ripple"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 4692,
            "ngdoc": "method",
            "name": "$mdThemingProvider#setNonce",
            "params": [
                {
                    "name": "nonceValue",
                    "description": "The nonce to be added as an attribute to the theme style tags.\nSetting a value allows the use CSP policy without using the unsafe-inline directive.",
                    "type": "String"
                }
            ],
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 4699,
            "ngdoc": "method",
            "name": "$mdThemingProvider#setDefaultTheme",
            "params": [
                {
                    "name": "themeName",
                    "description": "Default theme name to be applied to elements. Default value is `default`.",
                    "type": "String"
                }
            ],
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 4705,
            "ngdoc": "method",
            "name": "$mdThemingProvider#alwaysWatchTheme",
            "params": [
                {
                    "name": "watch",
                    "description": "Whether or not to always watch themes for changes and re-apply\nclasses when they change. Default is `false`. Enabling can reduce performance.",
                    "type": "Boolean"
                }
            ],
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 4993,
            "ngdoc": "service",
            "name": "$mdTheming",
            "description": "Service that makes an element apply theming related classes to itself.\n\n```js\napp.directive('myFancyDirective', function($mdTheming) {\n  return {\n    restrict: 'e',\n    link: function(scope, el, attrs) {\n      $mdTheming(el);\n    }\n  };\n});\n```",
            "params": [
                {
                    "name": "element",
                    "description": "to apply theming to",
                    "type": "El="
                }
            ],
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 5379,
            "description": "Factory function that requires special injections",
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 5385,
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 5400,
            "description": "Specific reversal of the request translate animation above...",
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 5413,
            "description": "Listen for transitionEnd event (with optional timeout)\nAnnounce completion or failure via promise handlers",
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 5426,
            "description": "Upon timeout or transitionEnd, reject or resolve (respectively) this promise.\nNOTE: Make sure this transitionEnd didn't bubble up from a child",
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 5444,
            "description": "Calculate the zoom transform from dialog to origin.\n\nWe use this to set the dialog position immediately;\nthen the md-transition-in actually translates back to\n`translate3d(0,0,0) scale(1.0)`...\n\nNOTE: all values are rounded to the nearest integer",
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 5479,
            "description": "This is a fallback if the origin information is no longer valid, then the\norigin bounds simply becomes the current bounds for the dialogContainer's parent",
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 5491,
            "description": "Enhance raw values to represent valid css stylings...",
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 5527,
            "description": "Convert the translate CSS value to key/value pair(s).",
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 5544,
            "description": "Clone the Rect and calculate the height/width if needed",
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 5562,
            "description": "Calculate ClientRect of element; return null if hidden or zero size",
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 5575,
            "description": "Calculate 'rounded' center point of Rect",
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 5980,
            "description": "Older browsers [FF31] expect camelCase\nproperty keys.\ne.g.\n animation-duration --> animationDuration",
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 6000,
            "ngdoc": "module",
            "name": "material.components.autocomplete",
            "class": "",
            "module": "material.core.theming"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 6090,
            "ngdoc": "module",
            "name": "material.components.button",
            "description": "Button",
            "class": "",
            "module": "material.components.backdrop"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 6225,
            "ngdoc": "module",
            "name": "material.components.card",
            "description": "Card components.",
            "class": "",
            "module": "material.components.button"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 6360,
            "ngdoc": "module",
            "name": "material.components.checkbox",
            "description": "Checkbox module!",
            "class": "",
            "module": "material.components.card"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 6541,
            "ngdoc": "module",
            "name": "material.components.bottomSheet",
            "description": "BottomSheet",
            "class": "",
            "module": "material.components.checkbox"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 6605,
            "ngdoc": "method",
            "name": "$mdBottomSheet#show",
            "description": "Show a bottom sheet with the specified options.",
            "params": [
                {
                    "name": "options",
                    "description": "An options object, with the following properties:\n\n  - `templateUrl` - `{string=}`: The url of an html template file that will\n  be used as the content of the bottom sheet. Restrictions: the template must\n  have an outer `md-bottom-sheet` element.\n  - `template` - `{string=}`: Same as templateUrl, except this is an actual\n  template string.\n  - `scope` - `{object=}`: the scope to link the template / controller to. If none is specified, it will create a new child scope.\n    This scope will be destroyed when the bottom sheet is removed unless `preserveScope` is set to true.\n  - `preserveScope` - `{boolean=}`: whether to preserve the scope when the element is removed. Default is false\n  - `controller` - `{string=}`: The controller to associate with this bottom sheet.\n  - `locals` - `{string=}`: An object containing key/value pairs. The keys will\n  be used as names of values to inject into the controller. For example,\n  `locals: {three: 3}` would inject `three` into the controller with the value\n  of 3.\n  - `clickOutsideToClose` - `{boolean=}`: Whether the user can click outside the bottom sheet to\n    close it. Default true.\n  - `escapeToClose` - `{boolean=}`: Whether the user can press escape to close the bottom sheet.\n    Default true.\n  - `resolve` - `{object=}`: Similar to locals, except it takes promises as values\n  and the bottom sheet will not open until the promises resolve.\n  - `controllerAs` - `{string=}`: An alias to assign the controller to on the scope.\n  - `parent` - `{element=}`: The element to append the bottom sheet to. The `parent` may be a `function`, `string`,\n  `object`, or null. Defaults to appending to the body of the root element (or the root element) of the application.\n  e.g. angular.element(document.getElementById('content')) or \"#content\"\n  - `disableParentScroll` - `{boolean=}`: Whether to disable scrolling while the bottom sheet is open.\n    Default true.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "A promise that can be resolved with `$mdBottomSheet.hide()` or\nrejected with `$mdBottomSheet.cancel()`.",
                "type": "Promise"
            },
            "class": "",
            "module": "material.components.bottomSheet"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 6644,
            "ngdoc": "method",
            "name": "$mdBottomSheet#hide",
            "description": "Hide the existing bottom sheet and resolve the promise returned from\n`$mdBottomSheet.show()`. This call will close the most recently opened/current bottomsheet (if any).",
            "params": [
                {
                    "name": "response",
                    "description": "An argument for the resolved promise.",
                    "type": "*="
                }
            ],
            "class": "",
            "module": "material.components.bottomSheet"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 6656,
            "ngdoc": "method",
            "name": "$mdBottomSheet#cancel",
            "description": "Hide the existing bottom sheet and reject the promise returned from\n`$mdBottomSheet.show()`.",
            "params": [
                {
                    "name": "response",
                    "description": "An argument for the rejected promise.",
                    "type": "*="
                }
            ],
            "class": "",
            "module": "material.components.bottomSheet"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 6756,
            "description": "BottomSheet class to apply bottom-sheet behavior to an element",
            "class": "",
            "module": "material.components.bottomSheet"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 6812,
            "ngdoc": "module",
            "name": "material.components.chips",
            "class": "",
            "module": "material.components.bottomSheet"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 6828,
            "ngdoc": "module",
            "name": "material.components.dialog",
            "class": "",
            "module": "material.components.bottomSheet"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 6893,
            "class": "",
            "module": "material.components.dialog"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 7149,
            "ngdoc": "method",
            "name": "$mdDialog#alert",
            "description": "Builds a preconfigured dialog with the specified message.",
            "return": {
                "description": "an `$mdDialogPreset` with the chainable configuration methods:\n\n- $mdDialogPreset#title(string) - Sets the alert title.\n- $mdDialogPreset#textContent(string) - Sets the alert message.\n- $mdDialogPreset#htmlContent(string) - Sets the alert message as HTML. Requires ngSanitize\n    module to be loaded. HTML is not run through Angular's compiler.\n- $mdDialogPreset#ok(string) - Sets the alert \"Okay\" button text.\n- $mdDialogPreset#theme(string) - Sets the theme of the alert dialog.\n- $mdDialogPreset#targetEvent(DOMClickEvent=) - A click's event object. When passed in as an option,\n    the location of the click will be used as the starting point for the opening animation\n    of the the dialog.",
                "type": "Obj"
            },
            "class": "",
            "module": "material.components.dialog"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 7170,
            "ngdoc": "method",
            "name": "$mdDialog#confirm",
            "description": "Builds a preconfigured dialog with the specified message. You can call show and the promise returned\nwill be resolved only if the user clicks the confirm action on the dialog.",
            "return": {
                "description": "an `$mdDialogPreset` with the chainable configuration methods:\n\nAdditionally, it supports the following methods:\n\n- $mdDialogPreset#title(string) - Sets the confirm title.\n- $mdDialogPreset#textContent(string) - Sets the confirm message.\n- $mdDialogPreset#htmlContent(string) - Sets the confirm message as HTML. Requires ngSanitize\n    module to be loaded. HTML is not run through Angular's compiler.\n- $mdDialogPreset#ok(string) - Sets the confirm \"Okay\" button text.\n- $mdDialogPreset#cancel(string) - Sets the confirm \"Cancel\" button text.\n- $mdDialogPreset#theme(string) - Sets the theme of the confirm dialog.\n- $mdDialogPreset#targetEvent(DOMClickEvent=) - A click's event object. When passed in as an option,\n    the location of the click will be used as the starting point for the opening animation\n    of the the dialog.",
                "type": "Obj"
            },
            "class": "",
            "module": "material.components.dialog"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 7195,
            "ngdoc": "method",
            "name": "$mdDialog#show",
            "description": "Show a dialog with the specified options.",
            "params": [
                {
                    "name": "optionsOrPreset",
                    "description": "Either provide an `$mdDialogPreset` returned from `alert()`, and\n`confirm()`, or an options object with the following properties:\n  - `templateUrl` - `{string=}`: The url of a template that will be used as the content\n  of the dialog.\n  - `template` - `{string=}`: HTML template to show in the dialog. This **must** be trusted HTML\n     with respect to Angular's [$sce service](https://docs.angularjs.org/api/ng/service/$sce).\n     This template should **never** be constructed with any kind of user input or user data.\n  - `autoWrap` - `{boolean=}`: Whether or not to automatically wrap the template with a\n    `<md-dialog>` tag if one is not provided. Defaults to true. Can be disabled if you provide a\n    custom dialog directive.\n  - `targetEvent` - `{DOMClickEvent=}`: A click's event object. When passed in as an option,\n    the location of the click will be used as the starting point for the opening animation\n    of the the dialog.\n  - `openFrom` - `{string|Element|object}`: The query selector, DOM element or the Rect object\n    that is used to determine the bounds (top, left, height, width) from which the Dialog will\n    originate.\n  - `closeTo` - `{string|Element|object}`: The query selector, DOM element or the Rect object\n    that is used to determine the bounds (top, left, height, width) to which the Dialog will\n    target.\n  - `scope` - `{object=}`: the scope to link the template / controller to. If none is specified,\n    it will create a new isolate scope.\n    This scope will be destroyed when the dialog is removed unless `preserveScope` is set to true.\n  - `preserveScope` - `{boolean=}`: whether to preserve the scope when the element is removed. Default is false\n  - `disableParentScroll` - `{boolean=}`: Whether to disable scrolling while the dialog is open.\n    Default true.\n  - `hasBackdrop` - `{boolean=}`: Whether there should be an opaque backdrop behind the dialog.\n    Default true.\n  - `clickOutsideToClose` - `{boolean=}`: Whether the user can click outside the dialog to\n    close it. Default false.\n  - `escapeToClose` - `{boolean=}`: Whether the user can press escape to close the dialog.\n    Default true.\n  - `focusOnOpen` - `{boolean=}`: An option to override focus behavior on open. Only disable if\n    focusing some other way, as focus management is required for dialogs to be accessible.\n    Defaults to true.\n  - `controller` - `{function|string=}`: The controller to associate with the dialog. The controller\n    will be injected with the local `$mdDialog`, which passes along a scope for the dialog.\n  - `locals` - `{object=}`: An object containing key/value pairs. The keys will be used as names\n    of values to inject into the controller. For example, `locals: {three: 3}` would inject\n    `three` into the controller, with the value 3. If `bindToController` is true, they will be\n    copied to the controller instead.\n  - `bindToController` - `bool`: bind the locals to the controller, instead of passing them in.\n  - `resolve` - `{object=}`: Similar to locals, except it takes promises as values, and the\n    dialog will not open until all of the promises resolve.\n  - `controllerAs` - `{string=}`: An alias to assign the controller to on the scope.\n  - `parent` - `{element=}`: The element to append the dialog to. Defaults to appending\n    to the root element of the application.\n  - `onShowing` `{function=} Callback function used to announce the show() action is\n    starting.\n  - `onComplete` `{function=}`: Callback function used to announce when the show() action is\n    finished.\n  - `onRemoving` `{function=}`: Callback function used to announce the close/hide() action is\n    starting. This allows developers to run custom animations in parallel the close animations.\n  - `fullscreen` `{boolean=}`: An option to apply `.md-dialog-fullscreen` class on open.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "A promise that can be resolved with `$mdDialog.hide()` or\nrejected with `$mdDialog.cancel()`.",
                "type": "Promise"
            },
            "class": "",
            "module": "material.components.dialog"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 7259,
            "ngdoc": "method",
            "name": "$mdDialog#hide",
            "description": "Hide an existing dialog and resolve the promise returned from `$mdDialog.show()`.",
            "params": [
                {
                    "name": "response",
                    "description": "An argument for the resolved promise.",
                    "type": "*="
                }
            ],
            "return": {
                "description": "A promise that is resolved when the dialog has been closed.",
                "type": "Promise"
            },
            "class": "",
            "module": "material.components.dialog"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 7271,
            "ngdoc": "method",
            "name": "$mdDialog#cancel",
            "description": "Hide an existing dialog and reject the promise returned from `$mdDialog.show()`.",
            "params": [
                {
                    "name": "response",
                    "description": "An argument for the rejected promise.",
                    "type": "*="
                }
            ],
            "return": {
                "description": "A promise that is resolved when the dialog has been closed.",
                "type": "Promise"
            },
            "class": "",
            "module": "material.components.dialog"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 7364,
            "description": "The specified template should contain a <md-dialog> wrapper element....",
            "class": "",
            "module": "material.components.dialog"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 7393,
            "class": "",
            "module": "material.components.dialog"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 7409,
            "description": "Check to see if they used the deprecated .md-actions class and log a warning",
            "class": "",
            "module": "material.components.dialog"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 7420,
            "description": "For alerts, focus on content... otherwise focus on\nthe close button (or equivalent)",
            "class": "",
            "module": "material.components.dialog"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 7430,
            "description": "If no element with class dialog-close, try to find the last\nbutton child in md-actions and assume it is a close button.\n\nIf we find no actions at all, log a warning to the console.",
            "class": "",
            "module": "material.components.dialog"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 7447,
            "description": "Remove function for all dialogs",
            "class": "",
            "module": "material.components.dialog"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 7468,
            "description": "For normal closes, animate the removal.\nFor forced closes (like $destroy events), skip the animations",
            "class": "",
            "module": "material.components.dialog"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 7476,
            "description": "Detach the element",
            "class": "",
            "module": "material.components.dialog"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 7487,
            "description": "Capture originator/trigger/from/to element information (if available)\nand the parent container for the dialog; defaults to the $rootElement\nunless overridden in the options.parent",
            "class": "",
            "module": "material.components.dialog"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 7507,
            "description": "Identify the bounding RECT for the target element",
            "class": "",
            "module": "material.components.dialog"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 7530,
            "description": "If the specifier is a simple string selector, then query for\nthe DOM element.",
            "class": "",
            "module": "material.components.dialog"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 7547,
            "description": "Listen for escape keys and outside clicks to auto close",
            "class": "",
            "module": "material.components.dialog"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 7639,
            "description": "Show modal backdrop element...",
            "class": "",
            "module": "material.components.dialog"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 7655,
            "description": "Hide modal backdrop element...",
            "class": "",
            "module": "material.components.dialog"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 7673,
            "description": "Inject ARIA-specific attributes appropriate for Dialogs",
            "class": "",
            "module": "material.components.dialog"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 7727,
            "description": "Prevents screen reader interaction behind modal window\non swipe interfaces",
            "class": "",
            "module": "material.components.dialog"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 7744,
            "description": "Walk DOM to apply or remove aria-hidden on sibling nodes\nand parent sibling nodes",
            "class": "",
            "module": "material.components.dialog"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 7768,
            "description": "Ensure the dialog container fill-stretches to the viewport",
            "class": "",
            "module": "material.components.dialog"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 7784,
            "description": "Dialog open and pop-in animation",
            "class": "",
            "module": "material.components.dialog"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 7833,
            "description": "Dialog close and pop-out animation",
            "class": "",
            "module": "material.components.dialog"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 7840,
            "description": "Utility function to filter out raw DOM nodes",
            "class": "",
            "module": "material.components.dialog"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 7857,
            "ngdoc": "module",
            "name": "material.components.divider",
            "description": "Divider module!",
            "class": "",
            "module": "material.components.dialog"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 7900,
            "ngdoc": "module",
            "name": "material.components.datepicker",
            "description": "Datepicker",
            "class": "",
            "module": "material.components.divider"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 7927,
            "description": "Height of one calendar month tbody. This must be made known to the virtual-repeat and is\nsubsequently used for scrolling to specific months.",
            "class": "",
            "module": "material.components.divider"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 7933,
            "description": "Height of a calendar month with a single row. This is needed to calculate the offset for\nrendering an extra month in virtual-repeat that only contains one row.",
            "class": "",
            "module": "material.components.divider"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 7971,
            "class": "",
            "module": "material.components.divider"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 7974,
            "class": "",
            "module": "material.components.divider"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 7977,
            "class": "",
            "module": "material.components.divider"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 7980,
            "class": "",
            "module": "material.components.divider"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 7983,
            "description": "Controller for the mdCalendar component.",
            "nginject": "@constructor",
            "class": "",
            "module": "material.components.divider"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 7990,
            "description": "Dummy array-like object for virtual-repeat to iterate over. The length is the total\nnumber of months that can be viewed. This is shorter than ideal because of (potential)\nFirefox bug https://bugzilla.mozilla.org/show_bug.cgi?id=1181658.",
            "class": "",
            "module": "material.components.divider"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 8006,
            "class": "",
            "module": "material.components.divider"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 8009,
            "class": "",
            "module": "material.components.divider"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 8012,
            "class": "",
            "module": "material.components.divider"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 8015,
            "class": "",
            "module": "material.components.divider"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 8018,
            "class": "",
            "module": "material.components.divider"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 8021,
            "class": "",
            "module": "material.components.divider"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 8024,
            "class": "",
            "module": "material.components.divider"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 8027,
            "class": "",
            "module": "material.components.divider"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 8030,
            "class": "",
            "module": "material.components.divider"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 8033,
            "class": "",
            "module": "material.components.divider"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 8036,
            "class": "",
            "module": "material.components.divider"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 8039,
            "class": "",
            "module": "material.components.divider"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 8042,
            "class": "",
            "module": "material.components.divider"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 8056,
            "class": "",
            "module": "material.components.divider"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 8059,
            "class": "",
            "module": "material.components.divider"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 8062,
            "description": "The selected date. Keep track of this separately from the ng-model value so that we\ncan know, when the ng-model value changes, what the previous value was before it's updated\nin the component's UI.",
            "type": "{Date}",
            "class": "",
            "module": "material.components.divider"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 8071,
            "description": "The date that is currently focused or showing in the calendar. This will initially be set\nto the ng-model value if set, otherwise to today. It will be updated as the user navigates\nto other months. The cell corresponding to the displayDate does not necesarily always have\nfocus in the document (such as for cases when the user is scrolling the calendar).",
            "type": "{Date}",
            "class": "",
            "module": "material.components.divider"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 8080,
            "description": "The date that has or should have focus.",
            "type": "{Date}",
            "class": "",
            "module": "material.components.divider"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 8086,
            "class": "",
            "module": "material.components.divider"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 8089,
            "class": "",
            "module": "material.components.divider"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 8101,
            "description": "Handles a click event on a date cell.\nCreated here so that every cell can use the same function instance.",
            "this": "{HTMLTableCellElement} The cell that was clicked.",
            "class": "",
            "module": "material.components.divider"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 8121,
            "class": "",
            "module": "material.components.divider"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 8123,
            "description": "Sets up the controller's reference to ngModelController.",
            "params": [
                {
                    "name": "ngModelCtrl",
                    "description": "",
                    "type": "!angular.NgModelController"
                }
            ],
            "class": "",
            "module": "material.components.divider"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 8136,
            "description": "Initialize the calendar by building the months that are initially visible.\nInitialization should occur after the ngModel value is known.",
            "class": "",
            "module": "material.components.divider"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 8148,
            "description": "Hides the vertical scrollbar on the calendar scroller by setting the width on the\ncalendar scroller and the `overflow: hidden` wrapper around the scroller, and then setting\na padding-right on the scroller equal to the width of the browser's scrollbar.\n\nThis will cause a reflow.",
            "class": "",
            "module": "material.components.divider"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 8170,
            "class": "",
            "module": "material.components.divider"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 8176,
            "class": "",
            "module": "material.components.divider"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 8178,
            "description": "Handles a key event in the calendar with the appropriate action. The action will either\nbe to select the focused date or to navigate to focus a new date.",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "KeyboardEvent"
                }
            ],
            "class": "",
            "module": "material.components.divider"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 8222,
            "description": "Gets the date to focus as the result of a key event.",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "KeyboardEvent"
                }
            ],
            "return": {
                "description": "Date to navigate to, or null if the key does not match a calendar shortcut.",
                "type": "Date"
            },
            "class": "",
            "module": "material.components.divider"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 8250,
            "description": "Gets the \"index\" of the currently selected date as it would be in the virtual-repeat.",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "",
            "module": "material.components.divider"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 8259,
            "description": "Scrolls to the month of the given date.",
            "params": [
                {
                    "name": "date",
                    "description": "",
                    "type": "Date"
                }
            ],
            "class": "",
            "module": "material.components.divider"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 8272,
            "description": "Sets the ng-model value for the calendar and emits a change event.",
            "params": [
                {
                    "name": "date",
                    "description": "",
                    "type": "Date"
                }
            ],
            "class": "",
            "module": "material.components.divider"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 8282,
            "description": "Focus the cell corresponding to the given date.",
            "params": [
                {
                    "name": "opt_date",
                    "description": "",
                    "type": "Date="
                }
            ],
            "class": "",
            "module": "material.components.divider"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 8304,
            "description": "If a date exceeds minDate or maxDate, returns date matching minDate or maxDate, respectively.\nOtherwise, returns the date.",
            "params": [
                {
                    "name": "date",
                    "description": "",
                    "type": "Date"
                }
            ],
            "return": {
                "description": "",
                "type": "Date"
            },
            "class": "",
            "module": "material.components.divider"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 8321,
            "class": "",
            "module": "material.components.divider"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 8323,
            "description": "Change the selected date in the calendar (ngModel value has already been changed).",
            "params": [
                {
                    "name": "date",
                    "description": "",
                    "type": "Date"
                }
            ],
            "class": "",
            "module": "material.components.divider"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 8355,
            "description": "Change the date that is being shown in the calendar. If the given date is in a different\nmonth, the displayed month will be transitioned.",
            "params": [
                {
                    "name": "date",
                    "description": "",
                    "type": "Date"
                }
            ],
            "class": "",
            "module": "material.components.divider"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 8386,
            "description": "Animates the transition from the calendar's current month to the given month.",
            "params": [
                {
                    "name": "date",
                    "description": "",
                    "type": "Date"
                }
            ],
            "return": {
                "description": "The animation promise.",
                "type": "angular.$q.Promise"
            },
            "class": "",
            "module": "material.components.divider"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 8396,
            "class": "",
            "module": "material.components.divider"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 8398,
            "description": "Builds and appends a day-of-the-week header to the calendar.\nThis should only need to be called once during initialization.",
            "class": "",
            "module": "material.components.divider"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 8416,
            "description": "Gets an identifier for a date unique to the calendar instance for internal\npurposes. Not to be displayed.",
            "params": [
                {
                    "name": "date",
                    "description": "",
                    "type": "Date"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "",
            "module": "material.components.divider"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 8445,
            "description": "Private directive consumed by md-calendar. Having this directive lets the calender use\nmd-virtual-repeat and also cleanly separates the month DOM construction functions from\nthe rest of the calendar controller logic.",
            "class": "",
            "module": "material.components.divider"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 8477,
            "class": "",
            "module": "material.components.divider"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 8480,
            "class": "",
            "module": "material.components.divider"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 8483,
            "class": "",
            "module": "material.components.divider"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 8486,
            "description": "Controller for a single calendar month.",
            "nginject": "@constructor",
            "class": "",
            "module": "material.components.divider"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 8496,
            "description": "Number of months from the start of the month \"items\" that the currently rendered month\noccurs. Set via angular data binding.",
            "type": "{number}",
            "class": "",
            "module": "material.components.divider"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 8503,
            "description": "Date cell to focus after appending the month to the document.",
            "type": "{HTMLElement}",
            "class": "",
            "module": "material.components.divider"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 8511,
            "class": "",
            "module": "material.components.divider"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 8526,
            "description": "Creates a single cell to contain a date in the calendar with all appropriate\nattributes and classes added. If a date is given, the cell content will be set\nbased on the date.",
            "params": [
                {
                    "name": "opt_date",
                    "description": "",
                    "type": "Date="
                }
            ],
            "return": {
                "description": "",
                "type": "HTMLElement"
            },
            "class": "",
            "module": "material.components.divider"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 8585,
            "description": "Check whether date is in range and enabled",
            "params": [
                {
                    "name": "opt_date",
                    "description": "",
                    "type": "Date="
                }
            ],
            "return": {
                "description": "Whether the date is enabled.",
                "type": "Boolean"
            },
            "class": "",
            "module": "material.components.divider"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 8597,
            "description": "Builds a `tr` element for the calendar grid.",
            "params": [
                {
                    "name": "rowNumber",
                    "description": "The week number within the month."
                }
            ],
            "return": {
                "description": "",
                "type": "HTMLElement"
            },
            "class": "",
            "module": "material.components.divider"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 8614,
            "description": "Builds the <tbody> content for the given date's month.",
            "params": [
                {
                    "name": "opt_dateInMonth",
                    "description": "",
                    "type": "Date="
                }
            ],
            "return": {
                "description": "A document fragment containing the <tr> elements.",
                "type": "DocumentFragment"
            },
            "class": "",
            "module": "material.components.divider"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 8714,
            "description": "Gets the day-of-the-week index for a date for the current locale.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "date",
                    "description": "",
                    "type": "Date"
                }
            ],
            "return": {
                "description": "The column index of the date in the calendar.",
                "type": "Number"
            },
            "class": "",
            "module": "material.components.divider"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 8809,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 8811,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 8814,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 8817,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 8820,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 8823,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 8826,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 8829,
            "description": "Function that converts the date portion of a Date to a string.",
            "type": "{(function(Date): string)}",
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 8835,
            "description": "Function that converts a date string to a Date object (the date portion)",
            "type": "{function(string): Date}",
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 8841,
            "description": "Function that formats a Date into a month header string.",
            "type": "{function(Date): string}",
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 8847,
            "description": "Function that formats a week number into a label for the week.",
            "type": "{function(number): string}",
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 8853,
            "description": "Function that formats a date into a long aria-label that is read\nwhen the focused date changes.",
            "type": "{function(Date): string}",
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 8860,
            "description": "ARIA label for the calendar \"dialog\" used in the datepicker.",
            "type": "{string}",
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 8866,
            "description": "ARIA label for the datepicker's \"Open calendar\" buttons.",
            "type": "{string}",
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 8873,
            "description": "Factory function that returns an instance of the dateLocale service.",
            "nginject": "",
            "params": [
                {
                    "name": "$locale",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "DateLocale"
            },
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 8880,
            "description": "Default date-to-string formatting function.",
            "params": [
                {
                    "name": "date",
                    "description": "",
                    "type": "!Date"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 8905,
            "description": "Default string-to-date parsing function.",
            "params": [
                {
                    "name": "dateString",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "!Date"
            },
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 8914,
            "description": "Default function to determine whether a string makes sense to be\nparsed to a Date object.\n\nThis is very permissive and is just a basic sanity check to ensure that\nthings like single integers aren't able to be parsed into dates.",
            "params": [
                {
                    "name": "dateString",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 8932,
            "description": "Default date-to-string formatter to get a month header.",
            "params": [
                {
                    "name": "date",
                    "description": "",
                    "type": "!Date"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 8941,
            "description": "Default week number formatter.",
            "params": [
                {
                    "name": "number",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 8950,
            "description": "Default formatter for date cell aria-labels.",
            "params": [
                {
                    "name": "date",
                    "description": "",
                    "type": "!Date"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 9118,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 9121,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 9124,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 9127,
            "description": "Height of the calendar pane used to check if the pane is going outside the boundary of\nthe viewport. See calendar.scss for how $md-calendar-height is computed; an extra 20px is\nalso added to space the pane away from the exact edge of the screen.\n\n This is computed statically now, but can be changed to be measured if the circumstances\n of calendar sizing are changed.",
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 9137,
            "description": "Width of the calendar pane used to check if the pane is going outside the boundary of\nthe viewport. See calendar.scss for how $md-calendar-width is computed; an extra 20px is\nalso added to space the pane away from the exact edge of the screen.\n\n This is computed statically now, but can be changed to be measured if the circumstances\n of calendar sizing are changed.",
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 9147,
            "description": "Controller for md-datepicker.",
            "nginject": "@constructor",
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 9154,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 9157,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 9160,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 9163,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 9166,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 9169,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 9175,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 9178,
            "description": "The root document element. This is used for attaching a top-level click handler to\nclose the calendar panel when a click outside said panel occurs. We use `documentElement`\ninstead of body because, when scrolling is disabled, some browsers consider the body element\nto be completely off the screen and propagate events directly to the html element.",
            "type": "{!angular.JQLite}",
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 9187,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 9190,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 9193,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 9196,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 9199,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 9202,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 9205,
            "description": "Element covering everything but the input in the top of the floating calendar pane.",
            "type": "{HTMLElement}",
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 9211,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 9214,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 9217,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 9220,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 9223,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 9226,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 9230,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 9233,
            "description": "Element from which the calendar pane was opened. Keep track of this so that we can return\nfocus to it when the pane is closed.",
            "type": "{HTMLElement}",
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 9244,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 9247,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 9268,
            "description": "Sets up the controller's reference to ngModelController.",
            "params": [
                {
                    "name": "ngModelCtrl",
                    "description": "",
                    "type": "!angular.NgModelController"
                }
            ],
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 9291,
            "description": "Attach event listeners for both the text input and the md-calendar.\nEvents are used instead of ng-model so that updates don't infinitely update the other\non a change. This should also be more performant than using a $watch.",
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 9314,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 9333,
            "description": "Capture properties set to the date-picker and imperitively handle internal changes.\nThis is done to avoid setting up additional $watches.",
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 9358,
            "description": "Sets whether the date-picker is disabled.",
            "params": [
                {
                    "name": "isDisabled",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 9368,
            "description": "Sets the custom ngModel.$error flags to be consumed by ngMessages. Flags are:\n  - mindate: whether the selected date is before the minimum date.\n  - maxdate: whether the selected flag is after the maximum date.\n  - filtered: whether the selected date is allowed by the custom filtering function.\n  - valid: whether the entered text input is a valid date\n\nThe 'required' flag is handled automatically by ngModel.",
            "params": [
                {
                    "name": "opt_date",
                    "description": "Date to check. If not given, defaults to the datepicker's model value.",
                    "type": "Date="
                }
            ],
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 9416,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 9424,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 9429,
            "description": "Sets the model value if the user input is a valid date.\nAdds an invalid class to the input element if not.",
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 9455,
            "description": "Check whether date is in range and enabled",
            "params": [
                {
                    "name": "opt_date",
                    "description": "",
                    "type": "Date="
                }
            ],
            "return": {
                "description": "Whether the date is enabled.",
                "type": "Boolean"
            },
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 9465,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 9534,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 9547,
            "description": "Open the floating calendar pane.",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "Event"
                }
            ],
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 9580,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 9596,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 9601,
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 9610,
            "description": "Sets whether the input is currently focused.",
            "params": [
                {
                    "name": "isFocused",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 9621,
            "description": "Handles a click on the document body when the floating calendar pane is open.\nCloses the floating calendar pane if the click is not inside of it.",
            "params": [
                {
                    "name": "event",
                    "description": "",
                    "type": "MouseEvent"
                }
            ],
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 9646,
            "description": "Utility for performing date calculations to facilitate operation of the calendar and\ndatepicker.",
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 9672,
            "description": "Gets the first day of the month for the given date's month.",
            "params": [
                {
                    "name": "date",
                    "description": "",
                    "type": "Date"
                }
            ],
            "return": {
                "description": "",
                "type": "Date"
            },
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 9681,
            "description": "Gets the number of days in the month for the given date's month.",
            "params": [
                {
                    "name": "date",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 9690,
            "description": "Get an arbitrary date in the month after the given date's month.",
            "params": [
                {
                    "name": "date",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Date"
            },
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 9699,
            "description": "Get an arbitrary date in the month before the given date's month.",
            "params": [
                {
                    "name": "date",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Date"
            },
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 9708,
            "description": "Gets whether two dates have the same month and year.",
            "params": [
                {
                    "name": "d1",
                    "description": "",
                    "type": "Date"
                },
                {
                    "name": "d2",
                    "description": "",
                    "type": "Date"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 9718,
            "description": "Gets whether two dates are the same day (not not necesarily the same time).",
            "params": [
                {
                    "name": "d1",
                    "description": "",
                    "type": "Date"
                },
                {
                    "name": "d2",
                    "description": "",
                    "type": "Date"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 9728,
            "description": "Gets whether a date is in the month immediately after some date.",
            "params": [
                {
                    "name": "startDate",
                    "description": "The date from which to compare.",
                    "type": "Date"
                },
                {
                    "name": "endDate",
                    "description": "The date to check.",
                    "type": "Date"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 9739,
            "description": "Gets whether a date is in the month immediately before some date.",
            "params": [
                {
                    "name": "startDate",
                    "description": "The date from which to compare.",
                    "type": "Date"
                },
                {
                    "name": "endDate",
                    "description": "The date to check.",
                    "type": "Date"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 9750,
            "description": "Gets the midpoint between two dates.",
            "params": [
                {
                    "name": "d1",
                    "description": "",
                    "type": "Date"
                },
                {
                    "name": "d2",
                    "description": "",
                    "type": "Date"
                }
            ],
            "return": {
                "description": "",
                "type": "Date"
            },
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 9760,
            "description": "Gets the week of the month that a given date occurs in.",
            "params": [
                {
                    "name": "date",
                    "description": "",
                    "type": "Date"
                }
            ],
            "return": {
                "description": "Index of the week of the month (zero-based).",
                "type": "Number"
            },
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 9770,
            "description": "Gets a new date incremented by the given number of days. Number of days can be negative.",
            "params": [
                {
                    "name": "date",
                    "description": "",
                    "type": "Date"
                },
                {
                    "name": "numberOfDays",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Date"
            },
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 9780,
            "description": "Gets a new date incremented by the given number of months. Number of months can be negative.\nIf the date of the given month does not match the target month, the date will be set to the\nlast day of the month.",
            "params": [
                {
                    "name": "date",
                    "description": "",
                    "type": "Date"
                },
                {
                    "name": "numberOfMonths",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Date"
            },
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 9804,
            "description": "Get the integer distance between two months. This *only* considers the month and year\nportion of the Date instances.",
            "params": [
                {
                    "name": "start",
                    "description": "",
                    "type": "Date"
                },
                {
                    "name": "end",
                    "description": "",
                    "type": "Date"
                }
            ],
            "return": {
                "description": "Number of months between `start` and `end`. If `end` is before `start`\n    chronologically, this number will be negative.",
                "type": "Number"
            },
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 9817,
            "description": "Gets the last day of the month for the given date.",
            "params": [
                {
                    "name": "date",
                    "description": "",
                    "type": "Date"
                }
            ],
            "return": {
                "description": "",
                "type": "Date"
            },
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 9826,
            "description": "Checks whether a date is valid.",
            "params": [
                {
                    "name": "date",
                    "description": "",
                    "type": "Date"
                }
            ],
            "return": {
                "description": "Whether the date is a valid Date.",
                "type": "Boolean"
            },
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 9835,
            "description": "Sets a date's time to midnight.",
            "params": [
                {
                    "name": "date",
                    "description": "",
                    "type": "Date"
                }
            ],
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 9845,
            "description": "Creates a date with the time set to midnight.\nDrop-in replacement for two forms of the Date constructor:\n1. No argument for Date representing now.\n2. Single-argument value representing number of seconds since Unix Epoch\nor a Date object.",
            "params": [
                {
                    "name": "opt_value",
                    "description": "",
                    "type": "Number|Date="
                }
            ],
            "return": {
                "description": "New date with time set to midnight.",
                "type": "Date"
            },
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 9865,
            "description": "Checks if a date is within a min and max range, ignoring the time component.\nIf minDate or maxDate are not dates, they are ignored.",
            "params": [
                {
                    "name": "date",
                    "description": "",
                    "type": "Date"
                },
                {
                    "name": "minDate",
                    "description": "",
                    "type": "Date"
                },
                {
                    "name": "maxDate",
                    "description": "",
                    "type": "Date"
                }
            ],
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 9886,
            "ngdoc": "module",
            "name": "material.components.content",
            "description": "Scrollable content",
            "class": "",
            "module": "material.components.datepicker"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 9968,
            "ngdoc": "module",
            "name": "material.components.fabActions",
            "class": "",
            "module": "material.components.content"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 10328,
            "description": "The duration of the CSS animation in milliseconds.",
            "type": "{number}",
            "class": "",
            "module": "material.components.fabActions"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 10335,
            "ngdoc": "module",
            "name": "material.components.fabSpeedDial",
            "class": "",
            "module": "material.components.fabActions"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 10589,
            "ngdoc": "module",
            "name": "material.components.fabToolbar",
            "class": "",
            "module": "material.components.fabSpeedDial"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 10786,
            "ngdoc": "module",
            "name": "material.components.gridList",
            "class": "",
            "module": "material.components.fabToolbar"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 10902,
            "description": "Watches for changes in media, invalidating layout as necessary.",
            "class": "",
            "module": "material.components.gridList"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 10925,
            "description": "Performs grid layout if the provided mediaName matches the currently\nactive media type.",
            "class": "",
            "module": "material.components.gridList"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 10941,
            "description": "Invokes the layout engine, and uses its results to lay out our\ntile elements.",
            "params": [
                {
                    "name": "tilesInvalidated",
                    "description": "Whether tiles have been\n   added/removed/moved since the last layout. This is to avoid situations\n   where tiles are replaced with properties identical to their removed\n   counterparts.",
                    "type": "Boolean"
                }
            ],
            "class": "",
            "module": "material.components.gridList"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 11025,
            "description": "Gets the styles applied to a tile element described by the given parameters.",
            "params": [
                {
                    "name": "}",
                    "description": "position The row and column indices of the tile.",
                    "type": "Row: number, col: number"
                },
                {
                    "name": "}",
                    "description": "spans The rowSpan and colSpan of the tile.",
                    "type": "Row: number, col: number"
                },
                {
                    "name": "colCount",
                    "description": "The number of columns.",
                    "type": "Number"
                },
                {
                    "name": "rowCount",
                    "description": "The number of rows.",
                    "type": "Number"
                },
                {
                    "name": "gutter",
                    "description": "The amount of space between tiles. This will be something like\n    '5px' or '2em'.",
                    "type": "String"
                },
                {
                    "name": "rowMode",
                    "description": "The row height mode. Can be one of:\n    'fixed': all rows have a fixed size, given by rowHeight,\n    'ratio': row height defined as a ratio to width, or\n    'fit': fit to the grid-list element height, divinding evenly among rows.",
                    "type": "String"
                },
                {
                    "name": "rowHeight",
                    "description": "The height of a row. This is only used for 'fixed' mode and\n    for 'ratio' mode. For 'ratio' mode, this is the *ratio* of width-to-height (e.g., 0.75).",
                    "type": "String|number"
                }
            ],
            "return": {
                "description": "Map of CSS properties to be applied to the style element. Will define\n    values for top, left, width, height, marginTop, and paddingTop.",
                "type": "Object"
            },
            "class": "",
            "module": "material.components.gridList"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 11140,
            "description": "Gets an array of objects containing the rowspan and colspan for each tile.",
            "return": {
                "description": ">}",
                "type": "Array<row: number, col: number"
            },
            "class": "",
            "module": "material.components.gridList"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 11237,
            "description": "Set the reflow animator callback",
            "class": "",
            "module": "material.components.gridList"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 11246,
            "description": "Publish layout function",
            "class": "",
            "module": "material.components.gridList"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 11258,
            "description": "An array of objects describing each tile's position in the grid.",
            "class": "",
            "module": "material.components.gridList"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 11265,
            "description": "Maps grid positioning to an element and a set of styles using the\nprovided updateFn.",
            "class": "",
            "module": "material.components.gridList"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 11277,
            "description": "Default animator simply sets the element.css( <styles> ). An alternate\nanimator can be provided as an argument. The function has the following\nsignature:\n\n   function({grid: {element: JQLite, style: Object}, tiles: Array<{element: JQLite, style: Object}>)",
            "class": "",
            "module": "material.components.gridList"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 11292,
            "description": "Timing for the most recent layout run.",
            "class": "",
            "module": "material.components.gridList"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 11307,
            "description": "Default Gridlist animator simple sets the css for each element;\nNOTE: any transitions effects must be manually set in the CSS.\ne.g.\n\n md-grid-tile {\n   transition: all 700ms ease-out 50ms;\n }",
            "class": "",
            "module": "material.components.gridList"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 11324,
            "description": "Calculates the positions of tiles.\n\nThe algorithm works as follows:\n   An Array<Number> with length colCount (spaceTracker) keeps track of\n   available tiling positions, where elements of value 0 represents an\n   empty position. Space for a tile is reserved by finding a sequence of\n   0s with length <= than the tile's colspan. When such a space has been\n   found, the occupied tile positions are incremented by the tile's\n   rowspan value, as these positions have become unavailable for that\n   many rows.\n\n   If the end of a row has been reached without finding space for the\n   tile, spaceTracker's elements are each decremented by 1 to a minimum\n   of 0. Rows are searched in this fashion until space is found.",
            "class": "",
            "module": "material.components.gridList"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 11548,
            "ngdoc": "module",
            "name": "material.components.fabTrigger",
            "class": "",
            "module": "material.components.gridList"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 11586,
            "ngdoc": "module",
            "name": "material.components.icon",
            "description": "Icon",
            "class": "",
            "module": "material.components.fabSpeedDial"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 11600,
            "ngdoc": "module",
            "name": "material.components.input",
            "class": "",
            "module": "material.components.fabSpeedDial"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 11922,
            "class": "",
            "module": "material.components.input"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 12411,
            "ngdoc": "module",
            "name": "material.components.menu-bar",
            "class": "",
            "module": "material.components.input"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 12425,
            "ngdoc": "module",
            "name": "material.components.list",
            "description": "List module",
            "class": "",
            "module": "material.components.input"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 12735,
            "ngdoc": "module",
            "name": "material.components.menu",
            "class": "",
            "module": "material.components.list"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 12749,
            "ngdoc": "module",
            "name": "material.components.progressCircular",
            "description": "Circular Progress module!",
            "class": "",
            "module": "material.components.list"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 12854,
            "description": "Watch the value and md-mode attributes",
            "class": "",
            "module": "material.components.progressCircular"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 12883,
            "description": "Update size/scaling of the progress indicator\nWatch the \"value\" and \"md-mode\" attributes",
            "class": "",
            "module": "material.components.progressCircular"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 12899,
            "description": "Auto-defaults the mode to either `determinate` or `indeterminate` mode; if not specified",
            "class": "",
            "module": "material.components.progressCircular"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 12917,
            "description": "Manually animate the Determinate indicator based on the specified\npercentage value (0-100).\n\nNote: this animation was previously done using SCSS.\n- generated 54K of styles\n- use attribute selectors which had poor performances in IE",
            "class": "",
            "module": "material.components.progressCircular"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 12951,
            "description": "We will scale the progress circle based on the default diameter.\n\nDetermine the diameter percentage (defaults to 100%)\nMay be express as float, percentage, or integer",
            "class": "",
            "module": "material.components.progressCircular"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 12967,
            "description": "Is the md-mode a valid option?",
            "class": "",
            "module": "material.components.progressCircular"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 12987,
            "description": "Clamps the value to be between 0 and 100.",
            "params": [
                {
                    "name": "value",
                    "description": "The value to clamp.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "",
            "module": "material.components.progressCircular"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 13012,
            "ngdoc": "module",
            "name": "material.components.progressLinear",
            "description": "Linear Progress module!",
            "class": "",
            "module": "material.components.progressCircular"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 13106,
            "description": "Watch the value, md-buffer-value, and md-mode attributes",
            "class": "",
            "module": "material.components.progressLinear"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 13139,
            "description": "Auto-defaults the mode to either `determinate` or `indeterminate` mode; if not specified",
            "class": "",
            "module": "material.components.progressLinear"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 13155,
            "description": "Is the md-mode a valid option?",
            "class": "",
            "module": "material.components.progressLinear"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 13175,
            "description": "Manually set CSS to animate the Determinate indicator based on the specified\npercentage value (0-100).",
            "class": "",
            "module": "material.components.progressLinear"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 13188,
            "description": "Clamps the value to be between 0 and 100.",
            "params": [
                {
                    "name": "value",
                    "description": "The value to clamp.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "",
            "module": "material.components.progressLinear"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 13204,
            "ngdoc": "module",
            "name": "material.components.radioButton",
            "description": "radioButton module!",
            "class": "",
            "module": "material.components.progressLinear"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 13289,
            "class": "",
            "module": "material.components.radioButton"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 13296,
            "class": "",
            "module": "material.components.radioButton"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 13381,
            "description": "Change the radio group's selected button by a given increment.\nIf no button is selected, select the first button.",
            "class": "",
            "module": "material.components.radioButton"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 13470,
            "class": "",
            "module": "material.components.radioButton"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 13488,
            "class": "",
            "module": "material.components.radioButton"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 13499,
            "description": "Add or remove the `.md-checked` class from the RadioButton (and conditionally its parent).\nUpdate the `aria-activedescendant` attribute.",
            "class": "",
            "module": "material.components.radioButton"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 13523,
            "description": "If the radioButton is inside a div, then add class so highlighting will work...",
            "class": "",
            "module": "material.components.radioButton"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 13534,
            "description": "Inject ARIA-specific attributes appropriate for each radio button",
            "class": "",
            "module": "material.components.radioButton"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 13548,
            "description": "Build a unique ID for each radio button that will be used with aria-activedescendant.\nPreserve existing ID if already specified.",
            "return": {
                "description": "",
                "type": "*|string"
            },
            "class": "",
            "module": "material.components.radioButton"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 13565,
            "ngdoc": "module",
            "name": "material.components.select",
            "class": "",
            "module": "material.components.radioButton"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 13570,
            "description": "### TODO - POST RC1 ###\n - [ ] Abstract placement logic in $mdSelect service to $mdMenu service",
            "class": "",
            "module": "material.components.radioButton"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 14475,
            "description": "Interim-element onRemove logic....",
            "class": "",
            "module": "material.components.select"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 14489,
            "description": "For normal closes (eg clicks), animate the removal.\nFor forced closes (like $destroy events from navigation),\nskip the animations",
            "class": "",
            "module": "material.components.select"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 14498,
            "description": "Restore the element to a closed state",
            "class": "",
            "module": "material.components.select"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 14516,
            "description": "Interim-element onShow logic....",
            "class": "",
            "module": "material.components.select"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 14540,
            "description": "Attach the select DOM element(s) and animate to the correct positions\nand scalings...",
            "class": "",
            "module": "material.components.select"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 14563,
            "description": "Initialize container and dropDown menu positions/scale, then animate\nto show... and autoFocus.",
            "class": "",
            "module": "material.components.select"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 14587,
            "description": "Show modal backdrop element...",
            "class": "",
            "module": "material.components.select"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 14607,
            "description": "Hide modal backdrop element...",
            "class": "",
            "module": "material.components.select"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 14618,
            "class": "",
            "module": "material.components.select"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 14627,
            "description": "Check for valid opts and set some sane defaults",
            "class": "",
            "module": "material.components.select"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 14647,
            "description": "Configure various resize listeners for screen changes",
            "class": "",
            "module": "material.components.select"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 14679,
            "description": "If asynchronously loading, watch and update internal\n'$$loadingAsyncDone' flag",
            "class": "",
            "module": "material.components.select"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 14699,
            "class": "",
            "module": "material.components.select"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 14822,
            "description": "check if the mouseup event was on a scrollbar",
            "class": "",
            "module": "material.components.select"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 14843,
            "description": "To notify listeners that the Select menu has closed,\ntrigger the [optional] user-defined expression",
            "class": "",
            "module": "material.components.select"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 14857,
            "description": "Calculate the",
            "class": "",
            "module": "material.components.select"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 15049,
            "ngdoc": "module",
            "name": "material.components.showHide",
            "class": "",
            "module": "material.components.select"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 15092,
            "ngdoc": "module",
            "name": "material.components.sidenav",
            "description": "A Sidenav QP component.",
            "class": "",
            "module": "material.components.select"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 15191,
            "description": "Deferred lookup of component instance using $component registry",
            "class": "",
            "module": "material.components.sidenav"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 15317,
            "description": "Directive Post Link function...",
            "class": "",
            "module": "material.components.sidenav"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 15355,
            "description": "Toggle the DOM classes to indicate `locked`",
            "params": [
                {
                    "name": "isLocked",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.sidenav"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 15369,
            "description": "Toggle the SideNav view and attach/detach listeners",
            "params": [
                {
                    "name": "isOpen",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.sidenav"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 15400,
            "description": "Prevent parent scrolling (when the SideNav is open)",
            "class": "",
            "module": "material.components.sidenav"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 15418,
            "description": "Toggle the sideNav view and publish a promise to be resolved when\nthe view animation finishes.",
            "params": [
                {
                    "name": "isOpen",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "",
            "module": "material.components.sidenav"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 15454,
            "description": "Auto-close sideNav when the `escape` key is pressed.",
            "params": [
                {
                    "name": "evt",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.sidenav"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 15463,
            "description": "With backdrop `clicks` or `escape` key-press, immediately\napply the CSS close transition... Then notify the controller\nto close() and perform its own actions.",
            "class": "",
            "module": "material.components.sidenav"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 15509,
            "ngdoc": "module",
            "name": "material.components.slider",
            "class": "",
            "module": "material.components.sidenav"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 15666,
            "description": "Attributes",
            "class": "",
            "module": "material.components.slider"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 15726,
            "description": "Refreshing Dimensions",
            "class": "",
            "module": "material.components.slider"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 15739,
            "description": "left/right arrow listener",
            "class": "",
            "module": "material.components.slider"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 15765,
            "description": "ngModel setters and validators",
            "class": "",
            "module": "material.components.slider"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 15796,
            "params": [
                {
                    "name": "percent",
                    "description": "0-1"
                }
            ],
            "class": "",
            "module": "material.components.slider"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 15813,
            "description": "Slide listeners",
            "class": "",
            "module": "material.components.slider"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 15871,
            "description": "Slide the UI by changing the model value",
            "params": [
                {
                    "name": "x",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.slider"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 15881,
            "description": "Slide the UI without changing the model (while dragging/panning)",
            "params": [
                {
                    "name": "x",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.slider"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 15892,
            "description": "Clamps the value to be between 0 and 1.",
            "params": [
                {
                    "name": "value",
                    "description": "The value to clamp.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "",
            "module": "material.components.slider"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 15901,
            "description": "Convert horizontal position on slider to percentage value of offset from beginning...",
            "params": [
                {
                    "name": "x",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "",
            "module": "material.components.slider"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 15910,
            "description": "Convert percentage offset on slide to equivalent model value",
            "params": [
                {
                    "name": "percent",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "",
            "module": "material.components.slider"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 15930,
            "ngdoc": "module",
            "name": "material.components.sticky",
            "description": "Sticky effects for md",
            "class": "",
            "module": "material.components.slider"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 16004,
            "description": "Registers an element as sticky, used internally by directives to register themselves",
            "class": "",
            "module": "material.components.sticky"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 16055,
            "description": "Public",
            "class": "",
            "module": "material.components.sticky"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 16107,
            "description": "Private",
            "class": "",
            "module": "material.components.sticky"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 16300,
            "ngdoc": "module",
            "name": "material.components.subheader",
            "description": "SubHeader module\n\n Subheaders are special list tiles that delineate distinct sections of a\n list or grid list and are typically related to the current filtering or\n sorting criteria. Subheader tiles are either displayed inline with tiles or\n can be associated with content, for example, in an adjacent column.\n\n Upon scrolling, subheaders remain pinned to the top of the screen and remain\n pinned until pushed on or off screen by the next subheader. @see [Material\n Design Specifications](https://www.google.com/design/spec/components/subheaders.html)\n\n > To improve the visual grouping of content, use the system color for your subheaders.",
            "class": "",
            "module": "material.components.sticky"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 16399,
            "ngdoc": "module",
            "name": "material.components.swipe",
            "description": "Swipe module!",
            "class": "",
            "module": "material.components.subheader"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 16500,
            "access": "private",
            "tagname": "",
            "ngdoc": "module",
            "name": "material.components.switch",
            "class": "",
            "module": "material.components.swipe"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 16668,
            "ngdoc": "module",
            "name": "material.components.toast",
            "description": "Toast",
            "class": "",
            "module": "material.components.switch"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 16753,
            "ngdoc": "method",
            "name": "$mdToast#showSimple",
            "params": [
                {
                    "name": "message",
                    "description": "The message to display inside the toast",
                    "type": "String"
                }
            ],
            "description": "Convenience method which builds and shows a simple toast.",
            "return": {
                "description": "A promise that can be resolved with `$mdToast.hide()` or\nrejected with `$mdToast.cancel()`.",
                "type": "Promise"
            },
            "class": "",
            "module": "material.components.toast"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 16766,
            "ngdoc": "method",
            "name": "$mdToast#simple",
            "description": "Builds a preconfigured toast.",
            "return": {
                "description": "a `$mdToastPreset` with the following chainable configuration methods.\n\n_**Note:** These configuration methods are provided in addition to the methods provided by\n  the `build()` and `show()` methods below._\n\n- `.textContent(string)` - Sets the toast content to the specified string.\n\n- `.action(string)` - Adds an action button. If clicked, the promise (returned from `show()`)\nwill resolve with the value `'ok'`; otherwise, it is resolved with `true` after a `hideDelay`\ntimeout.\n\n- `.highlightAction(boolean)` - Whether or not the action button will have an additional\nhighlight class.\n\n- `.capsule(boolean)` - Whether or not to add the `md-capsule` class to the toast to provide\nrounded corners.\n\n- `.theme(string)` - Sets the theme on the toast to the requested theme. Default is\n`$mdThemingProvider`'s default.",
                "type": "Obj"
            },
            "class": "",
            "module": "material.components.toast"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 16794,
            "ngdoc": "method",
            "name": "$mdToast#updateTextContent",
            "description": "Updates the content of an existing toast. Useful for updating things like counts, etc.",
            "class": "",
            "module": "material.components.toast"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 16803,
            "ngdoc": "method",
            "name": "$mdToast#build",
            "description": "Creates a custom `$mdToastPreset` that you can configure.",
            "return": {
                "description": "a `$mdToastPreset` with the chainable configuration methods for shows' options (see below).",
                "type": "Obj"
            },
            "class": "",
            "module": "material.components.toast"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 16813,
            "ngdoc": "method",
            "name": "$mdToast#show",
            "description": "Shows the toast.",
            "params": [
                {
                    "name": "optionsOrPreset",
                    "description": "Either provide an `$mdToastPreset` returned from `simple()`\nand `build()`, or an options object with the following properties:\n\n  - `templateUrl` - `{string=}`: The url of an html template file that will\n    be used as the content of the toast. Restrictions: the template must\n    have an outer `md-toast` element.\n  - `template` - `{string=}`: Same as templateUrl, except this is an actual\n    template string.\n  - `autoWrap` - `{boolean=}`: Whether or not to automatically wrap the template content with a\n    `<div class=\"md-toast-content\">` if one is not provided. Defaults to true. Can be disabled if you provide a\n    custom toast directive.\n  - `scope` - `{object=}`: the scope to link the template / controller to. If none is specified, it will create a new child scope.\n    This scope will be destroyed when the toast is removed unless `preserveScope` is set to true.\n  - `preserveScope` - `{boolean=}`: whether to preserve the scope when the element is removed. Default is false\n  - `hideDelay` - `{number=}`: How many milliseconds the toast should stay\n    active before automatically closing.  Set to 0 or false to have the toast stay open until\n    closed manually. Default: 3000.\n  - `position` - `{string=}`: Where to place the toast. Available: any combination\n    of 'bottom', 'left', 'top', 'right'. Default: 'bottom left'.\n  - `controller` - `{string=}`: The controller to associate with this toast.\n    The controller will be injected the local `$mdToast.hide( )`, which is a function\n    used to hide the toast.\n  - `locals` - `{string=}`: An object containing key/value pairs. The keys will\n    be used as names of values to inject into the controller. For example,\n    `locals: {three: 3}` would inject `three` into the controller with the value\n    of 3.\n  - `bindToController` - `bool`: bind the locals to the controller, instead of passing them in.\n  - `resolve` - `{object=}`: Similar to locals, except it takes promises as values\n    and the toast will not open until the promises resolve.\n  - `controllerAs` - `{string=}`: An alias to assign the controller to on the scope.\n  - `parent` - `{element=}`: The element to append the toast to. Defaults to appending\n    to the root element of the application.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "A promise that can be resolved with `$mdToast.hide()` or\nrejected with `$mdToast.cancel()`. `$mdToast.hide()` will resolve either with a Boolean\nvalue == 'true' or the value passed as an argument to `$mdToast.hide()`.\nAnd `$mdToast.cancel()` will resolve the promise with a Boolean value == 'false'",
                "type": "Promise"
            },
            "class": "",
            "module": "material.components.toast"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 16858,
            "ngdoc": "method",
            "name": "$mdToast#hide",
            "description": "Hide an existing toast and resolve the promise returned from `$mdToast.show()`.",
            "params": [
                {
                    "name": "response",
                    "description": "An argument for the resolved promise.",
                    "type": "*="
                }
            ],
            "return": {
                "description": "a promise that is called when the existing element is removed from the DOM.\nThe promise is resolved with either a Boolean value == 'true' or the value passed as the\nargument to `.hide()`.",
                "type": "Promise"
            },
            "class": "",
            "module": "material.components.toast"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 16873,
            "ngdoc": "method",
            "name": "$mdToast#cancel",
            "description": "`DEPRECATED` - The promise returned from opening a toast is used only to notify about the closing of the toast.\nAs such, there isn't any reason to also allow that promise to be rejected,\nsince it's not clear what the difference between resolve and reject would be.\n\nHide the existing toast and reject the promise returned from\n`$mdToast.show()`.",
            "params": [
                {
                    "name": "response",
                    "description": "An argument for the rejected promise.",
                    "type": "*="
                }
            ],
            "return": {
                "description": "a promise that is called when the existing element is removed from the DOM\nThe promise is resolved with a Boolean value == 'false'.",
                "type": "Promise"
            },
            "class": "",
            "module": "material.components.toast"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 17054,
            "ngdoc": "module",
            "name": "material.components.tabs",
            "description": "Tabs, created with the `<md-tabs>` directive provide *tabbed* navigation with different styles.\n The Tabs component consists of clickable tabs that are aligned horizontally side-by-side.\n\n Features include support for:\n\n - static or dynamic tabs,\n - responsive designs,\n - accessibility support (ARIA),\n - tab pagination,\n - external or internal tab content,\n - focus indicators and arrow-key navigations,\n - programmatic lookup and access to tab controllers, and\n - dynamic transitions through different tab contents.",
            "class": "",
            "module": "material.components.toast"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 17086,
            "ngdoc": "module",
            "name": "material.components.toolbar",
            "class": "",
            "module": "material.components.toast"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 17202,
            "class": "",
            "module": "material.components.toolbar"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 17226,
            "class": "",
            "module": "material.components.toolbar"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 17242,
            "class": "",
            "module": "material.components.toolbar"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 17272,
            "class": "",
            "module": "material.components.toolbar"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 17291,
            "class": "",
            "module": "material.components.toolbar"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 17324,
            "ngdoc": "module",
            "name": "material.components.tooltip",
            "class": "",
            "module": "material.components.toolbar"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 17620,
            "ngdoc": "module",
            "name": "material.components.virtualRepeat",
            "class": "",
            "module": "material.components.tooltip"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 17683,
            "description": "Maximum size, in pixels, that can be explicitly set to an element. The actual value varies\nbetween browsers, but IE11 has the very lowest size at a mere 1,533,917px. Ideally we could\n*compute* this value, but Firefox always reports an element to have a size of zero if it\ngoes over the max, meaning that we'd have to binary search for the value.",
            "itemtype": "property",
            "name": "{number}",
            "final": "",
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 17692,
            "description": "Number of additional elements to render above and below the visible area inside\nof the virtual repeat container. A higher number results in less flicker when scrolling\nvery quickly in Safari, but comes with a higher rendering and dirty-checking cost.",
            "itemtype": "property",
            "name": "{number}",
            "final": "",
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 17700,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 17708,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 17710,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 17712,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 17714,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 17716,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 17718,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 17720,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 17722,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 17724,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 17726,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 17730,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 17732,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 17782,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 17791,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 17797,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 17803,
            "description": "Resizes the container.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "The",
                    "description": "new size to set.",
                    "type": "Number"
                }
            ],
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 17822,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 17839,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 17850,
            "description": "Sets the scroller element to the specified size.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "size",
                    "description": "The new size.",
                    "type": "Number"
                }
            ],
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 17890,
            "description": "If auto-shrinking is enabled, shrinks or unshrinks as appropriate.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "size",
                    "description": "The new size.",
                    "type": "Number"
                }
            ],
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 17920,
            "description": "Sets the scrollHeight or scrollWidth. Called by the repeater based on\nits item count and item size.",
            "params": [
                {
                    "name": "itemsSize",
                    "description": "The total size of the items.",
                    "type": "Number"
                }
            ],
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 17935,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 17940,
            "description": "Scrolls to a given scrollTop position.",
            "params": [
                {
                    "name": "position",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 17949,
            "description": "Scrolls the item with the given index to the top of the scroll container.",
            "params": [
                {
                    "name": "index",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 18062,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 18073,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 18075,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 18077,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 18079,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 18081,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 18083,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 18085,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 18089,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 18092,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 18095,
            "access": "private",
            "tagname": "{boolean} Whether the items in the list are already being updated. Used to prevent\n    nested calls to virtualRepeatUpdate_.",
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 18101,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 18104,
            "type": "{!Function} Unwatch callback for item size (when md-items-size is\n    not specified), or angular.noop otherwise.",
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 18110,
            "description": "Presently rendered blocks by repeat index.",
            "type": "{Object<number, !VirtualRepeatController.Block}",
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 18115,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 18121,
            "description": "An object representing a repeated item.",
            "typedef": "{{element: !jqLite, new: boolean, scope: !angular.Scope}}",
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 18128,
            "description": "Called at startup by the md-virtual-repeat postLink function.",
            "params": [
                {
                    "name": "container",
                    "description": "The container's controller.",
                    "type": "!VirtualRepeatContainerController"
                },
                {
                    "name": "transclude",
                    "description": "The repeated element's bound transclude function.",
                    "type": "!Function"
                },
                {
                    "name": "repeatName",
                    "description": "The left hand side of the repeat expression, indicating\n    the name for each item in the array.",
                    "type": "String"
                },
                {
                    "name": "repeatListExpression",
                    "description": "A compiled expression based on the right hand side\n    of the repeat expression. Points to the array to repeat over.",
                    "type": "!Function"
                },
                {
                    "name": "extraName",
                    "description": "The optional extra repeatName.",
                    "type": "String|undefined"
                }
            ],
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 18153,
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 18179,
            "description": "Returns the user-specified repeat list, transforming it into an array-like\nobject in the case of infinite scroll/dynamic load mode.",
            "params": [
                {
                    "name": "The",
                    "description": "scope.",
                    "type": "!angular.Scope"
                }
            ],
            "return": {
                "description": "An array or array-like object for iteration.",
                "type": "!Array|!Object"
            },
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 18198,
            "description": "Called by the container. Informs us that the containers scroll or size has\nchanged.",
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 18243,
            "description": "Called by the container. Returns the size of a single repeated item.",
            "return": {
                "description": "Size of a repeated item.",
                "type": "?number"
            },
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 18252,
            "description": "Called by the container. Returns the size of a single repeated item.",
            "return": {
                "description": "Size of a repeated item.",
                "type": "?number"
            },
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 18261,
            "description": "Updates the order and visible offset of repeated blocks in response to scrolling\nor items updates.",
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 18364,
            "params": [
                {
                    "name": "index",
                    "description": "Where the block is to be in the repeated list.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "A new or pooled block to place at the specified index.",
                "type": "!VirtualRepeatController.Block"
            },
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 18390,
            "description": "Updates and if not in a digest cycle, digests the specified block's scope to the data\nat the specified index.",
            "params": [
                {
                    "name": "block",
                    "description": "The block whose scope should be updated.",
                    "type": "!VirtualRepeatController.Block"
                },
                {
                    "name": "index",
                    "description": "The index to set.",
                    "type": "Number"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 18418,
            "description": "Updates scope to the data at the specified index.",
            "params": [
                {
                    "name": "scope",
                    "description": "The scope which should be updated.",
                    "type": "!angular.Scope"
                },
                {
                    "name": "index",
                    "description": "The index to set.",
                    "type": "Number"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 18431,
            "description": "Pools the block at the specified index (Pulls its element out of the dom and stores it).",
            "params": [
                {
                    "name": "index",
                    "description": "The index at which the block to pool is stored.",
                    "type": "Number"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 18443,
            "description": "Produces a dom fragment containing the elements from the list of blocks.",
            "params": [
                {
                    "name": "blocks",
                    "description": "The blocks whose elements\n    should be added to the document fragment.",
                    "type": "!Array<!VirtualRepeatController.Block>"
                }
            ],
            "return": {
                "description": "",
                "type": "DocumentFragment"
            },
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 18459,
            "description": "Updates start and end indexes based on length of repeated items and container size.",
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 18475,
            "description": "This VirtualRepeatModelArrayLike class enforces the interface requirements\nfor infinite scrolling within a mdVirtualRepeatContainer. An object with this\ninterface must implement the following interface with two (2) methods:\n\ngetItemAtIndex: function(index) -> item at that index or null if it is not yet\n    loaded (It should start downloading the item in that case).\n\ngetLength: function() -> number The data legnth to which the repeater container\n    should be sized. Ideally, when the count is known, this method should return it.\n    Otherwise, return a higher number than the currently loaded items to produce an\n    infinite-scroll behavior.",
            "usage": "<hljs lang=\"html\">\n <md-virtual-repeat-container md-orient-horizontal>\n   <div md-virtual-repeat=\"i in items\" md-on-demand>\n     Hello {{i}}!\n   </div>\n </md-virtual-repeat-container>\n</hljs>",
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 18527,
            "ngdoc": "module",
            "name": "material.components.whiteframe",
            "class": "",
            "module": "material.components.virtualRepeat"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 18645,
            "description": "Initialize the controller, setup watchers, gather elements",
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 18660,
            "description": "Calculates the dropdown's position and applies the new styles to the menu element",
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 18698,
            "description": "Calculates the vertical offset for floating label examples to account for ngMessages",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 18716,
            "description": "Makes sure that the menu doesn't go off of the screen on either side.",
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 18729,
            "description": "Moves the dropdown menu to the body tag in order to avoid z-index and overflow issues.",
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 18740,
            "description": "Sends focus to the input element.",
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 18747,
            "description": "Sets up any watchers used by autocomplete",
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 18760,
            "description": "Removes any events or leftover elements created by this controller",
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 18777,
            "description": "Gathers all of the elements needed for this controller",
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 18795,
            "description": "Finds the element that the menu will base its position on",
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 18806,
            "description": "Gathers angular-wrapped versions of each element",
            "params": [
                {
                    "name": "elements",
                    "description": ""
                }
            ],
            "return": {
                "description": "}"
            },
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 18821,
            "description": "Handles changes to the `hidden` property.",
            "params": [
                {
                    "name": "hidden",
                    "description": ""
                },
                {
                    "name": "oldHidden",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 18842,
            "description": "When the user mouses over the dropdown menu, ignore blur events.",
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 18849,
            "description": "When the user's mouse leaves the menu, blur events may hide the menu again.",
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 18858,
            "description": "When the mouse button is released, send focus back to the input field.",
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 18865,
            "description": "Handles changes to the selected item.",
            "params": [
                {
                    "name": "selectedItem",
                    "description": ""
                },
                {
                    "name": "previousSelectedItem",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 18881,
            "description": "Use the user-defined expression to announce changes each time a new item is selected",
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 18888,
            "description": "Use the user-defined expression to announce changes each time the search text is changed",
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 18895,
            "description": "Calls any external watchers listening for the selected item.  Used in conjunction with\n`registerSelectedItemWatcher`.",
            "params": [
                {
                    "name": "selectedItem",
                    "description": ""
                },
                {
                    "name": "previousSelectedItem",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 18905,
            "description": "Register a function to be called when the selected item changes.",
            "params": [
                {
                    "name": "cb",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 18915,
            "description": "Unregister a function previously registered for selected item changes.",
            "params": [
                {
                    "name": "cb",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 18926,
            "description": "Handles changes to the searchText property.",
            "params": [
                {
                    "name": "searchText",
                    "description": ""
                },
                {
                    "name": "previousSearchText",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 18957,
            "description": "Handles input blur event, determines if the dropdown should hide.",
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 18967,
            "description": "Force blur on input element",
            "params": [
                {
                    "name": "forceBlur",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 18979,
            "description": "Handles input focus event, determines if the dropdown should show.",
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 18990,
            "description": "Handles keyboard input.",
            "params": [
                {
                    "name": "event",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 19041,
            "description": "Returns the minimum length needed to display the dropdown.",
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 19049,
            "description": "Returns the display value for an item.",
            "params": [
                {
                    "name": "item",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 19057,
            "description": "Getter function to invoke user-defined expression (in the directive)\nto convert your object to a single string.",
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 19066,
            "description": "Returns the locals object for compiling item templates.",
            "params": [
                {
                    "name": "item",
                    "description": ""
                }
            ],
            "return": {
                "description": "}"
            },
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 19080,
            "description": "Returns the default index based on whether or not autoselect is enabled.",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 19088,
            "description": "Sets the loading parameter and updates the hidden state.",
            "params": [
                {
                    "name": "value",
                    "description": "Whether or not the component is currently loading.",
                    "type": "Boolean"
                }
            ],
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 19101,
            "description": "Determines if the menu should be hidden.",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 19112,
            "description": "Determines if the menu should be shown.",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 19120,
            "description": "Returns true if the search text has matches.",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 19128,
            "description": "Returns true if the autocomplete has a valid selection.",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 19136,
            "description": "Returns true if the loading indicator is, or should be, visible.",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 19144,
            "description": "Returns the display value of the current item.",
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 19152,
            "description": "Determines if the minimum length is met by the search text.",
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 19162,
            "description": "Defines a public property with a handler and a default value.",
            "params": [
                {
                    "name": "key",
                    "description": ""
                },
                {
                    "name": "handler",
                    "description": ""
                },
                {
                    "name": "value",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 19179,
            "description": "Selects the item at the given index.",
            "params": [
                {
                    "name": "index",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 19197,
            "description": "Clears the searchText value and selected item.",
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 19220,
            "description": "Fetches the results for the provided search text.",
            "params": [
                {
                    "name": "searchText",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 19252,
            "description": "Updates the ARIA messages",
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 19261,
            "description": "Returns the ARIA message for how many results match the current query.",
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 19278,
            "description": "Makes sure that the focused element is within view.",
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 19305,
            "description": "Starts the query to gather the results for the current searchText.  Attempts to return cached\nresults first, then forwards the process to `fetchResults` if necessary.",
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 19323,
            "description": "If there is only one matching item and the search text matches its display value exactly,\nautomatically select that item.  Note: This function is only called if the user uses the\n`md-select-on-match` flag.",
            "class": "",
            "module": "material.components.whiteframe"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 19661,
            "description": "Creates a watcher for variables that are copied from the parent scope",
            "params": [
                {
                    "name": "variable",
                    "description": ""
                },
                {
                    "name": "alias",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.autocomplete"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 19676,
            "description": "Creates watchers on scope and newScope that ensure that for any\n$digest of scope, newScope is also $digested.",
            "class": "",
            "module": "material.components.autocomplete"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 19839,
            "description": "MDChip Directive Definition",
            "params": [
                {
                    "name": "$mdTheming",
                    "description": ""
                },
                {
                    "name": "$mdInkRipple",
                    "description": ""
                }
            ],
            "nginject": "",
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 19897,
            "description": "MdChipRemove Directive Definition.",
            "params": [
                {
                    "name": "$compile",
                    "description": ""
                },
                {
                    "name": "$timeout",
                    "description": ""
                }
            ],
            "return": {
                "description": "}",
                "type": "Restrict: string, require: string[], link: Function, scope: boolean"
            },
            "is_constructor": 1,
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 19969,
            "description": "Controller for the MdChips component. Responsible for adding to and\nremoving from the list of chips, marking chips as selected, and binding to\nthe models of various input components.",
            "params": [
                {
                    "name": "$scope",
                    "description": ""
                },
                {
                    "name": "$mdConstant",
                    "description": ""
                },
                {
                    "name": "$log",
                    "description": ""
                },
                {
                    "name": "$element",
                    "description": ""
                }
            ],
            "is_constructor": 1,
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 19981,
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 19984,
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 19987,
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 19990,
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 19993,
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 19996,
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 19999,
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 20002,
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 20005,
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 20008,
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 20011,
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 20014,
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 20018,
            "description": "Hidden hint text for how to delete a chip. Used to give context to screen readers.",
            "type": "{string}",
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 20024,
            "description": "Hidden label for the delete button. Used to give context to screen readers.",
            "type": "{string}",
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 20030,
            "description": "Model used by the input element.",
            "type": "{string}",
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 20036,
            "description": "Whether to use the onAppend expression to transform the chip buffer\nbefore appending it to the list.",
            "type": "{boolean}",
            "deprecated": true,
            "deprecationMessage": "Will remove in 1.0.",
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 20046,
            "description": "Whether to use the transformChip expression to transform the chip buffer\nbefore appending it to the list.",
            "type": "{boolean}",
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 20053,
            "description": "Whether to use the onAdd expression to notify of chip additions.",
            "type": "{boolean}",
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 20059,
            "description": "Whether to use the onRemove expression to notify of chip removals.",
            "type": "{boolean}",
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 20065,
            "description": "Whether to use the onSelect expression to notify the component's user\nafter selecting a chip from the list.",
            "type": "{boolean}",
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 20074,
            "description": "Handles the keydown event on the input element: by default <enter> appends\nthe buffer to the chip list, while backspace removes the last chip in the\nlist if the current buffer is empty.",
            "params": [
                {
                    "name": "event",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 20110,
            "description": "Handles the keydown event on the chip elements: backspace removes the selected chip, arrow\nkeys switch which chips is active",
            "params": [
                {
                    "name": "event",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 20142,
            "description": "Get the input's placeholder - uses `placeholder` when list is empty and `secondary-placeholder`\nwhen the list is non-empty. If `secondary-placeholder` is not provided, `placeholder` is used\nalways.",
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 20154,
            "description": "Removes chip at {@code index} and selects the adjacent chip.",
            "params": [
                {
                    "name": "index",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 20166,
            "description": "Sets the selected chip index to -1.",
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 20173,
            "description": "Gets the index of an adjacent chip to select after deletion. Adjacency is\ndetermined as the next chip in the list, unless the target chip is the\nlast in the list, then it is the chip immediately preceding the target. If\nthere is only one item in the list, -1 is returned (select none).\nThe number returned is the index to select AFTER the target has been\nremoved.\nIf the current chip is not selected, then -1 is returned to select none.",
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 20188,
            "description": "Append the contents of the buffer to the chip list. This method will first\ncall out to the md-transform-chip method, if provided.",
            "params": [
                {
                    "name": "newChip",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 20225,
            "description": "Sets whether to use the md-on-append expression. This expression is\nbound to scope and controller in {@code MdChipsDirective} as\n{@code onAppend}. Due to the nature of directive scope bindings, the\ncontroller cannot know on its own/from the scope whether an expression was\nactually provided.",
            "deprecated": true,
            "deprecationMessage": "TODO: Remove deprecated md-on-append functionality in 1.0",
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 20244,
            "description": "Sets whether to use the md-transform-chip expression. This expression is\nbound to scope and controller in {@code MdChipsDirective} as\n{@code transformChip}. Due to the nature of directive scope bindings, the\ncontroller cannot know on its own/from the scope whether an expression was\nactually provided.",
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 20255,
            "description": "Sets whether to use the md-on-add expression. This expression is\nbound to scope and controller in {@code MdChipsDirective} as\n{@code onAdd}. Due to the nature of directive scope bindings, the\ncontroller cannot know on its own/from the scope whether an expression was\nactually provided.",
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 20266,
            "description": "Sets whether to use the md-on-remove expression. This expression is\nbound to scope and controller in {@code MdChipsDirective} as\n{@code onRemove}. Due to the nature of directive scope bindings, the\ncontroller cannot know on its own/from the scope whether an expression was\nactually provided.",
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 20288,
            "description": "Gets the input buffer. The input buffer can be the model bound to the\ndefault input item {@code this.chipBuffer}, the {@code selectedItem}\nmodel of an {@code md-autocomplete}, or, through some magic, the model\nbound to any inpput or text area element found within a\n{@code md-input-container} element.",
            "return": {
                "description": "",
                "type": "Object|string"
            },
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 20302,
            "description": "Resets the input buffer for either the internal input or user provided input element.",
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 20318,
            "description": "Removes the chip at the given index.",
            "params": [
                {
                    "name": "index",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 20334,
            "description": "Selects the chip at `index`,",
            "params": [
                {
                    "name": "index",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 20351,
            "description": "Marks the chip at the given index as selected.",
            "params": [
                {
                    "name": "index",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 20368,
            "description": "Selects the chip at `index` and gives it focus.",
            "params": [
                {
                    "name": "index",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 20379,
            "description": "Call `focus()` on the chip at `index`",
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 20386,
            "description": "Configures the required interactions with the ngModel Controller.\nSpecifically, set {@code this.items} to the {@code NgModelCtrl#$viewVale}.",
            "params": [
                {
                    "name": "ngModelCtrl",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 20416,
            "description": "Configure event bindings on a user-provided input element.",
            "params": [
                {
                    "name": "inputElement",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 20621,
            "description": "MDChips Directive Definition",
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 20659,
            "description": "Builds the final template for `md-chips` and returns the postLink function.\n\nBuilding the template involves 3 key components:\nstatic chips\nchip template\ninput control\n\nIf no `ng-model` is provided, only the static chip work needs to be done.\n\nIf no user-passed `md-chip-template` exists, the default template is used. This resulting\ntemplate is appended to the chip content element.\n\nThe remove button may be overridden by passing an element with an md-chip-remove attribute.\n\nIf an `input` or `md-autocomplete` element is provided by the caller, it is set aside for\ntransclusion later. The transclusion happens in `postLink` as the parent scope is required.\nIf no user input is provided, a default one is appended to the input container node in the\ntemplate.\n\nStatic Chips (i.e. `md-chip` elements passed from the caller) are gathered and set aside for\ntransclusion in the `postLink` function.",
            "params": [
                {
                    "name": "element",
                    "description": ""
                },
                {
                    "name": "attr",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Function"
            },
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 20712,
            "description": "Configures controller and transcludes.",
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 20811,
            "description": "Controller for the MdContactChips component",
            "is_constructor": 1,
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 20816,
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 20819,
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 20938,
            "description": "MDContactChips Directive Definition",
            "params": [
                {
                    "name": "$mdTheming",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "nginject": "",
            "class": "",
            "module": "material.components.chips"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 21162,
            "description": "Directive postLink\nSupports embedded SVGs, font-icons, & external SVGs",
            "class": "",
            "module": "material.components.icon"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 21299,
            "ngdoc": "method",
            "name": "$mdIconProvider#icon",
            "description": "Register a source URL for a specific icon name; the name may include optional 'icon set' name prefix.\nThese icons  will later be retrieved from the cache using `$mdIcon( <icon name> )`",
            "params": [
                {
                    "name": "id",
                    "description": "Icon name/id used to register the icon",
                    "type": "String"
                },
                {
                    "name": "url",
                    "description": "specifies the external location for the data file. Used internally by `$http` to load the\ndata or as part of the lookup in `$templateCache` if pre-loading was configured.",
                    "type": "String"
                },
                {
                    "name": "viewBoxSize",
                    "description": "Sets the width and height the icon's viewBox.\nIt is ignored for icons with an existing viewBox. Default size is 24.",
                    "type": "Number="
                }
            ],
            "return": {
                "description": "an `$mdIconProvider` reference; used to support method call chains for the API",
                "type": "Obj"
            },
            "usage": "<hljs lang=\"js\">\n  app.config(function($mdIconProvider) {\n\n    // Configure URLs for icons specified by [set:]id.\n\n    $mdIconProvider\n         .icon('android', 'my/app/android.svg')    // Register a specific icon (by name)\n         .icon('work:chair', 'my/app/chair.svg');  // Register icon in a specific set\n  });\n</hljs>",
            "class": "",
            "module": "material.components.icon"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 21328,
            "ngdoc": "method",
            "name": "$mdIconProvider#iconSet",
            "description": "Register a source URL for a 'named' set of icons; group of SVG definitions where each definition\nhas an icon id. Individual icons can be subsequently retrieved from this cached set using\n`$mdIcon(<icon set name>:<icon name>)`",
            "params": [
                {
                    "name": "id",
                    "description": "Icon name/id used to register the iconset",
                    "type": "String"
                },
                {
                    "name": "url",
                    "description": "specifies the external location for the data file. Used internally by `$http` to load the\ndata or as part of the lookup in `$templateCache` if pre-loading was configured.",
                    "type": "String"
                },
                {
                    "name": "viewBoxSize",
                    "description": "Sets the width and height of the viewBox of all icons in the set. \nIt is ignored for icons with an existing viewBox. All icons in the icon set should be the same size.\nDefault value is 24.",
                    "type": "Number="
                }
            ],
            "return": {
                "description": "an `$mdIconProvider` reference; used to support method call chains for the API",
                "type": "Obj"
            },
            "usage": "<hljs lang=\"js\">\n  app.config(function($mdIconProvider) {\n\n    // Configure URLs for icons specified by [set:]id.\n\n    $mdIconProvider\n         .iconSet('social', 'my/app/social.svg')   // Register a named icon set\n  });\n</hljs>",
            "class": "",
            "module": "material.components.icon"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 21359,
            "ngdoc": "method",
            "name": "$mdIconProvider#defaultIconSet",
            "description": "Register a source URL for the default 'named' set of icons. Unless explicitly registered,\nsubsequent lookups of icons will failover to search this 'default' icon set.\nIcon can be retrieved from this cached, default set using `$mdIcon(<name>)`",
            "params": [
                {
                    "name": "url",
                    "description": "specifies the external location for the data file. Used internally by `$http` to load the\ndata or as part of the lookup in `$templateCache` if pre-loading was configured.",
                    "type": "String"
                },
                {
                    "name": "viewBoxSize",
                    "description": "Sets the width and height of the viewBox of all icons in the set. \nIt is ignored for icons with an existing viewBox. All icons in the icon set should be the same size.\nDefault value is 24.",
                    "type": "Number="
                }
            ],
            "return": {
                "description": "an `$mdIconProvider` reference; used to support method call chains for the API",
                "type": "Obj"
            },
            "usage": "<hljs lang=\"js\">\n  app.config(function($mdIconProvider) {\n\n    // Configure URLs for icons specified by [set:]id.\n\n    $mdIconProvider\n         .defaultIconSet( 'my/app/social.svg' )   // Register a default icon set\n  });\n</hljs>",
            "class": "",
            "module": "material.components.icon"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 21388,
            "ngdoc": "method",
            "name": "$mdIconProvider#defaultFontSet",
            "description": "When using Font-Icons, Angular Material assumes the the Material Design icons will be used and automatically\nconfigures the default font-set == 'material-icons'. Note that the font-set references the font-icon library\nclass style that should be applied to the `<md-icon>`.\n\nConfiguring the default means that the attributes\n`md-font-set=\"material-icons\"` or `class=\"material-icons\"` do not need to be explicitly declared on the\n`<md-icon>` markup. For example:\n\n `<md-icon> face </md-icon>`\n will render as\n `<span class=\"material-icons\"> face </span>`, and\n\n `<md-icon md-font-set=\"fa\"> face </md-icon>`\n will render as\n `<span class=\"fa\"> face </span>`",
            "params": [
                {
                    "name": "name",
                    "description": "of the font-library style that should be applied to the md-icon DOM element",
                    "type": "String"
                }
            ],
            "usage": "<hljs lang=\"js\">\n  app.config(function($mdIconProvider) {\n    $mdIconProvider.defaultFontSet( 'fontawesome' );\n  });\n</hljs>",
            "class": "",
            "module": "material.components.icon"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 21420,
            "ngdoc": "method",
            "name": "$mdIconProvider#defaultViewBoxSize",
            "description": "While `<md-icon />` markup can also be style with sizing CSS, this method configures\nthe default width **and** height used for all icons; unless overridden by specific CSS.\nThe default sizing is (24px, 24px).",
            "params": [
                {
                    "name": "viewBoxSize",
                    "description": "Sets the width and height of the viewBox for an icon or an icon set.\nAll icons in a set should be the same size. The default value is 24.",
                    "type": "Number="
                }
            ],
            "return": {
                "description": "an `$mdIconProvider` reference; used to support method call chains for the API",
                "type": "Obj"
            },
            "usage": "<hljs lang=\"js\">\n  app.config(function($mdIconProvider) {\n\n    // Configure URLs for icons specified by [set:]id.\n\n    $mdIconProvider\n         .defaultViewBoxSize(36)   // Register a default icon size (width == height)\n  });\n</hljs>",
            "class": "",
            "module": "material.components.icon"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 21484,
            "description": "Register an alias name associated with a font-icon library style ;",
            "class": "",
            "module": "material.components.icon"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 21495,
            "description": "Specify a default style name associated with a font-icon library\nfallback to Material Icons.",
            "class": "",
            "module": "material.components.icon"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 21558,
            "description": "Configuration item stored in the Icon registry; used for lookups\nto load if not already cached in the `loaded` cache",
            "class": "",
            "module": "material.components.icon"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 21619,
            "description": "Actual $mdIcon service is essentially a lookup function",
            "class": "",
            "module": "material.components.icon"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 21637,
            "description": "Lookup registered fontSet style using its alias...\nIf not found,",
            "class": "",
            "module": "material.components.icon"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 21653,
            "description": "Prepare and cache the loaded icon for the specified `id`",
            "class": "",
            "module": "material.components.icon"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 21665,
            "description": "Lookup the configuration in the registry, if !registered throw an error\notherwise load the icon [on-demand] using the registered URL.",
            "class": "",
            "module": "material.components.icon"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 21677,
            "description": "Loads the file as XML and uses querySelector( <id> ) to find\nthe desired node...",
            "class": "",
            "module": "material.components.icon"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 21701,
            "description": "Load the icon by URL (may use the $templateCache).\nExtract the data for later conversion to Icon",
            "class": "",
            "module": "material.components.icon"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 21713,
            "description": "Catch HTTP or generic errors not related to incorrect icon IDs.",
            "class": "",
            "module": "material.components.icon"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 21723,
            "description": "Check target signature to see if it is an Icon instance.",
            "class": "",
            "module": "material.components.icon"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 21730,
            "description": "Define the Icon class",
            "class": "",
            "module": "material.components.icon"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 21748,
            "description": "Prepare the DOM element that will be cached in the\nloaded iconCache store.",
            "class": "",
            "module": "material.components.icon"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 21765,
            "description": "Clone the Icon DOM element.",
            "class": "",
            "module": "material.components.icon"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 21788,
            "nginject": "",
            "class": "",
            "module": "material.components.icon"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 22127,
            "nginjdect": "",
            "class": "",
            "module": "material.components.menu-bar"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 22199,
            "nginject": "",
            "class": "",
            "module": "material.components.menu-bar"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 22308,
            "nginjdect": "",
            "class": "",
            "module": "material.components.menu-bar"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 22374,
            "nginject": "",
            "class": "",
            "module": "material.components.menu-bar"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 22385,
            "description": "Called by our linking fn to provide access to the menu-content\nelement removed during link",
            "class": "",
            "module": "material.components.menu-bar"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 22474,
            "description": "Uses the $mdMenu interim element service to open the menu contents",
            "class": "",
            "module": "material.components.menu-bar"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 22551,
            "description": "Build a nice object out of our string attribute which specifies the\ntarget mode for left and top positioning",
            "class": "",
            "module": "material.components.menu-bar"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 22570,
            "description": "Build a nice object out of our string attribute which specifies\nthe offset of top and left in pixels.",
            "class": "",
            "module": "material.components.menu-bar"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 22743,
            "nginject": "",
            "class": "",
            "module": "material.components.menu"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 22858,
            "description": "Show modal backdrop element...",
            "return": {
                "description": "A function that removes this backdrop",
                "type": "Function(): void"
            },
            "class": "",
            "module": "material.components.menu"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 22880,
            "description": "Hide and destroys the backdrop created by showBackdrop()",
            "class": "",
            "module": "material.components.menu"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 22889,
            "description": "Removing the menu element from the DOM and remove all associated event listeners\nand backdrop",
            "class": "",
            "module": "material.components.menu"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 22903,
            "description": "For normal closes, animate the removal.\nFor forced closes (like $destroy events), skip the animations",
            "class": "",
            "module": "material.components.menu"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 22911,
            "description": "Detach the element",
            "class": "",
            "module": "material.components.menu"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 22922,
            "description": "Inserts and configures the staged Menu element into the DOM, positioning it,\nand wiring up various interaction events",
            "class": "",
            "module": "material.components.menu"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 22944,
            "description": "Place the menu into the DOM and call positioning related functions",
            "class": "",
            "module": "material.components.menu"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 22969,
            "description": "Check for valid opts and set some sane defaults",
            "class": "",
            "module": "material.components.menu"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 22987,
            "description": "Configure various resize listeners for screen changes",
            "class": "",
            "module": "material.components.menu"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 23013,
            "description": "Activate interaction on the menu. Wire up keyboard listerns for\nclicks, keypresses, backdrop closing, etc.",
            "class": "",
            "module": "material.components.menu"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 23149,
            "description": "Takes a keypress event and focuses the next/previous menu\nitem from the emitting element",
            "params": [
                {
                    "name": "e",
                    "description": "- The origin keypress event",
                    "type": "Event"
                },
                {
                    "name": "menuEl",
                    "description": "- The menu element",
                    "type": "angular.element"
                },
                {
                    "name": "opts",
                    "description": "- The interim element options for the mdMenu",
                    "type": "Object"
                },
                {
                    "name": "direction",
                    "description": "- The direction to move in (+1 = next, -1 = prev)",
                    "type": "Number"
                }
            ],
            "class": "",
            "module": "material.components.menu"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 23176,
            "description": "Attempts to focus an element. Checks whether that element is the currently\nfocused element after attempting.",
            "params": [
                {
                    "name": "el",
                    "description": "- the element to attempt focus on",
                    "type": "HTMLElement"
                }
            ],
            "return": {
                "description": "- whether the element was successfully focused",
                "type": "Bool"
            },
            "class": "",
            "module": "material.components.menu"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 23189,
            "description": "Use browser to remove this element without triggering a $destroy event",
            "class": "",
            "module": "material.components.menu"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 23202,
            "description": "Computes menu position and sets the style on the menu container",
            "params": [
                {
                    "name": "el",
                    "description": "- the menu container element",
                    "type": "HTMLElement"
                },
                {
                    "name": "opts",
                    "description": "- the interim element options object",
                    "type": "Object"
                }
            ],
            "class": "",
            "module": "material.components.menu"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 23301,
            "description": "Clamps the repositioning of the menu within the confines of\nbounding element (often the screen/body)",
            "class": "",
            "module": "material.components.menu"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 23310,
            "description": "Gets the first visible child in the openMenuNode\nNecessary incase menu nodes are being dynamically hidden",
            "class": "",
            "module": "material.components.menu"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 23526,
            "nginject": "",
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 23589,
            "description": "Perform initialization for the controller, setup events and watcher(s)",
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 23608,
            "description": "Compiles the template provided by the user.  This is passed as an attribute from the tabs\ndirective's template function.",
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 23620,
            "description": "Binds events used by the tabs component.",
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 23628,
            "description": "Configure watcher(s) used by Tabs",
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 23635,
            "description": "Creates a one-way binding manually rather than relying on Angular's isolated scope",
            "params": [
                {
                    "name": "key",
                    "description": ""
                },
                {
                    "name": "handler",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 23646,
            "description": "Defines boolean attributes with default value set to true.  (ie. md-stretch-tabs with no value\nwill be treated as being truthy)",
            "params": [
                {
                    "name": "key",
                    "description": ""
                },
                {
                    "name": "handler",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 23662,
            "description": "Remove any events defined by this controller",
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 23672,
            "description": "Toggles stretch tabs class and updates inkbar when tab stretching changes",
            "params": [
                {
                    "name": "stretchTabs",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 23705,
            "description": "Add/remove the `md-no-tab-content` class depending on `ctrl.hasContent`",
            "params": [
                {
                    "name": "hasContent",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 23713,
            "description": "Apply ctrl.offsetLeft to the paging element when it changes",
            "params": [
                {
                    "name": "left",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 23723,
            "description": "Update the UI whenever `ctrl.focusIndex` is updated",
            "params": [
                {
                    "name": "newIndex",
                    "description": ""
                },
                {
                    "name": "oldIndex",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 23735,
            "description": "Update the UI whenever the selected index changes. Calls user-defined select/deselect methods.",
            "params": [
                {
                    "name": "newValue",
                    "description": ""
                },
                {
                    "name": "oldValue",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 23758,
            "description": "Queues up a call to `handleWindowResize` when a resize occurs while the tabs component is\nhidden.",
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 23784,
            "description": "Handle user keyboard interactions",
            "params": [
                {
                    "name": "event",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 23807,
            "description": "Update the selected index and trigger a click event on the original `md-tab` element in order\nto fire user-added click events.",
            "params": [
                {
                    "name": "index",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 23821,
            "description": "When pagination is on, this makes sure the selected index is in view.",
            "params": [
                {
                    "name": "event",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 23831,
            "description": "Slides the tabs over approximately one page forward.",
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 23845,
            "description": "Slides the tabs over approximately one page backward.",
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 23857,
            "description": "Update size calculations when the window is resized.",
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 23873,
            "description": "Toggle dynamic height class when value changes",
            "params": [
                {
                    "name": "value",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 23881,
            "description": "Remove a tab from the data and select the nearest valid tab.",
            "params": [
                {
                    "name": "tabData",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 23902,
            "description": "Create an entry in the tabs array for a new tab at the specified index.",
            "params": [
                {
                    "name": "tabData",
                    "description": ""
                },
                {
                    "name": "index",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 23942,
            "description": "Gathers references to all of the DOM elements used by this controller.",
            "return": {
                "description": "}"
            },
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 23965,
            "description": "Determines whether or not the left pagination arrow should be enabled.",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 23973,
            "description": "Determines whether or not the right pagination arrow should be enabled.",
            "return": {
                "description": "",
                "type": "*|boolean"
            },
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 23983,
            "description": "Determines if the UI should stretch the tabs to fill the available space.",
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 23999,
            "description": "Determines if the tabs should appear centered.",
            "return": {
                "description": "",
                "type": "String|boolean"
            },
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 24007,
            "description": "Determines if pagination is necessary to display the tabs within the available space.",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 24018,
            "description": "Finds the nearest tab index that is available.  This is primarily used for when the active\ntab is removed.",
            "params": [
                {
                    "name": "newIndex",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 24039,
            "description": "Defines a property using a getter and setter in order to trigger a change handler without\nusing `$watch` to observe changes.",
            "params": [
                {
                    "name": "key",
                    "description": ""
                },
                {
                    "name": "handler",
                    "description": ""
                },
                {
                    "name": "value",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 24057,
            "description": "Updates whether or not pagination should be displayed.",
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 24082,
            "description": "Re-orders the tabs and updates the selected and focus indexes to their new positions.\nThis is triggered by `tabDirective.js` when the user's tabs have been re-ordered.",
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 24096,
            "description": "This moves the selected or focus index left or right.  This is used by the keydown handler.",
            "params": [
                {
                    "name": "inc",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 24112,
            "description": "This is used to forward focus to dummy elements.  This method is necessary to avoid animation\nissues when attempting to focus an item that is out of view.",
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 24120,
            "description": "Forces the pagination to move the focused tab into view.",
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 24134,
            "description": "Iterates through all queued functions and clears the queue.  This is used for functions that\nare called before the UI is ready, such as size calculations.",
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 24143,
            "description": "Determines if the tab content area is needed.",
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 24154,
            "description": "Moves the indexes to their nearest valid values.",
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 24162,
            "description": "Calculates the content height of the current tab.",
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 24223,
            "description": "Repositions the ink bar to the selected tab.",
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 24252,
            "description": "Adds left/right classes so that the ink bar will animate properly.",
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 24265,
            "description": "Takes an offset value and makes sure that it is within the min/max allowed values.",
            "params": [
                {
                    "name": "value",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-material\\angular-material.js",
            "line": 24279,
            "description": "Attaches a ripple to the tab item element.",
            "params": [
                {
                    "name": "scope",
                    "description": ""
                },
                {
                    "name": "element",
                    "description": ""
                }
            ],
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-messages\\angular-messages.js",
            "line": 1,
            "license": "AngularJS v1.5.0\n(c) 2010-2016 Google, Inc. http://angularjs.org\nLicense: MIT",
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-messages\\angular-messages.js",
            "line": 16,
            "ngdoc": "module",
            "name": "ngMessages",
            "description": "The `ngMessages` module provides enhanced support for displaying messages within templates\n(typically within forms or when rendering message objects that return key/value data).\nInstead of relying on JavaScript code and/or complex ng-if statements within your form template to\nshow and hide error messages specific to the state of an input field, the `ngMessages` and\n`ngMessage` directives are designed to handle the complexity, inheritance and priority\nsequencing based on the order of how the messages are defined in the template.\n\nCurrently, the ngMessages module only contains the code for the `ngMessages`, `ngMessagesInclude`\n`ngMessage` and `ngMessageExp` directives.\n\n# Usage\nThe `ngMessages` directive listens on a key/value collection which is set on the ngMessages attribute.\nSince the {@link ngModel ngModel} directive exposes an `$error` object, this error object can be\nused with `ngMessages` to display control error messages in an easier way than with just regular angular\ntemplate directives.\n\n```html\n<form name=\"myForm\">\n  <label>\n    Enter text:\n    <input type=\"text\" ng-model=\"field\" name=\"myField\" required minlength=\"5\" />\n  </label>\n  <div ng-messages=\"myForm.myField.$error\" role=\"alert\">\n    <div ng-message=\"required\">You did not enter a field</div>\n    <div ng-message=\"minlength, maxlength\">\n      Your email must be between 5 and 100 characters long\n    </div>\n  </div>\n</form>\n```\n\nNow whatever key/value entries are present within the provided object (in this case `$error`) then\nthe ngMessages directive will render the inner first ngMessage directive (depending if the key values\nmatch the attribute value present on each ngMessage directive). In other words, if your errors\nobject contains the following data:\n\n```javascript\n<!-- keep in mind that ngModel automatically sets these error flags -->\nmyField.$error = { minlength : true, required : true };\n```\n\nThen the `required` message will be displayed first. When required is false then the `minlength` message\nwill be displayed right after (since these messages are ordered this way in the template HTML code).\nThe prioritization of each message is determined by what order they're present in the DOM.\nTherefore, instead of having custom JavaScript code determine the priority of what errors are\npresent before others, the presentation of the errors are handled within the template.\n\nBy default, ngMessages will only display one error at a time. However, if you wish to display all\nmessages then the `ng-messages-multiple` attribute flag can be used on the element containing the\nngMessages directive to make this happen.\n\n```html\n<!-- attribute-style usage -->\n<div ng-messages=\"myForm.myField.$error\" ng-messages-multiple>...</div>\n\n<!-- element-style usage -->\n<ng-messages for=\"myForm.myField.$error\" multiple>...</ng-messages>\n```\n\n## Reusing and Overriding Messages\nIn addition to prioritization, ngMessages also allows for including messages from a remote or an inline\ntemplate. This allows for generic collection of messages to be reused across multiple parts of an\napplication.\n\n```html\n<script type=\"text/ng-template\" id=\"error-messages\">\n  <div ng-message=\"required\">This field is required</div>\n  <div ng-message=\"minlength\">This field is too short</div>\n</script>\n\n<div ng-messages=\"myForm.myField.$error\" role=\"alert\">\n  <div ng-messages-include=\"error-messages\"></div>\n</div>\n```\n\nHowever, including generic messages may not be useful enough to match all input fields, therefore,\n`ngMessages` provides the ability to override messages defined in the remote template by redefining\nthem within the directive container.\n\n```html\n<!-- a generic template of error messages known as \"my-custom-messages\" -->\n<script type=\"text/ng-template\" id=\"my-custom-messages\">\n  <div ng-message=\"required\">This field is required</div>\n  <div ng-message=\"minlength\">This field is too short</div>\n</script>\n\n<form name=\"myForm\">\n  <label>\n    Email address\n    <input type=\"email\"\n           id=\"email\"\n           name=\"myEmail\"\n           ng-model=\"email\"\n           minlength=\"5\"\n           required />\n  </label>\n  <!-- any ng-message elements that appear BEFORE the ng-messages-include will\n       override the messages present in the ng-messages-include template -->\n  <div ng-messages=\"myForm.myEmail.$error\" role=\"alert\">\n    <!-- this required message has overridden the template message -->\n    <div ng-message=\"required\">You did not enter your email address</div>\n\n    <!-- this is a brand new message and will appear last in the prioritization -->\n    <div ng-message=\"email\">Your email address is invalid</div>\n\n    <!-- and here are the generic error messages -->\n    <div ng-messages-include=\"my-custom-messages\"></div>\n  </div>\n</form>\n```\n\nIn the example HTML code above the message that is set on required will override the corresponding\nrequired message defined within the remote template. Therefore, with particular input fields (such\nemail addresses, date fields, autocomplete inputs, etc...), specialized error messages can be applied\nwhile more generic messages can be used to handle other, more general input errors.\n\n## Dynamic Messaging\nngMessages also supports using expressions to dynamically change key values. Using arrays and\nrepeaters to list messages is also supported. This means that the code below will be able to\nfully adapt itself and display the appropriate message when any of the expression data changes:\n\n```html\n<form name=\"myForm\">\n  <label>\n    Email address\n    <input type=\"email\"\n           name=\"myEmail\"\n           ng-model=\"email\"\n           minlength=\"5\"\n           required />\n  </label>\n  <div ng-messages=\"myForm.myEmail.$error\" role=\"alert\">\n    <div ng-message=\"required\">You did not enter your email address</div>\n    <div ng-repeat=\"errorMessage in errorMessages\">\n      <!-- use ng-message-exp for a message whose key is given by an expression -->\n      <div ng-message-exp=\"errorMessage.type\">{{ errorMessage.text }}</div>\n    </div>\n  </div>\n</form>\n```\n\nThe `errorMessage.type` expression can be a string value or it can be an array so\nthat multiple errors can be associated with a single error message:\n\n```html\n  <label>\n    Email address\n    <input type=\"email\"\n           ng-model=\"data.email\"\n           name=\"myEmail\"\n           ng-minlength=\"5\"\n           ng-maxlength=\"100\"\n           required />\n  </label>\n  <div ng-messages=\"myForm.myEmail.$error\" role=\"alert\">\n    <div ng-message-exp=\"'required'\">You did not enter your email address</div>\n    <div ng-message-exp=\"['minlength', 'maxlength']\">\n      Your email must be between 5 and 100 characters long\n    </div>\n  </div>\n```\n\nFeel free to use other structural directives such as ng-if and ng-switch to further control\nwhat messages are active and when. Be careful, if you place ng-message on the same element\nas these structural directives, Angular may not be able to determine if a message is active\nor not. Therefore it is best to place the ng-message on a child element of the structural\ndirective.\n\n```html\n<div ng-messages=\"myForm.myEmail.$error\" role=\"alert\">\n  <div ng-if=\"showRequiredError\">\n    <div ng-message=\"required\">Please enter something</div>\n  </div>\n</div>\n```\n\n## Animations\nIf the `ngAnimate` module is active within the application then the `ngMessages`, `ngMessage` and\n`ngMessageExp` directives will trigger animations whenever any messages are added and removed from\nthe DOM by the `ngMessages` directive.\n\nWhenever the `ngMessages` directive contains one or more visible messages then the `.ng-active` CSS\nclass will be added to the element. The `.ng-inactive` CSS class will be applied when there are no\nmessages present. Therefore, CSS transitions and keyframes as well as JavaScript animations can\nhook into the animations whenever these classes are added/removed.\n\nLet's say that our HTML code for our messages container looks like so:\n\n```html\n<div ng-messages=\"myMessages\" class=\"my-messages\" role=\"alert\">\n  <div ng-message=\"alert\" class=\"some-message\">...</div>\n  <div ng-message=\"fail\" class=\"some-message\">...</div>\n</div>\n```\n\nThen the CSS animation code for the message container looks like so:\n\n```css\n.my-messages {\n  transition:1s linear all;\n}\n.my-messages.ng-active {\n  // messages are visible\n}\n.my-messages.ng-inactive {\n  // messages are hidden\n}\n```\n\nWhenever an inner message is attached (becomes visible) or removed (becomes hidden) then the enter\nand leave animation is triggered for each particular element bound to the `ngMessage` directive.\n\nTherefore, the CSS code for the inner messages looks like so:\n\n```css\n.some-message {\n  transition:1s linear all;\n}\n\n.some-message.ng-enter {}\n.some-message.ng-enter.ng-enter-active {}\n\n.some-message.ng-leave {}\n.some-message.ng-leave.ng-leave-active {}\n```\n\n{@link ngAnimate Click here} to learn how to use JavaScript animations or to learn more about ngAnimate.",
            "class": "",
            "module": "material.components.tabs"
        },
        {
            "file": "web\\bower_components\\angular-messages\\angular-messages.js",
            "line": 487,
            "ngdoc": "directive",
            "name": "ngMessagesInclude",
            "restrict": "AE",
            "scope": "",
            "description": "`ngMessagesInclude` is a directive with the purpose to import existing ngMessage template\ncode from a remote template and place the downloaded template code into the exact spot\nthat the ngMessagesInclude directive is placed within the ngMessages container. This allows\nfor a series of pre-defined messages to be reused and also allows for the developer to\ndetermine what messages are overridden due to the placement of the ngMessagesInclude directive.",
            "usage": "```html\n<!-- using attribute directives -->\n<ANY ng-messages=\"expression\" role=\"alert\">\n  <ANY ng-messages-include=\"remoteTplString\">...</ANY>\n</ANY>\n\n<!-- or by using element directives -->\n<ng-messages for=\"expression\" role=\"alert\">\n  <ng-messages-include src=\"expressionValue1\">...</ng-messages-include>\n</ng-messages>\n```\n\n{@link module:ngMessages Click here} to learn more about `ngMessages` and `ngMessage`.",
            "params": [
                {
                    "name": "ngMessagesInclude|src",
                    "description": "a string value corresponding to the remote template.",
                    "type": "String"
                }
            ],
            "class": "",
            "module": "ngMessages"
        },
        {
            "file": "web\\bower_components\\angular-messages\\angular-messages.js",
            "line": 541,
            "ngdoc": "directive",
            "name": "ngMessage",
            "restrict": "AE",
            "scope": "",
            "description": "`ngMessage` is a directive with the purpose to show and hide a particular message.\nFor `ngMessage` to operate, a parent `ngMessages` directive on a parent DOM element\nmust be situated since it determines which messages are visible based on the state\nof the provided key/value map that `ngMessages` listens on.\n\nMore information about using `ngMessage` can be found in the\n{@link module:ngMessages `ngMessages` module documentation}.",
            "usage": "```html\n<!-- using attribute directives -->\n<ANY ng-messages=\"expression\" role=\"alert\">\n  <ANY ng-message=\"stringValue\">...</ANY>\n  <ANY ng-message=\"stringValue1, stringValue2, ...\">...</ANY>\n</ANY>\n\n<!-- or by using element directives -->\n<ng-messages for=\"expression\" role=\"alert\">\n  <ng-message when=\"stringValue\">...</ng-message>\n  <ng-message when=\"stringValue1, stringValue2, ...\">...</ng-message>\n</ng-messages>\n```",
            "params": [
                {
                    "name": "ngMessage|when",
                    "description": "a string value corresponding to the message key.",
                    "type": "Expression"
                }
            ],
            "class": "",
            "module": "ngMessages"
        },
        {
            "file": "web\\bower_components\\angular-messages\\angular-messages.js",
            "line": 576,
            "ngdoc": "directive",
            "name": "ngMessageExp",
            "restrict": "AE",
            "priority": "1",
            "scope": "",
            "description": "`ngMessageExp` is a directive with the purpose to show and hide a particular message.\nFor `ngMessageExp` to operate, a parent `ngMessages` directive on a parent DOM element\nmust be situated since it determines which messages are visible based on the state\nof the provided key/value map that `ngMessages` listens on.",
            "usage": "```html\n<!-- using attribute directives -->\n<ANY ng-messages=\"expression\">\n  <ANY ng-message-exp=\"expressionValue\">...</ANY>\n</ANY>\n\n<!-- or by using element directives -->\n<ng-messages for=\"expression\">\n  <ng-message when-exp=\"expressionValue\">...</ng-message>\n</ng-messages>\n```\n\n{@link module:ngMessages Click here} to learn more about `ngMessages` and `ngMessage`.",
            "params": [
                {
                    "name": "ngMessageExp|whenExp",
                    "description": "an expression value corresponding to the message key.",
                    "type": "Expression"
                }
            ],
            "class": "",
            "module": "ngMessages"
        },
        {
            "file": "web\\bower_components\\angular-mocks\\angular-mocks.js",
            "line": 1,
            "license": "AngularJS v1.5.0\n(c) 2010-2016 Google, Inc. http://angularjs.org\nLicense: MIT",
            "class": "",
            "module": "ngMessages"
        },
        {
            "file": "web\\bower_components\\angular-mocks\\angular-mocks.js",
            "line": 10,
            "ngdoc": "object",
            "name": "angular.mock",
            "description": "Namespace from 'angular-mocks.js' which contains testing related code.",
            "class": "",
            "module": "ngMessages"
        },
        {
            "file": "web\\bower_components\\angular-mocks\\angular-mocks.js",
            "line": 19,
            "description": "This service is a mock implementation of {@link ng.$browser}. It provides fake\nimplementation for commonly used browser apis that are hard to test, e.g. setTimeout, xhr,\ncookies, etc...\n\nThe api of this service is the same as that of the real {@link ng.$browser $browser}, except\nthat there are several helper methods available which can be used in tests.",
            "name": "$browser",
            "class": "",
            "module": "ngMessages"
        },
        {
            "file": "web\\bower_components\\angular-mocks\\angular-mocks.js",
            "line": 81,
            "name": "$browser#defer.now",
            "description": "Current milliseconds mock time.",
            "class": "",
            "module": "ngMessages"
        },
        {
            "file": "web\\bower_components\\angular-mocks\\angular-mocks.js",
            "line": 106,
            "name": "$browser#defer.flush",
            "description": "Flushes all pending requests and executes the defer callbacks.",
            "params": [
                {
                    "name": "number",
                    "description": "of milliseconds to flush. See {@link #defer.now}",
                    "type": "Number="
                }
            ],
            "class": "",
            "module": "ngMessages"
        },
        {
            "file": "web\\bower_components\\angular-mocks\\angular-mocks.js",
            "line": 137,
            "name": "$browser#poll",
            "description": "run all fns in pollFns",
            "class": "",
            "module": "ngMessages"
        },
        {
            "file": "web\\bower_components\\angular-mocks\\angular-mocks.js",
            "line": 173,
            "ngdoc": "provider",
            "name": "$exceptionHandlerProvider",
            "description": "Configures the mock implementation of {@link ng.$exceptionHandler} to rethrow or to log errors\npassed to the `$exceptionHandler`.",
            "class": "",
            "module": "ngMessages"
        },
        {
            "file": "web\\bower_components\\angular-mocks\\angular-mocks.js",
            "line": 182,
            "ngdoc": "service",
            "name": "$exceptionHandler",
            "description": "Mock implementation of {@link ng.$exceptionHandler} that rethrows or logs errors passed\nto it. See {@link ngMock.$exceptionHandlerProvider $exceptionHandlerProvider} for configuration\ninformation.\n\n\n```js\n  describe('$exceptionHandlerProvider', function() {\n\n    it('should capture log messages and exceptions', function() {\n\n      module(function($exceptionHandlerProvider) {\n        $exceptionHandlerProvider.mode('log');\n      });\n\n      inject(function($log, $exceptionHandler, $timeout) {\n        $timeout(function() { $log.log(1); });\n        $timeout(function() { $log.log(2); throw 'banana peel'; });\n        $timeout(function() { $log.log(3); });\n        expect($exceptionHandler.errors).toEqual([]);\n        expect($log.assertEmpty());\n        $timeout.flush();\n        expect($exceptionHandler.errors).toEqual(['banana peel']);\n        expect($log.log.logs).toEqual([[1], [2], [3]]);\n      });\n    });\n  });\n```",
            "class": "",
            "module": "ngMessages"
        },
        {
            "file": "web\\bower_components\\angular-mocks\\angular-mocks.js",
            "line": 219,
            "ngdoc": "method",
            "name": "$exceptionHandlerProvider#mode",
            "description": "Sets the logging mode.",
            "params": [
                {
                    "name": "mode",
                    "description": "Mode of operation, defaults to `rethrow`.\n\n  - `log`: Sometimes it is desirable to test that an error is thrown, for this case the `log`\n           mode stores an array of errors in `$exceptionHandler.errors`, to allow later\n           assertion of them. See {@link ngMock.$log#assertEmpty assertEmpty()} and\n           {@link ngMock.$log#reset reset()}\n  - `rethrow`: If any errors are passed to the handler in tests, it typically means that there\n               is a bug in the application or test, so this mock will make these tests fail.\n               For any implementations that expect exceptions to be thrown, the `rethrow` mode\n               will also maintain a log of thrown errors.",
                    "type": "String"
                }
            ],
            "class": "",
            "module": "ngMessages"
        },
        {
            "file": "web\\bower_components\\angular-mocks\\angular-mocks.js",
            "line": 268,
            "ngdoc": "service",
            "name": "$log",
            "description": "Mock implementation of {@link ng.$log} that gathers all logged messages in arrays\n(one array per logging level). These arrays are exposed as `logs` property of each of the\nlevel-specific log function, e.g. for level `error` the array is exposed as `$log.error.logs`.",
            "class": "",
            "module": "ngMessages"
        },
        {
            "file": "web\\bower_components\\angular-mocks\\angular-mocks.js",
            "line": 307,
            "ngdoc": "method",
            "name": "$log#reset",
            "description": "Reset all of the logging arrays to empty.",
            "class": "",
            "module": "ngMessages"
        },
        {
            "file": "web\\bower_components\\angular-mocks\\angular-mocks.js",
            "line": 315,
            "ngdoc": "property",
            "name": "$log#log.logs",
            "description": "Array of messages logged using {@link ng.$log#log `log()`}.",
            "example": [
                "\n```js\n$log.log('Some Log');\nvar first = $log.log.logs.unshift();\n```"
            ],
            "class": "",
            "module": "ngMessages"
        },
        {
            "file": "web\\bower_components\\angular-mocks\\angular-mocks.js",
            "line": 329,
            "ngdoc": "property",
            "name": "$log#info.logs",
            "description": "Array of messages logged using {@link ng.$log#info `info()`}.",
            "example": [
                "\n```js\n$log.info('Some Info');\nvar first = $log.info.logs.unshift();\n```"
            ],
            "class": "",
            "module": "ngMessages"
        },
        {
            "file": "web\\bower_components\\angular-mocks\\angular-mocks.js",
            "line": 343,
            "ngdoc": "property",
            "name": "$log#warn.logs",
            "description": "Array of messages logged using {@link ng.$log#warn `warn()`}.",
            "example": [
                "\n```js\n$log.warn('Some Warning');\nvar first = $log.warn.logs.unshift();\n```"
            ],
            "class": "",
            "module": "ngMessages"
        },
        {
            "file": "web\\bower_components\\angular-mocks\\angular-mocks.js",
            "line": 357,
            "ngdoc": "property",
            "name": "$log#error.logs",
            "description": "Array of messages logged using {@link ng.$log#error `error()`}.",
            "example": [
                "\n```js\n$log.error('Some Error');\nvar first = $log.error.logs.unshift();\n```"
            ],
            "class": "",
            "module": "ngMessages"
        },
        {
            "file": "web\\bower_components\\angular-mocks\\angular-mocks.js",
            "line": 371,
            "ngdoc": "property",
            "name": "$log#debug.logs",
            "description": "Array of messages logged using {@link ng.$log#debug `debug()`}.",
            "example": [
                "\n```js\n$log.debug('Some Error');\nvar first = $log.debug.logs.unshift();\n```"
            ],
            "class": "",
            "module": "ngMessages"
        },
        {
            "file": "web\\bower_components\\angular-mocks\\angular-mocks.js",
            "line": 387,
            "ngdoc": "method",
            "name": "$log#assertEmpty",
            "description": "Assert that all of the logging methods have no logged messages. If any messages are present,\nan exception is thrown.",
            "class": "",
            "module": "ngMessages"
        },
        {
            "file": "web\\bower_components\\angular-mocks\\angular-mocks.js",
            "line": 419,
            "ngdoc": "service",
            "name": "$interval",
            "description": "Mock implementation of the $interval service.\n\nUse {@link ngMock.$interval#flush `$interval.flush(millis)`} to\nmove forward by `millis` milliseconds and trigger any functions scheduled to run in that\ntime.",
            "params": [
                {
                    "name": "fn",
                    "description": "A function that should be called repeatedly.",
                    "type": "Function()"
                },
                {
                    "name": "delay",
                    "description": "Number of milliseconds between each function call.",
                    "type": "Number"
                },
                {
                    "name": "count",
                    "description": "Number of times to repeat. If not set, or 0, will repeat\n  indefinitely.",
                    "type": "Number=",
                    "optional": true,
                    "optdefault": "0"
                },
                {
                    "name": "invokeApply",
                    "description": "If set to `false` skips model dirty checking, otherwise\n  will invoke `fn` within the {@link ng.$rootScope.Scope#$apply $apply} block.",
                    "type": "Boolean=",
                    "optional": true,
                    "optdefault": "true"
                },
                {
                    "name": "Pass",
                    "description": "additional parameters to the executed function.",
                    "type": "...*="
                }
            ],
            "return": {
                "description": "A promise which will be notified on each iteration.",
                "type": "Promise"
            },
            "class": "",
            "module": "ngMessages"
        },
        {
            "file": "web\\bower_components\\angular-mocks\\angular-mocks.js",
            "line": 496,
            "ngdoc": "method",
            "name": "$interval#cancel",
            "description": "Cancels a task associated with the `promise`.",
            "params": [
                {
                    "name": "promise",
                    "description": "A promise from calling the `$interval` function.",
                    "type": "Promise"
                }
            ],
            "return": {
                "description": "Returns `true` if the task was successfully cancelled.",
                "type": "Boolean"
            },
            "class": "",
            "module": "ngMessages"
        },
        {
            "file": "web\\bower_components\\angular-mocks\\angular-mocks.js",
            "line": 523,
            "ngdoc": "method",
            "name": "$interval#flush",
            "description": "Runs interval tasks scheduled to be run in the next `millis` milliseconds.",
            "params": [
                {
                    "name": "millis",
                    "description": "maximum timeout amount to flush up until.",
                    "type": "Number="
                }
            ],
            "return": {
                "description": "The amount of time moved forward.",
                "type": "Number"
            },
            "class": "",
            "module": "ngMessages"
        },
        {
            "file": "web\\bower_components\\angular-mocks\\angular-mocks.js",
            "line": 596,
            "ngdoc": "type",
            "name": "angular.mock.TzDate",
            "description": "*NOTE*: this is not an injectable instance, just a globally available mock class of `Date`.\n\nMock of the Date type which has its timezone specified via constructor arg.\n\nThe main purpose is to create Date-like instances with timezone fixed to the specified timezone\noffset, so that we can test code that depends on local timezone settings without dependency on\nthe time zone settings of the machine where the code is running.",
            "params": [
                {
                    "name": "offset",
                    "description": "Offset of the *desired* timezone in hours (fractions will be honored)",
                    "type": "Number"
                },
                {
                    "name": "timestamp",
                    "description": "Timestamp representing the desired time in *UTC*",
                    "type": "(number|string)"
                }
            ],
            "example": [
                "\n!!!! WARNING !!!!!\nThis is not a complete Date object so only methods that were implemented can be called safely.\nTo make matters worse, TzDate instances inherit stuff from Date via a prototype.\n\nWe do our best to intercept calls to \"unimplemented\" methods, but since the list of methods is\nincomplete we might be missing some non-standard methods. This can result in errors like:\n\"Date.prototype.foo called on incompatible Object\".\n\n```js\nvar newYearInBratislava = new TzDate(-1, '2009-12-31T23:00:00Z');\nnewYearInBratislava.getTimezoneOffset() => -60;\nnewYearInBratislava.getFullYear() => 2010;\nnewYearInBratislava.getMonth() => 0;\nnewYearInBratislava.getDate() => 1;\nnewYearInBratislava.getHours() => 0;\nnewYearInBratislava.getMinutes() => 0;\nnewYearInBratislava.getSeconds() => 0;\n```\n"
            ],
            "class": "",
            "module": "ngMessages"
        },
        {
            "file": "web\\bower_components\\angular-mocks\\angular-mocks.js",
            "line": 762,
            "ngdoc": "service",
            "name": "$animate",
            "description": "Mock implementation of the {@link ng.$animate `$animate`} service. Exposes two additional methods\nfor testing animations.",
            "class": "",
            "module": "ngMessages"
        },
        {
            "file": "web\\bower_components\\angular-mocks\\angular-mocks.js",
            "line": 857,
            "ngdoc": "method",
            "name": "$animate#closeAndFlush",
            "description": "This method will close all pending animations (both {@link ngAnimate#javascript-based-animations Javascript}\nand {@link ngAnimate.$animateCss CSS}) and it will also flush any remaining animation frames and/or callbacks.",
            "class": "",
            "module": "ngMessages"
        },
        {
            "file": "web\\bower_components\\angular-mocks\\angular-mocks.js",
            "line": 876,
            "ngdoc": "method",
            "name": "$animate#flush",
            "description": "This method is used to flush the pending callbacks and animation frames to either start\nan animation or conclude an animation. Note that this will not actually close an\nactively running animation (see {@link ngMock.$animate#closeAndFlush `closeAndFlush()`} for that).",
            "class": "",
            "module": "ngMessages"
        },
        {
            "file": "web\\bower_components\\angular-mocks\\angular-mocks.js",
            "line": 929,
            "ngdoc": "function",
            "name": "angular.mock.dump",
            "description": "*NOTE*: this is not an injectable instance, just a globally available function.\n\nMethod for serializing common angular objects (scope, elements, etc..) into strings, useful for\ndebugging.\n\nThis method is also available on window, where it can be used to display objects on debug\nconsole.",
            "params": [
                {
                    "name": "object",
                    "description": "- any object to turn into string.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "a serialized string of the argument",
                "type": "String"
            },
            "class": "",
            "module": "ngMessages"
        },
        {
            "file": "web\\bower_components\\angular-mocks\\angular-mocks.js",
            "line": 999,
            "ngdoc": "service",
            "name": "$httpBackend",
            "description": "Fake HTTP backend implementation suitable for unit testing applications that use the\n{@link ng.$http $http service}.\n\n*Note*: For fake HTTP backend implementation suitable for end-to-end testing or backend-less\ndevelopment please see {@link ngMockE2E.$httpBackend e2e $httpBackend mock}.\n\nDuring unit testing, we want our unit tests to run quickly and have no external dependencies so\nwe don’t want to send [XHR](https://developer.mozilla.org/en/xmlhttprequest) or\n[JSONP](http://en.wikipedia.org/wiki/JSONP) requests to a real server. All we really need is\nto verify whether a certain request has been sent or not, or alternatively just let the\napplication make requests, respond with pre-trained responses and assert that the end result is\nwhat we expect it to be.\n\nThis mock implementation can be used to respond with static or dynamic responses via the\n`expect` and `when` apis and their shortcuts (`expectGET`, `whenPOST`, etc).\n\nWhen an Angular application needs some data from a server, it calls the $http service, which\nsends the request to a real server using $httpBackend service. With dependency injection, it is\neasy to inject $httpBackend mock (which has the same API as $httpBackend) and use it to verify\nthe requests and respond with some testing data without sending a request to a real server.\n\nThere are two ways to specify what test data should be returned as http responses by the mock\nbackend when the code under test makes http requests:\n\n- `$httpBackend.expect` - specifies a request expectation\n- `$httpBackend.when` - specifies a backend definition\n\n\n## Request Expectations vs Backend Definitions\n\nRequest expectations provide a way to make assertions about requests made by the application and\nto define responses for those requests. The test will fail if the expected requests are not made\nor they are made in the wrong order.\n\nBackend definitions allow you to define a fake backend for your application which doesn't assert\nif a particular request was made or not, it just returns a trained response if a request is made.\nThe test will pass whether or not the request gets made during testing.\n\n\n<table class=\"table\">\n  <tr><th width=\"220px\"></th><th>Request expectations</th><th>Backend definitions</th></tr>\n  <tr>\n    <th>Syntax</th>\n    <td>.expect(...).respond(...)</td>\n    <td>.when(...).respond(...)</td>\n  </tr>\n  <tr>\n    <th>Typical usage</th>\n    <td>strict unit tests</td>\n    <td>loose (black-box) unit testing</td>\n  </tr>\n  <tr>\n    <th>Fulfills multiple requests</th>\n    <td>NO</td>\n    <td>YES</td>\n  </tr>\n  <tr>\n    <th>Order of requests matters</th>\n    <td>YES</td>\n    <td>NO</td>\n  </tr>\n  <tr>\n    <th>Request required</th>\n    <td>YES</td>\n    <td>NO</td>\n  </tr>\n  <tr>\n    <th>Response required</th>\n    <td>optional (see below)</td>\n    <td>YES</td>\n  </tr>\n</table>\n\nIn cases where both backend definitions and request expectations are specified during unit\ntesting, the request expectations are evaluated first.\n\nIf a request expectation has no response specified, the algorithm will search your backend\ndefinitions for an appropriate response.\n\nIf a request didn't match any expectation or if the expectation doesn't have the response\ndefined, the backend definitions are evaluated in sequential order to see if any of them match\nthe request. The response from the first matched definition is returned.\n\n\n## Flushing HTTP requests\n\nThe $httpBackend used in production always responds to requests asynchronously. If we preserved\nthis behavior in unit testing, we'd have to create async unit tests, which are hard to write,\nto follow and to maintain. But neither can the testing mock respond synchronously; that would\nchange the execution of the code under test. For this reason, the mock $httpBackend has a\n`flush()` method, which allows the test to explicitly flush pending requests. This preserves\nthe async api of the backend, while allowing the test to execute synchronously.\n\n\n## Unit testing with mock $httpBackend\nThe following code shows how to setup and use the mock backend when unit testing a controller.\nFirst we create the controller under test:\n\n ```js\n // The module code\n angular\n   .module('MyApp', [])\n   .controller('MyController', MyController);\n\n // The controller code\n function MyController($scope, $http) {\n   var authToken;\n\n   $http.get('/auth.py').then(function(response) {\n     authToken = response.headers('A-Token');\n     $scope.user = response.data;\n   });\n\n   $scope.saveMessage = function(message) {\n     var headers = { 'Authorization': authToken };\n     $scope.status = 'Saving...';\n\n     $http.post('/add-msg.py', message, { headers: headers } ).then(function(response) {\n       $scope.status = '';\n     }).catch(function() {\n       $scope.status = 'Failed...';\n     });\n   };\n }\n ```\n\nNow we setup the mock backend and create the test specs:\n\n ```js\n   // testing controller\n   describe('MyController', function() {\n      var $httpBackend, $rootScope, createController, authRequestHandler;\n\n      // Set up the module\n      beforeEach(module('MyApp'));\n\n      beforeEach(inject(function($injector) {\n        // Set up the mock http service responses\n        $httpBackend = $injector.get('$httpBackend');\n        // backend definition common for all tests\n        authRequestHandler = $httpBackend.when('GET', '/auth.py')\n                               .respond({userId: 'userX'}, {'A-Token': 'xxx'});\n\n        // Get hold of a scope (i.e. the root scope)\n        $rootScope = $injector.get('$rootScope');\n        // The $controller service is used to create instances of controllers\n        var $controller = $injector.get('$controller');\n\n        createController = function() {\n          return $controller('MyController', {'$scope' : $rootScope });\n        };\n      }));\n\n\n      afterEach(function() {\n        $httpBackend.verifyNoOutstandingExpectation();\n        $httpBackend.verifyNoOutstandingRequest();\n      });\n\n\n      it('should fetch authentication token', function() {\n        $httpBackend.expectGET('/auth.py');\n        var controller = createController();\n        $httpBackend.flush();\n      });\n\n\n      it('should fail authentication', function() {\n\n        // Notice how you can change the response even after it was set\n        authRequestHandler.respond(401, '');\n\n        $httpBackend.expectGET('/auth.py');\n        var controller = createController();\n        $httpBackend.flush();\n        expect($rootScope.status).toBe('Failed...');\n      });\n\n\n      it('should send msg to server', function() {\n        var controller = createController();\n        $httpBackend.flush();\n\n        // now you don’t care about the authentication, but\n        // the controller will still send the request and\n        // $httpBackend will respond without you having to\n        // specify the expectation and response for this request\n\n        $httpBackend.expectPOST('/add-msg.py', 'message content').respond(201, '');\n        $rootScope.saveMessage('message content');\n        expect($rootScope.status).toBe('Saving...');\n        $httpBackend.flush();\n        expect($rootScope.status).toBe('');\n      });\n\n\n      it('should send auth header', function() {\n        var controller = createController();\n        $httpBackend.flush();\n\n        $httpBackend.expectPOST('/add-msg.py', undefined, function(headers) {\n          // check if the header was sent, if it wasn't the expectation won't\n          // match the request and the test will fail\n          return headers['Authorization'] == 'xxx';\n        }).respond(201, '');\n\n        $rootScope.saveMessage('whatever');\n        $httpBackend.flush();\n      });\n   });\n ```\n\n## Dynamic responses\n\nYou define a response to a request by chaining a call to `respond()` onto a definition or expectation.\nIf you provide a **callback** as the first parameter to `respond(callback)` then you can dynamically generate\na response based on the properties of the request.\n\nThe `callback` function should be of the form `function(method, url, data, headers, params)`.\n\n### Query parameters\n\nBy default, query parameters on request URLs are parsed into the `params` object. So a request URL\nof `/list?q=searchstr&orderby=-name` would set `params` to be `{q: 'searchstr', orderby: '-name'}`.\n\n### Regex parameter matching\n\nIf an expectation or definition uses a **regex** to match the URL, you can provide an array of **keys** via a\n`params` argument. The index of each **key** in the array will match the index of a **group** in the\n**regex**.\n\nThe `params` object in the **callback** will now have properties with these keys, which hold the value of the\ncorresponding **group** in the **regex**.\n\nThis also applies to the `when` and `expect` shortcut methods.\n\n\n```js\n  $httpBackend.expect('GET', /\\/user\\/(.+)/, undefined, undefined, ['id'])\n    .respond(function(method, url, data, headers, params) {\n      // for requested url of '/user/1234' params is {id: '1234'}\n    });\n\n  $httpBackend.whenPATCH(/\\/user\\/(.+)\\/article\\/(.+)/, undefined, undefined, ['user', 'article'])\n    .respond(function(method, url, data, headers, params) {\n      // for url of '/user/1234/article/567' params is {user: '1234', article: '567'}\n    });\n```\n\n## Matching route requests\n\nFor extra convenience, `whenRoute` and `expectRoute` shortcuts are available. These methods offer colon\ndelimited matching of the url path, ignoring the query string. This allows declarations\nsimilar to how application routes are configured with `$routeProvider`. Because these methods convert\nthe definition url to regex, declaration order is important. Combined with query parameter parsing,\nthe following is possible:\n\n ```js\n   $httpBackend.whenRoute('GET', '/users/:id')\n     .respond(function(method, url, data, headers, params) {\n       return [200, MockUserList[Number(params.id)]];\n     });\n\n   $httpBackend.whenRoute('GET', '/users')\n     .respond(function(method, url, data, headers, params) {\n       var userList = angular.copy(MockUserList),\n         defaultSort = 'lastName',\n         count, pages, isPrevious, isNext;\n\n       // paged api response '/v1/users?page=2'\n       params.page = Number(params.page) || 1;\n\n       // query for last names '/v1/users?q=Archer'\n       if (params.q) {\n         userList = $filter('filter')({lastName: params.q});\n       }\n\n       pages = Math.ceil(userList.length / pagingLength);\n       isPrevious = params.page > 1;\n       isNext = params.page < pages;\n\n       return [200, {\n         count:    userList.length,\n         previous: isPrevious,\n         next:     isNext,\n         // sort field -> '/v1/users?sortBy=firstName'\n         results:  $filter('orderBy')(userList, params.sortBy || defaultSort)\n                     .splice((params.page - 1) * pagingLength, pagingLength)\n       }];\n     });\n ```",
            "class": "",
            "module": "ngMessages"
        },
        {
            "file": "web\\bower_components\\angular-mocks\\angular-mocks.js",
            "line": 1299,
            "description": "General factory function for $httpBackend mock.\nReturns instance for unit testing (when no arguments specified):\n  - passing through is disabled\n  - auto flushing is disabled\n\nReturns instance for e2e testing (when `$delegate` and `$browser` specified):\n  - passing through (delegating request to real backend) is enabled\n  - auto flushing is enabled",
            "params": [
                {
                    "name": "$delegate",
                    "description": "Real $httpBackend instance (allow passing through if specified)",
                    "type": "Object="
                },
                {
                    "name": "$browser",
                    "description": "Auto-flushing enabled if specified",
                    "type": "Object="
                }
            ],
            "return": {
                "description": "Instance of $httpBackend mock",
                "type": "Object"
            },
            "class": "",
            "module": "ngMessages"
        },
        {
            "file": "web\\bower_components\\angular-mocks\\angular-mocks.js",
            "line": 1406,
            "ngdoc": "method",
            "name": "$httpBackend#when",
            "description": "Creates a new backend definition.",
            "params": [
                {
                    "name": "method",
                    "description": "HTTP method.",
                    "type": "String"
                },
                {
                    "name": "url",
                    "description": "HTTP url or function that receives a url\n  and returns true if the url matches the current definition.",
                    "type": "String|RegExp|function(string)"
                },
                {
                    "name": "data",
                    "description": "HTTP request body or function that receives\n  data string and returns true if the data is as expected.",
                    "type": "(string|RegExp|function(string))="
                },
                {
                    "name": "headers",
                    "description": "HTTP headers or function that receives http header\n  object and returns true if the headers match the current definition.",
                    "type": "(Object|function(Object))="
                },
                {
                    "name": "keys",
                    "description": "Array of keys to assign to regex matches in request url described above.",
                    "type": "(Array)="
                }
            ],
            "return": {
                "description": "Returns an object with `respond` method that controls how a matched\n  request is handled. You can save this object for later use and invoke `respond` again in\n  order to change how a matched request is handled.\n\n - respond –\n     `{function([status,] data[, headers, statusText])\n     | function(function(method, url, data, headers, params)}`\n   – The respond method takes a set of static data to be returned or a function that can\n   return an array containing response status (number), response data (string), response\n   headers (Object), and the text for the status (string). The respond method returns the\n   `requestHandler` object for possible overrides.",
                "type": "RequestHandler"
            },
            "class": "",
            "module": "ngMessages"
        },
        {
            "file": "web\\bower_components\\angular-mocks\\angular-mocks.js",
            "line": 1454,
            "ngdoc": "method",
            "name": "$httpBackend#whenGET",
            "description": "Creates a new backend definition for GET requests. For more info see `when()`.",
            "params": [
                {
                    "name": "url",
                    "description": "HTTP url or function that receives a url\n  and returns true if the url matches the current definition.",
                    "type": "String|RegExp|function(string)"
                },
                {
                    "name": "headers",
                    "description": "HTTP headers.",
                    "type": "(Object|function(Object))="
                },
                {
                    "name": "keys",
                    "description": "Array of keys to assign to regex matches in request url described above.",
                    "type": "(Array)="
                }
            ],
            "return": {
                "description": "Returns an object with `respond` method that controls how a matched\nrequest is handled. You can save this object for later use and invoke `respond` again in\norder to change how a matched request is handled.",
                "type": "RequestHandler"
            },
            "class": "",
            "module": "ngMessages"
        },
        {
            "file": "web\\bower_components\\angular-mocks\\angular-mocks.js",
            "line": 1469,
            "ngdoc": "method",
            "name": "$httpBackend#whenHEAD",
            "description": "Creates a new backend definition for HEAD requests. For more info see `when()`.",
            "params": [
                {
                    "name": "url",
                    "description": "HTTP url or function that receives a url\n  and returns true if the url matches the current definition.",
                    "type": "String|RegExp|function(string)"
                },
                {
                    "name": "headers",
                    "description": "HTTP headers.",
                    "type": "(Object|function(Object))="
                },
                {
                    "name": "keys",
                    "description": "Array of keys to assign to regex matches in request url described above.",
                    "type": "(Array)="
                }
            ],
            "return": {
                "description": "Returns an object with `respond` method that controls how a matched\nrequest is handled. You can save this object for later use and invoke `respond` again in\norder to change how a matched request is handled.",
                "type": "RequestHandler"
            },
            "class": "",
            "module": "ngMessages"
        },
        {
            "file": "web\\bower_components\\angular-mocks\\angular-mocks.js",
            "line": 1484,
            "ngdoc": "method",
            "name": "$httpBackend#whenDELETE",
            "description": "Creates a new backend definition for DELETE requests. For more info see `when()`.",
            "params": [
                {
                    "name": "url",
                    "description": "HTTP url or function that receives a url\n  and returns true if the url matches the current definition.",
                    "type": "String|RegExp|function(string)"
                },
                {
                    "name": "headers",
                    "description": "HTTP headers.",
                    "type": "(Object|function(Object))="
                },
                {
                    "name": "keys",
                    "description": "Array of keys to assign to regex matches in request url described above.",
                    "type": "(Array)="
                }
            ],
            "return": {
                "description": "Returns an object with `respond` method that controls how a matched\nrequest is handled. You can save this object for later use and invoke `respond` again in\norder to change how a matched request is handled.",
                "type": "RequestHandler"
            },
            "class": "",
            "module": "ngMessages"
        },
        {
            "file": "web\\bower_components\\angular-mocks\\angular-mocks.js",
            "line": 1499,
            "ngdoc": "method",
            "name": "$httpBackend#whenPOST",
            "description": "Creates a new backend definition for POST requests. For more info see `when()`.",
            "params": [
                {
                    "name": "url",
                    "description": "HTTP url or function that receives a url\n  and returns true if the url matches the current definition.",
                    "type": "String|RegExp|function(string)"
                },
                {
                    "name": "data",
                    "description": "HTTP request body or function that receives\n  data string and returns true if the data is as expected.",
                    "type": "(string|RegExp|function(string))="
                },
                {
                    "name": "headers",
                    "description": "HTTP headers.",
                    "type": "(Object|function(Object))="
                },
                {
                    "name": "keys",
                    "description": "Array of keys to assign to regex matches in request url described above.",
                    "type": "(Array)="
                }
            ],
            "return": {
                "description": "Returns an object with `respond` method that controls how a matched\nrequest is handled. You can save this object for later use and invoke `respond` again in\norder to change how a matched request is handled.",
                "type": "RequestHandler"
            },
            "class": "",
            "module": "ngMessages"
        },
        {
            "file": "web\\bower_components\\angular-mocks\\angular-mocks.js",
            "line": 1516,
            "ngdoc": "method",
            "name": "$httpBackend#whenPUT",
            "description": "Creates a new backend definition for PUT requests.  For more info see `when()`.",
            "params": [
                {
                    "name": "url",
                    "description": "HTTP url or function that receives a url\n  and returns true if the url matches the current definition.",
                    "type": "String|RegExp|function(string)"
                },
                {
                    "name": "data",
                    "description": "HTTP request body or function that receives\n  data string and returns true if the data is as expected.",
                    "type": "(string|RegExp|function(string))="
                },
                {
                    "name": "headers",
                    "description": "HTTP headers.",
                    "type": "(Object|function(Object))="
                },
                {
                    "name": "keys",
                    "description": "Array of keys to assign to regex matches in request url described above.",
                    "type": "(Array)="
                }
            ],
            "return": {
                "description": "Returns an object with `respond` method that controls how a matched\nrequest is handled. You can save this object for later use and invoke `respond` again in\norder to change how a matched request is handled.",
                "type": "RequestHandler"
            },
            "class": "",
            "module": "ngMessages"
        },
        {
            "file": "web\\bower_components\\angular-mocks\\angular-mocks.js",
            "line": 1533,
            "ngdoc": "method",
            "name": "$httpBackend#whenJSONP",
            "description": "Creates a new backend definition for JSONP requests. For more info see `when()`.",
            "params": [
                {
                    "name": "url",
                    "description": "HTTP url or function that receives a url\n  and returns true if the url matches the current definition.",
                    "type": "String|RegExp|function(string)"
                },
                {
                    "name": "keys",
                    "description": "Array of keys to assign to regex matches in request url described above.",
                    "type": "(Array)="
                }
            ],
            "return": {
                "description": "Returns an object with `respond` method that controls how a matched\nrequest is handled. You can save this object for later use and invoke `respond` again in\norder to change how a matched request is handled.",
                "type": "RequestHandler"
            },
            "class": "",
            "module": "ngMessages"
        },
        {
            "file": "web\\bower_components\\angular-mocks\\angular-mocks.js",
            "line": 1548,
            "ngdoc": "method",
            "name": "$httpBackend#whenRoute",
            "description": "Creates a new backend definition that compares only with the requested route.",
            "params": [
                {
                    "name": "method",
                    "description": "HTTP method.",
                    "type": "String"
                },
                {
                    "name": "url",
                    "description": "HTTP url string that supports colon param matching.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns an object with `respond` method that controls how a matched\nrequest is handled. You can save this object for later use and invoke `respond` again in\norder to change how a matched request is handled. See #when for more info.",
                "type": "RequestHandler"
            },
            "class": "",
            "module": "ngMessages"
        },
        {
            "file": "web\\bower_components\\angular-mocks\\angular-mocks.js",
            "line": 1595,
            "ngdoc": "method",
            "name": "$httpBackend#expect",
            "description": "Creates a new request expectation.",
            "params": [
                {
                    "name": "method",
                    "description": "HTTP method.",
                    "type": "String"
                },
                {
                    "name": "url",
                    "description": "HTTP url or function that receives a url\n  and returns true if the url matches the current definition.",
                    "type": "String|RegExp|function(string)"
                },
                {
                    "name": "data",
                    "description": "HTTP request body or function that\n receives data string and returns true if the data is as expected, or Object if request body\n is in JSON format.",
                    "type": "(string|RegExp|function(string)|Object)="
                },
                {
                    "name": "headers",
                    "description": "HTTP headers or function that receives http header\n  object and returns true if the headers match the current expectation.",
                    "type": "(Object|function(Object))="
                },
                {
                    "name": "keys",
                    "description": "Array of keys to assign to regex matches in request url described above.",
                    "type": "(Array)="
                }
            ],
            "return": {
                "description": "Returns an object with `respond` method that controls how a matched\n request is handled. You can save this object for later use and invoke `respond` again in\n order to change how a matched request is handled.\n\n - respond –\n   `{function([status,] data[, headers, statusText])\n   | function(function(method, url, data, headers, params)}`\n   – The respond method takes a set of static data to be returned or a function that can\n   return an array containing response status (number), response data (string), response\n   headers (Object), and the text for the status (string). The respond method returns the\n   `requestHandler` object for possible overrides.",
                "type": "RequestHandler"
            },
            "class": "",
            "module": "ngMessages"
        },
        {
            "file": "web\\bower_components\\angular-mocks\\angular-mocks.js",
            "line": 1635,
            "ngdoc": "method",
            "name": "$httpBackend#expectGET",
            "description": "Creates a new request expectation for GET requests. For more info see `expect()`.",
            "params": [
                {
                    "name": "url",
                    "description": "HTTP url or function that receives a url\n  and returns true if the url matches the current definition.",
                    "type": "String|RegExp|function(string)"
                },
                {
                    "name": "headers",
                    "description": "HTTP headers.",
                    "type": "Object="
                },
                {
                    "name": "keys",
                    "description": "Array of keys to assign to regex matches in request url described above.",
                    "type": "(Array)="
                }
            ],
            "return": {
                "description": "Returns an object with `respond` method that controls how a matched\nrequest is handled. You can save this object for later use and invoke `respond` again in\norder to change how a matched request is handled. See #expect for more info.",
                "type": "RequestHandler"
            },
            "class": "",
            "module": "ngMessages"
        },
        {
            "file": "web\\bower_components\\angular-mocks\\angular-mocks.js",
            "line": 1650,
            "ngdoc": "method",
            "name": "$httpBackend#expectHEAD",
            "description": "Creates a new request expectation for HEAD requests. For more info see `expect()`.",
            "params": [
                {
                    "name": "url",
                    "description": "HTTP url or function that receives a url\n  and returns true if the url matches the current definition.",
                    "type": "String|RegExp|function(string)"
                },
                {
                    "name": "headers",
                    "description": "HTTP headers.",
                    "type": "Object="
                },
                {
                    "name": "keys",
                    "description": "Array of keys to assign to regex matches in request url described above.",
                    "type": "(Array)="
                }
            ],
            "return": {
                "description": "Returns an object with `respond` method that controls how a matched\n  request is handled. You can save this object for later use and invoke `respond` again in\n  order to change how a matched request is handled.",
                "type": "RequestHandler"
            },
            "class": "",
            "module": "ngMessages"
        },
        {
            "file": "web\\bower_components\\angular-mocks\\angular-mocks.js",
            "line": 1665,
            "ngdoc": "method",
            "name": "$httpBackend#expectDELETE",
            "description": "Creates a new request expectation for DELETE requests. For more info see `expect()`.",
            "params": [
                {
                    "name": "url",
                    "description": "HTTP url or function that receives a url\n  and returns true if the url matches the current definition.",
                    "type": "String|RegExp|function(string)"
                },
                {
                    "name": "headers",
                    "description": "HTTP headers.",
                    "type": "Object="
                },
                {
                    "name": "keys",
                    "description": "Array of keys to assign to regex matches in request url described above.",
                    "type": "(Array)="
                }
            ],
            "return": {
                "description": "Returns an object with `respond` method that controls how a matched\n  request is handled. You can save this object for later use and invoke `respond` again in\n  order to change how a matched request is handled.",
                "type": "RequestHandler"
            },
            "class": "",
            "module": "ngMessages"
        },
        {
            "file": "web\\bower_components\\angular-mocks\\angular-mocks.js",
            "line": 1680,
            "ngdoc": "method",
            "name": "$httpBackend#expectPOST",
            "description": "Creates a new request expectation for POST requests. For more info see `expect()`.",
            "params": [
                {
                    "name": "url",
                    "description": "HTTP url or function that receives a url\n  and returns true if the url matches the current definition.",
                    "type": "String|RegExp|function(string)"
                },
                {
                    "name": "data",
                    "description": "HTTP request body or function that\n receives data string and returns true if the data is as expected, or Object if request body\n is in JSON format.",
                    "type": "(string|RegExp|function(string)|Object)="
                },
                {
                    "name": "headers",
                    "description": "HTTP headers.",
                    "type": "Object="
                },
                {
                    "name": "keys",
                    "description": "Array of keys to assign to regex matches in request url described above.",
                    "type": "(Array)="
                }
            ],
            "return": {
                "description": "Returns an object with `respond` method that controls how a matched\n  request is handled. You can save this object for later use and invoke `respond` again in\n  order to change how a matched request is handled.",
                "type": "RequestHandler"
            },
            "class": "",
            "module": "ngMessages"
        },
        {
            "file": "web\\bower_components\\angular-mocks\\angular-mocks.js",
            "line": 1698,
            "ngdoc": "method",
            "name": "$httpBackend#expectPUT",
            "description": "Creates a new request expectation for PUT requests. For more info see `expect()`.",
            "params": [
                {
                    "name": "url",
                    "description": "HTTP url or function that receives a url\n  and returns true if the url matches the current definition.",
                    "type": "String|RegExp|function(string)"
                },
                {
                    "name": "data",
                    "description": "HTTP request body or function that\n receives data string and returns true if the data is as expected, or Object if request body\n is in JSON format.",
                    "type": "(string|RegExp|function(string)|Object)="
                },
                {
                    "name": "headers",
                    "description": "HTTP headers.",
                    "type": "Object="
                },
                {
                    "name": "keys",
                    "description": "Array of keys to assign to regex matches in request url described above.",
                    "type": "(Array)="
                }
            ],
            "return": {
                "description": "Returns an object with `respond` method that controls how a matched\n  request is handled. You can save this object for later use and invoke `respond` again in\n  order to change how a matched request is handled.",
                "type": "RequestHandler"
            },
            "class": "",
            "module": "ngMessages"
        },
        {
            "file": "web\\bower_components\\angular-mocks\\angular-mocks.js",
            "line": 1716,
            "ngdoc": "method",
            "name": "$httpBackend#expectPATCH",
            "description": "Creates a new request expectation for PATCH requests. For more info see `expect()`.",
            "params": [
                {
                    "name": "url",
                    "description": "HTTP url or function that receives a url\n  and returns true if the url matches the current definition.",
                    "type": "String|RegExp|function(string)"
                },
                {
                    "name": "data",
                    "description": "HTTP request body or function that\n receives data string and returns true if the data is as expected, or Object if request body\n is in JSON format.",
                    "type": "(string|RegExp|function(string)|Object)="
                },
                {
                    "name": "headers",
                    "description": "HTTP headers.",
                    "type": "Object="
                },
                {
                    "name": "keys",
                    "description": "Array of keys to assign to regex matches in request url described above.",
                    "type": "(Array)="
                }
            ],
            "return": {
                "description": "Returns an object with `respond` method that controls how a matched\n  request is handled. You can save this object for later use and invoke `respond` again in\n  order to change how a matched request is handled.",
                "type": "RequestHandler"
            },
            "class": "",
            "module": "ngMessages"
        },
        {
            "file": "web\\bower_components\\angular-mocks\\angular-mocks.js",
            "line": 1734,
            "ngdoc": "method",
            "name": "$httpBackend#expectJSONP",
            "description": "Creates a new request expectation for JSONP requests. For more info see `expect()`.",
            "params": [
                {
                    "name": "url",
                    "description": "HTTP url or function that receives an url\n  and returns true if the url matches the current definition.",
                    "type": "String|RegExp|function(string)"
                },
                {
                    "name": "keys",
                    "description": "Array of keys to assign to regex matches in request url described above.",
                    "type": "(Array)="
                }
            ],
            "return": {
                "description": "Returns an object with `respond` method that controls how a matched\n  request is handled. You can save this object for later use and invoke `respond` again in\n  order to change how a matched request is handled.",
                "type": "RequestHandler"
            },
            "class": "",
            "module": "ngMessages"
        },
        {
            "file": "web\\bower_components\\angular-mocks\\angular-mocks.js",
            "line": 1749,
            "ngdoc": "method",
            "name": "$httpBackend#expectRoute",
            "description": "Creates a new request expectation that compares only with the requested route.",
            "params": [
                {
                    "name": "method",
                    "description": "HTTP method.",
                    "type": "String"
                },
                {
                    "name": "url",
                    "description": "HTTP url string that supports colon param matching.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns an object with `respond` method that controls how a matched\nrequest is handled. You can save this object for later use and invoke `respond` again in\norder to change how a matched request is handled. See #expect for more info.",
                "type": "RequestHandler"
            },
            "class": "",
            "module": "ngMessages"
        },
        {
            "file": "web\\bower_components\\angular-mocks\\angular-mocks.js",
            "line": 1767,
            "ngdoc": "method",
            "name": "$httpBackend#flush",
            "description": "Flushes all pending requests using the trained responses.",
            "params": [
                {
                    "name": "count",
                    "description": "Number of responses to flush (in the order they arrived). If undefined,\n  all pending requests will be flushed. If there are no pending requests when the flush method\n  is called an exception is thrown (as this typically a sign of programming error).",
                    "type": "Number="
                }
            ],
            "class": "",
            "module": "ngMessages"
        },
        {
            "file": "web\\bower_components\\angular-mocks\\angular-mocks.js",
            "line": 1795,
            "ngdoc": "method",
            "name": "$httpBackend#verifyNoOutstandingExpectation",
            "description": "Verifies that all of the requests defined via the `expect` api were made. If any of the\nrequests were not made, verifyNoOutstandingExpectation throws an exception.\n\nTypically, you would call this method following each test case that asserts requests using an\n\"afterEach\" clause.\n\n```js\n  afterEach($httpBackend.verifyNoOutstandingExpectation);\n```",
            "class": "",
            "module": "ngMessages"
        },
        {
            "file": "web\\bower_components\\angular-mocks\\angular-mocks.js",
            "line": 1817,
            "ngdoc": "method",
            "name": "$httpBackend#verifyNoOutstandingRequest",
            "description": "Verifies that there are no outstanding requests that need to be flushed.\n\nTypically, you would call this method following each test case that asserts requests using an\n\"afterEach\" clause.\n\n```js\n  afterEach($httpBackend.verifyNoOutstandingRequest);\n```",
            "class": "",
            "module": "ngMessages"
        },
        {
            "file": "web\\bower_components\\angular-mocks\\angular-mocks.js",
            "line": 1837,
            "ngdoc": "method",
            "name": "$httpBackend#resetExpectations",
            "description": "Resets all request expectations, but preserves all backend definitions. Typically, you would\ncall resetExpectations during a multiple-phase test when you want to reuse the same instance of\n$httpBackend mock.",
            "class": "",
            "module": "ngMessages"
        },
        {
            "file": "web\\bower_components\\angular-mocks\\angular-mocks.js",
            "line": 2017,
            "ngdoc": "service",
            "name": "$timeout",
            "description": "This service is just a simple decorator for {@link ng.$timeout $timeout} service\nthat adds a \"flush\" and \"verifyNoPendingTasks\" methods.",
            "class": "",
            "module": "ngMessages"
        },
        {
            "file": "web\\bower_components\\angular-mocks\\angular-mocks.js",
            "line": 2028,
            "ngdoc": "method",
            "name": "$timeout#flush",
            "description": "Flushes the queue of pending tasks.",
            "params": [
                {
                    "name": "delay",
                    "description": "maximum timeout amount to flush up until",
                    "type": "Number="
                }
            ],
            "class": "",
            "module": "ngMessages"
        },
        {
            "file": "web\\bower_components\\angular-mocks\\angular-mocks.js",
            "line": 2041,
            "ngdoc": "method",
            "name": "$timeout#verifyNoPendingTasks",
            "description": "Verifies that there are no pending tasks that need to be flushed.",
            "class": "",
            "module": "ngMessages"
        },
        {
            "file": "web\\bower_components\\angular-mocks\\angular-mocks.js",
            "line": 2095,
            "class": "",
            "module": "ngMessages"
        },
        {
            "file": "web\\bower_components\\angular-mocks\\angular-mocks.js",
            "line": 2104,
            "ngdoc": "service",
            "name": "$controller",
            "description": "A decorator for {@link ng.$controller} with additional `bindings` parameter, useful when testing\ncontrollers of directives that use {@link $compile#-bindtocontroller- `bindToController`}.\n\n\n## Example\n\n```js\n\n// Directive definition ...\n\nmyMod.directive('myDirective', {\n  controller: 'MyDirectiveController',\n  bindToController: {\n    name: '@'\n  }\n});\n\n\n// Controller definition ...\n\nmyMod.controller('MyDirectiveController', ['$log', function($log) {\n  $log.info(this.name);\n})];\n\n\n// In a test ...\n\ndescribe('myDirectiveController', function() {\n  it('should write the bound name to the log', inject(function($controller, $log) {\n    var ctrl = $controller('MyDirectiveController', { /* no locals &#42;/ }, { name: 'Clark Kent' });\n    expect(ctrl.name).toEqual('Clark Kent');\n    expect($log.info.logs).toEqual(['Clark Kent']);\n  });\n});\n\n```",
            "params": [
                {
                    "name": "constructor",
                    "description": "If called with a function then it's considered to be the\n   controller constructor function. Otherwise it's considered to be a string which is used\n   to retrieve the controller constructor using the following steps:\n\n   * check if a controller with given name is registered via `$controllerProvider`\n   * check if evaluating the string on the current scope returns a constructor\n   * if $controllerProvider#allowGlobals, check `window[constructor]` on the global\n     `window` object (not recommended)\n\n   The string can use the `controller as property` syntax, where the controller instance is published\n   as the specified property on the `scope`; the `scope` must be injected into `locals` param for this\n   to work correctly.",
                    "type": "Function|string"
                },
                {
                    "name": "locals",
                    "description": "Injection locals for Controller.",
                    "type": "Object"
                },
                {
                    "name": "bindings",
                    "description": "Properties to add to the controller before invoking the constructor. This is used\n                          to simulate the `bindToController` feature and simplify certain kinds of tests.",
                    "type": "Object="
                }
            ],
            "return": {
                "description": "Instance of given controller.",
                "type": "Object"
            },
            "class": "",
            "module": "ngMessages"
        },
        {
            "file": "web\\bower_components\\angular-mocks\\angular-mocks.js",
            "line": 2174,
            "ngdoc": "service",
            "name": "$componentController",
            "description": "A service that can be used to create instances of component controllers.\n<div class=\"alert alert-info\">\nBe aware that the controller will be instantiated and attached to the scope as specified in\nthe component definition object. That means that you must always provide a `$scope` object\nin the `locals` param.\n</div>",
            "params": [
                {
                    "name": "componentName",
                    "description": "the name of the component whose controller we want to instantiate",
                    "type": "String"
                },
                {
                    "name": "locals",
                    "description": "Injection locals for Controller.",
                    "type": "Object"
                },
                {
                    "name": "bindings",
                    "description": "Properties to add to the controller before invoking the constructor. This is used\n                          to simulate the `bindToController` feature and simplify certain kinds of tests.",
                    "type": "Object="
                },
                {
                    "name": "ident",
                    "description": "Override the property name to use when attaching the controller to the scope.",
                    "type": "String="
                }
            ],
            "return": {
                "description": "Instance of requested controller.",
                "type": "Object"
            },
            "class": "",
            "module": "ngMessages"
        },
        {
            "file": "web\\bower_components\\angular-mocks\\angular-mocks.js",
            "line": 2218,
            "ngdoc": "module",
            "name": "ngMock",
            "packagename": "angular-mocks",
            "description": "# ngMock\n\nThe `ngMock` module provides support to inject and mock Angular services into unit tests.\nIn addition, ngMock also extends various core ng services such that they can be\ninspected and controlled in a synchronous manner within test code.\n\n\n<div doc-module-components=\"ngMock\"></div>",
            "class": "",
            "module": "ngMessages"
        },
        {
            "file": "web\\bower_components\\angular-mocks\\angular-mocks.js",
            "line": 2628,
            "ngdoc": "function",
            "name": "angular.mock.module",
            "description": "*NOTE*: This function is also published on window for easy access.<br>\n*NOTE*: This function is declared ONLY WHEN running tests with jasmine or mocha\n\nThis function registers a module configuration code. It collects the configuration information\nwhich will be used when the injector is created by {@link angular.mock.inject inject}.\n\nSee {@link angular.mock.inject inject} for usage example",
            "params": [
                {
                    "name": "fns",
                    "description": "any number of modules which are represented as string\n       aliases or as anonymous module initialization functions. The modules are used to\n       configure the injector. The 'ng' and 'ngMock' modules are automatically loaded. If an\n       object literal is passed each key-value pair will be registered on the module via\n       {@link auto.$provide $provide}.value, the key being the string name (or token) to associate\n       with the value on the injector.",
                    "type": "...(string|Function|Object)"
                }
            ],
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-mocks\\angular-mocks.js",
            "line": 2677,
            "ngdoc": "function",
            "name": "angular.mock.inject",
            "description": "*NOTE*: This function is also published on window for easy access.<br>\n*NOTE*: This function is declared ONLY WHEN running tests with jasmine or mocha\n\nThe inject function wraps a function into an injectable function. The inject() creates new\ninstance of {@link auto.$injector $injector} per test, which is then used for\nresolving references.\n\n\n## Resolving References (Underscore Wrapping)\nOften, we would like to inject a reference once, in a `beforeEach()` block and reuse this\nin multiple `it()` clauses. To be able to do this we must assign the reference to a variable\nthat is declared in the scope of the `describe()` block. Since we would, most likely, want\nthe variable to have the same name of the reference we have a problem, since the parameter\nto the `inject()` function would hide the outer variable.\n\nTo help with this, the injected parameters can, optionally, be enclosed with underscores.\nThese are ignored by the injector when the reference name is resolved.\n\nFor example, the parameter `_myService_` would be resolved as the reference `myService`.\nSince it is available in the function body as _myService_, we can then assign it to a variable\ndefined in an outer scope.\n\n```\n// Defined out reference variable outside\nvar myService;\n\n// Wrap the parameter in underscores\nbeforeEach( inject( function(_myService_){\n  myService = _myService_;\n}));\n\n// Use myService in a series of tests.\nit('makes use of myService', function() {\n  myService.doStuff();\n});\n\n```\n\nSee also {@link angular.mock.module angular.mock.module}\n\n## Example\nExample of what a typical jasmine tests looks like with the inject method.\n```js\n\n  angular.module('myApplicationModule', [])\n      .value('mode', 'app')\n      .value('version', 'v1.0.1');\n\n\n  describe('MyApp', function() {\n\n    // You need to load modules that you want to test,\n    // it loads only the \"ng\" module by default.\n    beforeEach(module('myApplicationModule'));\n\n\n    // inject() is used to inject arguments of all given functions\n    it('should provide a version', inject(function(mode, version) {\n      expect(version).toEqual('v1.0.1');\n      expect(mode).toEqual('app');\n    }));\n\n\n    // The inject and module method can also be used inside of the it or beforeEach\n    it('should override a version and test the new version is injected', function() {\n      // module() takes functions or strings (module aliases)\n      module(function($provide) {\n        $provide.value('version', 'overridden'); // override version here\n      });\n\n      inject(function(version) {\n        expect(version).toEqual('overridden');\n      });\n    });\n  });\n\n```",
            "params": [
                {
                    "name": "fns",
                    "description": "any number of functions which will be injected using the injector.",
                    "type": "...Function"
                }
            ],
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js",
            "line": 1,
            "description": "State-based routing for AngularJS",
            "version": "v0.2.18",
            "link": "http://angular-ui.github.com/",
            "license": "MIT License, http://www.opensource.org/licenses/MIT",
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js",
            "line": 43,
            "description": "Finds the common ancestor path between two states.",
            "params": [
                {
                    "name": "first",
                    "description": "The first state.",
                    "type": "Object"
                },
                {
                    "name": "second",
                    "description": "The second state.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns an array of state names in descending order, not including the root.",
                "type": "Array"
            },
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js",
            "line": 60,
            "description": "IE8-safe wrapper for `Object.keys()`.",
            "params": [
                {
                    "name": "object",
                    "description": "A JavaScript object.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the keys of the object as an array.",
                "type": "Array"
            },
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js",
            "line": 78,
            "description": "IE8-safe wrapper for `Array.prototype.indexOf()`.",
            "params": [
                {
                    "name": "array",
                    "description": "A JavaScript array.",
                    "type": "Array"
                },
                {
                    "name": "value",
                    "description": "A value to search the array for.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns the array index value of `value`, or `-1` if not present.",
                "type": "Number"
            },
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js",
            "line": 100,
            "description": "Merges a set of parameters with all parameters inherited between the common parents of the\ncurrent state and a given destination state.",
            "params": [
                {
                    "name": "currentParams",
                    "description": "The value of the current state parameters ($stateParams).",
                    "type": "Object"
                },
                {
                    "name": "newParams",
                    "description": "The set of parameters which will be composited with inherited params.",
                    "type": "Object"
                },
                {
                    "name": "$current",
                    "description": "Internal definition of object representing the current state.",
                    "type": "Object"
                },
                {
                    "name": "$to",
                    "description": "Internal definition of object representing state to transition to.",
                    "type": "Object"
                }
            ],
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js",
            "line": 126,
            "description": "Performs a non-strict comparison of the subset of two objects, defined by a list of keys.",
            "params": [
                {
                    "name": "a",
                    "description": "The first object.",
                    "type": "Object"
                },
                {
                    "name": "b",
                    "description": "The second object.",
                    "type": "Object"
                },
                {
                    "name": "keys",
                    "description": "The list of keys within each object to compare. If the list is empty or not specified,\n                    it defaults to the list of keys in `a`.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "Returns `true` if the keys match, otherwise `false`.",
                "type": "Boolean"
            },
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js",
            "line": 148,
            "description": "Returns the subset of an object, based on a list of keys.",
            "params": [
                {
                    "name": "keys",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "values",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns a subset of `values`.",
                "type": "Boolean"
            },
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js",
            "line": 225,
            "ngdoc": "overview",
            "name": "ui.router.util",
            "description": "# ui.router.util sub-module\n\nThis module is a dependency of other sub-modules. Do not include this module as a dependency\nin your angular app (use {@link ui.router} module instead).",
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js",
            "line": 238,
            "ngdoc": "overview",
            "name": "ui.router.router",
            "requires": [
                "ui.router.util"
            ],
            "description": "# ui.router.router sub-module\n\nThis module is a dependency of other sub-modules. Do not include this module as a dependency\nin your angular app (use {@link ui.router} module instead).",
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js",
            "line": 252,
            "ngdoc": "overview",
            "name": "ui.router.state",
            "requires": [
                "ui.router.router",
                "ui.router.util"
            ],
            "description": "# ui.router.state sub-module\n\nThis module is a dependency of the main ui.router module. Do not include this module as a dependency\nin your angular app (use {@link ui.router} module instead).",
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js",
            "line": 268,
            "ngdoc": "overview",
            "name": "ui.router",
            "requires": [
                "ui.router.state"
            ],
            "description": "# ui.router\n\n## The main module for ui.router \nThere are several sub-modules included with the ui.router module, however only this module is needed\nas a dependency within your angular app. The other modules are for organization purposes. \n\nThe modules are:\n* ui.router - the main \"umbrella\" module\n* ui.router.router - \n\n*You'll need to include **only** this module as the dependency within your angular app.*\n\n<pre>\n<!doctype html>\n<html ng-app=\"myApp\">\n<head>\n  <script src=\"js/angular.js\"></script>\n  <!-- Include the ui-router script -->\n  <script src=\"js/angular-ui-router.min.js\"></script>\n  <script>\n    // ...and add 'ui.router' as a dependency\n    var myApp = angular.module('myApp', ['ui.router']);\n  </script>\n</head>\n<body>\n</body>\n</html>\n</pre>",
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js",
            "line": 308,
            "ngdoc": "object",
            "name": "ui.router.util.$resolve",
            "requires": [
                "$q",
                "$injector"
            ],
            "description": "Manages resolution of (acyclic) graphs of promises.",
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js",
            "line": 329,
            "ngdoc": "function",
            "name": "ui.router.util.$resolve#study",
            "methodof": "ui.router.util.$resolve",
            "description": "Studies a set of invocables that are likely to be used multiple times.\n<pre>\n$resolve.study(invocables)(locals, parent, self)\n</pre>\nis equivalent to\n<pre>\n$resolve.resolve(invocables, locals, parent, self)\n</pre>\nbut the former is more efficient (in fact `resolve` just calls `study` \ninternally).",
            "params": [
                {
                    "name": "invocables",
                    "description": "Invocable objects",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "a function to pass in locals, parent and self",
                "type": "Function"
            },
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js",
            "line": 492,
            "ngdoc": "function",
            "name": "ui.router.util.$resolve#resolve",
            "methodof": "ui.router.util.$resolve",
            "description": "Resolves a set of invocables. An invocable is a function to be invoked via \n`$injector.invoke()`, and can have an arbitrary number of dependencies. \nAn invocable can either return a value directly,\nor a `$q` promise. If a promise is returned it will be resolved and the \nresulting value will be used instead. Dependencies of invocables are resolved \n(in this order of precedence)\n\n- from the specified `locals`\n- from another invocable that is part of this `$resolve` call\n- from an invocable that is inherited from a `parent` call to `$resolve` \n  (or recursively\n- from any ancestor `$resolve` of that parent).\n\nThe return value of `$resolve` is a promise for an object that contains \n(in this order of precedence)\n\n- any `locals` (if specified)\n- the resolved return values of all injectables\n- any values inherited from a `parent` call to `$resolve` (if specified)\n\nThe promise will resolve after the `parent` promise (if any) and all promises \nreturned by injectables have been resolved. If any invocable \n(or `$injector.invoke`) throws an exception, or if a promise returned by an \ninvocable is rejected, the `$resolve` promise is immediately rejected with the \nsame error. A rejection of a `parent` promise (if specified) will likewise be \npropagated immediately. Once the `$resolve` promise has been rejected, no \nfurther invocables will be called.\n\nCyclic dependencies between invocables are not permitted and will cause `$resolve`\nto throw an error. As a special case, an injectable can depend on a parameter \nwith the same name as the injectable, which will be fulfilled from the `parent` \ninjectable of the same name. This allows inherited values to be decorated. \nNote that in this case any other injectable in the same `$resolve` with the same\ndependency would see the decorated value, not the inherited value.\n\nNote that missing dependencies -- unlike cyclic dependencies -- will cause an \n(asynchronous) rejection of the `$resolve` promise rather than a (synchronous) \nexception.\n\nInvocables are invoked eagerly as soon as all dependencies are available. \nThis is true even for dependencies inherited from a `parent` call to `$resolve`.\n\nAs a special case, an invocable can be a string, in which case it is taken to \nbe a service name to be passed to `$injector.get()`. This is supported primarily \nfor backwards-compatibility with the `resolve` property of `$routeProvider` \nroutes.",
            "params": [
                {
                    "name": "invocables",
                    "description": "functions to invoke or \n`$injector` services to fetch.",
                    "type": "Object"
                },
                {
                    "name": "locals",
                    "description": "values to make available to the injectables",
                    "type": "Object"
                },
                {
                    "name": "parent",
                    "description": "a promise returned by another call to `$resolve`.",
                    "type": "Object"
                },
                {
                    "name": "self",
                    "description": "the `this` for the invoked methods",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Promise for an object that contains the resolved return value\nof all invocables, as well as any inherited and local values.",
                "type": "Object"
            },
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js",
            "line": 561,
            "ngdoc": "object",
            "name": "ui.router.util.$templateFactory",
            "requires": [
                "$http",
                "$templateCache",
                "$injector"
            ],
            "description": "Service. Manages loading of templates.",
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js",
            "line": 575,
            "ngdoc": "function",
            "name": "ui.router.util.$templateFactory#fromConfig",
            "methodof": "ui.router.util.$templateFactory",
            "description": "Creates a template from a configuration object.",
            "params": [
                {
                    "name": "config",
                    "description": "Configuration object for which to load a template. \nThe following properties are search in the specified order, and the first one \nthat is defined is used to create the template:",
                    "type": "Object",
                    "props": [
                        {
                            "name": "template",
                            "description": "html string template or function to \nload via {@link ui.router.util.$templateFactory#fromString fromString}.",
                            "type": "String|object"
                        },
                        {
                            "name": "templateUrl",
                            "description": "url to load or a function returning \nthe url to load via {@link ui.router.util.$templateFactory#fromUrl fromUrl}.",
                            "type": "String|object"
                        },
                        {
                            "name": "templateProvider",
                            "description": "function to invoke via \n{@link ui.router.util.$templateFactory#fromProvider fromProvider}.",
                            "type": "Function"
                        }
                    ]
                },
                {
                    "name": "params",
                    "description": "Parameters to pass to the template function.",
                    "type": "Object"
                },
                {
                    "name": "locals",
                    "description": "Locals to pass to `invoke` if the template is loaded \nvia a `templateProvider`. Defaults to `{ params: params }`.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "The template html as a string, or a promise for \nthat string,or `null` if no template is configured.",
                "type": "String|object"
            },
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js",
            "line": 609,
            "ngdoc": "function",
            "name": "ui.router.util.$templateFactory#fromString",
            "methodof": "ui.router.util.$templateFactory",
            "description": "Creates a template from a string or a function returning a string.",
            "params": [
                {
                    "name": "template",
                    "description": "html template as a string or function that \nreturns an html template as a string.",
                    "type": "String|object"
                },
                {
                    "name": "params",
                    "description": "Parameters to pass to the template function.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "The template html as a string, or a promise for that \nstring.",
                "type": "String|object"
            },
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js",
            "line": 628,
            "ngdoc": "function",
            "name": "ui.router.util.$templateFactory#fromUrl",
            "methodof": "ui.router.util.$templateFactory",
            "description": "Loads a template from the a URL via `$http` and `$templateCache`.",
            "params": [
                {
                    "name": "url",
                    "description": "url of the template to load, or a function \nthat returns a url.",
                    "type": "String|Function"
                },
                {
                    "name": "params",
                    "description": "Parameters to pass to the url function.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "The template html as a string, or a promise \nfor that string.",
                "type": "string|Promise.<string>"
            },
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js",
            "line": 650,
            "ngdoc": "function",
            "name": "ui.router.util.$templateFactory#fromProvider",
            "methodof": "ui.router.util.$templateFactory",
            "description": "Creates a template by invoking an injectable provider function.",
            "params": [
                {
                    "name": "provider",
                    "description": "Function to invoke via `$injector.invoke`",
                    "type": "Function"
                },
                {
                    "name": "params",
                    "description": "Parameters for the template.",
                    "type": "Object"
                },
                {
                    "name": "locals",
                    "description": "Locals to pass to `invoke`. Defaults to \n`{ params: params }`.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "The template html as a string, or a promise \nfor that string.",
                "type": "string|Promise.<string>"
            },
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js",
            "line": 674,
            "ngdoc": "object",
            "name": "{string} regex  The constructed regex that will be used to match against the url when\n  it is time to determine which url will match.",
            "description": "Matches URLs against patterns and extracts named parameters from the path or the search\npart of the URL. A URL pattern consists of a path pattern, optionally followed by '?' and a list\nof search parameters. Multiple search parameter names are separated by '&'. Search parameters\ndo not influence whether or not a URL is matched, but their values are passed through into\nthe matched parameters returned by {@link ui.router.util.type:UrlMatcher#methods_exec exec}.\n\nPath parameter placeholders can be specified using simple colon/catch-all syntax or curly brace\nsyntax, which optionally allows a regular expression for the parameter to be specified:\n\n* `':'` name - colon placeholder\n* `'*'` name - catch-all placeholder\n* `'{' name '}'` - curly placeholder\n* `'{' name ':' regexp|type '}'` - curly placeholder with regexp or type name. Should the\n  regexp itself contain curly braces, they must be in matched pairs or escaped with a backslash.\n\nParameter names may contain only word characters (latin letters, digits, and underscore) and\nmust be unique within the pattern (across both path and search parameters). For colon\nplaceholders or curly placeholders without an explicit regexp, a path parameter matches any\nnumber of characters other than '/'. For catch-all placeholders the path parameter matches\nany number of characters.\n\nExamples:\n\n* `'/hello/'` - Matches only if the path is exactly '/hello/'. There is no special treatment for\n  trailing slashes, and patterns have to match the entire path, not just a prefix.\n* `'/user/:id'` - Matches '/user/bob' or '/user/1234!!!' or even '/user/' but not '/user' or\n  '/user/bob/details'. The second path segment will be captured as the parameter 'id'.\n* `'/user/{id}'` - Same as the previous example, but using curly brace syntax.\n* `'/user/{id:[^/]*}'` - Same as the previous example.\n* `'/user/{id:[0-9a-fA-F]{1,8}}'` - Similar to the previous example, but only matches if the id\n  parameter consists of 1 to 8 hex digits.\n* `'/files/{path:.*}'` - Matches any URL starting with '/files/' and captures the rest of the\n  path into the parameter 'path'.\n* `'/files/*path'` - ditto.\n* `'/calendar/{start:date}'` - Matches \"/calendar/2014-11-12\" (because the pattern defined\n  in the built-in  `date` Type matches `2014-11-12`) and provides a Date object in $stateParams.start",
            "itemtype": "property",
            "type": "String",
            "return": {
                "description": "New `UrlMatcher` object",
                "type": "Object"
            },
            "class": "",
            "module": "ngMock",
            "subprops": [
                {
                    "name": "pattern",
                    "description": "The pattern to compile into a matcher.",
                    "type": "String"
                },
                {
                    "name": "config",
                    "description": "A configuration object hash:",
                    "type": "Object"
                },
                {
                    "name": "parentMatcher",
                    "description": "Used to concatenate the pattern/config onto\n  an existing UrlMatcher\n\n* `caseInsensitive` - `true` if URL matching should be case insensitive, otherwise `false`, the default value (for backward compatibility) is `false`.\n* `strict` - `false` if matching against a URL with a trailing slash should be treated as equivalent to a URL without a trailing slash, the default value is `true`.",
                    "type": "Object="
                }
            ]
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js",
            "line": 848,
            "ngdoc": "function",
            "name": "ui.router.util.type:UrlMatcher#concat",
            "methodof": "ui.router.util.type:UrlMatcher",
            "description": "Returns a new matcher for a pattern constructed by appending the path part and adding the\nsearch parameters of the specified pattern to this pattern. The current pattern is not\nmodified. This can be understood as creating a pattern for URLs that are relative to (or\nsuffixes of) the current pattern.",
            "example": [
                "\nThe following two matchers are equivalent:\n<pre>\nnew UrlMatcher('/user/{id}?q').concat('/details?date');\nnew UrlMatcher('/user/{id}/details?q&date');\n</pre>"
            ],
            "params": [
                {
                    "name": "pattern",
                    "description": "The pattern to append.",
                    "type": "String"
                },
                {
                    "name": "config",
                    "description": "An object hash of the configuration for the matcher.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "A matcher for the concatenated pattern.",
                "type": "UrlMatcher"
            },
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js",
            "line": 886,
            "ngdoc": "function",
            "name": "ui.router.util.type:UrlMatcher#exec",
            "methodof": "ui.router.util.type:UrlMatcher",
            "description": "Tests the specified path against this matcher, and returns an object containing the captured\nparameter values, or null if the path does not match. The returned object contains the values\nof any search parameters that are mentioned in the pattern, but their value may be null if\nthey are not present in `searchParams`. This means that search parameters are always treated\nas optional.",
            "example": [
                "\n<pre>\nnew UrlMatcher('/user/{id}?q&r').exec('/user/bob', {\n  x: '1', q: 'hello'\n});\n// returns { id: 'bob', q: 'hello', r: null }\n</pre>"
            ],
            "params": [
                {
                    "name": "path",
                    "description": "The URL path to match, e.g. `$location.path()`.",
                    "type": "String"
                },
                {
                    "name": "searchParams",
                    "description": "URL search parameters, e.g. `$location.search()`.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "The captured parameter values.",
                "type": "Object"
            },
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js",
            "line": 958,
            "ngdoc": "function",
            "name": "ui.router.util.type:UrlMatcher#parameters",
            "methodof": "ui.router.util.type:UrlMatcher",
            "description": "Returns the names of all path and search parameters of this pattern in an unspecified order.",
            "return": {
                "description": "An array of parameter names. Must be treated as read-only. If the\n   pattern has no parameters, an empty array is returned.",
                "type": "Array.<string>"
            },
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js",
            "line": 974,
            "ngdoc": "function",
            "name": "ui.router.util.type:UrlMatcher#validates",
            "methodof": "ui.router.util.type:UrlMatcher",
            "description": "Checks an object hash of parameters to validate their correctness according to the parameter\ntypes of this `UrlMatcher`.",
            "params": [
                {
                    "name": "params",
                    "description": "The object hash of parameters to validate.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns `true` if `params` validates, otherwise `false`.",
                "type": "Boolean"
            },
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js",
            "line": 990,
            "ngdoc": "function",
            "name": "ui.router.util.type:UrlMatcher#format",
            "methodof": "ui.router.util.type:UrlMatcher",
            "description": "Creates a URL that matches this pattern by substituting the specified values\nfor the path and search parameters. Null values for path parameters are\ntreated as empty strings.",
            "example": [
                "\n<pre>\nnew UrlMatcher('/user/{id}?q').format({ id:'bob', q:'yes' });\n// returns '/user/bob?q=yes'\n</pre>"
            ],
            "params": [
                {
                    "name": "values",
                    "description": "the values to substitute for the parameters in this pattern.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "the formatted URL (path and optionally search part).",
                "type": "String"
            },
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js",
            "line": 1061,
            "ngdoc": "object",
            "name": "pattern The regular expression pattern used to match values of this type when!~YUIDOC_LINE~!          coming from a substring of a URL.",
            "description": "Implements an interface to define custom parameter types that can be decoded from and encoded to\nstring parameters matched in a URL. Used by {@link ui.router.util.type:UrlMatcher `UrlMatcher`}\nobjects when matching or formatting URLs, or comparing or validating parameter values.\n\nSee {@link ui.router.util.$urlMatcherFactory#methods_type `$urlMatcherFactory#type()`} for more\ninformation on registering custom types.",
            "example": [
                "\n<pre>\n{\n  decode: function(val) { return parseInt(val, 10); },\n  encode: function(val) { return val && val.toString(); },\n  equals: function(a, b) { return this.is(a) && a === b; },\n  is: function(val) { return angular.isNumber(val) isFinite(val) && val % 1 === 0; },\n  pattern: /\\d+/\n}\n</pre>"
            ],
            "itemtype": "property",
            "type": "RegExp",
            "return": {
                "description": "Returns a new `Type` object.",
                "type": "Object"
            },
            "class": "",
            "module": "ngMock",
            "subprops": [
                {
                    "name": "config",
                    "description": "A configuration object which contains the custom type definition.  The object's\n       properties will override the default methods and/or pattern in `Type`'s public interface.",
                    "type": "Object"
                }
            ]
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js",
            "line": 1095,
            "ngdoc": "function",
            "name": "ui.router.util.type:Type#is",
            "methodof": "ui.router.util.type:Type",
            "description": "Detects whether a value is of a particular type. Accepts a native (decoded) value\nand determines whether it matches the current `Type` object.",
            "params": [
                {
                    "name": "val",
                    "description": "The value to check.",
                    "type": "*"
                },
                {
                    "name": "key",
                    "description": "Optional. If the type check is happening in the context of a specific\n       {@link ui.router.util.type:UrlMatcher `UrlMatcher`} object, this is the name of the\n       parameter in which `val` is stored. Can be used for meta-programming of `Type` objects.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns `true` if the value matches the type, otherwise `false`.",
                "type": "Boolean"
            },
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js",
            "line": 1114,
            "ngdoc": "function",
            "name": "ui.router.util.type:Type#encode",
            "methodof": "ui.router.util.type:Type",
            "description": "Encodes a custom/native type value to a string that can be embedded in a URL. Note that the\nreturn value does *not* need to be URL-safe (i.e. passed through `encodeURIComponent()`), it\nonly needs to be a representation of `val` that has been coerced to a string.",
            "params": [
                {
                    "name": "val",
                    "description": "The value to encode.",
                    "type": "*"
                },
                {
                    "name": "key",
                    "description": "The name of the parameter in which `val` is stored. Can be used for\n       meta-programming of `Type` objects.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns a string representation of `val` that can be encoded in a URL.",
                "type": "String"
            },
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js",
            "line": 1133,
            "ngdoc": "function",
            "name": "ui.router.util.type:Type#decode",
            "methodof": "ui.router.util.type:Type",
            "description": "Converts a parameter value (from URL string or transition param) to a custom/native value.",
            "params": [
                {
                    "name": "val",
                    "description": "The URL parameter value to decode.",
                    "type": "String"
                },
                {
                    "name": "key",
                    "description": "The name of the parameter in which `val` is stored. Can be used for\n       meta-programming of `Type` objects.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns a custom representation of the URL parameter value.",
                "type": "*"
            },
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js",
            "line": 1150,
            "ngdoc": "function",
            "name": "ui.router.util.type:Type#equals",
            "methodof": "ui.router.util.type:Type",
            "description": "Determines whether two decoded values are equivalent.",
            "params": [
                {
                    "name": "a",
                    "description": "A value to compare against.",
                    "type": "*"
                },
                {
                    "name": "b",
                    "description": "A value to compare against.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns `true` if the values are equivalent/equal, otherwise `false`.",
                "type": "Boolean"
            },
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js",
            "line": 1175,
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js",
            "line": 1252,
            "ngdoc": "object",
            "name": "ui.router.util.$urlMatcherFactory",
            "description": "Factory for {@link ui.router.util.type:UrlMatcher `UrlMatcher`} instances. The factory\nis also available to providers under the name `$urlMatcherFactoryProvider`.",
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js",
            "line": 1338,
            "description": "[Internal] Get the default value of a parameter, which may be an injectable function.",
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js",
            "line": 1347,
            "ngdoc": "function",
            "name": "ui.router.util.$urlMatcherFactory#caseInsensitive",
            "methodof": "ui.router.util.$urlMatcherFactory",
            "description": "Defines whether URL matching should be case sensitive (the default behavior), or not.",
            "params": [
                {
                    "name": "value",
                    "description": "`false` to match URL in a case sensitive manner; otherwise `true`;",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "the current value of caseInsensitive",
                "type": "Boolean"
            },
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js",
            "line": 1364,
            "ngdoc": "function",
            "name": "ui.router.util.$urlMatcherFactory#strictMode",
            "methodof": "ui.router.util.$urlMatcherFactory",
            "description": "Defines whether URLs should match trailing slashes, or not (the default behavior).",
            "params": [
                {
                    "name": "value",
                    "description": "`false` to match trailing slashes in URLs, otherwise `true`.",
                    "type": "Boolean="
                }
            ],
            "return": {
                "description": "the current value of strictMode",
                "type": "Boolean"
            },
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js",
            "line": 1381,
            "ngdoc": "function",
            "name": "ui.router.util.$urlMatcherFactory#defaultSquashPolicy",
            "methodof": "ui.router.util.$urlMatcherFactory",
            "description": "Sets the default behavior when generating or matching URLs with default parameter values.",
            "params": [
                {
                    "name": "value",
                    "description": "A string that defines the default parameter URL squashing behavior.\n   `nosquash`: When generating an href with a default parameter value, do not squash the parameter value from the URL\n   `slash`: When generating an href with a default parameter value, squash (remove) the parameter value, and, if the\n            parameter is surrounded by slashes, squash (remove) one slash from the URL\n   any other string, e.g. \"~\": When generating an href with a default parameter value, squash (remove)\n            the parameter value from the URL and replace it with this string.",
                    "type": "String"
                }
            ],
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js",
            "line": 1404,
            "ngdoc": "function",
            "name": "ui.router.util.$urlMatcherFactory#compile",
            "methodof": "ui.router.util.$urlMatcherFactory",
            "description": "Creates a {@link ui.router.util.type:UrlMatcher `UrlMatcher`} for the specified pattern.",
            "params": [
                {
                    "name": "pattern",
                    "description": "The URL pattern.",
                    "type": "String"
                },
                {
                    "name": "config",
                    "description": "The config object hash.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "The UrlMatcher.",
                "type": "UrlMatcher"
            },
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js",
            "line": 1420,
            "ngdoc": "function",
            "name": "ui.router.util.$urlMatcherFactory#isMatcher",
            "methodof": "ui.router.util.$urlMatcherFactory",
            "description": "Returns true if the specified object is a `UrlMatcher`, or false otherwise.",
            "params": [
                {
                    "name": "object",
                    "description": "The object to perform the type check against.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns `true` if the object matches the `UrlMatcher` interface, by\n         implementing all the same methods.",
                "type": "Boolean"
            },
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js",
            "line": 1444,
            "ngdoc": "function",
            "name": "ui.router.util.$urlMatcherFactory#type",
            "methodof": "ui.router.util.$urlMatcherFactory",
            "description": "Registers a custom {@link ui.router.util.type:Type `Type`} object that can be used to\ngenerate URLs with typed parameters.",
            "params": [
                {
                    "name": "name",
                    "description": "The type name.",
                    "type": "String"
                },
                {
                    "name": "definition",
                    "description": "The type definition. See\n       {@link ui.router.util.type:Type `Type`} for information on the values accepted.",
                    "type": "Object|Function"
                },
                {
                    "name": "definitionFn",
                    "description": "(optional) A function that is injected before the app\n       runtime starts.  The result of this function is merged into the existing `definition`.\n       See {@link ui.router.util.type:Type `Type`} for information on the values accepted.",
                    "type": "Object|Function"
                }
            ],
            "return": {
                "description": "Returns `$urlMatcherFactoryProvider`.",
                "type": "Object"
            },
            "example": [
                "\nThis is a simple example of a custom type that encodes and decodes items from an\narray, using the array index as the URL-encoded value:\n\n<pre>\nvar list = ['John', 'Paul', 'George', 'Ringo'];\n\n$urlMatcherFactoryProvider.type('listItem', {\n  encode: function(item) {\n    // Represent the list item in the URL using its corresponding index\n    return list.indexOf(item);\n  },\n  decode: function(item) {\n    // Look up the list item by index\n    return list[parseInt(item, 10)];\n  },\n  is: function(item) {\n    // Ensure the item is valid by checking to see that it appears\n    // in the list\n    return list.indexOf(item) > -1;\n  }\n});\n\n$stateProvider.state('list', {\n  url: \"/list/{item:listItem}\",\n  controller: function($scope, $stateParams) {\n    console.log($stateParams.item);\n  }\n});\n\n// ...\n\n// Changes URL to '/list/3', logs \"Ringo\" to the console\n$state.go('list', { item: \"Ringo\" });\n</pre>\n\nThis is a more complex example of a type that relies on dependency injection to\ninteract with services, and uses the parameter name from the URL to infer how to\nhandle encoding and decoding parameter values:\n\n<pre>\n// Defines a custom type that gets a value from a service,\n// where each service gets different types of values from\n// a backend API:\n$urlMatcherFactoryProvider.type('dbObject', {}, function(Users, Posts) {\n\n  // Matches up services to URL parameter names\n  var services = {\n    user: Users,\n    post: Posts\n  };\n\n  return {\n    encode: function(object) {\n      // Represent the object in the URL using its unique ID\n      return object.id;\n    },\n    decode: function(value, key) {\n      // Look up the object by ID, using the parameter\n      // name (key) to call the correct service\n      return services[key].findById(value);\n    },\n    is: function(object, key) {\n      // Check that object is a valid dbObject\n      return angular.isObject(object) && object.id && services[key];\n    }\n    equals: function(a, b) {\n      // Check the equality of decoded objects by comparing\n      // their unique IDs\n      return a.id === b.id;\n    }\n  };\n});\n\n// In a config() block, you can then attach URLs with\n// type-annotated parameters:\n$stateProvider.state('users', {\n  url: \"/users\",\n  // ...\n}).state('users.item', {\n  url: \"/{user:dbObject}\",\n  controller: function($scope, $stateParams) {\n    // $stateParams.user will now be an object returned from\n    // the Users service\n  },\n  // ...\n});\n</pre>"
            ],
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js",
            "line": 1628,
            "description": "returns false, true, or the squash value to indicate the \"default parameter url squash policy\".",
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js",
            "line": 1651,
            "description": "[Internal] Get the default value of a parameter, which may be an injectable function.",
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js",
            "line": 1662,
            "description": "[Internal] Gets the decoded representation of a value if the value is defined, otherwise, returns the\ndefault value, which may be the result of an injectable function.",
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js",
            "line": 1754,
            "ngdoc": "object",
            "name": "ui.router.router.$urlRouterProvider",
            "requires": [
                "ui.router.util.$urlMatcherFactoryProvider",
                "$locationProvider"
            ],
            "description": "`$urlRouterProvider` has the responsibility of watching `$location`. \nWhen `$location` changes it runs through a list of rules one by one until a \nmatch is found. `$urlRouterProvider` is used behind the scenes anytime you specify \na url in a state configuration. All urls are compiled into a UrlMatcher object.\n\nThere are several methods on `$urlRouterProvider` that make it useful to use directly\nin your module config.",
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js",
            "line": 1787,
            "ngdoc": "function",
            "name": "ui.router.router.$urlRouterProvider#rule",
            "methodof": "ui.router.router.$urlRouterProvider",
            "description": "Defines rules that are used by `$urlRouterProvider` to find matches for\nspecific URLs.",
            "example": [
                "\n<pre>\nvar app = angular.module('app', ['ui.router.router']);\n\napp.config(function ($urlRouterProvider) {\n  // Here's an example of how you might allow case insensitive urls\n  $urlRouterProvider.rule(function ($injector, $location) {\n    var path = $location.path(),\n        normalized = path.toLowerCase();\n\n    if (path !== normalized) {\n      return normalized;\n    }\n  });\n});\n</pre>"
            ],
            "params": [
                {
                    "name": "rule",
                    "description": "Handler function that takes `$injector` and `$location`\nservices as arguments. You can use them to return a valid path as a string.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "`$urlRouterProvider` - `$urlRouterProvider` instance",
                "type": "Object"
            },
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js",
            "line": 1824,
            "ngdoc": "object",
            "name": "ui.router.router.$urlRouterProvider#otherwise",
            "methodof": "ui.router.router.$urlRouterProvider",
            "description": "Defines a path that is used when an invalid route is requested.",
            "example": [
                "\n<pre>\nvar app = angular.module('app', ['ui.router.router']);\n\napp.config(function ($urlRouterProvider) {\n  // if the path doesn't match any of the urls you configured\n  // otherwise will take care of routing the user to the\n  // specified url\n  $urlRouterProvider.otherwise('/index');\n\n  // Example of using function rule as param\n  $urlRouterProvider.otherwise(function ($injector, $location) {\n    return '/a/valid/url';\n  });\n});\n</pre>"
            ],
            "params": [
                {
                    "name": "rule",
                    "description": "The url path you want to redirect to or a function \nrule that returns the url path. The function version is passed two params: \n`$injector` and `$location` services, and must return a url string.",
                    "type": "String|function"
                }
            ],
            "return": {
                "description": "`$urlRouterProvider` - `$urlRouterProvider` instance",
                "type": "Object"
            },
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js",
            "line": 1872,
            "ngdoc": "function",
            "name": "ui.router.router.$urlRouterProvider#when",
            "methodof": "ui.router.router.$urlRouterProvider",
            "description": "Registers a handler for a given url matching. \n\nIf the handler is a string, it is\ntreated as a redirect, and is interpolated according to the syntax of match\n(i.e. like `String.replace()` for `RegExp`, or like a `UrlMatcher` pattern otherwise).\n\nIf the handler is a function, it is injectable. It gets invoked if `$location`\nmatches. You have the option of inject the match object as `$match`.\n\nThe handler can return\n\n- **falsy** to indicate that the rule didn't match after all, then `$urlRouter`\n  will continue trying to find another one that matches.\n- **string** which is treated as a redirect and passed to `$location.url()`\n- **void** or any **truthy** value tells `$urlRouter` that the url was handled.",
            "example": [
                "\n<pre>\nvar app = angular.module('app', ['ui.router.router']);\n\napp.config(function ($urlRouterProvider) {\n  $urlRouterProvider.when($state.url, function ($match, $stateParams) {\n    if ($state.$current.navigable !== state ||\n        !equalForKeys($match, $stateParams) {\n     $state.transitionTo(state, $match, false);\n    }\n  });\n});\n</pre>"
            ],
            "params": [
                {
                    "name": "what",
                    "description": "The incoming path that you want to redirect.",
                    "type": "String|object"
                },
                {
                    "name": "handler",
                    "description": "The path you want to redirect your user to.",
                    "type": "String|function"
                }
            ],
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js",
            "line": 1954,
            "ngdoc": "function",
            "name": "ui.router.router.$urlRouterProvider#deferIntercept",
            "methodof": "ui.router.router.$urlRouterProvider",
            "description": "Disables (or enables) deferring location change interception.\n\nIf you wish to customize the behavior of syncing the URL (for example, if you wish to\ndefer a transition but maintain the current URL), call this method at configuration time.\nThen, at run time, call `$urlRouter.listen()` after you have configured your own\n`$locationChangeSuccess` event handler.",
            "example": [
                "\n<pre>\nvar app = angular.module('app', ['ui.router.router']);\n\napp.config(function ($urlRouterProvider) {\n\n  // Prevent $urlRouter from automatically intercepting URL changes;\n  // this allows you to configure custom behavior in between\n  // location changes and route synchronization:\n  $urlRouterProvider.deferIntercept();\n\n}).run(function ($rootScope, $urlRouter, UserService) {\n\n  $rootScope.$on('$locationChangeSuccess', function(e) {\n    // UserService is an example service for managing user state\n    if (UserService.isLoggedIn()) return;\n\n    // Prevent $urlRouter's default handler from firing\n    e.preventDefault();\n\n    UserService.handleLogin().then(function() {\n      // Once the user has logged in, sync the current URL\n      // to the router:\n      $urlRouter.sync();\n    });\n  });\n\n  // Configures $urlRouter's listener *after* your custom listener\n  $urlRouter.listen();\n});\n</pre>"
            ],
            "params": [
                {
                    "name": "defer",
                    "description": "Indicates whether to defer location change interception. Passing\n           no parameter is equivalent to `true`.",
                    "type": "Boolean"
                }
            ],
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js",
            "line": 2007,
            "ngdoc": "object",
            "name": "ui.router.router.$urlRouter",
            "requires": [
                "$location",
                "$rootScope",
                "$injector",
                "$browser"
            ],
            "description": "",
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js",
            "line": 2064,
            "ngdoc": "function",
            "name": "ui.router.router.$urlRouter#sync",
            "methodof": "ui.router.router.$urlRouter",
            "description": "Triggers an update; the same update that happens when the address bar url changes, aka `$locationChangeSuccess`.\nThis method is useful when you need to use `preventDefault()` on the `$locationChangeSuccess` event,\nperform some custom logic (route protection, auth, config, redirection, etc) and then finally proceed\nwith the transition by calling `$urlRouter.sync()`.",
            "example": [
                "\n<pre>\nangular.module('app', ['ui.router'])\n  .run(function($rootScope, $urlRouter) {\n    $rootScope.$on('$locationChangeSuccess', function(evt) {\n      // Halt state change from even starting\n      evt.preventDefault();\n      // Perform custom logic\n      var meetsRequirement = ...\n      // Continue with the update and state transition if logic allows\n      if (meetsRequirement) $urlRouter.sync();\n    });\n});\n</pre>"
            ],
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js",
            "line": 2122,
            "ngdoc": "function",
            "name": "ui.router.router.$urlRouter#href",
            "methodof": "ui.router.router.$urlRouter",
            "description": "A URL generation method that returns the compiled URL for a given\n{@link ui.router.util.type:UrlMatcher `UrlMatcher`}, populated with the provided parameters.",
            "example": [
                "\n<pre>\n$bob = $urlRouter.href(new UrlMatcher(\"/about/:person\"), {\n  person: \"bob\"\n});\n// $bob == \"/about/bob\";\n</pre>"
            ],
            "params": [
                {
                    "name": "urlMatcher",
                    "description": "The `UrlMatcher` object which is used as the template of the URL to generate.",
                    "type": "UrlMatcher"
                },
                {
                    "name": "params",
                    "description": "An object of parameter values to fill the matcher's required parameters.",
                    "type": "Object="
                },
                {
                    "name": "options",
                    "description": "Options object. The options are:\n\n- **`absolute`** - {boolean=false},  If true will generate an absolute url, e.g. \"http://www.example.com/fullurl\".",
                    "type": "Object="
                }
            ],
            "return": {
                "description": "Returns the fully compiled URL, or `null` if `params` fail validation against `urlMatcher`",
                "type": "String"
            },
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js",
            "line": 2186,
            "ngdoc": "object",
            "name": "ui.router.state.$stateProvider",
            "requires": [
                "ui.router.router.$urlRouterProvider",
                "ui.router.util.$urlMatcherFactoryProvider"
            ],
            "description": "The new `$stateProvider` works similar to Angular's v1 router, but it focuses purely\non state.\n\nA state corresponds to a \"place\" in the application in terms of the overall UI and\nnavigation. A state describes (via the controller / template / view properties) what\nthe UI looks like and does at that place.\n\nStates often have things in common, and the primary way of factoring out these\ncommonalities in this model is via the state hierarchy, i.e. parent/child states aka\nnested states.\n\nThe `$stateProvider` provides interfaces to declare these states for your app.",
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js",
            "line": 2440,
            "ngdoc": "function",
            "name": "ui.router.state.$stateProvider#decorator",
            "methodof": "ui.router.state.$stateProvider",
            "description": "Allows you to extend (carefully) or override (at your own peril) the \n`stateBuilder` object used internally by `$stateProvider`. This can be used \nto add custom functionality to ui-router, for example inferring templateUrl \nbased on the state name.\n\nWhen passing only a name, it returns the current (original or decorated) builder\nfunction that matches `name`.\n\nThe builder functions that can be decorated are listed below. Though not all\nnecessarily have a good use case for decoration, that is up to you to decide.\n\nIn addition, users can attach custom decorators, which will generate new \nproperties within the state's internal definition. There is currently no clear \nuse-case for this beyond accessing internal states (i.e. $state.$current), \nhowever, expect this to become increasingly relevant as we introduce additional \nmeta-programming features.\n\n**Warning**: Decorators should not be interdependent because the order of \nexecution of the builder functions in non-deterministic. Builder functions \nshould only be dependent on the state definition object and super function.\n\n\nExisting builder functions and current return values:\n\n- **parent** `{object}` - returns the parent state object.\n- **data** `{object}` - returns state data, including any inherited data that is not\n  overridden by own values (if any).\n- **url** `{object}` - returns a {@link ui.router.util.type:UrlMatcher UrlMatcher}\n  or `null`.\n- **navigable** `{object}` - returns closest ancestor state that has a URL (aka is \n  navigable).\n- **params** `{object}` - returns an array of state params that are ensured to \n  be a super-set of parent's params.\n- **views** `{object}` - returns a views object where each key is an absolute view \n  name (i.e. \"viewName@stateName\") and each value is the config object \n  (template, controller) for the view. Even when you don't use the views object \n  explicitly on a state config, one is still created for you internally.\n  So by decorating this builder function you have access to decorating template \n  and controller properties.\n- **ownParams** `{object}` - returns an array of params that belong to the state, \n  not including any params defined by ancestor states.\n- **path** `{string}` - returns the full path from the root down to this state. \n  Needed for state activation.\n- **includes** `{object}` - returns an object that includes every state that \n  would pass a `$state.includes()` test.",
            "example": [
                "\n<pre>\n// Override the internal 'views' builder with a function that takes the state\n// definition, and a reference to the internal function being overridden:\n$stateProvider.decorator('views', function (state, parent) {\n  var result = {},\n      views = parent(state);\n\n  angular.forEach(views, function (config, name) {\n    var autoName = (state.name + '.' + name).replace('.', '/');\n    config.templateUrl = config.templateUrl || '/partials/' + autoName + '.html';\n    result[name] = config;\n  });\n  return result;\n});\n\n$stateProvider.state('home', {\n  views: {\n    'contact.list': { controller: 'ListController' },\n    'contact.item': { controller: 'ItemController' }\n  }\n});\n\n// ...\n\n$state.go('home');\n// Auto-populates list and item views with /partials/home/contact/list.html,\n// and /partials/home/contact/item.html, respectively.\n</pre>"
            ],
            "params": [
                {
                    "name": "name",
                    "description": "The name of the builder function to decorate.",
                    "type": "String"
                },
                {
                    "name": "func",
                    "description": "A function that is responsible for decorating the original \nbuilder function. The function receives two parameters:\n\n  - `{object}` - state - The state config object.\n  - `{object}` - super - The original builder function.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "$stateProvider - $stateProvider instance",
                "type": "Object"
            },
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js",
            "line": 2547,
            "ngdoc": "function",
            "name": "ui.router.state.$stateProvider#state",
            "methodof": "ui.router.state.$stateProvider",
            "description": "Registers a state configuration under a given state name. The stateConfig object\nhas the following acceptable properties.",
            "params": [
                {
                    "name": "name",
                    "description": "A unique state name, e.g. \"home\", \"about\", \"contacts\".\nTo create a parent/child state use a dot, e.g. \"about.sales\", \"home.newest\".",
                    "type": "String"
                },
                {
                    "name": "stateConfig",
                    "description": "State configuration object.",
                    "type": "Object",
                    "props": [
                        {
                            "name": "template\n<a",
                            "description": "id='template'></a>\n  html template as a string or a function that returns\n  an html template as a string which should be used by the uiView directives. This property \n  takes precedence over templateUrl.\n  \n  If `template` is a function, it will be called with the following parameters:\n\n  - {array.&lt;object&gt;} - state parameters extracted from the current $location.path() by\n    applying the current state\n\n<pre>template:\n  \"<h1>inline template definition</h1>\" +\n  \"<div ui-view></div>\"</pre>\n<pre>template: function(params) {\n      return \"<h1>generated template</h1>\"; }</pre>\n</div>",
                            "type": "String|function="
                        },
                        {
                            "name": "templateUrl\n<a",
                            "description": "id='templateUrl'></a>\n\n  path or function that returns a path to an html\n  template that should be used by uiView.\n  \n  If `templateUrl` is a function, it will be called with the following parameters:\n\n  - {array.&lt;object&gt;} - state parameters extracted from the current $location.path() by \n    applying the current state\n\n<pre>templateUrl: \"home.html\"</pre>\n<pre>templateUrl: function(params) {\n    return myTemplates[params.pageId]; }</pre>",
                            "type": "String|function="
                        },
                        {
                            "name": "templateProvider\n<a",
                            "description": "id='templateProvider'></a>\n   Provider function that returns HTML content string.\n<pre> templateProvider:\n      function(MyTemplateService, params) {\n        return MyTemplateService.getTemplate(params.pageId);\n      }</pre>",
                            "type": "Function="
                        },
                        {
                            "name": "controller\n<a",
                            "description": "id='controller'></a>\n\n Controller fn that should be associated with newly\n  related scope or the name of a registered controller if passed as a string.\n  Optionally, the ControllerAs may be declared here.\n<pre>controller: \"MyRegisteredController\"</pre>\n<pre>controller:\n    \"MyRegisteredController as fooCtrl\"}</pre>\n<pre>controller: function($scope, MyService) {\n    $scope.data = MyService.getData(); }</pre>",
                            "type": "String|function="
                        },
                        {
                            "name": "controllerProvider\n<a",
                            "description": "id='controllerProvider'></a>\n\nInjectable provider function that returns the actual controller or string.\n<pre>controllerProvider:\n  function(MyResolveData) {\n    if (MyResolveData.foo)\n      return \"FooCtrl\"\n    else if (MyResolveData.bar)\n      return \"BarCtrl\";\n    else return function($scope) {\n      $scope.baz = \"Qux\";\n    }\n  }</pre>",
                            "type": "Function="
                        },
                        {
                            "name": "controllerAs\n<a",
                            "description": "id='controllerAs'></a>\n\nA controller alias name. If present the controller will be\n  published to scope under the controllerAs name.\n<pre>controllerAs: \"myCtrl\"</pre>",
                            "type": "String="
                        },
                        {
                            "name": "parent\n<a",
                            "description": "id='parent'></a>\nOptionally specifies the parent state of this state.\n\n<pre>parent: 'parentState'</pre>\n<pre>parent: parentState // JS variable</pre>",
                            "type": "String|object="
                        },
                        {
                            "name": "resolve\n<a",
                            "description": "id='resolve'></a>\n\nAn optional map&lt;string, function&gt; of dependencies which\n  should be injected into the controller. If any of these dependencies are promises, \n  the router will wait for them all to be resolved before the controller is instantiated.\n  If all the promises are resolved successfully, the $stateChangeSuccess event is fired\n  and the values of the resolved promises are injected into any controllers that reference them.\n  If any  of the promises are rejected the $stateChangeError event is fired.\n\n  The map object is:\n  \n  - key - {string}: name of dependency to be injected into controller\n  - factory - {string|function}: If string then it is alias for service. Otherwise if function, \n    it is injected and return value it treated as dependency. If result is a promise, it is \n    resolved before its value is injected into controller.\n\n<pre>resolve: {\n    myResolve1:\n      function($http, $stateParams) {\n        return $http.get(\"/api/foos/\"+stateParams.fooID);\n      }\n    }</pre>",
                            "type": "Object="
                        },
                        {
                            "name": "url\n<a",
                            "description": "id='url'></a>\n\n  A url fragment with optional parameters. When a state is navigated or\n  transitioned to, the `$stateParams` service will be populated with any \n  parameters that were passed.\n\n  (See {@link ui.router.util.type:UrlMatcher UrlMatcher} `UrlMatcher`} for\n  more details on acceptable patterns )\n\nexamples:\n<pre>url: \"/home\"\nurl: \"/users/:userid\"\nurl: \"/books/{bookid:[a-zA-Z_-]}\"\nurl: \"/books/{categoryid:int}\"\nurl: \"/books/{publishername:string}/{categoryid:int}\"\nurl: \"/messages?before&after\"\nurl: \"/messages?{before:date}&{after:date}\"\nurl: \"/messages/:mailboxid?{before:date}&{after:date}\"\n</pre>",
                            "type": "String="
                        },
                        {
                            "name": "views\n<a",
                            "description": "id='views'></a>\nan optional map&lt;string, object&gt; which defined multiple views, or targets views\nmanually/explicitly.\n\nExamples:\n\nTargets three named `ui-view`s in the parent state's template\n<pre>views: {\n    header: {\n      controller: \"headerCtrl\",\n      templateUrl: \"header.html\"\n    }, body: {\n      controller: \"bodyCtrl\",\n      templateUrl: \"body.html\"\n    }, footer: {\n      controller: \"footCtrl\",\n      templateUrl: \"footer.html\"\n    }\n  }</pre>\n\nTargets named `ui-view=\"header\"` from grandparent state 'top''s template, and named `ui-view=\"body\" from parent state's template.\n<pre>views: {\n    'header@top': {\n      controller: \"msgHeaderCtrl\",\n      templateUrl: \"msgHeader.html\"\n    }, 'body': {\n      controller: \"messagesCtrl\",\n      templateUrl: \"messages.html\"\n    }\n  }</pre>",
                            "type": "Object="
                        },
                        {
                            "name": "abstract",
                            "description": "\n<a id='abstract'></a>\nAn abstract state will never be directly activated,\n  but can provide inherited properties to its common children states.\n<pre>abstract: true</pre>",
                            "type": "Boolean=",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "onEnter\n<a",
                            "description": "id='onEnter'></a>\n\nCallback function for when a state is entered. Good way\n  to trigger an action or dispatch an event, such as opening a dialog.\nIf minifying your scripts, make sure to explicitly annotate this function,\nbecause it won't be automatically annotated by your build tools.\n\n<pre>onEnter: function(MyService, $stateParams) {\n    MyService.foo($stateParams.myParam);\n}</pre>",
                            "type": "Function="
                        },
                        {
                            "name": "onExit\n<a",
                            "description": "id='onExit'></a>\n\nCallback function for when a state is exited. Good way to\n  trigger an action or dispatch an event, such as opening a dialog.\nIf minifying your scripts, make sure to explicitly annotate this function,\nbecause it won't be automatically annotated by your build tools.\n\n<pre>onExit: function(MyService, $stateParams) {\n    MyService.cleanup($stateParams.myParam);\n}</pre>",
                            "type": "Function="
                        },
                        {
                            "name": "reloadOnSearch",
                            "description": "\n<a id='reloadOnSearch'></a>\n\nIf `false`, will not retrigger the same state\n  just because a search/query parameter has changed (via $location.search() or $location.hash()). \n  Useful for when you'd like to modify $location.search() without triggering a reload.\n<pre>reloadOnSearch: false</pre>",
                            "type": "Boolean=",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "data\n<a",
                            "description": "id='data'></a>\n\nArbitrary data object, useful for custom configuration.  The parent state's `data` is\n  prototypally inherited.  In other words, adding a data property to a state adds it to\n  the entire subtree via prototypal inheritance.\n\n<pre>data: {\n    requiredRole: 'foo'\n} </pre>",
                            "type": "Object="
                        },
                        {
                            "name": "params\n<a",
                            "description": "id='params'></a>\n\nA map which optionally configures parameters declared in the `url`, or\n  defines additional non-url parameters.  For each parameter being\n  configured, add a configuration object keyed to the name of the parameter.\n\n  Each parameter configuration object may contain the following properties:\n\n  - ** value ** - {object|function=}: specifies the default value for this\n    parameter.  This implicitly sets this parameter as optional.\n\n    When UI-Router routes to a state and no value is\n    specified for this parameter in the URL or transition, the\n    default value will be used instead.  If `value` is a function,\n    it will be injected and invoked, and the return value used.\n\n    *Note*: `undefined` is treated as \"no default value\" while `null`\n    is treated as \"the default value is `null`\".\n\n    *Shorthand*: If you only need to configure the default value of the\n    parameter, you may use a shorthand syntax.   In the **`params`**\n    map, instead mapping the param name to a full parameter configuration\n    object, simply set map it to the default parameter value, e.g.:\n\n<pre>// define a parameter's default value\nparams: {\n    param1: { value: \"defaultValue\" }\n}\n// shorthand default values\nparams: {\n    param1: \"defaultValue\",\n    param2: \"param2Default\"\n}</pre>\n\n  - ** array ** - {boolean=}: *(default: false)* If true, the param value will be\n    treated as an array of values.  If you specified a Type, the value will be\n    treated as an array of the specified Type.  Note: query parameter values\n    default to a special `\"auto\"` mode.\n\n    For query parameters in `\"auto\"` mode, if multiple  values for a single parameter\n    are present in the URL (e.g.: `/foo?bar=1&bar=2&bar=3`) then the values\n    are mapped to an array (e.g.: `{ foo: [ '1', '2', '3' ] }`).  However, if\n    only one value is present (e.g.: `/foo?bar=1`) then the value is treated as single\n    value (e.g.: `{ foo: '1' }`).\n\n<pre>params: {\n    param1: { array: true }\n}</pre>\n\n  - ** squash ** - {bool|string=}: `squash` configures how a default parameter value is represented in the URL when\n    the current parameter value is the same as the default value. If `squash` is not set, it uses the\n    configured default squash policy.\n    (See {@link ui.router.util.$urlMatcherFactory#methods_defaultSquashPolicy `defaultSquashPolicy()`})\n\n  There are three squash settings:\n\n    - false: The parameter's default value is not squashed.  It is encoded and included in the URL\n    - true: The parameter's default value is omitted from the URL.  If the parameter is preceeded and followed\n      by slashes in the state's `url` declaration, then one of those slashes are omitted.\n      This can allow for cleaner looking URLs.\n    - `\"<arbitrary string>\"`: The parameter's default value is replaced with an arbitrary placeholder of  your choice.\n\n<pre>params: {\n    param1: {\n      value: \"defaultId\",\n      squash: true\n} }\n// squash \"defaultValue\" to \"~\"\nparams: {\n    param1: {\n      value: \"defaultValue\",\n      squash: \"~\"\n} }\n</pre>",
                            "type": "Object="
                        }
                    ]
                }
            ],
            "example": [
                "\n<pre>\n// Some state name examples\n\n// stateName can be a single top-level name (must be unique).\n$stateProvider.state(\"home\", {});\n\n// Or it can be a nested state name. This state is a child of the\n// above \"home\" state.\n$stateProvider.state(\"home.newest\", {});\n\n// Nest states as deeply as needed.\n$stateProvider.state(\"home.newest.abc.xyz.inception\", {});\n\n// state() returns $stateProvider, so you can chain state declarations.\n$stateProvider\n  .state(\"home\", {})\n  .state(\"about\", {})\n  .state(\"contacts\", {});\n</pre>\n"
            ],
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js",
            "line": 2875,
            "ngdoc": "object",
            "name": "params A param object, e.g. {sectionId: section.id)}, that !~YUIDOC_LINE~!you'd like to test against the current active state.",
            "requires": [
                "$rootScope",
                "$q",
                "ui.router.state.$view",
                "$injector",
                "ui.router.util.$resolve",
                "ui.router.state.$stateParams",
                "ui.router.router.$urlRouter"
            ],
            "itemtype": "property",
            "type": "Object",
            "description": "`$state` service is responsible for representing states as well as transitioning\nbetween them. It also provides interfaces to ask for current state or even states\nyou're coming from.",
            "class": "",
            "module": "ngMock",
            "subprops": [
                {
                    "name": "current",
                    "description": "A reference to the state's config object. However \nyou passed it in. Useful for accessing custom data.",
                    "type": "Object"
                },
                {
                    "name": "transition",
                    "description": "Currently pending transition. A promise that'll \nresolve or reject.",
                    "type": "Object"
                }
            ]
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js",
            "line": 2911,
            "ngdoc": "event",
            "name": "ui.router.state.$state#$stateNotFound",
            "eventof": "ui.router.state.$state",
            "eventtype": "broadcast on root scope",
            "description": "Fired when a requested state **cannot be found** using the provided state name during transition.\nThe event is broadcast allowing any handlers a single chance to deal with the error (usually by\nlazy-loading the unfound state). A special `unfoundState` object is passed to the listener handler,\nyou can see its three properties in the example. You can use `event.preventDefault()` to abort the\ntransition and the promise returned from `go` will be rejected with a `'transition aborted'` value.",
            "params": [
                {
                    "name": "event",
                    "description": "Event object.",
                    "type": "Object"
                },
                {
                    "name": "unfoundState",
                    "description": "Unfound State information. Contains: `to, toParams, options` properties.",
                    "type": "Object"
                },
                {
                    "name": "fromState",
                    "description": "Current state object.",
                    "type": "State"
                },
                {
                    "name": "fromParams",
                    "description": "Current state params.",
                    "type": "Object"
                }
            ],
            "example": [
                "\n\n<pre>\n// somewhere, assume lazy.state has not been defined\n$state.go(\"lazy.state\", {a:1, b:2}, {inherit:false});\n\n// somewhere else\n$scope.$on('$stateNotFound',\nfunction(event, unfoundState, fromState, fromParams){\n    console.log(unfoundState.to); // \"lazy.state\"\n    console.log(unfoundState.toParams); // {a:1, b:2}\n    console.log(unfoundState.options); // {inherit:false} + default options\n})\n</pre>"
            ],
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js",
            "line": 2982,
            "ngdoc": "function",
            "name": "ui.router.state.$state#reload",
            "methodof": "ui.router.state.$state",
            "description": "A method that force reloads the current state. All resolves are re-resolved,\ncontrollers reinstantiated, and events re-fired.",
            "example": [
                "\n<pre>\nvar app angular.module('app', ['ui.router']);\n\napp.controller('ctrl', function ($scope, $state) {\n  $scope.reload = function(){\n    $state.reload();\n  }\n});\n</pre>\n\n`reload()` is just an alias for:\n<pre>\n$state.transitionTo($state.current, $stateParams, { \n  reload: true, inherit: false, notify: true\n});\n</pre>",
                "\n<pre>\n//assuming app application consists of 3 states: 'contacts', 'contacts.detail', 'contacts.detail.item' \n//and current state is 'contacts.detail.item'\nvar app angular.module('app', ['ui.router']);\n\napp.controller('ctrl', function ($scope, $state) {\n  $scope.reload = function(){\n    //will reload 'contact.detail' and 'contact.detail.item' states\n    $state.reload('contact.detail');\n  }\n});\n</pre>\n\n`reload()` is just an alias for:\n<pre>\n$state.transitionTo($state.current, $stateParams, { \n  reload: true, inherit: false, notify: true\n});\n</pre>"
            ],
            "params": [
                {
                    "name": "state",
                    "description": "- A state name or a state object, which is the root of the resolves to be re-resolved.",
                    "type": "String=|object="
                }
            ],
            "return": {
                "description": "A promise representing the state of the new transition. See\n{@link ui.router.state.$state#methods_go $state.go}.",
                "type": "Promise"
            },
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js",
            "line": 3038,
            "ngdoc": "function",
            "name": "ui.router.state.$state#go",
            "methodof": "ui.router.state.$state",
            "description": "Convenience method for transitioning to a new state. `$state.go` calls \n`$state.transitionTo` internally but automatically sets options to \n`{ location: true, inherit: true, relative: $state.$current, notify: true }`. \nThis allows you to easily use an absolute or relative to path and specify \nonly the parameters you'd like to update (while letting unspecified parameters \ninherit from the currently active ancestor states).",
            "example": [
                "\n<pre>\nvar app = angular.module('app', ['ui.router']);\n\napp.controller('ctrl', function ($scope, $state) {\n  $scope.changeState = function () {\n    $state.go('contact.detail');\n  };\n});\n</pre>\n<img src='../ngdoc_assets/StateGoExamples.png'/>"
            ],
            "params": [
                {
                    "name": "to",
                    "description": "Absolute state name or relative state path. Some examples:\n\n- `$state.go('contact.detail')` - will go to the `contact.detail` state\n- `$state.go('^')` - will go to a parent state\n- `$state.go('^.sibling')` - will go to a sibling state\n- `$state.go('.child.grandchild')` - will go to grandchild state",
                    "type": "String"
                },
                {
                    "name": "params",
                    "description": "A map of the parameters that will be sent to the state, \nwill populate $stateParams. Any parameters that are not specified will be inherited from currently \ndefined parameters. Only parameters specified in the state definition can be overridden, new \nparameters will be ignored. This allows, for example, going to a sibling state that shares parameters\nspecified in a parent state. Parameter inheritance only works between common ancestor states, I.e.\ntransitioning to a sibling will get you the parameters for all parents, transitioning to a child\nwill get you all current parameters, etc.",
                    "type": "Object="
                },
                {
                    "name": "options",
                    "description": "Options object. The options are:\n\n- **`location`** - {boolean=true|string=} - If `true` will update the url in the location bar, if `false`\n   will not. If string, must be `\"replace\"`, which will update url and also replace last history record.\n- **`inherit`** - {boolean=true}, If `true` will inherit url parameters from current url.\n- **`relative`** - {object=$state.$current}, When transitioning with relative path (e.g '^'), \n   defines which state to be relative from.\n- **`notify`** - {boolean=true}, If `true` will broadcast $stateChangeStart and $stateChangeSuccess events.\n- **`reload`** (v0.2.5) - {boolean=false|string|object}, If `true` will force transition even if no state or params\n   have changed.  It will reload the resolves and views of the current state and parent states.\n   If `reload` is a string (or state object), the state object is fetched (by name, or object reference); and \\\n   the transition reloads the resolves and views for that matched state, and all its children states.",
                    "type": "Object="
                }
            ],
            "return": {
                "description": "A promise representing the state of the new transition.\n\nPossible success values:\n\n- $state.current\n\n<br/>Possible rejection values:\n\n- 'transition superseded' - when a newer transition has been started after this one\n- 'transition prevented' - when `event.preventDefault()` has been called in a `$stateChangeStart` listener\n- 'transition aborted' - when `event.preventDefault()` has been called in a `$stateNotFound` listener or\n  when a `$stateNotFound` `event.retry` promise errors.\n- 'transition failed' - when a state has been unsuccessfully found after 2 tries.\n- *resolve error* - when an error has occurred with a `resolve`",
                "type": "Promise"
            },
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js",
            "line": 3110,
            "ngdoc": "function",
            "name": "ui.router.state.$state#transitionTo",
            "methodof": "ui.router.state.$state",
            "description": "Low-level method for transitioning to a new state. {@link ui.router.state.$state#methods_go $state.go}\nuses `transitionTo` internally. `$state.go` is recommended in most situations.",
            "example": [
                "\n<pre>\nvar app = angular.module('app', ['ui.router']);\n\napp.controller('ctrl', function ($scope, $state) {\n  $scope.changeState = function () {\n    $state.transitionTo('contact.detail');\n  };\n});\n</pre>"
            ],
            "params": [
                {
                    "name": "to",
                    "description": "State name.",
                    "type": "String"
                },
                {
                    "name": "toParams",
                    "description": "A map of the parameters that will be sent to the state,\nwill populate $stateParams.",
                    "type": "Object="
                },
                {
                    "name": "options",
                    "description": "Options object. The options are:\n\n- **`location`** - {boolean=true|string=} - If `true` will update the url in the location bar, if `false`\n   will not. If string, must be `\"replace\"`, which will update url and also replace last history record.\n- **`inherit`** - {boolean=false}, If `true` will inherit url parameters from current url.\n- **`relative`** - {object=}, When transitioning with relative path (e.g '^'), \n   defines which state to be relative from.\n- **`notify`** - {boolean=true}, If `true` will broadcast $stateChangeStart and $stateChangeSuccess events.\n- **`reload`** (v0.2.5) - {boolean=false|string=|object=}, If `true` will force transition even if the state or params \n   have not changed, aka a reload of the same state. It differs from reloadOnSearch because you'd\n   use this when you want to force a reload when *everything* is the same, including search params.\n   if String, then will reload the state with the name given in reload, and any children.\n   if Object, then a stateObj is expected, will reload the state found in stateObj, and any children.",
                    "type": "Object="
                }
            ],
            "return": {
                "description": "A promise representing the state of the new transition. See\n{@link ui.router.state.$state#methods_go $state.go}.",
                "type": "Promise"
            },
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js",
            "line": 3245,
            "ngdoc": "event",
            "name": "ui.router.state.$state#$stateChangeStart",
            "eventof": "ui.router.state.$state",
            "eventtype": "broadcast on root scope",
            "description": "Fired when the state transition **begins**. You can use `event.preventDefault()`\nto prevent the transition from happening and then the transition promise will be\nrejected with a `'transition prevented'` value.",
            "params": [
                {
                    "name": "event",
                    "description": "Event object.",
                    "type": "Object"
                },
                {
                    "name": "toState",
                    "description": "The state being transitioned to.",
                    "type": "State"
                },
                {
                    "name": "toParams",
                    "description": "The params supplied to the `toState`.",
                    "type": "Object"
                },
                {
                    "name": "fromState",
                    "description": "The current state, pre-transition.",
                    "type": "State"
                },
                {
                    "name": "fromParams",
                    "description": "The params supplied to the `fromState`.",
                    "type": "Object"
                }
            ],
            "example": [
                "\n\n<pre>\n$rootScope.$on('$stateChangeStart',\nfunction(event, toState, toParams, fromState, fromParams){\n    event.preventDefault();\n    // transitionTo() promise will be rejected with\n    // a 'transition prevented' error\n})\n</pre>"
            ],
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js",
            "line": 3338,
            "ngdoc": "event",
            "name": "ui.router.state.$state#$stateChangeSuccess",
            "eventof": "ui.router.state.$state",
            "eventtype": "broadcast on root scope",
            "description": "Fired once the state transition is **complete**.",
            "params": [
                {
                    "name": "event",
                    "description": "Event object.",
                    "type": "Object"
                },
                {
                    "name": "toState",
                    "description": "The state being transitioned to.",
                    "type": "State"
                },
                {
                    "name": "toParams",
                    "description": "The params supplied to the `toState`.",
                    "type": "Object"
                },
                {
                    "name": "fromState",
                    "description": "The current state, pre-transition.",
                    "type": "State"
                },
                {
                    "name": "fromParams",
                    "description": "The params supplied to the `fromState`.",
                    "type": "Object"
                }
            ],
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js",
            "line": 3361,
            "ngdoc": "event",
            "name": "ui.router.state.$state#$stateChangeError",
            "eventof": "ui.router.state.$state",
            "eventtype": "broadcast on root scope",
            "description": "Fired when an **error occurs** during transition. It's important to note that if you\nhave any errors in your resolve functions (javascript errors, non-existent services, etc)\nthey will not throw traditionally. You must listen for this $stateChangeError event to\ncatch **ALL** errors.",
            "params": [
                {
                    "name": "event",
                    "description": "Event object.",
                    "type": "Object"
                },
                {
                    "name": "toState",
                    "description": "The state being transitioned to.",
                    "type": "State"
                },
                {
                    "name": "toParams",
                    "description": "The params supplied to the `toState`.",
                    "type": "Object"
                },
                {
                    "name": "fromState",
                    "description": "The current state, pre-transition.",
                    "type": "State"
                },
                {
                    "name": "fromParams",
                    "description": "The params supplied to the `fromState`.",
                    "type": "Object"
                },
                {
                    "name": "error",
                    "description": "The resolve error object.",
                    "type": "Error"
                }
            ],
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js",
            "line": 3391,
            "ngdoc": "function",
            "name": "ui.router.state.$state#is",
            "methodof": "ui.router.state.$state",
            "description": "Similar to {@link ui.router.state.$state#methods_includes $state.includes},\nbut only checks for the full state name. If params is supplied then it will be\ntested for strict equality against the current active params object, so all params\nmust match with none missing and no extras.",
            "example": [
                "\n<pre>\n$state.$current.name = 'contacts.details.item';\n\n// absolute name\n$state.is('contact.details.item'); // returns true\n$state.is(contactDetailItemStateObject); // returns true\n\n// relative name (. and ^), typically from a template\n// E.g. from the 'contacts.details' template\n<div ng-class=\"{highlighted: $state.is('.item')}\">Item</div>\n</pre>"
            ],
            "params": [
                {
                    "name": "stateOrName",
                    "description": "The state name (absolute or relative) or state object you'd like to check.",
                    "type": "String|object"
                },
                {
                    "name": "params",
                    "description": "A param object, e.g. `{sectionId: section.id}`, that you'd like\nto test against the current active state.",
                    "type": "Object="
                },
                {
                    "name": "options",
                    "description": "An options object.  The options are:\n\n- **`relative`** - {string|object} -  If `stateOrName` is a relative state name and `options.relative` is set, .is will\ntest relative to `options.relative` state (or name).",
                    "type": "Object="
                }
            ],
            "return": {
                "description": "Returns true if it is the state.",
                "type": "Boolean"
            },
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js",
            "line": 3434,
            "ngdoc": "function",
            "name": "ui.router.state.$state#includes",
            "methodof": "ui.router.state.$state",
            "description": "A method to determine if the current active state is equal to or is the child of the\nstate stateName. If any params are passed then they will be tested for a match as well.\nNot all the parameters need to be passed, just the ones you'd like to test for equality.",
            "example": [
                "\nPartial and relative names\n<pre>\n$state.$current.name = 'contacts.details.item';\n\n// Using partial names\n$state.includes(\"contacts\"); // returns true\n$state.includes(\"contacts.details\"); // returns true\n$state.includes(\"contacts.details.item\"); // returns true\n$state.includes(\"contacts.list\"); // returns false\n$state.includes(\"about\"); // returns false\n\n// Using relative names (. and ^), typically from a template\n// E.g. from the 'contacts.details' template\n<div ng-class=\"{highlighted: $state.includes('.item')}\">Item</div>\n</pre>\n\nBasic globbing patterns\n<pre>\n$state.$current.name = 'contacts.details.item.url';\n\n$state.includes(\"*.details.*.*\"); // returns true\n$state.includes(\"*.details.**\"); // returns true\n$state.includes(\"**.item.**\"); // returns true\n$state.includes(\"*.details.item.url\"); // returns true\n$state.includes(\"*.details.*.url\"); // returns true\n$state.includes(\"*.details.*\"); // returns false\n$state.includes(\"item.**\"); // returns false\n</pre>"
            ],
            "params": [
                {
                    "name": "stateOrName",
                    "description": "A partial name, relative name, or glob pattern\nto be searched for within the current state name.",
                    "type": "String"
                },
                {
                    "name": "params",
                    "description": "A param object, e.g. `{sectionId: section.id}`,\nthat you'd like to test against the current active state.",
                    "type": "Object="
                },
                {
                    "name": "options",
                    "description": "An options object.  The options are:\n\n- **`relative`** - {string|object=} -  If `stateOrName` is a relative state reference and `options.relative` is set,\n.includes will test relative to `options.relative` state (or name).",
                    "type": "Object="
                }
            ],
            "return": {
                "description": "Returns true if it does include the state",
                "type": "Boolean"
            },
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js",
            "line": 3501,
            "ngdoc": "function",
            "name": "ui.router.state.$state#href",
            "methodof": "ui.router.state.$state",
            "description": "A url generation method that returns the compiled url for the given state populated with the given params.",
            "example": [
                "\n<pre>\nexpect($state.href(\"about.person\", { person: \"bob\" })).toEqual(\"/about/bob\");\n</pre>"
            ],
            "params": [
                {
                    "name": "stateOrName",
                    "description": "The state name or state object you'd like to generate a url from.",
                    "type": "String|object"
                },
                {
                    "name": "params",
                    "description": "An object of parameter values to fill the state's required parameters.",
                    "type": "Object="
                },
                {
                    "name": "options",
                    "description": "Options object. The options are:\n\n- **`lossy`** - {boolean=true} -  If true, and if there is no url associated with the state provided in the\n   first parameter, then the constructed href url will be built from the first navigable ancestor (aka\n   ancestor with a valid url).\n- **`inherit`** - {boolean=true}, If `true` will inherit url parameters from current url.\n- **`relative`** - {object=$state.$current}, When transitioning with relative path (e.g '^'), \n   defines which state to be relative from.\n- **`absolute`** - {boolean=false},  If true will generate an absolute url, e.g. \"http://www.example.com/fullurl\".",
                    "type": "Object="
                }
            ],
            "return": {
                "description": "compiled state url",
                "type": "String"
            },
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js",
            "line": 3551,
            "ngdoc": "function",
            "name": "ui.router.state.$state#get",
            "methodof": "ui.router.state.$state",
            "description": "Returns the state configuration object for any specific state or all states.",
            "params": [
                {
                    "name": "stateOrName",
                    "description": "(absolute or relative) If provided, will only get the config for\nthe requested state. If not provided, returns an array of ALL state configs.",
                    "type": "String|object="
                },
                {
                    "name": "context",
                    "description": "When stateOrName is a relative state reference, the state will be retrieved relative to context.",
                    "type": "String|object="
                }
            ],
            "return": {
                "description": "State configuration object or array of all objects.",
                "type": "Object|Array"
            },
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js",
            "line": 3662,
            "ngdoc": "object",
            "name": "ui.router.state.$view",
            "requires": [
                "ui.router.util.$templateFactory",
                "$rootScope"
            ],
            "description": "",
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js",
            "line": 3676,
            "ngdoc": "function",
            "name": "ui.router.state.$view#load",
            "methodof": "ui.router.state.$view",
            "description": "",
            "params": [
                {
                    "name": "name",
                    "description": "name",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "option object.",
                    "type": "Object"
                }
            ],
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js",
            "line": 3703,
            "ngdoc": "object",
            "name": "ui.router.state.$uiViewScrollProvider",
            "description": "Provider that returns the {@link ui.router.state.$uiViewScroll} service function.",
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js",
            "line": 3714,
            "ngdoc": "function",
            "name": "ui.router.state.$uiViewScrollProvider#useAnchorScroll",
            "methodof": "ui.router.state.$uiViewScrollProvider",
            "description": "Reverts back to using the core [`$anchorScroll`](http://docs.angularjs.org/api/ng.$anchorScroll) service for\nscrolling based on the url anchor.",
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js",
            "line": 3727,
            "ngdoc": "object",
            "name": "ui.router.state.$uiViewScroll",
            "requires": [
                "$anchorScroll",
                "$timeout"
            ],
            "description": "When called with a jqLite element, it scrolls the element into view (after a\n`$timeout` so the DOM has time to refresh).\n\nIf you prefer to rely on `$anchorScroll` to scroll the view to the anchor,\nthis can be enabled by calling {@link ui.router.state.$uiViewScrollProvider#methods_useAnchorScroll `$uiViewScrollProvider.useAnchorScroll()`}.",
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js",
            "line": 3758,
            "ngdoc": "directive",
            "name": "ui.router.state.directive:ui-view",
            "requires": [
                "ui.router.state.$state",
                "$compile",
                "$controller",
                "$injector",
                "ui.router.state.$uiViewScroll",
                "$document"
            ],
            "restrict": "ECA",
            "description": "The ui-view directive tells $state where to place your templates.",
            "params": [
                {
                    "name": "name",
                    "description": "A view name. The name should be unique amongst the other views in the\nsame state. You can have views of the same name that live in different states.",
                    "type": "String="
                },
                {
                    "name": "autoscroll",
                    "description": "It allows you to set the scroll behavior of the browser window\nwhen a view is populated. By default, $anchorScroll is overridden by ui-router's custom scroll\nservice, {@link ui.router.state.$uiViewScroll}. This custom service let's you\nscroll ui-view elements into view when they are populated during a state activation.",
                    "type": "String="
                },
                {
                    "name": "noanimation",
                    "description": "If truthy, the non-animated renderer will be selected (no animations\nwill be applied to the ui-view)\n\n*Note: To revert back to old [`$anchorScroll`](http://docs.angularjs.org/api/ng.$anchorScroll)\nfunctionality, call `$uiViewScrollProvider.useAnchorScroll()`.*",
                    "type": "String="
                },
                {
                    "name": "onload",
                    "description": "Expression to evaluate whenever the view updates.",
                    "type": "String="
                }
            ],
            "example": [
                "\nA view can be unnamed or named. \n<pre>\n<!-- Unnamed -->\n<div ui-view></div> \n\n<!-- Named -->\n<div ui-view=\"viewName\"></div>\n</pre>\n\nYou can only have one unnamed view within any template (or root html). If you are only using a \nsingle view and it is unnamed then you can populate it like so:\n<pre>\n<div ui-view></div> \n$stateProvider.state(\"home\", {\n  template: \"<h1>HELLO!</h1>\"\n})\n</pre>\n\nThe above is a convenient shortcut equivalent to specifying your view explicitly with the {@link ui.router.state.$stateProvider#views `views`}\nconfig property, by name, in this case an empty name:\n<pre>\n$stateProvider.state(\"home\", {\n  views: {\n    \"\": {\n      template: \"<h1>HELLO!</h1>\"\n    }\n  }    \n})\n</pre>\n\nBut typically you'll only use the views property if you name your view or have more than one view \nin the same template. There's not really a compelling reason to name a view if its the only one, \nbut you could if you wanted, like so:\n<pre>\n<div ui-view=\"main\"></div>\n</pre> \n<pre>\n$stateProvider.state(\"home\", {\n  views: {\n    \"main\": {\n      template: \"<h1>HELLO!</h1>\"\n    }\n  }    \n})\n</pre>\n\nReally though, you'll use views to set up multiple views:\n<pre>\n<div ui-view></div>\n<div ui-view=\"chart\"></div> \n<div ui-view=\"data\"></div> \n</pre>\n\n<pre>\n$stateProvider.state(\"home\", {\n  views: {\n    \"\": {\n      template: \"<h1>HELLO!</h1>\"\n    },\n    \"chart\": {\n      template: \"<chart_thing/>\"\n    },\n    \"data\": {\n      template: \"<data_thing/>\"\n    }\n  }    \n})\n</pre>\n\nExamples for `autoscroll`:\n\n<pre>\n<!-- If autoscroll present with no expression,\n     then scroll ui-view into view -->\n<ui-view autoscroll/>\n\n<!-- If autoscroll present with valid expression,\n     then scroll ui-view into view if expression evaluates to true -->\n<ui-view autoscroll='true'/>\n<ui-view autoscroll='false'/>\n<ui-view autoscroll='scopeVariable'/>\n</pre>"
            ],
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js",
            "line": 4007,
            "ngdoc": "event",
            "name": "ui.router.state.directive:ui-view#$viewContentLoading",
            "eventof": "ui.router.state.directive:ui-view",
            "eventtype": "emits on ui-view directive scope",
            "description": "Fired once the view **begins loading**, *before* the DOM is rendered.",
            "params": [
                {
                    "name": "event",
                    "description": "Event object.",
                    "type": "Object"
                },
                {
                    "name": "viewName",
                    "description": "Name of the view.",
                    "type": "String"
                }
            ],
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js",
            "line": 4036,
            "ngdoc": "event",
            "name": "ui.router.state.directive:ui-view#$viewContentLoaded",
            "eventof": "ui.router.state.directive:ui-view",
            "eventtype": "emits on ui-view directive scope",
            "description": "Fired once the view is **loaded**, *after* the DOM is rendered.",
            "params": [
                {
                    "name": "event",
                    "description": "Event object.",
                    "type": "Object"
                },
                {
                    "name": "viewName",
                    "description": "Name of the view.",
                    "type": "String"
                }
            ],
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js",
            "line": 4095,
            "description": "Shared ui-view code for both directives:\nGiven scope, element, and its attributes, return the view's name",
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js",
            "line": 4161,
            "ngdoc": "directive",
            "name": "ui.router.state.directive:ui-sref",
            "requires": [
                "ui.router.state.$state",
                "$timeout"
            ],
            "restrict": "A",
            "description": "A directive that binds a link (`<a>` tag) to a state. If the state has an associated\nURL, the directive will automatically generate & update the `href` attribute via\nthe {@link ui.router.state.$state#methods_href $state.href()} method. Clicking\nthe link will trigger a state transition with optional parameters.\n\nAlso middle-clicking, right-clicking, and ctrl-clicking on the link will be\nhandled natively by the browser.\n\nYou can also use relative state paths within ui-sref, just like the relative\npaths passed to `$state.go()`. You just need to be aware that the path is relative\nto the state that the link lives in, in other words the state that loaded the\ntemplate containing the link.\n\nYou can specify options to pass to {@link ui.router.state.$state#go $state.go()}\nusing the `ui-sref-opts` attribute. Options are restricted to `location`, `inherit`,\nand `reload`.",
            "example": [
                "\nHere's an example of how you'd use ui-sref and how it would compile. If you have the\nfollowing template:\n<pre>\n<a ui-sref=\"home\">Home</a> | <a ui-sref=\"about\">About</a> | <a ui-sref=\"{page: 2}\">Next page</a>\n\n<ul>\n    <li ng-repeat=\"contact in contacts\">\n        <a ui-sref=\"contacts.detail({ id: contact.id })\">{{ contact.name }}</a>\n    </li>\n</ul>\n</pre>\n\nThen the compiled html would be (assuming Html5Mode is off and current state is contacts):\n<pre>\n<a href=\"#/home\" ui-sref=\"home\">Home</a> | <a href=\"#/about\" ui-sref=\"about\">About</a> | <a href=\"#/contacts?page=2\" ui-sref=\"{page: 2}\">Next page</a>\n\n<ul>\n    <li ng-repeat=\"contact in contacts\">\n        <a href=\"#/contacts/1\" ui-sref=\"contacts.detail({ id: contact.id })\">Joe</a>\n    </li>\n    <li ng-repeat=\"contact in contacts\">\n        <a href=\"#/contacts/2\" ui-sref=\"contacts.detail({ id: contact.id })\">Alice</a>\n    </li>\n    <li ng-repeat=\"contact in contacts\">\n        <a href=\"#/contacts/3\" ui-sref=\"contacts.detail({ id: contact.id })\">Bob</a>\n    </li>\n</ul>\n\n<a ui-sref=\"home\" ui-sref-opts=\"{reload: true}\">Home</a>\n</pre>"
            ],
            "params": [
                {
                    "name": "ui-sref",
                    "description": "'stateName' can be any valid absolute or relative state",
                    "type": "String"
                },
                {
                    "name": "ui-sref-opts",
                    "description": "options to pass to {@link ui.router.state.$state#go $state.go()}",
                    "type": "Object"
                }
            ],
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js",
            "line": 4256,
            "ngdoc": "directive",
            "name": "ui.router.state.directive:ui-state",
            "requires": [
                "ui.router.state.uiSref"
            ],
            "restrict": "A",
            "description": "Much like ui-sref, but will accept named $scope properties to evaluate for a state definition,\nparams and override options.",
            "params": [
                {
                    "name": "ui-state",
                    "description": "'stateName' can be any valid absolute or relative state",
                    "type": "String"
                },
                {
                    "name": "ui-state-params",
                    "description": "params to pass to {@link ui.router.state.$state#href $state.href()}",
                    "type": "Object"
                },
                {
                    "name": "ui-state-opts",
                    "description": "options to pass to {@link ui.router.state.$state#go $state.go()}",
                    "type": "Object"
                }
            ],
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js",
            "line": 4302,
            "ngdoc": "directive",
            "name": "ui.router.state.directive:ui-sref-active",
            "requires": [
                "ui.router.state.$state",
                "ui.router.state.$stateParams",
                "$interpolate"
            ],
            "restrict": "A",
            "description": "A directive working alongside ui-sref to add classes to an element when the\nrelated ui-sref directive's state is active, and removing them when it is inactive.\nThe primary use-case is to simplify the special appearance of navigation menus\nrelying on `ui-sref`, by having the \"active\" state's menu button appear different,\ndistinguishing it from the inactive menu items.\n\nui-sref-active can live on the same element as ui-sref or on a parent element. The first\nui-sref-active found at the same level or above the ui-sref will be used.\n\nWill activate when the ui-sref's target state or any child state is active. If you\nneed to activate only when the ui-sref target state is active and *not* any of\nit's children, then you will use\n{@link ui.router.state.directive:ui-sref-active-eq ui-sref-active-eq}",
            "example": [
                "\nGiven the following template:\n<pre>\n<ul>\n  <li ui-sref-active=\"active\" class=\"item\">\n    <a href ui-sref=\"app.user({user: 'bilbobaggins'})\">@bilbobaggins</a>\n  </li>\n</ul>\n</pre>\n\n\nWhen the app state is \"app.user\" (or any children states), and contains the state parameter \"user\" with value \"bilbobaggins\",\nthe resulting HTML will appear as (note the 'active' class):\n<pre>\n<ul>\n  <li ui-sref-active=\"active\" class=\"item active\">\n    <a ui-sref=\"app.user({user: 'bilbobaggins'})\" href=\"/users/bilbobaggins\">@bilbobaggins</a>\n  </li>\n</ul>\n</pre>\n\nThe class name is interpolated **once** during the directives link time (any further changes to the\ninterpolated value are ignored).\n\nMultiple classes may be specified in a space-separated format:\n<pre>\n<ul>\n  <li ui-sref-active='class1 class2 class3'>\n    <a ui-sref=\"app.user\">link</a>\n  </li>\n</ul>\n</pre>\n\nIt is also possible to pass ui-sref-active an expression that evaluates\nto an object hash, whose keys represent active class names and whose\nvalues represent the respective state names/globs.\nui-sref-active will match if the current active state **includes** any of\nthe specified state names/globs, even the abstract ones.",
                "\nGiven the following template, with \"admin\" being an abstract state:\n<pre>\n<div ui-sref-active=\"{'active': 'admin.*'}\">\n  <a ui-sref-active=\"active\" ui-sref=\"admin.roles\">Roles</a>\n</div>\n</pre>\n\nWhen the current state is \"admin.roles\" the \"active\" class will be applied\nto both the <div> and <a> elements. It is important to note that the state\nnames/globs passed to ui-sref-active shadow the state provided by ui-sref."
            ],
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js",
            "line": 4379,
            "ngdoc": "directive",
            "name": "ui.router.state.directive:ui-sref-active-eq",
            "requires": [
                "ui.router.state.$state",
                "ui.router.state.$stateParams",
                "$interpolate"
            ],
            "restrict": "A",
            "description": "The same as {@link ui.router.state.directive:ui-sref-active ui-sref-active} but will only activate\nwhen the exact target state used in the `ui-sref` is active; no child states.",
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js",
            "line": 4448,
            "params": [
                {
                    "name": "state",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "params",
                    "description": "",
                    "type": "Object|string",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js",
            "line": 4500,
            "ngdoc": "filter",
            "name": "ui.router.state.filter:isState",
            "requires": [
                "ui.router.state.$state"
            ],
            "description": "Translates to {@link ui.router.state.$state#methods_is $state.is(\"stateName\")}.",
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js",
            "line": 4518,
            "ngdoc": "filter",
            "name": "ui.router.state.filter:includedByState",
            "requires": [
                "ui.router.state.$state"
            ],
            "description": "Translates to {@link ui.router.state.$state#methods_includes $state.includes('fullOrPartialStateName')}.",
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\release\\angular-ui-router.min.js",
            "line": 1,
            "description": "State-based routing for AngularJS",
            "version": "v0.2.18",
            "link": "http://angular-ui.github.com/",
            "license": "MIT License, http://www.opensource.org/licenses/MIT",
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\src\\common.js",
            "line": 30,
            "description": "Finds the common ancestor path between two states.",
            "params": [
                {
                    "name": "first",
                    "description": "The first state.",
                    "type": "Object"
                },
                {
                    "name": "second",
                    "description": "The second state.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns an array of state names in descending order, not including the root.",
                "type": "Array"
            },
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\src\\common.js",
            "line": 47,
            "description": "IE8-safe wrapper for `Object.keys()`.",
            "params": [
                {
                    "name": "object",
                    "description": "A JavaScript object.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns the keys of the object as an array.",
                "type": "Array"
            },
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\src\\common.js",
            "line": 65,
            "description": "IE8-safe wrapper for `Array.prototype.indexOf()`.",
            "params": [
                {
                    "name": "array",
                    "description": "A JavaScript array.",
                    "type": "Array"
                },
                {
                    "name": "value",
                    "description": "A value to search the array for.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns the array index value of `value`, or `-1` if not present.",
                "type": "Number"
            },
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\src\\common.js",
            "line": 87,
            "description": "Merges a set of parameters with all parameters inherited between the common parents of the\ncurrent state and a given destination state.",
            "params": [
                {
                    "name": "currentParams",
                    "description": "The value of the current state parameters ($stateParams).",
                    "type": "Object"
                },
                {
                    "name": "newParams",
                    "description": "The set of parameters which will be composited with inherited params.",
                    "type": "Object"
                },
                {
                    "name": "$current",
                    "description": "Internal definition of object representing the current state.",
                    "type": "Object"
                },
                {
                    "name": "$to",
                    "description": "Internal definition of object representing state to transition to.",
                    "type": "Object"
                }
            ],
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\src\\common.js",
            "line": 113,
            "description": "Performs a non-strict comparison of the subset of two objects, defined by a list of keys.",
            "params": [
                {
                    "name": "a",
                    "description": "The first object.",
                    "type": "Object"
                },
                {
                    "name": "b",
                    "description": "The second object.",
                    "type": "Object"
                },
                {
                    "name": "keys",
                    "description": "The list of keys within each object to compare. If the list is empty or not specified,\n                    it defaults to the list of keys in `a`.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "Returns `true` if the keys match, otherwise `false`.",
                "type": "Boolean"
            },
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\src\\common.js",
            "line": 135,
            "description": "Returns the subset of an object, based on a list of keys.",
            "params": [
                {
                    "name": "keys",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "values",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns a subset of `values`.",
                "type": "Boolean"
            },
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\src\\common.js",
            "line": 212,
            "ngdoc": "overview",
            "name": "ui.router.util",
            "description": "# ui.router.util sub-module\n\nThis module is a dependency of other sub-modules. Do not include this module as a dependency\nin your angular app (use {@link ui.router} module instead).",
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\src\\common.js",
            "line": 225,
            "ngdoc": "overview",
            "name": "ui.router.router",
            "requires": [
                "ui.router.util"
            ],
            "description": "# ui.router.router sub-module\n\nThis module is a dependency of other sub-modules. Do not include this module as a dependency\nin your angular app (use {@link ui.router} module instead).",
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\src\\common.js",
            "line": 239,
            "ngdoc": "overview",
            "name": "ui.router.state",
            "requires": [
                "ui.router.router",
                "ui.router.util"
            ],
            "description": "# ui.router.state sub-module\n\nThis module is a dependency of the main ui.router module. Do not include this module as a dependency\nin your angular app (use {@link ui.router} module instead).",
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\src\\common.js",
            "line": 255,
            "ngdoc": "overview",
            "name": "ui.router",
            "requires": [
                "ui.router.state"
            ],
            "description": "# ui.router\n\n## The main module for ui.router \nThere are several sub-modules included with the ui.router module, however only this module is needed\nas a dependency within your angular app. The other modules are for organization purposes. \n\nThe modules are:\n* ui.router - the main \"umbrella\" module\n* ui.router.router - \n\n*You'll need to include **only** this module as the dependency within your angular app.*\n\n<pre>\n<!doctype html>\n<html ng-app=\"myApp\">\n<head>\n  <script src=\"js/angular.js\"></script>\n  <!-- Include the ui-router script -->\n  <script src=\"js/angular-ui-router.min.js\"></script>\n  <script>\n    // ...and add 'ui.router' as a dependency\n    var myApp = angular.module('myApp', ['ui.router']);\n  </script>\n</head>\n<body>\n</body>\n</html>\n</pre>",
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\src\\resolve.js",
            "line": 1,
            "ngdoc": "object",
            "name": "ui.router.util.$resolve",
            "requires": [
                "$q",
                "$injector"
            ],
            "description": "Manages resolution of (acyclic) graphs of promises.",
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\src\\resolve.js",
            "line": 22,
            "ngdoc": "function",
            "name": "ui.router.util.$resolve#study",
            "methodof": "ui.router.util.$resolve",
            "description": "Studies a set of invocables that are likely to be used multiple times.\n<pre>\n$resolve.study(invocables)(locals, parent, self)\n</pre>\nis equivalent to\n<pre>\n$resolve.resolve(invocables, locals, parent, self)\n</pre>\nbut the former is more efficient (in fact `resolve` just calls `study` \ninternally).",
            "params": [
                {
                    "name": "invocables",
                    "description": "Invocable objects",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "a function to pass in locals, parent and self",
                "type": "Function"
            },
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\src\\resolve.js",
            "line": 185,
            "ngdoc": "function",
            "name": "ui.router.util.$resolve#resolve",
            "methodof": "ui.router.util.$resolve",
            "description": "Resolves a set of invocables. An invocable is a function to be invoked via \n`$injector.invoke()`, and can have an arbitrary number of dependencies. \nAn invocable can either return a value directly,\nor a `$q` promise. If a promise is returned it will be resolved and the \nresulting value will be used instead. Dependencies of invocables are resolved \n(in this order of precedence)\n\n- from the specified `locals`\n- from another invocable that is part of this `$resolve` call\n- from an invocable that is inherited from a `parent` call to `$resolve` \n  (or recursively\n- from any ancestor `$resolve` of that parent).\n\nThe return value of `$resolve` is a promise for an object that contains \n(in this order of precedence)\n\n- any `locals` (if specified)\n- the resolved return values of all injectables\n- any values inherited from a `parent` call to `$resolve` (if specified)\n\nThe promise will resolve after the `parent` promise (if any) and all promises \nreturned by injectables have been resolved. If any invocable \n(or `$injector.invoke`) throws an exception, or if a promise returned by an \ninvocable is rejected, the `$resolve` promise is immediately rejected with the \nsame error. A rejection of a `parent` promise (if specified) will likewise be \npropagated immediately. Once the `$resolve` promise has been rejected, no \nfurther invocables will be called.\n\nCyclic dependencies between invocables are not permitted and will cause `$resolve`\nto throw an error. As a special case, an injectable can depend on a parameter \nwith the same name as the injectable, which will be fulfilled from the `parent` \ninjectable of the same name. This allows inherited values to be decorated. \nNote that in this case any other injectable in the same `$resolve` with the same\ndependency would see the decorated value, not the inherited value.\n\nNote that missing dependencies -- unlike cyclic dependencies -- will cause an \n(asynchronous) rejection of the `$resolve` promise rather than a (synchronous) \nexception.\n\nInvocables are invoked eagerly as soon as all dependencies are available. \nThis is true even for dependencies inherited from a `parent` call to `$resolve`.\n\nAs a special case, an invocable can be a string, in which case it is taken to \nbe a service name to be passed to `$injector.get()`. This is supported primarily \nfor backwards-compatibility with the `resolve` property of `$routeProvider` \nroutes.",
            "params": [
                {
                    "name": "invocables",
                    "description": "functions to invoke or \n`$injector` services to fetch.",
                    "type": "Object"
                },
                {
                    "name": "locals",
                    "description": "values to make available to the injectables",
                    "type": "Object"
                },
                {
                    "name": "parent",
                    "description": "a promise returned by another call to `$resolve`.",
                    "type": "Object"
                },
                {
                    "name": "self",
                    "description": "the `this` for the invoked methods",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Promise for an object that contains the resolved return value\nof all invocables, as well as any inherited and local values.",
                "type": "Object"
            },
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\src\\state.js",
            "line": 1,
            "ngdoc": "object",
            "name": "ui.router.state.$stateProvider",
            "requires": [
                "ui.router.router.$urlRouterProvider",
                "ui.router.util.$urlMatcherFactoryProvider"
            ],
            "description": "The new `$stateProvider` works similar to Angular's v1 router, but it focuses purely\non state.\n\nA state corresponds to a \"place\" in the application in terms of the overall UI and\nnavigation. A state describes (via the controller / template / view properties) what\nthe UI looks like and does at that place.\n\nStates often have things in common, and the primary way of factoring out these\ncommonalities in this model is via the state hierarchy, i.e. parent/child states aka\nnested states.\n\nThe `$stateProvider` provides interfaces to declare these states for your app.",
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\src\\state.js",
            "line": 255,
            "ngdoc": "function",
            "name": "ui.router.state.$stateProvider#decorator",
            "methodof": "ui.router.state.$stateProvider",
            "description": "Allows you to extend (carefully) or override (at your own peril) the \n`stateBuilder` object used internally by `$stateProvider`. This can be used \nto add custom functionality to ui-router, for example inferring templateUrl \nbased on the state name.\n\nWhen passing only a name, it returns the current (original or decorated) builder\nfunction that matches `name`.\n\nThe builder functions that can be decorated are listed below. Though not all\nnecessarily have a good use case for decoration, that is up to you to decide.\n\nIn addition, users can attach custom decorators, which will generate new \nproperties within the state's internal definition. There is currently no clear \nuse-case for this beyond accessing internal states (i.e. $state.$current), \nhowever, expect this to become increasingly relevant as we introduce additional \nmeta-programming features.\n\n**Warning**: Decorators should not be interdependent because the order of \nexecution of the builder functions in non-deterministic. Builder functions \nshould only be dependent on the state definition object and super function.\n\n\nExisting builder functions and current return values:\n\n- **parent** `{object}` - returns the parent state object.\n- **data** `{object}` - returns state data, including any inherited data that is not\n  overridden by own values (if any).\n- **url** `{object}` - returns a {@link ui.router.util.type:UrlMatcher UrlMatcher}\n  or `null`.\n- **navigable** `{object}` - returns closest ancestor state that has a URL (aka is \n  navigable).\n- **params** `{object}` - returns an array of state params that are ensured to \n  be a super-set of parent's params.\n- **views** `{object}` - returns a views object where each key is an absolute view \n  name (i.e. \"viewName@stateName\") and each value is the config object \n  (template, controller) for the view. Even when you don't use the views object \n  explicitly on a state config, one is still created for you internally.\n  So by decorating this builder function you have access to decorating template \n  and controller properties.\n- **ownParams** `{object}` - returns an array of params that belong to the state, \n  not including any params defined by ancestor states.\n- **path** `{string}` - returns the full path from the root down to this state. \n  Needed for state activation.\n- **includes** `{object}` - returns an object that includes every state that \n  would pass a `$state.includes()` test.",
            "example": [
                "\n<pre>\n// Override the internal 'views' builder with a function that takes the state\n// definition, and a reference to the internal function being overridden:\n$stateProvider.decorator('views', function (state, parent) {\n  var result = {},\n      views = parent(state);\n\n  angular.forEach(views, function (config, name) {\n    var autoName = (state.name + '.' + name).replace('.', '/');\n    config.templateUrl = config.templateUrl || '/partials/' + autoName + '.html';\n    result[name] = config;\n  });\n  return result;\n});\n\n$stateProvider.state('home', {\n  views: {\n    'contact.list': { controller: 'ListController' },\n    'contact.item': { controller: 'ItemController' }\n  }\n});\n\n// ...\n\n$state.go('home');\n// Auto-populates list and item views with /partials/home/contact/list.html,\n// and /partials/home/contact/item.html, respectively.\n</pre>"
            ],
            "params": [
                {
                    "name": "name",
                    "description": "The name of the builder function to decorate.",
                    "type": "String"
                },
                {
                    "name": "func",
                    "description": "A function that is responsible for decorating the original \nbuilder function. The function receives two parameters:\n\n  - `{object}` - state - The state config object.\n  - `{object}` - super - The original builder function.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "$stateProvider - $stateProvider instance",
                "type": "Object"
            },
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\src\\state.js",
            "line": 362,
            "ngdoc": "function",
            "name": "ui.router.state.$stateProvider#state",
            "methodof": "ui.router.state.$stateProvider",
            "description": "Registers a state configuration under a given state name. The stateConfig object\nhas the following acceptable properties.",
            "params": [
                {
                    "name": "name",
                    "description": "A unique state name, e.g. \"home\", \"about\", \"contacts\".\nTo create a parent/child state use a dot, e.g. \"about.sales\", \"home.newest\".",
                    "type": "String"
                },
                {
                    "name": "stateConfig",
                    "description": "State configuration object.",
                    "type": "Object",
                    "props": [
                        {
                            "name": "template\n<a",
                            "description": "id='template'></a>\n  html template as a string or a function that returns\n  an html template as a string which should be used by the uiView directives. This property \n  takes precedence over templateUrl.\n  \n  If `template` is a function, it will be called with the following parameters:\n\n  - {array.&lt;object&gt;} - state parameters extracted from the current $location.path() by\n    applying the current state\n\n<pre>template:\n  \"<h1>inline template definition</h1>\" +\n  \"<div ui-view></div>\"</pre>\n<pre>template: function(params) {\n      return \"<h1>generated template</h1>\"; }</pre>\n</div>",
                            "type": "String|function="
                        },
                        {
                            "name": "templateUrl\n<a",
                            "description": "id='templateUrl'></a>\n\n  path or function that returns a path to an html\n  template that should be used by uiView.\n  \n  If `templateUrl` is a function, it will be called with the following parameters:\n\n  - {array.&lt;object&gt;} - state parameters extracted from the current $location.path() by \n    applying the current state\n\n<pre>templateUrl: \"home.html\"</pre>\n<pre>templateUrl: function(params) {\n    return myTemplates[params.pageId]; }</pre>",
                            "type": "String|function="
                        },
                        {
                            "name": "templateProvider\n<a",
                            "description": "id='templateProvider'></a>\n   Provider function that returns HTML content string.\n<pre> templateProvider:\n      function(MyTemplateService, params) {\n        return MyTemplateService.getTemplate(params.pageId);\n      }</pre>",
                            "type": "Function="
                        },
                        {
                            "name": "controller\n<a",
                            "description": "id='controller'></a>\n\n Controller fn that should be associated with newly\n  related scope or the name of a registered controller if passed as a string.\n  Optionally, the ControllerAs may be declared here.\n<pre>controller: \"MyRegisteredController\"</pre>\n<pre>controller:\n    \"MyRegisteredController as fooCtrl\"}</pre>\n<pre>controller: function($scope, MyService) {\n    $scope.data = MyService.getData(); }</pre>",
                            "type": "String|function="
                        },
                        {
                            "name": "controllerProvider\n<a",
                            "description": "id='controllerProvider'></a>\n\nInjectable provider function that returns the actual controller or string.\n<pre>controllerProvider:\n  function(MyResolveData) {\n    if (MyResolveData.foo)\n      return \"FooCtrl\"\n    else if (MyResolveData.bar)\n      return \"BarCtrl\";\n    else return function($scope) {\n      $scope.baz = \"Qux\";\n    }\n  }</pre>",
                            "type": "Function="
                        },
                        {
                            "name": "controllerAs\n<a",
                            "description": "id='controllerAs'></a>\n\nA controller alias name. If present the controller will be\n  published to scope under the controllerAs name.\n<pre>controllerAs: \"myCtrl\"</pre>",
                            "type": "String="
                        },
                        {
                            "name": "parent\n<a",
                            "description": "id='parent'></a>\nOptionally specifies the parent state of this state.\n\n<pre>parent: 'parentState'</pre>\n<pre>parent: parentState // JS variable</pre>",
                            "type": "String|object="
                        },
                        {
                            "name": "resolve\n<a",
                            "description": "id='resolve'></a>\n\nAn optional map&lt;string, function&gt; of dependencies which\n  should be injected into the controller. If any of these dependencies are promises, \n  the router will wait for them all to be resolved before the controller is instantiated.\n  If all the promises are resolved successfully, the $stateChangeSuccess event is fired\n  and the values of the resolved promises are injected into any controllers that reference them.\n  If any  of the promises are rejected the $stateChangeError event is fired.\n\n  The map object is:\n  \n  - key - {string}: name of dependency to be injected into controller\n  - factory - {string|function}: If string then it is alias for service. Otherwise if function, \n    it is injected and return value it treated as dependency. If result is a promise, it is \n    resolved before its value is injected into controller.\n\n<pre>resolve: {\n    myResolve1:\n      function($http, $stateParams) {\n        return $http.get(\"/api/foos/\"+stateParams.fooID);\n      }\n    }</pre>",
                            "type": "Object="
                        },
                        {
                            "name": "url\n<a",
                            "description": "id='url'></a>\n\n  A url fragment with optional parameters. When a state is navigated or\n  transitioned to, the `$stateParams` service will be populated with any \n  parameters that were passed.\n\n  (See {@link ui.router.util.type:UrlMatcher UrlMatcher} `UrlMatcher`} for\n  more details on acceptable patterns )\n\nexamples:\n<pre>url: \"/home\"\nurl: \"/users/:userid\"\nurl: \"/books/{bookid:[a-zA-Z_-]}\"\nurl: \"/books/{categoryid:int}\"\nurl: \"/books/{publishername:string}/{categoryid:int}\"\nurl: \"/messages?before&after\"\nurl: \"/messages?{before:date}&{after:date}\"\nurl: \"/messages/:mailboxid?{before:date}&{after:date}\"\n</pre>",
                            "type": "String="
                        },
                        {
                            "name": "views\n<a",
                            "description": "id='views'></a>\nan optional map&lt;string, object&gt; which defined multiple views, or targets views\nmanually/explicitly.\n\nExamples:\n\nTargets three named `ui-view`s in the parent state's template\n<pre>views: {\n    header: {\n      controller: \"headerCtrl\",\n      templateUrl: \"header.html\"\n    }, body: {\n      controller: \"bodyCtrl\",\n      templateUrl: \"body.html\"\n    }, footer: {\n      controller: \"footCtrl\",\n      templateUrl: \"footer.html\"\n    }\n  }</pre>\n\nTargets named `ui-view=\"header\"` from grandparent state 'top''s template, and named `ui-view=\"body\" from parent state's template.\n<pre>views: {\n    'header@top': {\n      controller: \"msgHeaderCtrl\",\n      templateUrl: \"msgHeader.html\"\n    }, 'body': {\n      controller: \"messagesCtrl\",\n      templateUrl: \"messages.html\"\n    }\n  }</pre>",
                            "type": "Object="
                        },
                        {
                            "name": "abstract",
                            "description": "\n<a id='abstract'></a>\nAn abstract state will never be directly activated,\n  but can provide inherited properties to its common children states.\n<pre>abstract: true</pre>",
                            "type": "Boolean=",
                            "optional": true,
                            "optdefault": "false"
                        },
                        {
                            "name": "onEnter\n<a",
                            "description": "id='onEnter'></a>\n\nCallback function for when a state is entered. Good way\n  to trigger an action or dispatch an event, such as opening a dialog.\nIf minifying your scripts, make sure to explicitly annotate this function,\nbecause it won't be automatically annotated by your build tools.\n\n<pre>onEnter: function(MyService, $stateParams) {\n    MyService.foo($stateParams.myParam);\n}</pre>",
                            "type": "Function="
                        },
                        {
                            "name": "onExit\n<a",
                            "description": "id='onExit'></a>\n\nCallback function for when a state is exited. Good way to\n  trigger an action or dispatch an event, such as opening a dialog.\nIf minifying your scripts, make sure to explicitly annotate this function,\nbecause it won't be automatically annotated by your build tools.\n\n<pre>onExit: function(MyService, $stateParams) {\n    MyService.cleanup($stateParams.myParam);\n}</pre>",
                            "type": "Function="
                        },
                        {
                            "name": "reloadOnSearch",
                            "description": "\n<a id='reloadOnSearch'></a>\n\nIf `false`, will not retrigger the same state\n  just because a search/query parameter has changed (via $location.search() or $location.hash()). \n  Useful for when you'd like to modify $location.search() without triggering a reload.\n<pre>reloadOnSearch: false</pre>",
                            "type": "Boolean=",
                            "optional": true,
                            "optdefault": "true"
                        },
                        {
                            "name": "data\n<a",
                            "description": "id='data'></a>\n\nArbitrary data object, useful for custom configuration.  The parent state's `data` is\n  prototypally inherited.  In other words, adding a data property to a state adds it to\n  the entire subtree via prototypal inheritance.\n\n<pre>data: {\n    requiredRole: 'foo'\n} </pre>",
                            "type": "Object="
                        },
                        {
                            "name": "params\n<a",
                            "description": "id='params'></a>\n\nA map which optionally configures parameters declared in the `url`, or\n  defines additional non-url parameters.  For each parameter being\n  configured, add a configuration object keyed to the name of the parameter.\n\n  Each parameter configuration object may contain the following properties:\n\n  - ** value ** - {object|function=}: specifies the default value for this\n    parameter.  This implicitly sets this parameter as optional.\n\n    When UI-Router routes to a state and no value is\n    specified for this parameter in the URL or transition, the\n    default value will be used instead.  If `value` is a function,\n    it will be injected and invoked, and the return value used.\n\n    *Note*: `undefined` is treated as \"no default value\" while `null`\n    is treated as \"the default value is `null`\".\n\n    *Shorthand*: If you only need to configure the default value of the\n    parameter, you may use a shorthand syntax.   In the **`params`**\n    map, instead mapping the param name to a full parameter configuration\n    object, simply set map it to the default parameter value, e.g.:\n\n<pre>// define a parameter's default value\nparams: {\n    param1: { value: \"defaultValue\" }\n}\n// shorthand default values\nparams: {\n    param1: \"defaultValue\",\n    param2: \"param2Default\"\n}</pre>\n\n  - ** array ** - {boolean=}: *(default: false)* If true, the param value will be\n    treated as an array of values.  If you specified a Type, the value will be\n    treated as an array of the specified Type.  Note: query parameter values\n    default to a special `\"auto\"` mode.\n\n    For query parameters in `\"auto\"` mode, if multiple  values for a single parameter\n    are present in the URL (e.g.: `/foo?bar=1&bar=2&bar=3`) then the values\n    are mapped to an array (e.g.: `{ foo: [ '1', '2', '3' ] }`).  However, if\n    only one value is present (e.g.: `/foo?bar=1`) then the value is treated as single\n    value (e.g.: `{ foo: '1' }`).\n\n<pre>params: {\n    param1: { array: true }\n}</pre>\n\n  - ** squash ** - {bool|string=}: `squash` configures how a default parameter value is represented in the URL when\n    the current parameter value is the same as the default value. If `squash` is not set, it uses the\n    configured default squash policy.\n    (See {@link ui.router.util.$urlMatcherFactory#methods_defaultSquashPolicy `defaultSquashPolicy()`})\n\n  There are three squash settings:\n\n    - false: The parameter's default value is not squashed.  It is encoded and included in the URL\n    - true: The parameter's default value is omitted from the URL.  If the parameter is preceeded and followed\n      by slashes in the state's `url` declaration, then one of those slashes are omitted.\n      This can allow for cleaner looking URLs.\n    - `\"<arbitrary string>\"`: The parameter's default value is replaced with an arbitrary placeholder of  your choice.\n\n<pre>params: {\n    param1: {\n      value: \"defaultId\",\n      squash: true\n} }\n// squash \"defaultValue\" to \"~\"\nparams: {\n    param1: {\n      value: \"defaultValue\",\n      squash: \"~\"\n} }\n</pre>",
                            "type": "Object="
                        }
                    ]
                }
            ],
            "example": [
                "\n<pre>\n// Some state name examples\n\n// stateName can be a single top-level name (must be unique).\n$stateProvider.state(\"home\", {});\n\n// Or it can be a nested state name. This state is a child of the\n// above \"home\" state.\n$stateProvider.state(\"home.newest\", {});\n\n// Nest states as deeply as needed.\n$stateProvider.state(\"home.newest.abc.xyz.inception\", {});\n\n// state() returns $stateProvider, so you can chain state declarations.\n$stateProvider\n  .state(\"home\", {})\n  .state(\"about\", {})\n  .state(\"contacts\", {});\n</pre>\n"
            ],
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\src\\state.js",
            "line": 690,
            "ngdoc": "object",
            "name": "params A param object, e.g. {sectionId: section.id)}, that !~YUIDOC_LINE~!you'd like to test against the current active state.",
            "requires": [
                "$rootScope",
                "$q",
                "ui.router.state.$view",
                "$injector",
                "ui.router.util.$resolve",
                "ui.router.state.$stateParams",
                "ui.router.router.$urlRouter"
            ],
            "itemtype": "property",
            "type": "Object",
            "description": "`$state` service is responsible for representing states as well as transitioning\nbetween them. It also provides interfaces to ask for current state or even states\nyou're coming from.",
            "class": "",
            "module": "ngMock",
            "subprops": [
                {
                    "name": "current",
                    "description": "A reference to the state's config object. However \nyou passed it in. Useful for accessing custom data.",
                    "type": "Object"
                },
                {
                    "name": "transition",
                    "description": "Currently pending transition. A promise that'll \nresolve or reject.",
                    "type": "Object"
                }
            ]
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\src\\state.js",
            "line": 726,
            "ngdoc": "event",
            "name": "ui.router.state.$state#$stateNotFound",
            "eventof": "ui.router.state.$state",
            "eventtype": "broadcast on root scope",
            "description": "Fired when a requested state **cannot be found** using the provided state name during transition.\nThe event is broadcast allowing any handlers a single chance to deal with the error (usually by\nlazy-loading the unfound state). A special `unfoundState` object is passed to the listener handler,\nyou can see its three properties in the example. You can use `event.preventDefault()` to abort the\ntransition and the promise returned from `go` will be rejected with a `'transition aborted'` value.",
            "params": [
                {
                    "name": "event",
                    "description": "Event object.",
                    "type": "Object"
                },
                {
                    "name": "unfoundState",
                    "description": "Unfound State information. Contains: `to, toParams, options` properties.",
                    "type": "Object"
                },
                {
                    "name": "fromState",
                    "description": "Current state object.",
                    "type": "State"
                },
                {
                    "name": "fromParams",
                    "description": "Current state params.",
                    "type": "Object"
                }
            ],
            "example": [
                "\n\n<pre>\n// somewhere, assume lazy.state has not been defined\n$state.go(\"lazy.state\", {a:1, b:2}, {inherit:false});\n\n// somewhere else\n$scope.$on('$stateNotFound',\nfunction(event, unfoundState, fromState, fromParams){\n    console.log(unfoundState.to); // \"lazy.state\"\n    console.log(unfoundState.toParams); // {a:1, b:2}\n    console.log(unfoundState.options); // {inherit:false} + default options\n})\n</pre>"
            ],
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\src\\state.js",
            "line": 797,
            "ngdoc": "function",
            "name": "ui.router.state.$state#reload",
            "methodof": "ui.router.state.$state",
            "description": "A method that force reloads the current state. All resolves are re-resolved,\ncontrollers reinstantiated, and events re-fired.",
            "example": [
                "\n<pre>\nvar app angular.module('app', ['ui.router']);\n\napp.controller('ctrl', function ($scope, $state) {\n  $scope.reload = function(){\n    $state.reload();\n  }\n});\n</pre>\n\n`reload()` is just an alias for:\n<pre>\n$state.transitionTo($state.current, $stateParams, { \n  reload: true, inherit: false, notify: true\n});\n</pre>",
                "\n<pre>\n//assuming app application consists of 3 states: 'contacts', 'contacts.detail', 'contacts.detail.item' \n//and current state is 'contacts.detail.item'\nvar app angular.module('app', ['ui.router']);\n\napp.controller('ctrl', function ($scope, $state) {\n  $scope.reload = function(){\n    //will reload 'contact.detail' and 'contact.detail.item' states\n    $state.reload('contact.detail');\n  }\n});\n</pre>\n\n`reload()` is just an alias for:\n<pre>\n$state.transitionTo($state.current, $stateParams, { \n  reload: true, inherit: false, notify: true\n});\n</pre>"
            ],
            "params": [
                {
                    "name": "state",
                    "description": "- A state name or a state object, which is the root of the resolves to be re-resolved.",
                    "type": "String=|object="
                }
            ],
            "return": {
                "description": "A promise representing the state of the new transition. See\n{@link ui.router.state.$state#methods_go $state.go}.",
                "type": "Promise"
            },
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\src\\state.js",
            "line": 853,
            "ngdoc": "function",
            "name": "ui.router.state.$state#go",
            "methodof": "ui.router.state.$state",
            "description": "Convenience method for transitioning to a new state. `$state.go` calls \n`$state.transitionTo` internally but automatically sets options to \n`{ location: true, inherit: true, relative: $state.$current, notify: true }`. \nThis allows you to easily use an absolute or relative to path and specify \nonly the parameters you'd like to update (while letting unspecified parameters \ninherit from the currently active ancestor states).",
            "example": [
                "\n<pre>\nvar app = angular.module('app', ['ui.router']);\n\napp.controller('ctrl', function ($scope, $state) {\n  $scope.changeState = function () {\n    $state.go('contact.detail');\n  };\n});\n</pre>\n<img src='../ngdoc_assets/StateGoExamples.png'/>"
            ],
            "params": [
                {
                    "name": "to",
                    "description": "Absolute state name or relative state path. Some examples:\n\n- `$state.go('contact.detail')` - will go to the `contact.detail` state\n- `$state.go('^')` - will go to a parent state\n- `$state.go('^.sibling')` - will go to a sibling state\n- `$state.go('.child.grandchild')` - will go to grandchild state",
                    "type": "String"
                },
                {
                    "name": "params",
                    "description": "A map of the parameters that will be sent to the state, \nwill populate $stateParams. Any parameters that are not specified will be inherited from currently \ndefined parameters. Only parameters specified in the state definition can be overridden, new \nparameters will be ignored. This allows, for example, going to a sibling state that shares parameters\nspecified in a parent state. Parameter inheritance only works between common ancestor states, I.e.\ntransitioning to a sibling will get you the parameters for all parents, transitioning to a child\nwill get you all current parameters, etc.",
                    "type": "Object="
                },
                {
                    "name": "options",
                    "description": "Options object. The options are:\n\n- **`location`** - {boolean=true|string=} - If `true` will update the url in the location bar, if `false`\n   will not. If string, must be `\"replace\"`, which will update url and also replace last history record.\n- **`inherit`** - {boolean=true}, If `true` will inherit url parameters from current url.\n- **`relative`** - {object=$state.$current}, When transitioning with relative path (e.g '^'), \n   defines which state to be relative from.\n- **`notify`** - {boolean=true}, If `true` will broadcast $stateChangeStart and $stateChangeSuccess events.\n- **`reload`** (v0.2.5) - {boolean=false|string|object}, If `true` will force transition even if no state or params\n   have changed.  It will reload the resolves and views of the current state and parent states.\n   If `reload` is a string (or state object), the state object is fetched (by name, or object reference); and \\\n   the transition reloads the resolves and views for that matched state, and all its children states.",
                    "type": "Object="
                }
            ],
            "return": {
                "description": "A promise representing the state of the new transition.\n\nPossible success values:\n\n- $state.current\n\n<br/>Possible rejection values:\n\n- 'transition superseded' - when a newer transition has been started after this one\n- 'transition prevented' - when `event.preventDefault()` has been called in a `$stateChangeStart` listener\n- 'transition aborted' - when `event.preventDefault()` has been called in a `$stateNotFound` listener or\n  when a `$stateNotFound` `event.retry` promise errors.\n- 'transition failed' - when a state has been unsuccessfully found after 2 tries.\n- *resolve error* - when an error has occurred with a `resolve`",
                "type": "Promise"
            },
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\src\\state.js",
            "line": 925,
            "ngdoc": "function",
            "name": "ui.router.state.$state#transitionTo",
            "methodof": "ui.router.state.$state",
            "description": "Low-level method for transitioning to a new state. {@link ui.router.state.$state#methods_go $state.go}\nuses `transitionTo` internally. `$state.go` is recommended in most situations.",
            "example": [
                "\n<pre>\nvar app = angular.module('app', ['ui.router']);\n\napp.controller('ctrl', function ($scope, $state) {\n  $scope.changeState = function () {\n    $state.transitionTo('contact.detail');\n  };\n});\n</pre>"
            ],
            "params": [
                {
                    "name": "to",
                    "description": "State name.",
                    "type": "String"
                },
                {
                    "name": "toParams",
                    "description": "A map of the parameters that will be sent to the state,\nwill populate $stateParams.",
                    "type": "Object="
                },
                {
                    "name": "options",
                    "description": "Options object. The options are:\n\n- **`location`** - {boolean=true|string=} - If `true` will update the url in the location bar, if `false`\n   will not. If string, must be `\"replace\"`, which will update url and also replace last history record.\n- **`inherit`** - {boolean=false}, If `true` will inherit url parameters from current url.\n- **`relative`** - {object=}, When transitioning with relative path (e.g '^'), \n   defines which state to be relative from.\n- **`notify`** - {boolean=true}, If `true` will broadcast $stateChangeStart and $stateChangeSuccess events.\n- **`reload`** (v0.2.5) - {boolean=false|string=|object=}, If `true` will force transition even if the state or params \n   have not changed, aka a reload of the same state. It differs from reloadOnSearch because you'd\n   use this when you want to force a reload when *everything* is the same, including search params.\n   if String, then will reload the state with the name given in reload, and any children.\n   if Object, then a stateObj is expected, will reload the state found in stateObj, and any children.",
                    "type": "Object="
                }
            ],
            "return": {
                "description": "A promise representing the state of the new transition. See\n{@link ui.router.state.$state#methods_go $state.go}.",
                "type": "Promise"
            },
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\src\\state.js",
            "line": 1060,
            "ngdoc": "event",
            "name": "ui.router.state.$state#$stateChangeStart",
            "eventof": "ui.router.state.$state",
            "eventtype": "broadcast on root scope",
            "description": "Fired when the state transition **begins**. You can use `event.preventDefault()`\nto prevent the transition from happening and then the transition promise will be\nrejected with a `'transition prevented'` value.",
            "params": [
                {
                    "name": "event",
                    "description": "Event object.",
                    "type": "Object"
                },
                {
                    "name": "toState",
                    "description": "The state being transitioned to.",
                    "type": "State"
                },
                {
                    "name": "toParams",
                    "description": "The params supplied to the `toState`.",
                    "type": "Object"
                },
                {
                    "name": "fromState",
                    "description": "The current state, pre-transition.",
                    "type": "State"
                },
                {
                    "name": "fromParams",
                    "description": "The params supplied to the `fromState`.",
                    "type": "Object"
                }
            ],
            "example": [
                "\n\n<pre>\n$rootScope.$on('$stateChangeStart',\nfunction(event, toState, toParams, fromState, fromParams){\n    event.preventDefault();\n    // transitionTo() promise will be rejected with\n    // a 'transition prevented' error\n})\n</pre>"
            ],
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\src\\state.js",
            "line": 1153,
            "ngdoc": "event",
            "name": "ui.router.state.$state#$stateChangeSuccess",
            "eventof": "ui.router.state.$state",
            "eventtype": "broadcast on root scope",
            "description": "Fired once the state transition is **complete**.",
            "params": [
                {
                    "name": "event",
                    "description": "Event object.",
                    "type": "Object"
                },
                {
                    "name": "toState",
                    "description": "The state being transitioned to.",
                    "type": "State"
                },
                {
                    "name": "toParams",
                    "description": "The params supplied to the `toState`.",
                    "type": "Object"
                },
                {
                    "name": "fromState",
                    "description": "The current state, pre-transition.",
                    "type": "State"
                },
                {
                    "name": "fromParams",
                    "description": "The params supplied to the `fromState`.",
                    "type": "Object"
                }
            ],
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\src\\state.js",
            "line": 1176,
            "ngdoc": "event",
            "name": "ui.router.state.$state#$stateChangeError",
            "eventof": "ui.router.state.$state",
            "eventtype": "broadcast on root scope",
            "description": "Fired when an **error occurs** during transition. It's important to note that if you\nhave any errors in your resolve functions (javascript errors, non-existent services, etc)\nthey will not throw traditionally. You must listen for this $stateChangeError event to\ncatch **ALL** errors.",
            "params": [
                {
                    "name": "event",
                    "description": "Event object.",
                    "type": "Object"
                },
                {
                    "name": "toState",
                    "description": "The state being transitioned to.",
                    "type": "State"
                },
                {
                    "name": "toParams",
                    "description": "The params supplied to the `toState`.",
                    "type": "Object"
                },
                {
                    "name": "fromState",
                    "description": "The current state, pre-transition.",
                    "type": "State"
                },
                {
                    "name": "fromParams",
                    "description": "The params supplied to the `fromState`.",
                    "type": "Object"
                },
                {
                    "name": "error",
                    "description": "The resolve error object.",
                    "type": "Error"
                }
            ],
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\src\\state.js",
            "line": 1206,
            "ngdoc": "function",
            "name": "ui.router.state.$state#is",
            "methodof": "ui.router.state.$state",
            "description": "Similar to {@link ui.router.state.$state#methods_includes $state.includes},\nbut only checks for the full state name. If params is supplied then it will be\ntested for strict equality against the current active params object, so all params\nmust match with none missing and no extras.",
            "example": [
                "\n<pre>\n$state.$current.name = 'contacts.details.item';\n\n// absolute name\n$state.is('contact.details.item'); // returns true\n$state.is(contactDetailItemStateObject); // returns true\n\n// relative name (. and ^), typically from a template\n// E.g. from the 'contacts.details' template\n<div ng-class=\"{highlighted: $state.is('.item')}\">Item</div>\n</pre>"
            ],
            "params": [
                {
                    "name": "stateOrName",
                    "description": "The state name (absolute or relative) or state object you'd like to check.",
                    "type": "String|object"
                },
                {
                    "name": "params",
                    "description": "A param object, e.g. `{sectionId: section.id}`, that you'd like\nto test against the current active state.",
                    "type": "Object="
                },
                {
                    "name": "options",
                    "description": "An options object.  The options are:\n\n- **`relative`** - {string|object} -  If `stateOrName` is a relative state name and `options.relative` is set, .is will\ntest relative to `options.relative` state (or name).",
                    "type": "Object="
                }
            ],
            "return": {
                "description": "Returns true if it is the state.",
                "type": "Boolean"
            },
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\src\\state.js",
            "line": 1249,
            "ngdoc": "function",
            "name": "ui.router.state.$state#includes",
            "methodof": "ui.router.state.$state",
            "description": "A method to determine if the current active state is equal to or is the child of the\nstate stateName. If any params are passed then they will be tested for a match as well.\nNot all the parameters need to be passed, just the ones you'd like to test for equality.",
            "example": [
                "\nPartial and relative names\n<pre>\n$state.$current.name = 'contacts.details.item';\n\n// Using partial names\n$state.includes(\"contacts\"); // returns true\n$state.includes(\"contacts.details\"); // returns true\n$state.includes(\"contacts.details.item\"); // returns true\n$state.includes(\"contacts.list\"); // returns false\n$state.includes(\"about\"); // returns false\n\n// Using relative names (. and ^), typically from a template\n// E.g. from the 'contacts.details' template\n<div ng-class=\"{highlighted: $state.includes('.item')}\">Item</div>\n</pre>\n\nBasic globbing patterns\n<pre>\n$state.$current.name = 'contacts.details.item.url';\n\n$state.includes(\"*.details.*.*\"); // returns true\n$state.includes(\"*.details.**\"); // returns true\n$state.includes(\"**.item.**\"); // returns true\n$state.includes(\"*.details.item.url\"); // returns true\n$state.includes(\"*.details.*.url\"); // returns true\n$state.includes(\"*.details.*\"); // returns false\n$state.includes(\"item.**\"); // returns false\n</pre>"
            ],
            "params": [
                {
                    "name": "stateOrName",
                    "description": "A partial name, relative name, or glob pattern\nto be searched for within the current state name.",
                    "type": "String"
                },
                {
                    "name": "params",
                    "description": "A param object, e.g. `{sectionId: section.id}`,\nthat you'd like to test against the current active state.",
                    "type": "Object="
                },
                {
                    "name": "options",
                    "description": "An options object.  The options are:\n\n- **`relative`** - {string|object=} -  If `stateOrName` is a relative state reference and `options.relative` is set,\n.includes will test relative to `options.relative` state (or name).",
                    "type": "Object="
                }
            ],
            "return": {
                "description": "Returns true if it does include the state",
                "type": "Boolean"
            },
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\src\\state.js",
            "line": 1316,
            "ngdoc": "function",
            "name": "ui.router.state.$state#href",
            "methodof": "ui.router.state.$state",
            "description": "A url generation method that returns the compiled url for the given state populated with the given params.",
            "example": [
                "\n<pre>\nexpect($state.href(\"about.person\", { person: \"bob\" })).toEqual(\"/about/bob\");\n</pre>"
            ],
            "params": [
                {
                    "name": "stateOrName",
                    "description": "The state name or state object you'd like to generate a url from.",
                    "type": "String|object"
                },
                {
                    "name": "params",
                    "description": "An object of parameter values to fill the state's required parameters.",
                    "type": "Object="
                },
                {
                    "name": "options",
                    "description": "Options object. The options are:\n\n- **`lossy`** - {boolean=true} -  If true, and if there is no url associated with the state provided in the\n   first parameter, then the constructed href url will be built from the first navigable ancestor (aka\n   ancestor with a valid url).\n- **`inherit`** - {boolean=true}, If `true` will inherit url parameters from current url.\n- **`relative`** - {object=$state.$current}, When transitioning with relative path (e.g '^'), \n   defines which state to be relative from.\n- **`absolute`** - {boolean=false},  If true will generate an absolute url, e.g. \"http://www.example.com/fullurl\".",
                    "type": "Object="
                }
            ],
            "return": {
                "description": "compiled state url",
                "type": "String"
            },
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\src\\state.js",
            "line": 1366,
            "ngdoc": "function",
            "name": "ui.router.state.$state#get",
            "methodof": "ui.router.state.$state",
            "description": "Returns the state configuration object for any specific state or all states.",
            "params": [
                {
                    "name": "stateOrName",
                    "description": "(absolute or relative) If provided, will only get the config for\nthe requested state. If not provided, returns an array of ALL state configs.",
                    "type": "String|object="
                },
                {
                    "name": "context",
                    "description": "When stateOrName is a relative state reference, the state will be retrieved relative to context.",
                    "type": "String|object="
                }
            ],
            "return": {
                "description": "State configuration object or array of all objects.",
                "type": "Object|Array"
            },
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\src\\stateDirectives.js",
            "line": 54,
            "ngdoc": "directive",
            "name": "ui.router.state.directive:ui-sref",
            "requires": [
                "ui.router.state.$state",
                "$timeout"
            ],
            "restrict": "A",
            "description": "A directive that binds a link (`<a>` tag) to a state. If the state has an associated\nURL, the directive will automatically generate & update the `href` attribute via\nthe {@link ui.router.state.$state#methods_href $state.href()} method. Clicking\nthe link will trigger a state transition with optional parameters.\n\nAlso middle-clicking, right-clicking, and ctrl-clicking on the link will be\nhandled natively by the browser.\n\nYou can also use relative state paths within ui-sref, just like the relative\npaths passed to `$state.go()`. You just need to be aware that the path is relative\nto the state that the link lives in, in other words the state that loaded the\ntemplate containing the link.\n\nYou can specify options to pass to {@link ui.router.state.$state#go $state.go()}\nusing the `ui-sref-opts` attribute. Options are restricted to `location`, `inherit`,\nand `reload`.",
            "example": [
                "\nHere's an example of how you'd use ui-sref and how it would compile. If you have the\nfollowing template:\n<pre>\n<a ui-sref=\"home\">Home</a> | <a ui-sref=\"about\">About</a> | <a ui-sref=\"{page: 2}\">Next page</a>\n\n<ul>\n    <li ng-repeat=\"contact in contacts\">\n        <a ui-sref=\"contacts.detail({ id: contact.id })\">{{ contact.name }}</a>\n    </li>\n</ul>\n</pre>\n\nThen the compiled html would be (assuming Html5Mode is off and current state is contacts):\n<pre>\n<a href=\"#/home\" ui-sref=\"home\">Home</a> | <a href=\"#/about\" ui-sref=\"about\">About</a> | <a href=\"#/contacts?page=2\" ui-sref=\"{page: 2}\">Next page</a>\n\n<ul>\n    <li ng-repeat=\"contact in contacts\">\n        <a href=\"#/contacts/1\" ui-sref=\"contacts.detail({ id: contact.id })\">Joe</a>\n    </li>\n    <li ng-repeat=\"contact in contacts\">\n        <a href=\"#/contacts/2\" ui-sref=\"contacts.detail({ id: contact.id })\">Alice</a>\n    </li>\n    <li ng-repeat=\"contact in contacts\">\n        <a href=\"#/contacts/3\" ui-sref=\"contacts.detail({ id: contact.id })\">Bob</a>\n    </li>\n</ul>\n\n<a ui-sref=\"home\" ui-sref-opts=\"{reload: true}\">Home</a>\n</pre>"
            ],
            "params": [
                {
                    "name": "ui-sref",
                    "description": "'stateName' can be any valid absolute or relative state",
                    "type": "String"
                },
                {
                    "name": "ui-sref-opts",
                    "description": "options to pass to {@link ui.router.state.$state#go $state.go()}",
                    "type": "Object"
                }
            ],
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\src\\stateDirectives.js",
            "line": 149,
            "ngdoc": "directive",
            "name": "ui.router.state.directive:ui-state",
            "requires": [
                "ui.router.state.uiSref"
            ],
            "restrict": "A",
            "description": "Much like ui-sref, but will accept named $scope properties to evaluate for a state definition,\nparams and override options.",
            "params": [
                {
                    "name": "ui-state",
                    "description": "'stateName' can be any valid absolute or relative state",
                    "type": "String"
                },
                {
                    "name": "ui-state-params",
                    "description": "params to pass to {@link ui.router.state.$state#href $state.href()}",
                    "type": "Object"
                },
                {
                    "name": "ui-state-opts",
                    "description": "options to pass to {@link ui.router.state.$state#go $state.go()}",
                    "type": "Object"
                }
            ],
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\src\\stateDirectives.js",
            "line": 195,
            "ngdoc": "directive",
            "name": "ui.router.state.directive:ui-sref-active",
            "requires": [
                "ui.router.state.$state",
                "ui.router.state.$stateParams",
                "$interpolate"
            ],
            "restrict": "A",
            "description": "A directive working alongside ui-sref to add classes to an element when the\nrelated ui-sref directive's state is active, and removing them when it is inactive.\nThe primary use-case is to simplify the special appearance of navigation menus\nrelying on `ui-sref`, by having the \"active\" state's menu button appear different,\ndistinguishing it from the inactive menu items.\n\nui-sref-active can live on the same element as ui-sref or on a parent element. The first\nui-sref-active found at the same level or above the ui-sref will be used.\n\nWill activate when the ui-sref's target state or any child state is active. If you\nneed to activate only when the ui-sref target state is active and *not* any of\nit's children, then you will use\n{@link ui.router.state.directive:ui-sref-active-eq ui-sref-active-eq}",
            "example": [
                "\nGiven the following template:\n<pre>\n<ul>\n  <li ui-sref-active=\"active\" class=\"item\">\n    <a href ui-sref=\"app.user({user: 'bilbobaggins'})\">@bilbobaggins</a>\n  </li>\n</ul>\n</pre>\n\n\nWhen the app state is \"app.user\" (or any children states), and contains the state parameter \"user\" with value \"bilbobaggins\",\nthe resulting HTML will appear as (note the 'active' class):\n<pre>\n<ul>\n  <li ui-sref-active=\"active\" class=\"item active\">\n    <a ui-sref=\"app.user({user: 'bilbobaggins'})\" href=\"/users/bilbobaggins\">@bilbobaggins</a>\n  </li>\n</ul>\n</pre>\n\nThe class name is interpolated **once** during the directives link time (any further changes to the\ninterpolated value are ignored).\n\nMultiple classes may be specified in a space-separated format:\n<pre>\n<ul>\n  <li ui-sref-active='class1 class2 class3'>\n    <a ui-sref=\"app.user\">link</a>\n  </li>\n</ul>\n</pre>\n\nIt is also possible to pass ui-sref-active an expression that evaluates\nto an object hash, whose keys represent active class names and whose\nvalues represent the respective state names/globs.\nui-sref-active will match if the current active state **includes** any of\nthe specified state names/globs, even the abstract ones.",
                "\nGiven the following template, with \"admin\" being an abstract state:\n<pre>\n<div ui-sref-active=\"{'active': 'admin.*'}\">\n  <a ui-sref-active=\"active\" ui-sref=\"admin.roles\">Roles</a>\n</div>\n</pre>\n\nWhen the current state is \"admin.roles\" the \"active\" class will be applied\nto both the <div> and <a> elements. It is important to note that the state\nnames/globs passed to ui-sref-active shadow the state provided by ui-sref."
            ],
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\src\\stateDirectives.js",
            "line": 272,
            "ngdoc": "directive",
            "name": "ui.router.state.directive:ui-sref-active-eq",
            "requires": [
                "ui.router.state.$state",
                "ui.router.state.$stateParams",
                "$interpolate"
            ],
            "restrict": "A",
            "description": "The same as {@link ui.router.state.directive:ui-sref-active ui-sref-active} but will only activate\nwhen the exact target state used in the `ui-sref` is active; no child states.",
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\src\\stateDirectives.js",
            "line": 341,
            "params": [
                {
                    "name": "state",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "params",
                    "description": "",
                    "type": "Object|string",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\src\\stateFilters.js",
            "line": 1,
            "ngdoc": "filter",
            "name": "ui.router.state.filter:isState",
            "requires": [
                "ui.router.state.$state"
            ],
            "description": "Translates to {@link ui.router.state.$state#methods_is $state.is(\"stateName\")}.",
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\src\\stateFilters.js",
            "line": 19,
            "ngdoc": "filter",
            "name": "ui.router.state.filter:includedByState",
            "requires": [
                "ui.router.state.$state"
            ],
            "description": "Translates to {@link ui.router.state.$state#methods_includes $state.includes('fullOrPartialStateName')}.",
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\src\\templateFactory.js",
            "line": 1,
            "ngdoc": "object",
            "name": "ui.router.util.$templateFactory",
            "requires": [
                "$http",
                "$templateCache",
                "$injector"
            ],
            "description": "Service. Manages loading of templates.",
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\src\\templateFactory.js",
            "line": 15,
            "ngdoc": "function",
            "name": "ui.router.util.$templateFactory#fromConfig",
            "methodof": "ui.router.util.$templateFactory",
            "description": "Creates a template from a configuration object.",
            "params": [
                {
                    "name": "config",
                    "description": "Configuration object for which to load a template. \nThe following properties are search in the specified order, and the first one \nthat is defined is used to create the template:",
                    "type": "Object",
                    "props": [
                        {
                            "name": "template",
                            "description": "html string template or function to \nload via {@link ui.router.util.$templateFactory#fromString fromString}.",
                            "type": "String|object"
                        },
                        {
                            "name": "templateUrl",
                            "description": "url to load or a function returning \nthe url to load via {@link ui.router.util.$templateFactory#fromUrl fromUrl}.",
                            "type": "String|object"
                        },
                        {
                            "name": "templateProvider",
                            "description": "function to invoke via \n{@link ui.router.util.$templateFactory#fromProvider fromProvider}.",
                            "type": "Function"
                        }
                    ]
                },
                {
                    "name": "params",
                    "description": "Parameters to pass to the template function.",
                    "type": "Object"
                },
                {
                    "name": "locals",
                    "description": "Locals to pass to `invoke` if the template is loaded \nvia a `templateProvider`. Defaults to `{ params: params }`.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "The template html as a string, or a promise for \nthat string,or `null` if no template is configured.",
                "type": "String|object"
            },
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\src\\templateFactory.js",
            "line": 49,
            "ngdoc": "function",
            "name": "ui.router.util.$templateFactory#fromString",
            "methodof": "ui.router.util.$templateFactory",
            "description": "Creates a template from a string or a function returning a string.",
            "params": [
                {
                    "name": "template",
                    "description": "html template as a string or function that \nreturns an html template as a string.",
                    "type": "String|object"
                },
                {
                    "name": "params",
                    "description": "Parameters to pass to the template function.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "The template html as a string, or a promise for that \nstring.",
                "type": "String|object"
            },
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\src\\templateFactory.js",
            "line": 68,
            "ngdoc": "function",
            "name": "ui.router.util.$templateFactory#fromUrl",
            "methodof": "ui.router.util.$templateFactory",
            "description": "Loads a template from the a URL via `$http` and `$templateCache`.",
            "params": [
                {
                    "name": "url",
                    "description": "url of the template to load, or a function \nthat returns a url.",
                    "type": "String|Function"
                },
                {
                    "name": "params",
                    "description": "Parameters to pass to the url function.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "The template html as a string, or a promise \nfor that string.",
                "type": "string|Promise.<string>"
            },
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\src\\templateFactory.js",
            "line": 90,
            "ngdoc": "function",
            "name": "ui.router.util.$templateFactory#fromProvider",
            "methodof": "ui.router.util.$templateFactory",
            "description": "Creates a template by invoking an injectable provider function.",
            "params": [
                {
                    "name": "provider",
                    "description": "Function to invoke via `$injector.invoke`",
                    "type": "Function"
                },
                {
                    "name": "params",
                    "description": "Parameters for the template.",
                    "type": "Object"
                },
                {
                    "name": "locals",
                    "description": "Locals to pass to `invoke`. Defaults to \n`{ params: params }`.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "The template html as a string, or a promise \nfor that string.",
                "type": "string|Promise.<string>"
            },
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js",
            "line": 3,
            "ngdoc": "object",
            "name": "{string} regex  The constructed regex that will be used to match against the url when\n  it is time to determine which url will match.",
            "description": "Matches URLs against patterns and extracts named parameters from the path or the search\npart of the URL. A URL pattern consists of a path pattern, optionally followed by '?' and a list\nof search parameters. Multiple search parameter names are separated by '&'. Search parameters\ndo not influence whether or not a URL is matched, but their values are passed through into\nthe matched parameters returned by {@link ui.router.util.type:UrlMatcher#methods_exec exec}.\n\nPath parameter placeholders can be specified using simple colon/catch-all syntax or curly brace\nsyntax, which optionally allows a regular expression for the parameter to be specified:\n\n* `':'` name - colon placeholder\n* `'*'` name - catch-all placeholder\n* `'{' name '}'` - curly placeholder\n* `'{' name ':' regexp|type '}'` - curly placeholder with regexp or type name. Should the\n  regexp itself contain curly braces, they must be in matched pairs or escaped with a backslash.\n\nParameter names may contain only word characters (latin letters, digits, and underscore) and\nmust be unique within the pattern (across both path and search parameters). For colon\nplaceholders or curly placeholders without an explicit regexp, a path parameter matches any\nnumber of characters other than '/'. For catch-all placeholders the path parameter matches\nany number of characters.\n\nExamples:\n\n* `'/hello/'` - Matches only if the path is exactly '/hello/'. There is no special treatment for\n  trailing slashes, and patterns have to match the entire path, not just a prefix.\n* `'/user/:id'` - Matches '/user/bob' or '/user/1234!!!' or even '/user/' but not '/user' or\n  '/user/bob/details'. The second path segment will be captured as the parameter 'id'.\n* `'/user/{id}'` - Same as the previous example, but using curly brace syntax.\n* `'/user/{id:[^/]*}'` - Same as the previous example.\n* `'/user/{id:[0-9a-fA-F]{1,8}}'` - Similar to the previous example, but only matches if the id\n  parameter consists of 1 to 8 hex digits.\n* `'/files/{path:.*}'` - Matches any URL starting with '/files/' and captures the rest of the\n  path into the parameter 'path'.\n* `'/files/*path'` - ditto.\n* `'/calendar/{start:date}'` - Matches \"/calendar/2014-11-12\" (because the pattern defined\n  in the built-in  `date` Type matches `2014-11-12`) and provides a Date object in $stateParams.start",
            "itemtype": "property",
            "type": "String",
            "return": {
                "description": "New `UrlMatcher` object",
                "type": "Object"
            },
            "class": "",
            "module": "ngMock",
            "subprops": [
                {
                    "name": "pattern",
                    "description": "The pattern to compile into a matcher.",
                    "type": "String"
                },
                {
                    "name": "config",
                    "description": "A configuration object hash:",
                    "type": "Object"
                },
                {
                    "name": "parentMatcher",
                    "description": "Used to concatenate the pattern/config onto\n  an existing UrlMatcher\n\n* `caseInsensitive` - `true` if URL matching should be case insensitive, otherwise `false`, the default value (for backward compatibility) is `false`.\n* `strict` - `false` if matching against a URL with a trailing slash should be treated as equivalent to a URL without a trailing slash, the default value is `true`.",
                    "type": "Object="
                }
            ]
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js",
            "line": 177,
            "ngdoc": "function",
            "name": "ui.router.util.type:UrlMatcher#concat",
            "methodof": "ui.router.util.type:UrlMatcher",
            "description": "Returns a new matcher for a pattern constructed by appending the path part and adding the\nsearch parameters of the specified pattern to this pattern. The current pattern is not\nmodified. This can be understood as creating a pattern for URLs that are relative to (or\nsuffixes of) the current pattern.",
            "example": [
                "\nThe following two matchers are equivalent:\n<pre>\nnew UrlMatcher('/user/{id}?q').concat('/details?date');\nnew UrlMatcher('/user/{id}/details?q&date');\n</pre>"
            ],
            "params": [
                {
                    "name": "pattern",
                    "description": "The pattern to append.",
                    "type": "String"
                },
                {
                    "name": "config",
                    "description": "An object hash of the configuration for the matcher.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "A matcher for the concatenated pattern.",
                "type": "UrlMatcher"
            },
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js",
            "line": 215,
            "ngdoc": "function",
            "name": "ui.router.util.type:UrlMatcher#exec",
            "methodof": "ui.router.util.type:UrlMatcher",
            "description": "Tests the specified path against this matcher, and returns an object containing the captured\nparameter values, or null if the path does not match. The returned object contains the values\nof any search parameters that are mentioned in the pattern, but their value may be null if\nthey are not present in `searchParams`. This means that search parameters are always treated\nas optional.",
            "example": [
                "\n<pre>\nnew UrlMatcher('/user/{id}?q&r').exec('/user/bob', {\n  x: '1', q: 'hello'\n});\n// returns { id: 'bob', q: 'hello', r: null }\n</pre>"
            ],
            "params": [
                {
                    "name": "path",
                    "description": "The URL path to match, e.g. `$location.path()`.",
                    "type": "String"
                },
                {
                    "name": "searchParams",
                    "description": "URL search parameters, e.g. `$location.search()`.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "The captured parameter values.",
                "type": "Object"
            },
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js",
            "line": 287,
            "ngdoc": "function",
            "name": "ui.router.util.type:UrlMatcher#parameters",
            "methodof": "ui.router.util.type:UrlMatcher",
            "description": "Returns the names of all path and search parameters of this pattern in an unspecified order.",
            "return": {
                "description": "An array of parameter names. Must be treated as read-only. If the\n   pattern has no parameters, an empty array is returned.",
                "type": "Array.<string>"
            },
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js",
            "line": 303,
            "ngdoc": "function",
            "name": "ui.router.util.type:UrlMatcher#validates",
            "methodof": "ui.router.util.type:UrlMatcher",
            "description": "Checks an object hash of parameters to validate their correctness according to the parameter\ntypes of this `UrlMatcher`.",
            "params": [
                {
                    "name": "params",
                    "description": "The object hash of parameters to validate.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns `true` if `params` validates, otherwise `false`.",
                "type": "Boolean"
            },
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js",
            "line": 319,
            "ngdoc": "function",
            "name": "ui.router.util.type:UrlMatcher#format",
            "methodof": "ui.router.util.type:UrlMatcher",
            "description": "Creates a URL that matches this pattern by substituting the specified values\nfor the path and search parameters. Null values for path parameters are\ntreated as empty strings.",
            "example": [
                "\n<pre>\nnew UrlMatcher('/user/{id}?q').format({ id:'bob', q:'yes' });\n// returns '/user/bob?q=yes'\n</pre>"
            ],
            "params": [
                {
                    "name": "values",
                    "description": "the values to substitute for the parameters in this pattern.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "the formatted URL (path and optionally search part).",
                "type": "String"
            },
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js",
            "line": 390,
            "ngdoc": "object",
            "name": "pattern The regular expression pattern used to match values of this type when!~YUIDOC_LINE~!          coming from a substring of a URL.",
            "description": "Implements an interface to define custom parameter types that can be decoded from and encoded to\nstring parameters matched in a URL. Used by {@link ui.router.util.type:UrlMatcher `UrlMatcher`}\nobjects when matching or formatting URLs, or comparing or validating parameter values.\n\nSee {@link ui.router.util.$urlMatcherFactory#methods_type `$urlMatcherFactory#type()`} for more\ninformation on registering custom types.",
            "example": [
                "\n<pre>\n{\n  decode: function(val) { return parseInt(val, 10); },\n  encode: function(val) { return val && val.toString(); },\n  equals: function(a, b) { return this.is(a) && a === b; },\n  is: function(val) { return angular.isNumber(val) isFinite(val) && val % 1 === 0; },\n  pattern: /\\d+/\n}\n</pre>"
            ],
            "itemtype": "property",
            "type": "RegExp",
            "return": {
                "description": "Returns a new `Type` object.",
                "type": "Object"
            },
            "class": "",
            "module": "ngMock",
            "subprops": [
                {
                    "name": "config",
                    "description": "A configuration object which contains the custom type definition.  The object's\n       properties will override the default methods and/or pattern in `Type`'s public interface.",
                    "type": "Object"
                }
            ]
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js",
            "line": 424,
            "ngdoc": "function",
            "name": "ui.router.util.type:Type#is",
            "methodof": "ui.router.util.type:Type",
            "description": "Detects whether a value is of a particular type. Accepts a native (decoded) value\nand determines whether it matches the current `Type` object.",
            "params": [
                {
                    "name": "val",
                    "description": "The value to check.",
                    "type": "*"
                },
                {
                    "name": "key",
                    "description": "Optional. If the type check is happening in the context of a specific\n       {@link ui.router.util.type:UrlMatcher `UrlMatcher`} object, this is the name of the\n       parameter in which `val` is stored. Can be used for meta-programming of `Type` objects.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns `true` if the value matches the type, otherwise `false`.",
                "type": "Boolean"
            },
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js",
            "line": 443,
            "ngdoc": "function",
            "name": "ui.router.util.type:Type#encode",
            "methodof": "ui.router.util.type:Type",
            "description": "Encodes a custom/native type value to a string that can be embedded in a URL. Note that the\nreturn value does *not* need to be URL-safe (i.e. passed through `encodeURIComponent()`), it\nonly needs to be a representation of `val` that has been coerced to a string.",
            "params": [
                {
                    "name": "val",
                    "description": "The value to encode.",
                    "type": "*"
                },
                {
                    "name": "key",
                    "description": "The name of the parameter in which `val` is stored. Can be used for\n       meta-programming of `Type` objects.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns a string representation of `val` that can be encoded in a URL.",
                "type": "String"
            },
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js",
            "line": 462,
            "ngdoc": "function",
            "name": "ui.router.util.type:Type#decode",
            "methodof": "ui.router.util.type:Type",
            "description": "Converts a parameter value (from URL string or transition param) to a custom/native value.",
            "params": [
                {
                    "name": "val",
                    "description": "The URL parameter value to decode.",
                    "type": "String"
                },
                {
                    "name": "key",
                    "description": "The name of the parameter in which `val` is stored. Can be used for\n       meta-programming of `Type` objects.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Returns a custom representation of the URL parameter value.",
                "type": "*"
            },
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js",
            "line": 479,
            "ngdoc": "function",
            "name": "ui.router.util.type:Type#equals",
            "methodof": "ui.router.util.type:Type",
            "description": "Determines whether two decoded values are equivalent.",
            "params": [
                {
                    "name": "a",
                    "description": "A value to compare against.",
                    "type": "*"
                },
                {
                    "name": "b",
                    "description": "A value to compare against.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Returns `true` if the values are equivalent/equal, otherwise `false`.",
                "type": "Boolean"
            },
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js",
            "line": 504,
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js",
            "line": 581,
            "ngdoc": "object",
            "name": "ui.router.util.$urlMatcherFactory",
            "description": "Factory for {@link ui.router.util.type:UrlMatcher `UrlMatcher`} instances. The factory\nis also available to providers under the name `$urlMatcherFactoryProvider`.",
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js",
            "line": 667,
            "description": "[Internal] Get the default value of a parameter, which may be an injectable function.",
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js",
            "line": 676,
            "ngdoc": "function",
            "name": "ui.router.util.$urlMatcherFactory#caseInsensitive",
            "methodof": "ui.router.util.$urlMatcherFactory",
            "description": "Defines whether URL matching should be case sensitive (the default behavior), or not.",
            "params": [
                {
                    "name": "value",
                    "description": "`false` to match URL in a case sensitive manner; otherwise `true`;",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "the current value of caseInsensitive",
                "type": "Boolean"
            },
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js",
            "line": 693,
            "ngdoc": "function",
            "name": "ui.router.util.$urlMatcherFactory#strictMode",
            "methodof": "ui.router.util.$urlMatcherFactory",
            "description": "Defines whether URLs should match trailing slashes, or not (the default behavior).",
            "params": [
                {
                    "name": "value",
                    "description": "`false` to match trailing slashes in URLs, otherwise `true`.",
                    "type": "Boolean="
                }
            ],
            "return": {
                "description": "the current value of strictMode",
                "type": "Boolean"
            },
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js",
            "line": 710,
            "ngdoc": "function",
            "name": "ui.router.util.$urlMatcherFactory#defaultSquashPolicy",
            "methodof": "ui.router.util.$urlMatcherFactory",
            "description": "Sets the default behavior when generating or matching URLs with default parameter values.",
            "params": [
                {
                    "name": "value",
                    "description": "A string that defines the default parameter URL squashing behavior.\n   `nosquash`: When generating an href with a default parameter value, do not squash the parameter value from the URL\n   `slash`: When generating an href with a default parameter value, squash (remove) the parameter value, and, if the\n            parameter is surrounded by slashes, squash (remove) one slash from the URL\n   any other string, e.g. \"~\": When generating an href with a default parameter value, squash (remove)\n            the parameter value from the URL and replace it with this string.",
                    "type": "String"
                }
            ],
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js",
            "line": 733,
            "ngdoc": "function",
            "name": "ui.router.util.$urlMatcherFactory#compile",
            "methodof": "ui.router.util.$urlMatcherFactory",
            "description": "Creates a {@link ui.router.util.type:UrlMatcher `UrlMatcher`} for the specified pattern.",
            "params": [
                {
                    "name": "pattern",
                    "description": "The URL pattern.",
                    "type": "String"
                },
                {
                    "name": "config",
                    "description": "The config object hash.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "The UrlMatcher.",
                "type": "UrlMatcher"
            },
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js",
            "line": 749,
            "ngdoc": "function",
            "name": "ui.router.util.$urlMatcherFactory#isMatcher",
            "methodof": "ui.router.util.$urlMatcherFactory",
            "description": "Returns true if the specified object is a `UrlMatcher`, or false otherwise.",
            "params": [
                {
                    "name": "object",
                    "description": "The object to perform the type check against.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Returns `true` if the object matches the `UrlMatcher` interface, by\n         implementing all the same methods.",
                "type": "Boolean"
            },
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js",
            "line": 773,
            "ngdoc": "function",
            "name": "ui.router.util.$urlMatcherFactory#type",
            "methodof": "ui.router.util.$urlMatcherFactory",
            "description": "Registers a custom {@link ui.router.util.type:Type `Type`} object that can be used to\ngenerate URLs with typed parameters.",
            "params": [
                {
                    "name": "name",
                    "description": "The type name.",
                    "type": "String"
                },
                {
                    "name": "definition",
                    "description": "The type definition. See\n       {@link ui.router.util.type:Type `Type`} for information on the values accepted.",
                    "type": "Object|Function"
                },
                {
                    "name": "definitionFn",
                    "description": "(optional) A function that is injected before the app\n       runtime starts.  The result of this function is merged into the existing `definition`.\n       See {@link ui.router.util.type:Type `Type`} for information on the values accepted.",
                    "type": "Object|Function"
                }
            ],
            "return": {
                "description": "Returns `$urlMatcherFactoryProvider`.",
                "type": "Object"
            },
            "example": [
                "\nThis is a simple example of a custom type that encodes and decodes items from an\narray, using the array index as the URL-encoded value:\n\n<pre>\nvar list = ['John', 'Paul', 'George', 'Ringo'];\n\n$urlMatcherFactoryProvider.type('listItem', {\n  encode: function(item) {\n    // Represent the list item in the URL using its corresponding index\n    return list.indexOf(item);\n  },\n  decode: function(item) {\n    // Look up the list item by index\n    return list[parseInt(item, 10)];\n  },\n  is: function(item) {\n    // Ensure the item is valid by checking to see that it appears\n    // in the list\n    return list.indexOf(item) > -1;\n  }\n});\n\n$stateProvider.state('list', {\n  url: \"/list/{item:listItem}\",\n  controller: function($scope, $stateParams) {\n    console.log($stateParams.item);\n  }\n});\n\n// ...\n\n// Changes URL to '/list/3', logs \"Ringo\" to the console\n$state.go('list', { item: \"Ringo\" });\n</pre>\n\nThis is a more complex example of a type that relies on dependency injection to\ninteract with services, and uses the parameter name from the URL to infer how to\nhandle encoding and decoding parameter values:\n\n<pre>\n// Defines a custom type that gets a value from a service,\n// where each service gets different types of values from\n// a backend API:\n$urlMatcherFactoryProvider.type('dbObject', {}, function(Users, Posts) {\n\n  // Matches up services to URL parameter names\n  var services = {\n    user: Users,\n    post: Posts\n  };\n\n  return {\n    encode: function(object) {\n      // Represent the object in the URL using its unique ID\n      return object.id;\n    },\n    decode: function(value, key) {\n      // Look up the object by ID, using the parameter\n      // name (key) to call the correct service\n      return services[key].findById(value);\n    },\n    is: function(object, key) {\n      // Check that object is a valid dbObject\n      return angular.isObject(object) && object.id && services[key];\n    }\n    equals: function(a, b) {\n      // Check the equality of decoded objects by comparing\n      // their unique IDs\n      return a.id === b.id;\n    }\n  };\n});\n\n// In a config() block, you can then attach URLs with\n// type-annotated parameters:\n$stateProvider.state('users', {\n  url: \"/users\",\n  // ...\n}).state('users.item', {\n  url: \"/{user:dbObject}\",\n  controller: function($scope, $stateParams) {\n    // $stateParams.user will now be an object returned from\n    // the Users service\n  },\n  // ...\n});\n</pre>"
            ],
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js",
            "line": 957,
            "description": "returns false, true, or the squash value to indicate the \"default parameter url squash policy\".",
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js",
            "line": 980,
            "description": "[Internal] Get the default value of a parameter, which may be an injectable function.",
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js",
            "line": 991,
            "description": "[Internal] Gets the decoded representation of a value if the value is defined, otherwise, returns the\ndefault value, which may be the result of an injectable function.",
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\src\\urlRouter.js",
            "line": 1,
            "ngdoc": "object",
            "name": "ui.router.router.$urlRouterProvider",
            "requires": [
                "ui.router.util.$urlMatcherFactoryProvider",
                "$locationProvider"
            ],
            "description": "`$urlRouterProvider` has the responsibility of watching `$location`. \nWhen `$location` changes it runs through a list of rules one by one until a \nmatch is found. `$urlRouterProvider` is used behind the scenes anytime you specify \na url in a state configuration. All urls are compiled into a UrlMatcher object.\n\nThere are several methods on `$urlRouterProvider` that make it useful to use directly\nin your module config.",
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\src\\urlRouter.js",
            "line": 34,
            "ngdoc": "function",
            "name": "ui.router.router.$urlRouterProvider#rule",
            "methodof": "ui.router.router.$urlRouterProvider",
            "description": "Defines rules that are used by `$urlRouterProvider` to find matches for\nspecific URLs.",
            "example": [
                "\n<pre>\nvar app = angular.module('app', ['ui.router.router']);\n\napp.config(function ($urlRouterProvider) {\n  // Here's an example of how you might allow case insensitive urls\n  $urlRouterProvider.rule(function ($injector, $location) {\n    var path = $location.path(),\n        normalized = path.toLowerCase();\n\n    if (path !== normalized) {\n      return normalized;\n    }\n  });\n});\n</pre>"
            ],
            "params": [
                {
                    "name": "rule",
                    "description": "Handler function that takes `$injector` and `$location`\nservices as arguments. You can use them to return a valid path as a string.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "`$urlRouterProvider` - `$urlRouterProvider` instance",
                "type": "Object"
            },
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\src\\urlRouter.js",
            "line": 71,
            "ngdoc": "object",
            "name": "ui.router.router.$urlRouterProvider#otherwise",
            "methodof": "ui.router.router.$urlRouterProvider",
            "description": "Defines a path that is used when an invalid route is requested.",
            "example": [
                "\n<pre>\nvar app = angular.module('app', ['ui.router.router']);\n\napp.config(function ($urlRouterProvider) {\n  // if the path doesn't match any of the urls you configured\n  // otherwise will take care of routing the user to the\n  // specified url\n  $urlRouterProvider.otherwise('/index');\n\n  // Example of using function rule as param\n  $urlRouterProvider.otherwise(function ($injector, $location) {\n    return '/a/valid/url';\n  });\n});\n</pre>"
            ],
            "params": [
                {
                    "name": "rule",
                    "description": "The url path you want to redirect to or a function \nrule that returns the url path. The function version is passed two params: \n`$injector` and `$location` services, and must return a url string.",
                    "type": "String|function"
                }
            ],
            "return": {
                "description": "`$urlRouterProvider` - `$urlRouterProvider` instance",
                "type": "Object"
            },
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\src\\urlRouter.js",
            "line": 119,
            "ngdoc": "function",
            "name": "ui.router.router.$urlRouterProvider#when",
            "methodof": "ui.router.router.$urlRouterProvider",
            "description": "Registers a handler for a given url matching. \n\nIf the handler is a string, it is\ntreated as a redirect, and is interpolated according to the syntax of match\n(i.e. like `String.replace()` for `RegExp`, or like a `UrlMatcher` pattern otherwise).\n\nIf the handler is a function, it is injectable. It gets invoked if `$location`\nmatches. You have the option of inject the match object as `$match`.\n\nThe handler can return\n\n- **falsy** to indicate that the rule didn't match after all, then `$urlRouter`\n  will continue trying to find another one that matches.\n- **string** which is treated as a redirect and passed to `$location.url()`\n- **void** or any **truthy** value tells `$urlRouter` that the url was handled.",
            "example": [
                "\n<pre>\nvar app = angular.module('app', ['ui.router.router']);\n\napp.config(function ($urlRouterProvider) {\n  $urlRouterProvider.when($state.url, function ($match, $stateParams) {\n    if ($state.$current.navigable !== state ||\n        !equalForKeys($match, $stateParams) {\n     $state.transitionTo(state, $match, false);\n    }\n  });\n});\n</pre>"
            ],
            "params": [
                {
                    "name": "what",
                    "description": "The incoming path that you want to redirect.",
                    "type": "String|object"
                },
                {
                    "name": "handler",
                    "description": "The path you want to redirect your user to.",
                    "type": "String|function"
                }
            ],
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\src\\urlRouter.js",
            "line": 201,
            "ngdoc": "function",
            "name": "ui.router.router.$urlRouterProvider#deferIntercept",
            "methodof": "ui.router.router.$urlRouterProvider",
            "description": "Disables (or enables) deferring location change interception.\n\nIf you wish to customize the behavior of syncing the URL (for example, if you wish to\ndefer a transition but maintain the current URL), call this method at configuration time.\nThen, at run time, call `$urlRouter.listen()` after you have configured your own\n`$locationChangeSuccess` event handler.",
            "example": [
                "\n<pre>\nvar app = angular.module('app', ['ui.router.router']);\n\napp.config(function ($urlRouterProvider) {\n\n  // Prevent $urlRouter from automatically intercepting URL changes;\n  // this allows you to configure custom behavior in between\n  // location changes and route synchronization:\n  $urlRouterProvider.deferIntercept();\n\n}).run(function ($rootScope, $urlRouter, UserService) {\n\n  $rootScope.$on('$locationChangeSuccess', function(e) {\n    // UserService is an example service for managing user state\n    if (UserService.isLoggedIn()) return;\n\n    // Prevent $urlRouter's default handler from firing\n    e.preventDefault();\n\n    UserService.handleLogin().then(function() {\n      // Once the user has logged in, sync the current URL\n      // to the router:\n      $urlRouter.sync();\n    });\n  });\n\n  // Configures $urlRouter's listener *after* your custom listener\n  $urlRouter.listen();\n});\n</pre>"
            ],
            "params": [
                {
                    "name": "defer",
                    "description": "Indicates whether to defer location change interception. Passing\n           no parameter is equivalent to `true`.",
                    "type": "Boolean"
                }
            ],
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\src\\urlRouter.js",
            "line": 254,
            "ngdoc": "object",
            "name": "ui.router.router.$urlRouter",
            "requires": [
                "$location",
                "$rootScope",
                "$injector",
                "$browser"
            ],
            "description": "",
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\src\\urlRouter.js",
            "line": 311,
            "ngdoc": "function",
            "name": "ui.router.router.$urlRouter#sync",
            "methodof": "ui.router.router.$urlRouter",
            "description": "Triggers an update; the same update that happens when the address bar url changes, aka `$locationChangeSuccess`.\nThis method is useful when you need to use `preventDefault()` on the `$locationChangeSuccess` event,\nperform some custom logic (route protection, auth, config, redirection, etc) and then finally proceed\nwith the transition by calling `$urlRouter.sync()`.",
            "example": [
                "\n<pre>\nangular.module('app', ['ui.router'])\n  .run(function($rootScope, $urlRouter) {\n    $rootScope.$on('$locationChangeSuccess', function(evt) {\n      // Halt state change from even starting\n      evt.preventDefault();\n      // Perform custom logic\n      var meetsRequirement = ...\n      // Continue with the update and state transition if logic allows\n      if (meetsRequirement) $urlRouter.sync();\n    });\n});\n</pre>"
            ],
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\src\\urlRouter.js",
            "line": 369,
            "ngdoc": "function",
            "name": "ui.router.router.$urlRouter#href",
            "methodof": "ui.router.router.$urlRouter",
            "description": "A URL generation method that returns the compiled URL for a given\n{@link ui.router.util.type:UrlMatcher `UrlMatcher`}, populated with the provided parameters.",
            "example": [
                "\n<pre>\n$bob = $urlRouter.href(new UrlMatcher(\"/about/:person\"), {\n  person: \"bob\"\n});\n// $bob == \"/about/bob\";\n</pre>"
            ],
            "params": [
                {
                    "name": "urlMatcher",
                    "description": "The `UrlMatcher` object which is used as the template of the URL to generate.",
                    "type": "UrlMatcher"
                },
                {
                    "name": "params",
                    "description": "An object of parameter values to fill the matcher's required parameters.",
                    "type": "Object="
                },
                {
                    "name": "options",
                    "description": "Options object. The options are:\n\n- **`absolute`** - {boolean=false},  If true will generate an absolute url, e.g. \"http://www.example.com/fullurl\".",
                    "type": "Object="
                }
            ],
            "return": {
                "description": "Returns the fully compiled URL, or `null` if `params` fail validation against `urlMatcher`",
                "type": "String"
            },
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\src\\view.js",
            "line": 6,
            "ngdoc": "object",
            "name": "ui.router.state.$view",
            "requires": [
                "ui.router.util.$templateFactory",
                "$rootScope"
            ],
            "description": "",
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\src\\view.js",
            "line": 20,
            "ngdoc": "function",
            "name": "ui.router.state.$view#load",
            "methodof": "ui.router.state.$view",
            "description": "",
            "params": [
                {
                    "name": "name",
                    "description": "name",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "option object.",
                    "type": "Object"
                }
            ],
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\src\\viewDirective.js",
            "line": 3,
            "ngdoc": "directive",
            "name": "ui.router.state.directive:ui-view",
            "requires": [
                "ui.router.state.$state",
                "$compile",
                "$controller",
                "$injector",
                "ui.router.state.$uiViewScroll",
                "$document"
            ],
            "restrict": "ECA",
            "description": "The ui-view directive tells $state where to place your templates.",
            "params": [
                {
                    "name": "name",
                    "description": "A view name. The name should be unique amongst the other views in the\nsame state. You can have views of the same name that live in different states.",
                    "type": "String="
                },
                {
                    "name": "autoscroll",
                    "description": "It allows you to set the scroll behavior of the browser window\nwhen a view is populated. By default, $anchorScroll is overridden by ui-router's custom scroll\nservice, {@link ui.router.state.$uiViewScroll}. This custom service let's you\nscroll ui-view elements into view when they are populated during a state activation.",
                    "type": "String="
                },
                {
                    "name": "noanimation",
                    "description": "If truthy, the non-animated renderer will be selected (no animations\nwill be applied to the ui-view)\n\n*Note: To revert back to old [`$anchorScroll`](http://docs.angularjs.org/api/ng.$anchorScroll)\nfunctionality, call `$uiViewScrollProvider.useAnchorScroll()`.*",
                    "type": "String="
                },
                {
                    "name": "onload",
                    "description": "Expression to evaluate whenever the view updates.",
                    "type": "String="
                }
            ],
            "example": [
                "\nA view can be unnamed or named. \n<pre>\n<!-- Unnamed -->\n<div ui-view></div> \n\n<!-- Named -->\n<div ui-view=\"viewName\"></div>\n</pre>\n\nYou can only have one unnamed view within any template (or root html). If you are only using a \nsingle view and it is unnamed then you can populate it like so:\n<pre>\n<div ui-view></div> \n$stateProvider.state(\"home\", {\n  template: \"<h1>HELLO!</h1>\"\n})\n</pre>\n\nThe above is a convenient shortcut equivalent to specifying your view explicitly with the {@link ui.router.state.$stateProvider#views `views`}\nconfig property, by name, in this case an empty name:\n<pre>\n$stateProvider.state(\"home\", {\n  views: {\n    \"\": {\n      template: \"<h1>HELLO!</h1>\"\n    }\n  }    \n})\n</pre>\n\nBut typically you'll only use the views property if you name your view or have more than one view \nin the same template. There's not really a compelling reason to name a view if its the only one, \nbut you could if you wanted, like so:\n<pre>\n<div ui-view=\"main\"></div>\n</pre> \n<pre>\n$stateProvider.state(\"home\", {\n  views: {\n    \"main\": {\n      template: \"<h1>HELLO!</h1>\"\n    }\n  }    \n})\n</pre>\n\nReally though, you'll use views to set up multiple views:\n<pre>\n<div ui-view></div>\n<div ui-view=\"chart\"></div> \n<div ui-view=\"data\"></div> \n</pre>\n\n<pre>\n$stateProvider.state(\"home\", {\n  views: {\n    \"\": {\n      template: \"<h1>HELLO!</h1>\"\n    },\n    \"chart\": {\n      template: \"<chart_thing/>\"\n    },\n    \"data\": {\n      template: \"<data_thing/>\"\n    }\n  }    \n})\n</pre>\n\nExamples for `autoscroll`:\n\n<pre>\n<!-- If autoscroll present with no expression,\n     then scroll ui-view into view -->\n<ui-view autoscroll/>\n\n<!-- If autoscroll present with valid expression,\n     then scroll ui-view into view if expression evaluates to true -->\n<ui-view autoscroll='true'/>\n<ui-view autoscroll='false'/>\n<ui-view autoscroll='scopeVariable'/>\n</pre>"
            ],
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\src\\viewDirective.js",
            "line": 252,
            "ngdoc": "event",
            "name": "ui.router.state.directive:ui-view#$viewContentLoading",
            "eventof": "ui.router.state.directive:ui-view",
            "eventtype": "emits on ui-view directive scope",
            "description": "Fired once the view **begins loading**, *before* the DOM is rendered.",
            "params": [
                {
                    "name": "event",
                    "description": "Event object.",
                    "type": "Object"
                },
                {
                    "name": "viewName",
                    "description": "Name of the view.",
                    "type": "String"
                }
            ],
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\src\\viewDirective.js",
            "line": 281,
            "ngdoc": "event",
            "name": "ui.router.state.directive:ui-view#$viewContentLoaded",
            "eventof": "ui.router.state.directive:ui-view",
            "eventtype": "emits on ui-view directive scope",
            "description": "Fired once the view is **loaded**, *after* the DOM is rendered.",
            "params": [
                {
                    "name": "event",
                    "description": "Event object.",
                    "type": "Object"
                },
                {
                    "name": "viewName",
                    "description": "Name of the view.",
                    "type": "String"
                }
            ],
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\src\\viewDirective.js",
            "line": 340,
            "description": "Shared ui-view code for both directives:\nGiven scope, element, and its attributes, return the view's name",
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\src\\viewScroll.js",
            "line": 1,
            "ngdoc": "object",
            "name": "ui.router.state.$uiViewScrollProvider",
            "description": "Provider that returns the {@link ui.router.state.$uiViewScroll} service function.",
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\src\\viewScroll.js",
            "line": 12,
            "ngdoc": "function",
            "name": "ui.router.state.$uiViewScrollProvider#useAnchorScroll",
            "methodof": "ui.router.state.$uiViewScrollProvider",
            "description": "Reverts back to using the core [`$anchorScroll`](http://docs.angularjs.org/api/ng.$anchorScroll) service for\nscrolling based on the url anchor.",
            "class": "",
            "module": "ngMock"
        },
        {
            "file": "web\\bower_components\\angular-ui-router\\src\\viewScroll.js",
            "line": 25,
            "ngdoc": "object",
            "name": "ui.router.state.$uiViewScroll",
            "requires": [
                "$anchorScroll",
                "$timeout"
            ],
            "description": "When called with a jqLite element, it scrolls the element into view (after a\n`$timeout` so the DOM has time to refresh).\n\nIf you prefer to rely on `$anchorScroll` to scroll the view to the anchor,\nthis can be enabled by calling {@link ui.router.state.$uiViewScrollProvider#methods_useAnchorScroll `$uiViewScrollProvider.useAnchorScroll()`}.",
            "class": "",
            "module": "ngMock"
        }
    ],
    "warnings": [
        {
            "message": "replacing incorrect tag: function with method",
            "line": " web\\app\\controllers\\personAutoController.js:14"
        },
        {
            "message": "unknown tag: memberof",
            "line": " web\\app\\controllers\\personAutoController.js:14"
        },
        {
            "message": "unknown tag: instance",
            "line": " web\\app\\controllers\\personAutoController.js:14"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\app\\controllers\\searchController.js:105"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\app\\controllers\\userController.js:45"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\app\\controllers\\userController.js:56"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\app\\controllers\\userController.js:66"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " web\\app\\services\\editService.js:12"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\app\\services\\editService.js:53"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\app\\services\\loginService.js:4"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\app\\services\\loginService.js:18"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\app\\services\\loginService.js:30"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\app\\services\\registerService.js:14"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\app\\services\\submitService.js:13"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\a0-angular-storage\\dist\\angular-storage.js:170"
        },
        {
            "message": "unknown tag: license",
            "line": " web\\bower_components\\angular\\angular.js:1"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:8"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:170"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:170"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:271"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:271"
        },
        {
            "message": "unknown tag: kind",
            "line": " web\\bower_components\\angular\\angular.js:271"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:271"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:359"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:368"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:431"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:431"
        },
        {
            "message": "unknown tag: kind",
            "line": " web\\bower_components\\angular\\angular.js:431"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:431"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:454"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:454"
        },
        {
            "message": "unknown tag: kind",
            "line": " web\\bower_components\\angular\\angular.js:454"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:454"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:487"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:487"
        },
        {
            "message": "unknown tag: kind",
            "line": " web\\bower_components\\angular\\angular.js:487"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:507"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:507"
        },
        {
            "message": "unknown tag: kind",
            "line": " web\\bower_components\\angular\\angular.js:507"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:507"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:536"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:536"
        },
        {
            "message": "unknown tag: kind",
            "line": " web\\bower_components\\angular\\angular.js:536"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:536"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:551"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:551"
        },
        {
            "message": "unknown tag: kind",
            "line": " web\\bower_components\\angular\\angular.js:551"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:551"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:566"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:566"
        },
        {
            "message": "unknown tag: kind",
            "line": " web\\bower_components\\angular\\angular.js:566"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:566"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:585"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:595"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:595"
        },
        {
            "message": "unknown tag: kind",
            "line": " web\\bower_components\\angular\\angular.js:595"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:595"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:610"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:610"
        },
        {
            "message": "unknown tag: kind",
            "line": " web\\bower_components\\angular\\angular.js:610"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:610"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:631"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:631"
        },
        {
            "message": "unknown tag: kind",
            "line": " web\\bower_components\\angular\\angular.js:631"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:631"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:648"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:648"
        },
        {
            "message": "unknown tag: kind",
            "line": " web\\bower_components\\angular\\angular.js:648"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:648"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:662"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:662"
        },
        {
            "message": "unknown tag: kind",
            "line": " web\\bower_components\\angular\\angular.js:662"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:662"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:677"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:689"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:754"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:754"
        },
        {
            "message": "unknown tag: kind",
            "line": " web\\bower_components\\angular\\angular.js:754"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:754"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:772"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:801"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:801"
        },
        {
            "message": "unknown tag: kind",
            "line": " web\\bower_components\\angular\\angular.js:801"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:801"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:1019"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:1019"
        },
        {
            "message": "unknown tag: kind",
            "line": " web\\bower_components\\angular\\angular.js:1019"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:1019"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:1125"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:1125"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:1188"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:1188"
        },
        {
            "message": "unknown tag: kind",
            "line": " web\\bower_components\\angular\\angular.js:1188"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:1188"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:1244"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:1244"
        },
        {
            "message": "unknown tag: kind",
            "line": " web\\bower_components\\angular\\angular.js:1244"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:1244"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:1268"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:1268"
        },
        {
            "message": "unknown tag: kind",
            "line": " web\\bower_components\\angular\\angular.js:1268"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:1268"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:1311"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:1336"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:1353"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:1454"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:1454"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:1610"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:1610"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:1610"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:1728"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:1728"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:1743"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:1851"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:1878"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:1902"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:1924"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:1924"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:1951"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:1951"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:1951"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:2038"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:2038"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:2049"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:2049"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:2060"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:2060"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:2072"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:2072"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:2083"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:2083"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:2094"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:2094"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:2105"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:2105"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:2117"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:2117"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:2129"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:2129"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:2163"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:2163"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:2181"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:2181"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:2193"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:2193"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:2206"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:2206"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:2219"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:2219"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:2232"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:2232"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:2254"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:2268"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:2411"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:2411"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:2596"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:2596"
        },
        {
            "message": "unknown tag: kind",
            "line": " web\\bower_components\\angular\\angular.js:2596"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:2596"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:3667"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:3721"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:3746"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:3746"
        },
        {
            "message": "unknown tag: kind",
            "line": " web\\bower_components\\angular\\angular.js:3746"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:3746"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:3800"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:3800"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:3868"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:3868"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:3921"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:3921"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:3933"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:3933"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:3933"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:3948"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:3948"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:3948"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:3959"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:3959"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:3959"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:3973"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:3973"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:3973"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:4060"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:4060"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:4100"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:4100"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:4100"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:4196"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:4196"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:4196"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:4230"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:4230"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:4230"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:4284"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:4284"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:4284"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:4317"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:4317"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:4317"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:4345"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:4345"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:4637"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:4637"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:4649"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:4649"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:4666"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:4666"
        },
        {
            "message": "unknown tag: kind",
            "line": " web\\bower_components\\angular\\angular.js:4666"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:5063"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:5063"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:5080"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:5080"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:5129"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:5129"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:5171"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:5171"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:5194"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:5194"
        },
        {
            "message": "unknown tag: kind",
            "line": " web\\bower_components\\angular\\angular.js:5194"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:5222"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:5222"
        },
        {
            "message": "unknown tag: kind",
            "line": " web\\bower_components\\angular\\angular.js:5222"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:5248"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:5248"
        },
        {
            "message": "unknown tag: kind",
            "line": " web\\bower_components\\angular\\angular.js:5248"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:5266"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:5266"
        },
        {
            "message": "unknown tag: kind",
            "line": " web\\bower_components\\angular\\angular.js:5266"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:5297"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:5297"
        },
        {
            "message": "unknown tag: kind",
            "line": " web\\bower_components\\angular\\angular.js:5297"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:5309"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:5309"
        },
        {
            "message": "unknown tag: kind",
            "line": " web\\bower_components\\angular\\angular.js:5309"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:5335"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:5335"
        },
        {
            "message": "unknown tag: kind",
            "line": " web\\bower_components\\angular\\angular.js:5335"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:5361"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:5361"
        },
        {
            "message": "unknown tag: kind",
            "line": " web\\bower_components\\angular\\angular.js:5361"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:5380"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:5380"
        },
        {
            "message": "unknown tag: kind",
            "line": " web\\bower_components\\angular\\angular.js:5380"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:5404"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:5404"
        },
        {
            "message": "unknown tag: kind",
            "line": " web\\bower_components\\angular\\angular.js:5404"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:5428"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:5428"
        },
        {
            "message": "unknown tag: kind",
            "line": " web\\bower_components\\angular\\angular.js:5428"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:5454"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:5454"
        },
        {
            "message": "unknown tag: kind",
            "line": " web\\bower_components\\angular\\angular.js:5454"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:5685"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:5685"
        },
        {
            "message": "unknown tag: kind",
            "line": " web\\bower_components\\angular\\angular.js:5685"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:5759"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:5850"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:5930"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:5930"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:5987"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:6048"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:6048"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:6062"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:6062"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:6088"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:6088"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:6117"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:6117"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:6117"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:6216"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:6216"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:6257"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:6257"
        },
        {
            "message": "unknown tag: kind",
            "line": " web\\bower_components\\angular\\angular.js:6257"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:6257"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:6293"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:6293"
        },
        {
            "message": "unknown tag: kind",
            "line": " web\\bower_components\\angular\\angular.js:6293"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:6293"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:6317"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:6317"
        },
        {
            "message": "unknown tag: kind",
            "line": " web\\bower_components\\angular\\angular.js:6317"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:6347"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:6347"
        },
        {
            "message": "unknown tag: kind",
            "line": " web\\bower_components\\angular\\angular.js:6347"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:6363"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:6363"
        },
        {
            "message": "unknown tag: kind",
            "line": " web\\bower_components\\angular\\angular.js:6363"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:6380"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:6380"
        },
        {
            "message": "unknown tag: kind",
            "line": " web\\bower_components\\angular\\angular.js:6380"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:6380"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:6433"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:6433"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:6433"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:6451"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:6451"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:6451"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:6470"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:6470"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:6548"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:6548"
        },
        {
            "message": "unknown tag: kind",
            "line": " web\\bower_components\\angular\\angular.js:6548"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:6548"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:7351"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:7351"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:7448"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:7448"
        },
        {
            "message": "unknown tag: kind",
            "line": " web\\bower_components\\angular\\angular.js:7448"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:7448"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:7507"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:7507"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:7507"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:7630"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:7630"
        },
        {
            "message": "unknown tag: kind",
            "line": " web\\bower_components\\angular\\angular.js:7630"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:7630"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:7660"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:7660"
        },
        {
            "message": "unknown tag: kind",
            "line": " web\\bower_components\\angular\\angular.js:7660"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:7660"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:7689"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:7689"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:7689"
        },
        {
            "message": "unknown tag: kind",
            "line": " web\\bower_components\\angular\\angular.js:7689"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:7745"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:7745"
        },
        {
            "message": "unknown tag: kind",
            "line": " web\\bower_components\\angular\\angular.js:7745"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:7763"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:7763"
        },
        {
            "message": "unknown tag: kind",
            "line": " web\\bower_components\\angular\\angular.js:7763"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:7780"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:7780"
        },
        {
            "message": "unknown tag: kind",
            "line": " web\\bower_components\\angular\\angular.js:7780"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:7797"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:7797"
        },
        {
            "message": "unknown tag: kind",
            "line": " web\\bower_components\\angular\\angular.js:7797"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:7927"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:7927"
        },
        {
            "message": "unknown tag: kind",
            "line": " web\\bower_components\\angular\\angular.js:7927"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:7927"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:8121"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:8373"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:8405"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:8420"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:8451"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:9038"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:9076"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:9627"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:9627"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:9641"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:9641"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:9651"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:9651"
        },
        {
            "message": "unknown tag: kind",
            "line": " web\\bower_components\\angular\\angular.js:9651"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:9733"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:9733"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:9747"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:9747"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:9764"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:9764"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:9776"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:9776"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:9891"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:9891"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:9922"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:9922"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:10017"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:10017"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:10054"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:10054"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:10146"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:10176"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:10207"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:10236"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:10236"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:10243"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:10243"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:10302"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:10302"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:10302"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:10330"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:10330"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:10330"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:10353"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:10353"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:10391"
        },
        {
            "message": "unknown tag: kind",
            "line": " web\\bower_components\\angular\\angular.js:10391"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:10391"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:10391"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:11048"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:11048"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:11048"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:11060"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:11060"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:11060"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:11072"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:11072"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:11072"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:11084"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:11084"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:11084"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:11098"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:11098"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:11098"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:11111"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:11111"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:11111"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:11124"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:11124"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:11124"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:11138"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:11138"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:11307"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:11307"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:11336"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:11336"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:11518"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:11518"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:11565"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:11565"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:11565"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:11583"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:11583"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:11583"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:11643"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:11643"
        },
        {
            "message": "unknown tag: kind",
            "line": " web\\bower_components\\angular\\angular.js:11643"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:11643"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:11851"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:11851"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:11851"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:11867"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:11867"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:11867"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:11892"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:11892"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:11892"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:12061"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:12061"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:12061"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:12085"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:12085"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:12101"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:12145"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:12433"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:12433"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:12454"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:12454"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:12488"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:12488"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:12508"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:12508"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:12536"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:12536"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:12556"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:12556"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:12585"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:12585"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:12663"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:12663"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:12688"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:12688"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:12705"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:12705"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:12764"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:12764"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:12790"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:12790"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:12804"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:12804"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:12804"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:12820"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:12820"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:12820"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:12863"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:12863"
        },
        {
            "message": "unknown tag: eventtype",
            "line": " web\\bower_components\\angular\\angular.js:12863"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:12885"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:12885"
        },
        {
            "message": "unknown tag: eventtype",
            "line": " web\\bower_components\\angular\\angular.js:12885"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:13086"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:13086"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:13124"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:13124"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:13134"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:13134"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:13134"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:13152"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:13152"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:13161"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:13161"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:13170"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:13170"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:13179"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:13179"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:13188"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:13188"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:14943"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:14943"
        },
        {
            "message": "unknown tag: kind",
            "line": " web\\bower_components\\angular\\angular.js:14943"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:14943"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:14984"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:14984"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:15240"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:15240"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:15240"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:15473"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:15484"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:15484"
        },
        {
            "message": "unknown tag: kind",
            "line": " web\\bower_components\\angular\\angular.js:15484"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:15484"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:15651"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:15651"
        },
        {
            "message": "unknown tag: kind",
            "line": " web\\bower_components\\angular\\angular.js:15651"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:15651"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:15721"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:15721"
        },
        {
            "message": "unknown tag: kind",
            "line": " web\\bower_components\\angular\\angular.js:15721"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:15721"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:15745"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:15745"
        },
        {
            "message": "unknown tag: kind",
            "line": " web\\bower_components\\angular\\angular.js:15745"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:15745"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:15761"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:15761"
        },
        {
            "message": "unknown tag: kind",
            "line": " web\\bower_components\\angular\\angular.js:15761"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:15761"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:15890"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:15890"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:15898"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:15898"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:15920"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:15920"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:15988"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:15988"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:15988"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:16041"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:16041"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:16049"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:16049"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:16057"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:16057"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:16067"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:16067"
        },
        {
            "message": "unknown tag: kind",
            "line": " web\\bower_components\\angular\\angular.js:16067"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:16067"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:16131"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:16131"
        },
        {
            "message": "unknown tag: kind",
            "line": " web\\bower_components\\angular\\angular.js:16131"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:16131"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:16285"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:16285"
        },
        {
            "message": "unknown tag: kind",
            "line": " web\\bower_components\\angular\\angular.js:16285"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:16285"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:16369"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:16369"
        },
        {
            "message": "unknown tag: kind",
            "line": " web\\bower_components\\angular\\angular.js:16369"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:16369"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:16556"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:16556"
        },
        {
            "message": "unknown tag: kind",
            "line": " web\\bower_components\\angular\\angular.js:16556"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:16722"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:16722"
        },
        {
            "message": "unknown tag: eventtype",
            "line": " web\\bower_components\\angular\\angular.js:16722"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:16734"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:16734"
        },
        {
            "message": "unknown tag: kind",
            "line": " web\\bower_components\\angular\\angular.js:16734"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:16791"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:16791"
        },
        {
            "message": "unknown tag: kind",
            "line": " web\\bower_components\\angular\\angular.js:16791"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:16791"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:16823"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:16823"
        },
        {
            "message": "unknown tag: kind",
            "line": " web\\bower_components\\angular\\angular.js:16823"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:16871"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:16871"
        },
        {
            "message": "unknown tag: kind",
            "line": " web\\bower_components\\angular\\angular.js:16871"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:16871"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:16936"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:16936"
        },
        {
            "message": "unknown tag: kind",
            "line": " web\\bower_components\\angular\\angular.js:16936"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:16964"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:16964"
        },
        {
            "message": "unknown tag: kind",
            "line": " web\\bower_components\\angular\\angular.js:16964"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:16964"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:17017"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:17017"
        },
        {
            "message": "unknown tag: kind",
            "line": " web\\bower_components\\angular\\angular.js:17017"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:17090"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:17090"
        },
        {
            "message": "unknown tag: kind",
            "line": " web\\bower_components\\angular\\angular.js:17090"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:17231"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:17231"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:17254"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:17279"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:17380"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:17380"
        },
        {
            "message": "unknown tag: kind",
            "line": " web\\bower_components\\angular\\angular.js:17380"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:17407"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:17407"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:17454"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:17454"
        },
        {
            "message": "unknown tag: kind",
            "line": " web\\bower_components\\angular\\angular.js:17454"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:17485"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:17485"
        },
        {
            "message": "unknown tag: kind",
            "line": " web\\bower_components\\angular\\angular.js:17485"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:17588"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:17588"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:17588"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:17625"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:17625"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:17625"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:17651"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:17651"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:17651"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:17703"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:17703"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:17717"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:17717"
        },
        {
            "message": "unknown tag: kind",
            "line": " web\\bower_components\\angular\\angular.js:17717"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:17987"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:17987"
        },
        {
            "message": "unknown tag: kind",
            "line": " web\\bower_components\\angular\\angular.js:17987"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:18065"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:18065"
        },
        {
            "message": "unknown tag: kind",
            "line": " web\\bower_components\\angular\\angular.js:18065"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:18088"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:18088"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:18088"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:18118"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:18118"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:18118"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:18137"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:18137"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:18137"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:18152"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:18152"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:18152"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:18167"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:18167"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:18167"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:18182"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:18182"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:18182"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:18197"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:18197"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:18197"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:18215"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:18215"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:18215"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:18227"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:18227"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:18227"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:18239"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:18239"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:18239"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:18251"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:18251"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:18251"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:18263"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:18263"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:18263"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:18275"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:18275"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:18275"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:18292"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:18292"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:18292"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:18309"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:18309"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:18309"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:18326"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:18326"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:18326"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:18343"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:18343"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:18343"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:18382"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:18471"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:18471"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:18484"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:18484"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:18484"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:18505"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:18505"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:18582"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:18591"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:18626"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:18650"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:18661"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:18677"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:18700"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:18700"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:18700"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:18763"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:18763"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:18763"
        },
        {
            "message": "unknown tag: kind",
            "line": " web\\bower_components\\angular\\angular.js:18799"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:18799"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:18871"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:18884"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:18884"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:18929"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:18995"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:18995"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:19052"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:19052"
        },
        {
            "message": "unknown tag: kind",
            "line": " web\\bower_components\\angular\\angular.js:19052"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:19087"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:19087"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:19087"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:19147"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:19147"
        },
        {
            "message": "unknown tag: kind",
            "line": " web\\bower_components\\angular\\angular.js:19147"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:19406"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:19406"
        },
        {
            "message": "unknown tag: kind",
            "line": " web\\bower_components\\angular\\angular.js:19406"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:19406"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:19478"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:19478"
        },
        {
            "message": "unknown tag: kind",
            "line": " web\\bower_components\\angular\\angular.js:19478"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:19478"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:19853"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:19853"
        },
        {
            "message": "unknown tag: kind",
            "line": " web\\bower_components\\angular\\angular.js:19853"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:19853"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:20023"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:20023"
        },
        {
            "message": "unknown tag: kind",
            "line": " web\\bower_components\\angular\\angular.js:20023"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:20023"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:20064"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:20064"
        },
        {
            "message": "unknown tag: kind",
            "line": " web\\bower_components\\angular\\angular.js:20064"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:20075"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:20075"
        },
        {
            "message": "unknown tag: kind",
            "line": " web\\bower_components\\angular\\angular.js:20075"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:20085"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:20085"
        },
        {
            "message": "unknown tag: kind",
            "line": " web\\bower_components\\angular\\angular.js:20085"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:20085"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:20210"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:20210"
        },
        {
            "message": "unknown tag: kind",
            "line": " web\\bower_components\\angular\\angular.js:20210"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:20210"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:20536"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:20536"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular\\angular.js:20536"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:20571"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:20571"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular\\angular.js:20571"
        },
        {
            "message": "unknown tag: priority",
            "line": " web\\bower_components\\angular\\angular.js:20571"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:20670"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:20670"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular\\angular.js:20670"
        },
        {
            "message": "unknown tag: priority",
            "line": " web\\bower_components\\angular\\angular.js:20670"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:20696"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:20696"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular\\angular.js:20696"
        },
        {
            "message": "unknown tag: priority",
            "line": " web\\bower_components\\angular\\angular.js:20696"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:20722"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:20722"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular\\angular.js:20722"
        },
        {
            "message": "unknown tag: priority",
            "line": " web\\bower_components\\angular\\angular.js:20722"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:20757"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:20757"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular\\angular.js:20757"
        },
        {
            "message": "unknown tag: priority",
            "line": " web\\bower_components\\angular\\angular.js:20757"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:20793"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:20793"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular\\angular.js:20793"
        },
        {
            "message": "unknown tag: priority",
            "line": " web\\bower_components\\angular\\angular.js:20793"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:20827"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:20827"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular\\angular.js:20827"
        },
        {
            "message": "unknown tag: priority",
            "line": " web\\bower_components\\angular\\angular.js:20827"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:20863"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:20863"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular\\angular.js:20863"
        },
        {
            "message": "unknown tag: priority",
            "line": " web\\bower_components\\angular\\angular.js:20863"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:21011"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:21011"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:21071"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:21071"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:21088"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:21088"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:21105"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:21105"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:21150"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:21150"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:21185"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:21185"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:21221"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:21221"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:21239"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:21239"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:21263"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:21263"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:21282"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:21282"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:21296"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:21296"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular\\angular.js:21296"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:21315"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:21315"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular\\angular.js:21315"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:21576"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:21576"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:21672"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:21672"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:21777"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:21777"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:21880"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:21880"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:21984"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:21984"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:22087"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:22087"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:22193"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:22193"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:22303"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:22303"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:22402"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:22402"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:22500"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:22500"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:22566"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:22566"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:23042"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:23042"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular\\angular.js:23042"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:23078"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:23078"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular\\angular.js:23078"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:23234"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:23234"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:23311"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:23311"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular\\angular.js:23311"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:23379"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:23379"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:23447"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:23447"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:23517"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:23517"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:23713"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:23713"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular\\angular.js:23713"
        },
        {
            "message": "unknown tag: animations",
            "line": " web\\bower_components\\angular\\angular.js:23713"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:23892"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:23892"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular\\angular.js:23892"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:23940"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:23940"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular\\angular.js:23940"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:23988"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:23988"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular\\angular.js:23988"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:24047"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:24047"
        },
        {
            "message": "unknown tag: scope",
            "line": " web\\bower_components\\angular\\angular.js:24047"
        },
        {
            "message": "unknown tag: priority",
            "line": " web\\bower_components\\angular\\angular.js:24047"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:24282"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:24282"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:24485"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:24485"
        },
        {
            "message": "unknown tag: priority",
            "line": " web\\bower_components\\angular\\angular.js:24485"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:24561"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:24561"
        },
        {
            "message": "unknown tag: priority",
            "line": " web\\bower_components\\angular\\angular.js:24561"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:24585"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:24585"
        },
        {
            "message": "unknown tag: priority",
            "line": " web\\bower_components\\angular\\angular.js:24585"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:24609"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:24609"
        },
        {
            "message": "unknown tag: priority",
            "line": " web\\bower_components\\angular\\angular.js:24609"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:24632"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:24632"
        },
        {
            "message": "unknown tag: priority",
            "line": " web\\bower_components\\angular\\angular.js:24632"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:24656"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:24656"
        },
        {
            "message": "unknown tag: priority",
            "line": " web\\bower_components\\angular\\angular.js:24656"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:24680"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:24680"
        },
        {
            "message": "unknown tag: priority",
            "line": " web\\bower_components\\angular\\angular.js:24680"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:24704"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:24704"
        },
        {
            "message": "unknown tag: priority",
            "line": " web\\bower_components\\angular\\angular.js:24704"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:24728"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:24728"
        },
        {
            "message": "unknown tag: priority",
            "line": " web\\bower_components\\angular\\angular.js:24728"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:24750"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:24750"
        },
        {
            "message": "unknown tag: priority",
            "line": " web\\bower_components\\angular\\angular.js:24750"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:24777"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:24777"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:24799"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:24799"
        },
        {
            "message": "unknown tag: priority",
            "line": " web\\bower_components\\angular\\angular.js:24799"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:24862"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:24862"
        },
        {
            "message": "unknown tag: priority",
            "line": " web\\bower_components\\angular\\angular.js:24862"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:24882"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:24882"
        },
        {
            "message": "unknown tag: priority",
            "line": " web\\bower_components\\angular\\angular.js:24882"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:24906"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:24906"
        },
        {
            "message": "unknown tag: priority",
            "line": " web\\bower_components\\angular\\angular.js:24906"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:24927"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:24927"
        },
        {
            "message": "unknown tag: priority",
            "line": " web\\bower_components\\angular\\angular.js:24927"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:24948"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:24948"
        },
        {
            "message": "unknown tag: priority",
            "line": " web\\bower_components\\angular\\angular.js:24948"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:24969"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:24969"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular\\angular.js:24969"
        },
        {
            "message": "unknown tag: multielement",
            "line": " web\\bower_components\\angular\\angular.js:24969"
        },
        {
            "message": "unknown tag: animations",
            "line": " web\\bower_components\\angular\\angular.js:24969"
        },
        {
            "message": "unknown tag: scope",
            "line": " web\\bower_components\\angular\\angular.js:24969"
        },
        {
            "message": "unknown tag: priority",
            "line": " web\\bower_components\\angular\\angular.js:24969"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:25093"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:25093"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular\\angular.js:25093"
        },
        {
            "message": "unknown tag: animations",
            "line": " web\\bower_components\\angular\\angular.js:25093"
        },
        {
            "message": "unknown tag: scope",
            "line": " web\\bower_components\\angular\\angular.js:25093"
        },
        {
            "message": "unknown tag: priority",
            "line": " web\\bower_components\\angular\\angular.js:25093"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:25242"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:25242"
        },
        {
            "message": "unknown tag: eventtype",
            "line": " web\\bower_components\\angular\\angular.js:25242"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:25254"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:25254"
        },
        {
            "message": "unknown tag: eventtype",
            "line": " web\\bower_components\\angular\\angular.js:25254"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:25266"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:25266"
        },
        {
            "message": "unknown tag: eventtype",
            "line": " web\\bower_components\\angular\\angular.js:25266"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:25396"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:25396"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular\\angular.js:25396"
        },
        {
            "message": "unknown tag: priority",
            "line": " web\\bower_components\\angular\\angular.js:25396"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:25465"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:25465"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:25613"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:25613"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:25869"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:25869"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:25891"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:25891"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular\\angular.js:25891"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:25926"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:25926"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:25960"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:25960"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:25978"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:25978"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:25997"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:25997"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:26015"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:26015"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:26032"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:26032"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:26126"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:26126"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:26265"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:26265"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:26355"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:26355"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:26483"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:26483"
        },
        {
            "message": "unknown tag: priority",
            "line": " web\\bower_components\\angular\\angular.js:26483"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:26728"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:26728"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:27018"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:27018"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular\\angular.js:27018"
        },
        {
            "message": "unknown tag: priority",
            "line": " web\\bower_components\\angular\\angular.js:27018"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:27056"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:27056"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular\\angular.js:27056"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:27811"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:27811"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular\\angular.js:27811"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:28050"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:28050"
        },
        {
            "message": "unknown tag: multielement",
            "line": " web\\bower_components\\angular\\angular.js:28050"
        },
        {
            "message": "unknown tag: animations",
            "line": " web\\bower_components\\angular\\angular.js:28050"
        },
        {
            "message": "unknown tag: scope",
            "line": " web\\bower_components\\angular\\angular.js:28050"
        },
        {
            "message": "unknown tag: priority",
            "line": " web\\bower_components\\angular\\angular.js:28050"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:28598"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:28598"
        },
        {
            "message": "unknown tag: multielement",
            "line": " web\\bower_components\\angular\\angular.js:28598"
        },
        {
            "message": "unknown tag: animations",
            "line": " web\\bower_components\\angular\\angular.js:28598"
        },
        {
            "message": "unknown tag: import",
            "line": " web\\bower_components\\angular\\angular.js:28598"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:28772"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:28772"
        },
        {
            "message": "unknown tag: multielement",
            "line": " web\\bower_components\\angular\\angular.js:28772"
        },
        {
            "message": "unknown tag: animations",
            "line": " web\\bower_components\\angular\\angular.js:28772"
        },
        {
            "message": "unknown tag: import",
            "line": " web\\bower_components\\angular\\angular.js:28772"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:28930"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:28930"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular\\angular.js:28930"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:28985"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:28985"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular\\angular.js:28985"
        },
        {
            "message": "unknown tag: animations",
            "line": " web\\bower_components\\angular\\angular.js:28985"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular\\angular.js:28985"
        },
        {
            "message": "unknown tag: scope",
            "line": " web\\bower_components\\angular\\angular.js:28985"
        },
        {
            "message": "unknown tag: priority",
            "line": " web\\bower_components\\angular\\angular.js:28985"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:29188"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:29188"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular\\angular.js:29188"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:29379"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:29379"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular\\angular.js:29379"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:29438"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:29438"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:29574"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:29574"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular\\angular.js:29574"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:29915"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:29915"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:29992"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:29992"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:30098"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:30098"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular\\angular.js:30184"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular\\angular.js:30184"
        },
        {
            "message": "unknown tag: license",
            "line": " web\\bower_components\\angular-animate\\angular-animate.js:1"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-animate\\angular-animate.js:434"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-animate\\angular-animate.js:434"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-animate\\angular-animate.js:434"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-animate\\angular-animate.js:535"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-animate\\angular-animate.js:535"
        },
        {
            "message": "unknown tag: kind",
            "line": " web\\bower_components\\angular-animate\\angular-animate.js:535"
        },
        {
            "message": "unknown tag: keyframes",
            "line": " web\\bower_components\\angular-animate\\angular-animate.js:535"
        },
        {
            "message": "unknown tag: keyframes",
            "line": " web\\bower_components\\angular-animate\\angular-animate.js:535"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-animate\\angular-animate.js:3231"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-animate\\angular-animate.js:3231"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-animate\\angular-animate.js:3231"
        },
        {
            "message": "unknown tag: scope",
            "line": " web\\bower_components\\angular-animate\\angular-animate.js:3231"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-animate\\angular-animate.js:3354"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-animate\\angular-animate.js:3354"
        },
        {
            "message": "unknown tag: keyframes",
            "line": " web\\bower_components\\angular-animate\\angular-animate.js:3354"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-animate\\angular-animate.js:4095"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-animate\\angular-animate.js:4095"
        },
        {
            "message": "unknown tag: kind",
            "line": " web\\bower_components\\angular-animate\\angular-animate.js:4095"
        },
        {
            "message": "unknown tag: license",
            "line": " web\\bower_components\\angular-aria\\angular-aria.js:1"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-aria\\angular-aria.js:8"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-aria\\angular-aria.js:8"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-aria\\angular-aria.js:74"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-aria\\angular-aria.js:74"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-aria\\angular-aria.js:108"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-aria\\angular-aria.js:108"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-aria\\angular-aria.js:145"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-aria\\angular-aria.js:145"
        },
        {
            "message": "unknown tag: priority",
            "line": " web\\bower_components\\angular-aria\\angular-aria.js:145"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js:11"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js:11"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js:98"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js:136"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js:233"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js:244"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js:479"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js:487"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js:504"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js:518"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js:539"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js:550"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js:558"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js:566"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js:574"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js:582"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js:590"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js:699"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js:782"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js:782"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js:782"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js:1184"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js:1184"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js:1184"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\backdrop\\backdrop.js:15"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\backdrop\\backdrop.js:15"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\backdrop\\backdrop.js:15"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\bottomSheet\\bottomSheet.js:10"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\bottomSheet\\bottomSheet.js:10"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\bottomSheet\\bottomSheet.js:40"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\bottomSheet\\bottomSheet.js:40"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\bottomSheet\\bottomSheet.js:40"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\bottomSheet\\bottomSheet.js:74"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\bottomSheet\\bottomSheet.js:74"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\bottomSheet\\bottomSheet.js:74"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\bottomSheet\\bottomSheet.js:113"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\bottomSheet\\bottomSheet.js:113"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\bottomSheet\\bottomSheet.js:125"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\bottomSheet\\bottomSheet.js:125"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\button\\button.js:9"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\button\\button.js:9"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\button\\button.js:20"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\button\\button.js:20"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\button\\button.js:20"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\button\\button.js:20"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\card\\card.js:9"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\card\\card.js:9"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\card\\card.js:22"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\card\\card.js:22"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\card\\card.js:22"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\card\\card.js:22"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\checkbox\\checkbox.js:9"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\checkbox\\checkbox.js:9"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\checkbox\\checkbox.js:18"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\checkbox\\checkbox.js:18"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\checkbox\\checkbox.js:18"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\checkbox\\checkbox.js:18"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js:10"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js:10"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js:26"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js:26"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js:26"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js:87"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js:87"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js:87"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js:104"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js:669"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js:669"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js:669"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js:854"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js:1035"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js:1035"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js:1035"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js:1125"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\content\\content.js:9"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\content\\content.js:9"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\content\\content.js:21"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\content\\content.js:21"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\content\\content.js:21"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\content\\content.js:21"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:95"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:95"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:95"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:338"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:346"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:354"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:363"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:374"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:385"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:409"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:437"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:446"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:455"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:463"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:471"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:513"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:513"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:513"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:513"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:705"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:705"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:721"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:793"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:1094"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:1251"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:1302"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:1634"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:1634"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:2260"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:3499"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:3499"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:3987"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:3987"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:3995"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:3995"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:4002"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:4002"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:4008"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:4008"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:4296"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:4296"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:4668"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:4668"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:4714"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:4714"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:4749"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:4749"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:4782"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:4782"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:4797"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:4797"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:4797"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:4842"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:4842"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:4842"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:4871"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:4871"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:4942"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:4957"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:4978"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:4993"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:5012"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:5095"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:5252"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:5252"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:14"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:14"
        },
        {
            "message": "unknown tag: this",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:215"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:336"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:364"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:500"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:530"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:636"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:707"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:724"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:824"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:838"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:838"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:838"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:979"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:986"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1011"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1020"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1038"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1047"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1056"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1129"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1129"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1129"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1770"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1779"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1788"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1797"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1806"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1816"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1826"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1837"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1848"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1858"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1868"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1878"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1902"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1915"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\dialog\\dialog.js:10"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\dialog\\dialog.js:10"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\dialog\\dialog.js:22"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\dialog\\dialog.js:22"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\dialog\\dialog.js:22"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\dialog\\dialog.js:22"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\dialog\\dialog.js:89"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\dialog\\dialog.js:89"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\dialog\\dialog.js:89"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\dialog\\dialog.js:331"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\dialog\\dialog.js:331"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\dialog\\dialog.js:331"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\dialog\\dialog.js:352"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\dialog\\dialog.js:352"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\dialog\\dialog.js:352"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\dialog\\dialog.js:377"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\dialog\\dialog.js:377"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\dialog\\dialog.js:377"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\dialog\\dialog.js:441"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\dialog\\dialog.js:441"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\dialog\\dialog.js:441"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\dialog\\dialog.js:453"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\dialog\\dialog.js:453"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\dialog\\dialog.js:453"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\divider\\divider.js:9"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\divider\\divider.js:9"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\divider\\divider.js:19"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\divider\\divider.js:19"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\divider\\divider.js:19"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\divider\\divider.js:19"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\fabActions\\fabActions.js:12"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\fabActions\\fabActions.js:12"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\fabActions\\fabActions.js:20"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\fabActions\\fabActions.js:20"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\fabActions\\fabActions.js:20"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\fabActions\\fabActions.js:20"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\fabSpeedDial\\fabSpeedDial.js:317"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\fabSpeedDial\\fabSpeedDial.js:317"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\fabSpeedDial\\fabSpeedDial.js:341"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\fabSpeedDial\\fabSpeedDial.js:341"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\fabSpeedDial\\fabSpeedDial.js:341"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\fabSpeedDial\\fabSpeedDial.js:341"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\fabToolbar\\fabToolbar.js:15"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\fabToolbar\\fabToolbar.js:15"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\fabToolbar\\fabToolbar.js:37"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\fabToolbar\\fabToolbar.js:37"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\fabToolbar\\fabToolbar.js:37"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\fabToolbar\\fabToolbar.js:37"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\fabTrigger\\fabTrigger.js:12"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\fabTrigger\\fabTrigger.js:12"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\fabTrigger\\fabTrigger.js:20"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\fabTrigger\\fabTrigger.js:20"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\fabTrigger\\fabTrigger.js:20"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\fabTrigger\\fabTrigger.js:20"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\gridList\\gridList.js:9"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\gridList\\gridList.js:9"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\gridList\\gridList.js:20"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\gridList\\gridList.js:20"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\gridList\\gridList.js:20"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\gridList\\gridList.js:20"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\gridList\\gridList.js:248"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\gridList\\gridList.js:363"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\gridList\\gridList.js:654"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\gridList\\gridList.js:654"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\gridList\\gridList.js:654"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\gridList\\gridList.js:654"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\icon\\icon.js:9"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\icon\\icon.js:9"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\icon\\icon.js:23"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\icon\\icon.js:23"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\icon\\icon.js:23"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\icon\\icon.js:23"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\icon\\icon.js:269"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\icon\\icon.js:269"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\icon\\icon.js:269"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\icon\\icon.js:330"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\icon\\icon.js:330"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\icon\\icon.js:330"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\icon\\icon.js:330"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\icon\\icon.js:359"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\icon\\icon.js:359"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\icon\\icon.js:359"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\icon\\icon.js:359"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\icon\\icon.js:390"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\icon\\icon.js:390"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\icon\\icon.js:390"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\icon\\icon.js:390"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\icon\\icon.js:419"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\icon\\icon.js:419"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\icon\\icon.js:419"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\icon\\icon.js:451"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\icon\\icon.js:451"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\icon\\icon.js:451"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\icon\\icon.js:451"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\icon\\icon.js:598"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\icon\\icon.js:598"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\icon\\icon.js:598"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\icon\\icon.js:598"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\input\\input.js:9"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\input\\input.js:9"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\input\\input.js:32"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\input\\input.js:32"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\input\\input.js:32"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\input\\input.js:32"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\input\\input.js:138"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\input\\input.js:138"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\input\\input.js:138"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\input\\input.js:138"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\input\\input.js:567"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\input\\input.js:567"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\input\\input.js:567"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\input\\input.js:567"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\list\\list.js:9"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\list\\list.js:9"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\list\\list.js:22"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\list\\list.js:22"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\list\\list.js:22"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\list\\list.js:22"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\list\\list.js:56"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\list\\list.js:56"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\list\\list.js:56"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\list\\list.js:56"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\menu\\menu.js:10"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\menu\\menu.js:10"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\menu\\menu.js:245"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\menu\\menu.js:245"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\menu\\menu.js:245"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\menu\\menu.js:245"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\menu\\menu.js:502"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\menu\\menu.js:820"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\menuBar\\menuBar.js:10"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\menuBar\\menuBar.js:10"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\menuBar\\menuBar.js:268"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\menuBar\\menuBar.js:268"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\menuBar\\menuBar.js:268"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\menuBar\\menuBar.js:268"
        },
        {
            "message": "unknown tag: nginjdect",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\menuBar\\menuBar.js:362"
        },
        {
            "message": "unknown tag: nginjdect",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\menuBar\\menuBar.js:531"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\progressCircular\\progressCircular.js:9"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\progressCircular\\progressCircular.js:9"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\progressCircular\\progressCircular.js:19"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\progressCircular\\progressCircular.js:19"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\progressCircular\\progressCircular.js:19"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\progressCircular\\progressCircular.js:19"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\progressCircular\\progressCircular.js:247"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\progressLinear\\progressLinear.js:9"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\progressLinear\\progressLinear.js:9"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\progressLinear\\progressLinear.js:19"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\progressLinear\\progressLinear.js:19"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\progressLinear\\progressLinear.js:19"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\progressLinear\\progressLinear.js:19"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\progressLinear\\progressLinear.js:185"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\radioButton\\radioButton.js:9"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\radioButton\\radioButton.js:9"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\radioButton\\radioButton.js:20"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\radioButton\\radioButton.js:20"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\radioButton\\radioButton.js:20"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\radioButton\\radioButton.js:20"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\radioButton\\radioButton.js:213"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\radioButton\\radioButton.js:213"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\radioButton\\radioButton.js:213"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\radioButton\\radioButton.js:213"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\radioButton\\radioButton.js:353"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\select\\select.js:10"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\select\\select.js:10"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\select\\select.js:35"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\select\\select.js:35"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\select\\select.js:35"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\select\\select.js:35"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\showHide\\showHide.js:9"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\showHide\\showHide.js:9"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\sidenav\\sidenav.js:10"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\sidenav\\sidenav.js:10"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\sidenav\\sidenav.js:28"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\sidenav\\sidenav.js:28"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\sidenav\\sidenav.js:28"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\sidenav\\sidenav.js:123"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\sidenav\\sidenav.js:123"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\sidenav\\sidenav.js:123"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\sidenav\\sidenav.js:123"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\sidenav\\sidenav.js:155"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\sidenav\\sidenav.js:155"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\sidenav\\sidenav.js:155"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\sidenav\\sidenav.js:155"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\sidenav\\sidenav.js:336"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\slider\\slider.js:9"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\slider\\slider.js:9"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\slider\\slider.js:18"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\slider\\slider.js:18"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\slider\\slider.js:18"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\slider\\slider.js:18"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\slider\\slider.js:392"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\slider\\slider.js:401"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\slider\\slider.js:410"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\sticky\\sticky.js:10"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\sticky\\sticky.js:10"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\sticky\\sticky.js:24"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\sticky\\sticky.js:24"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\sticky\\sticky.js:24"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\sticky\\sticky.js:24"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\subheader\\subheader.js:10"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\subheader\\subheader.js:10"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\subheader\\subheader.js:35"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\subheader\\subheader.js:35"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\subheader\\subheader.js:35"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\subheader\\subheader.js:35"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\swipe\\swipe.js:9"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\swipe\\swipe.js:9"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\swipe\\swipe.js:14"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\swipe\\swipe.js:14"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\swipe\\swipe.js:14"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\swipe\\swipe.js:14"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\swipe\\swipe.js:30"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\swipe\\swipe.js:30"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\swipe\\swipe.js:30"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\swipe\\swipe.js:30"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\swipe\\swipe.js:46"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\swipe\\swipe.js:46"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\swipe\\swipe.js:46"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\swipe\\swipe.js:46"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\swipe\\swipe.js:62"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\swipe\\swipe.js:62"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\swipe\\swipe.js:62"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\swipe\\swipe.js:62"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\switch\\switch.js:10"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\switch\\switch.js:10"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\switch\\switch.js:22"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\switch\\switch.js:22"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\switch\\switch.js:22"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\switch\\switch.js:22"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js:10"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js:10"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js:38"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js:38"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js:38"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js:38"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js:588"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js:628"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js:651"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js:659"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js:669"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js:685"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js:693"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js:704"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js:848"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js:909"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js:951"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js:977"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js:977"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js:977"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js:977"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\textField\\textField.js:12"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\textField\\textField.js:12"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\toast\\toast.js:10"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\toast\\toast.js:10"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\toast\\toast.js:38"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\toast\\toast.js:38"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\toast\\toast.js:38"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\toast\\toast.js:95"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\toast\\toast.js:95"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\toast\\toast.js:95"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\toast\\toast.js:108"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\toast\\toast.js:108"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\toast\\toast.js:108"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\toast\\toast.js:136"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\toast\\toast.js:136"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\toast\\toast.js:145"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\toast\\toast.js:145"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\toast\\toast.js:145"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\toast\\toast.js:155"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\toast\\toast.js:155"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\toast\\toast.js:155"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\toast\\toast.js:200"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\toast\\toast.js:200"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\toast\\toast.js:200"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\toast\\toast.js:215"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\toast\\toast.js:215"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\toast\\toast.js:215"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\toolbar\\toolbar.js:10"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\toolbar\\toolbar.js:10"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\toolbar\\toolbar.js:20"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\toolbar\\toolbar.js:20"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\toolbar\\toolbar.js:20"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\toolbar\\toolbar.js:20"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\tooltip\\tooltip.js:9"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\tooltip\\tooltip.js:9"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\tooltip\\tooltip.js:17"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\tooltip\\tooltip.js:17"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\tooltip\\tooltip.js:17"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js:10"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js:10"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js:22"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js:22"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js:22"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js:22"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js:386"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js:386"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js:386"
        },
        {
            "message": "unknown tag: priority",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js:386"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js:386"
        },
        {
            "message": "unknown tag: typedef",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js:511"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js:865"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\whiteframe\\whiteframe.js:9"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\whiteframe\\whiteframe.js:9"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\whiteframe\\whiteframe.js:17"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\whiteframe\\whiteframe.js:17"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\whiteframe\\whiteframe.js:17"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\whiteframe\\whiteframe.js:17"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js:10"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js:10"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js:97"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js:135"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js:232"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js:243"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js:478"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js:486"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js:503"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js:517"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js:538"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js:549"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js:557"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js:565"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js:573"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js:581"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js:589"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js:698"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js:781"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js:781"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js:781"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js:1183"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js:1183"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js:1183"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\backdrop\\backdrop.js:16"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\backdrop\\backdrop.js:16"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\modules\\js\\backdrop\\backdrop.js:16"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\bottomSheet\\bottomSheet.js:10"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\bottomSheet\\bottomSheet.js:10"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\bottomSheet\\bottomSheet.js:40"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\bottomSheet\\bottomSheet.js:40"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\js\\bottomSheet\\bottomSheet.js:40"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\bottomSheet\\bottomSheet.js:74"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\bottomSheet\\bottomSheet.js:74"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\bottomSheet\\bottomSheet.js:74"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\bottomSheet\\bottomSheet.js:113"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\bottomSheet\\bottomSheet.js:113"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\bottomSheet\\bottomSheet.js:125"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\bottomSheet\\bottomSheet.js:125"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\button\\button.js:10"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\button\\button.js:10"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\button\\button.js:21"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\button\\button.js:21"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\modules\\js\\button\\button.js:21"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\js\\button\\button.js:21"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\card\\card.js:10"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\card\\card.js:10"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\card\\card.js:23"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\card\\card.js:23"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\modules\\js\\card\\card.js:23"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\js\\card\\card.js:23"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\checkbox\\checkbox.js:10"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\checkbox\\checkbox.js:10"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\checkbox\\checkbox.js:19"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\checkbox\\checkbox.js:19"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\modules\\js\\checkbox\\checkbox.js:19"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\js\\checkbox\\checkbox.js:19"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js:10"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js:10"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js:26"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js:26"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js:26"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js:87"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js:87"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js:87"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js:104"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js:669"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js:669"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js:669"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js:854"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js:1035"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js:1035"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js:1035"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js:1125"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\content\\content.js:10"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\content\\content.js:10"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\content\\content.js:22"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\content\\content.js:22"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\modules\\js\\content\\content.js:22"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\js\\content\\content.js:22"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:92"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:92"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:92"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:335"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:343"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:351"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:360"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:371"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:382"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:406"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:434"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:443"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:452"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:460"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:468"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:510"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:510"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:510"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:510"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:702"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:702"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:718"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:790"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:1091"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:1248"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:1299"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:2320"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:2320"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:2946"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:3496"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:3496"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:3620"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:3620"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:3666"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:3666"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:3701"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:3701"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:3734"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:3734"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:3749"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:3749"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:3749"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:3794"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:3794"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:3794"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:3823"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:3823"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:3894"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:3909"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:3930"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:3945"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:3964"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:4047"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:4204"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:4204"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:4604"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:4604"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:4612"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:4612"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:4619"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:4619"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:4625"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:4625"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:4913"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:4913"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:13"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:13"
        },
        {
            "message": "unknown tag: this",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:214"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:335"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:363"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:499"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:529"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:635"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:706"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:723"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:823"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:837"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:837"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:837"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:978"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:985"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1010"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1019"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1037"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1046"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1055"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1128"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1128"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1128"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1769"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1778"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1787"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1796"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1805"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1815"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1825"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1836"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1847"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1857"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1867"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1877"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1901"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1914"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\dialog\\dialog.js:10"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\dialog\\dialog.js:10"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\dialog\\dialog.js:22"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\dialog\\dialog.js:22"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\modules\\js\\dialog\\dialog.js:22"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\js\\dialog\\dialog.js:22"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\dialog\\dialog.js:89"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\dialog\\dialog.js:89"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\js\\dialog\\dialog.js:89"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\dialog\\dialog.js:331"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\dialog\\dialog.js:331"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\dialog\\dialog.js:331"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\dialog\\dialog.js:352"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\dialog\\dialog.js:352"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\dialog\\dialog.js:352"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\dialog\\dialog.js:377"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\dialog\\dialog.js:377"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\dialog\\dialog.js:377"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\dialog\\dialog.js:441"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\dialog\\dialog.js:441"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\dialog\\dialog.js:441"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\dialog\\dialog.js:453"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\dialog\\dialog.js:453"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\dialog\\dialog.js:453"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\divider\\divider.js:10"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\divider\\divider.js:10"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\divider\\divider.js:20"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\divider\\divider.js:20"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\modules\\js\\divider\\divider.js:20"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\js\\divider\\divider.js:20"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\fabActions\\fabActions.js:13"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\fabActions\\fabActions.js:13"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\fabActions\\fabActions.js:21"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\fabActions\\fabActions.js:21"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\modules\\js\\fabActions\\fabActions.js:21"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\js\\fabActions\\fabActions.js:21"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\fabSpeedDial\\fabSpeedDial.js:318"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\fabSpeedDial\\fabSpeedDial.js:318"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\fabSpeedDial\\fabSpeedDial.js:342"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\fabSpeedDial\\fabSpeedDial.js:342"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\modules\\js\\fabSpeedDial\\fabSpeedDial.js:342"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\js\\fabSpeedDial\\fabSpeedDial.js:342"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\fabToolbar\\fabToolbar.js:13"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\fabToolbar\\fabToolbar.js:13"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\fabToolbar\\fabToolbar.js:35"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\fabToolbar\\fabToolbar.js:35"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\modules\\js\\fabToolbar\\fabToolbar.js:35"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\js\\fabToolbar\\fabToolbar.js:35"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\fabTrigger\\fabTrigger.js:13"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\fabTrigger\\fabTrigger.js:13"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\fabTrigger\\fabTrigger.js:21"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\fabTrigger\\fabTrigger.js:21"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\modules\\js\\fabTrigger\\fabTrigger.js:21"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\js\\fabTrigger\\fabTrigger.js:21"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\gridList\\gridList.js:10"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\gridList\\gridList.js:10"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\gridList\\gridList.js:21"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\gridList\\gridList.js:21"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\modules\\js\\gridList\\gridList.js:21"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\js\\gridList\\gridList.js:21"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\gridList\\gridList.js:249"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\gridList\\gridList.js:364"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\gridList\\gridList.js:655"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\gridList\\gridList.js:655"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\modules\\js\\gridList\\gridList.js:655"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\js\\gridList\\gridList.js:655"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\icon\\icon.js:10"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\icon\\icon.js:10"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\icon\\icon.js:24"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\icon\\icon.js:24"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\modules\\js\\icon\\icon.js:24"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\js\\icon\\icon.js:24"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\icon\\icon.js:270"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\icon\\icon.js:270"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\js\\icon\\icon.js:270"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\icon\\icon.js:331"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\icon\\icon.js:331"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\icon\\icon.js:331"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\js\\icon\\icon.js:331"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\icon\\icon.js:360"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\icon\\icon.js:360"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\icon\\icon.js:360"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\js\\icon\\icon.js:360"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\icon\\icon.js:391"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\icon\\icon.js:391"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\icon\\icon.js:391"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\js\\icon\\icon.js:391"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\icon\\icon.js:420"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\icon\\icon.js:420"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\js\\icon\\icon.js:420"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\icon\\icon.js:452"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\icon\\icon.js:452"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\icon\\icon.js:452"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\js\\icon\\icon.js:452"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\icon\\icon.js:599"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\icon\\icon.js:599"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\icon\\icon.js:599"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\js\\icon\\icon.js:599"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\input\\input.js:10"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\input\\input.js:10"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\input\\input.js:33"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\input\\input.js:33"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\modules\\js\\input\\input.js:33"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\js\\input\\input.js:33"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\input\\input.js:139"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\input\\input.js:139"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\modules\\js\\input\\input.js:139"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\js\\input\\input.js:139"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\input\\input.js:568"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\input\\input.js:568"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\modules\\js\\input\\input.js:568"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\js\\input\\input.js:568"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\list\\list.js:10"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\list\\list.js:10"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\list\\list.js:23"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\list\\list.js:23"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\modules\\js\\list\\list.js:23"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\js\\list\\list.js:23"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\list\\list.js:57"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\list\\list.js:57"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\modules\\js\\list\\list.js:57"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\js\\list\\list.js:57"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\menu\\menu.js:10"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\menu\\menu.js:10"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\menu\\menu.js:245"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\menu\\menu.js:245"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\modules\\js\\menu\\menu.js:245"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\js\\menu\\menu.js:245"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\menu\\menu.js:502"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\menu\\menu.js:820"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\menuBar\\menuBar.js:10"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\menuBar\\menuBar.js:10"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\menuBar\\menuBar.js:268"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\menuBar\\menuBar.js:268"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\modules\\js\\menuBar\\menuBar.js:268"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\js\\menuBar\\menuBar.js:268"
        },
        {
            "message": "unknown tag: nginjdect",
            "line": " web\\bower_components\\angular-material\\modules\\js\\menuBar\\menuBar.js:362"
        },
        {
            "message": "unknown tag: nginjdect",
            "line": " web\\bower_components\\angular-material\\modules\\js\\menuBar\\menuBar.js:531"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\progressCircular\\progressCircular.js:10"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\progressCircular\\progressCircular.js:10"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\progressCircular\\progressCircular.js:20"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\progressCircular\\progressCircular.js:20"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\modules\\js\\progressCircular\\progressCircular.js:20"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\js\\progressCircular\\progressCircular.js:20"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\progressCircular\\progressCircular.js:248"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\progressLinear\\progressLinear.js:10"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\progressLinear\\progressLinear.js:10"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\progressLinear\\progressLinear.js:20"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\progressLinear\\progressLinear.js:20"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\modules\\js\\progressLinear\\progressLinear.js:20"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\js\\progressLinear\\progressLinear.js:20"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\progressLinear\\progressLinear.js:186"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\radioButton\\radioButton.js:10"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\radioButton\\radioButton.js:10"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\radioButton\\radioButton.js:21"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\radioButton\\radioButton.js:21"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\modules\\js\\radioButton\\radioButton.js:21"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\js\\radioButton\\radioButton.js:21"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\radioButton\\radioButton.js:214"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\radioButton\\radioButton.js:214"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\modules\\js\\radioButton\\radioButton.js:214"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\js\\radioButton\\radioButton.js:214"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\radioButton\\radioButton.js:354"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\select\\select.js:10"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\select\\select.js:10"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\select\\select.js:35"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\select\\select.js:35"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\modules\\js\\select\\select.js:35"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\js\\select\\select.js:35"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\showHide\\showHide.js:10"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\showHide\\showHide.js:10"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\sidenav\\sidenav.js:10"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\sidenav\\sidenav.js:10"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\sidenav\\sidenav.js:28"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\sidenav\\sidenav.js:28"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\js\\sidenav\\sidenav.js:28"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\sidenav\\sidenav.js:123"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\sidenav\\sidenav.js:123"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\modules\\js\\sidenav\\sidenav.js:123"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\js\\sidenav\\sidenav.js:123"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\sidenav\\sidenav.js:155"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\sidenav\\sidenav.js:155"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\modules\\js\\sidenav\\sidenav.js:155"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\js\\sidenav\\sidenav.js:155"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\sidenav\\sidenav.js:336"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\slider\\slider.js:10"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\slider\\slider.js:10"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\slider\\slider.js:19"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\slider\\slider.js:19"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\modules\\js\\slider\\slider.js:19"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\js\\slider\\slider.js:19"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\slider\\slider.js:393"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\slider\\slider.js:402"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\slider\\slider.js:411"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\sticky\\sticky.js:10"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\sticky\\sticky.js:10"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\sticky\\sticky.js:24"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\sticky\\sticky.js:24"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\js\\sticky\\sticky.js:24"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\sticky\\sticky.js:24"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\subheader\\subheader.js:10"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\subheader\\subheader.js:10"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\subheader\\subheader.js:35"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\subheader\\subheader.js:35"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\modules\\js\\subheader\\subheader.js:35"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\js\\subheader\\subheader.js:35"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\swipe\\swipe.js:10"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\swipe\\swipe.js:10"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\swipe\\swipe.js:15"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\swipe\\swipe.js:15"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\modules\\js\\swipe\\swipe.js:15"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\js\\swipe\\swipe.js:15"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\swipe\\swipe.js:31"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\swipe\\swipe.js:31"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\modules\\js\\swipe\\swipe.js:31"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\js\\swipe\\swipe.js:31"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\swipe\\swipe.js:47"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\swipe\\swipe.js:47"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\modules\\js\\swipe\\swipe.js:47"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\js\\swipe\\swipe.js:47"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\swipe\\swipe.js:63"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\swipe\\swipe.js:63"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\modules\\js\\swipe\\swipe.js:63"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\js\\swipe\\swipe.js:63"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\switch\\switch.js:10"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\switch\\switch.js:10"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\switch\\switch.js:22"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\switch\\switch.js:22"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\modules\\js\\switch\\switch.js:22"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\js\\switch\\switch.js:22"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js:10"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js:10"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js:38"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js:38"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js:38"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js:38"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js:588"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js:628"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js:651"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js:659"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js:669"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js:685"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js:693"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js:704"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js:848"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js:909"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js:951"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js:977"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js:977"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js:977"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js:977"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\textField\\textField.js:10"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\textField\\textField.js:10"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\toast\\toast.js:10"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\toast\\toast.js:10"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\toast\\toast.js:38"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\toast\\toast.js:38"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\js\\toast\\toast.js:38"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\toast\\toast.js:95"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\toast\\toast.js:95"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\toast\\toast.js:95"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\toast\\toast.js:108"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\toast\\toast.js:108"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\toast\\toast.js:108"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\toast\\toast.js:136"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\toast\\toast.js:136"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\toast\\toast.js:145"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\toast\\toast.js:145"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\toast\\toast.js:145"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\toast\\toast.js:155"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\toast\\toast.js:155"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\toast\\toast.js:155"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\toast\\toast.js:200"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\toast\\toast.js:200"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\toast\\toast.js:200"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\toast\\toast.js:215"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\toast\\toast.js:215"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\modules\\js\\toast\\toast.js:215"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\toolbar\\toolbar.js:10"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\toolbar\\toolbar.js:10"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\toolbar\\toolbar.js:20"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\toolbar\\toolbar.js:20"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\modules\\js\\toolbar\\toolbar.js:20"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\js\\toolbar\\toolbar.js:20"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\tooltip\\tooltip.js:10"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\tooltip\\tooltip.js:10"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\tooltip\\tooltip.js:18"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\tooltip\\tooltip.js:18"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\js\\tooltip\\tooltip.js:18"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js:10"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js:10"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js:22"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js:22"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js:22"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js:22"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js:386"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js:386"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js:386"
        },
        {
            "message": "unknown tag: priority",
            "line": " web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js:386"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js:386"
        },
        {
            "message": "unknown tag: typedef",
            "line": " web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js:511"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js:865"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\whiteframe\\whiteframe.js:10"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\whiteframe\\whiteframe.js:10"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\modules\\js\\whiteframe\\whiteframe.js:18"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\modules\\js\\whiteframe\\whiteframe.js:18"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\modules\\js\\whiteframe\\whiteframe.js:18"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\modules\\js\\whiteframe\\whiteframe.js:18"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material-mocks.js:19"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material-mocks.js:19"
        },
        {
            "message": "unknown tag: packagename",
            "line": " web\\bower_components\\angular-material\\angular-material-mocks.js:19"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:104"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:104"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\angular-material.js:104"
        },
        {
            "message": "unknown tag: nginject",
            "line": " web\\bower_components\\angular-material\\angular-material.js:213"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:355"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:363"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:371"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:380"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:391"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:402"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:426"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:454"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:463"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:472"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:480"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:488"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:534"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:534"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:534"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\angular-material.js:534"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:730"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:730"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:746"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:818"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:1119"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:1276"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:1327"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:1671"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:1671"
        },
        {
            "message": "unknown tag: nginject",
            "line": " web\\bower_components\\angular-material\\angular-material.js:1702"
        },
        {
            "message": "unknown tag: nginject",
            "line": " web\\bower_components\\angular-material\\angular-material.js:1713"
        },
        {
            "message": "unknown tag: nginject",
            "line": " web\\bower_components\\angular-material\\angular-material.js:2126"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:2297"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:3548"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:3548"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:3676"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:3676"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:3726"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:3726"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:3765"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:3765"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:3802"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:3802"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:3817"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:3817"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\angular-material.js:3817"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:3862"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:3862"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\angular-material.js:3862"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:3891"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:3891"
        },
        {
            "message": "unknown tag: nginject",
            "line": " web\\bower_components\\angular-material\\angular-material.js:3919"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:3962"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:3977"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:3998"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:4013"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:4032"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:4115"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:4276"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:4276"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:4684"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:4684"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:4692"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:4692"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:4699"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:4699"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:4705"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:4705"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:4993"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:4993"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:6000"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:6000"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:6023"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:6023"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\angular-material.js:6023"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:6090"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:6090"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:6101"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:6101"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\angular-material.js:6101"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\angular-material.js:6101"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:6225"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:6225"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:6238"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:6238"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\angular-material.js:6238"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\angular-material.js:6238"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:6360"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:6360"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:6369"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:6369"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\angular-material.js:6369"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\angular-material.js:6369"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:6541"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:6541"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:6571"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:6571"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\angular-material.js:6571"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:6605"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:6605"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:6605"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:6644"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:6644"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:6656"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:6656"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:6812"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:6812"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:6828"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:6828"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:6840"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:6840"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\angular-material.js:6840"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\angular-material.js:6840"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:6907"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:6907"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\angular-material.js:6907"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:7149"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:7149"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:7149"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:7170"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:7170"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:7170"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:7195"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:7195"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:7195"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:7259"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:7259"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:7259"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:7271"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:7271"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:7271"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:7857"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:7857"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:7867"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:7867"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\angular-material.js:7867"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\angular-material.js:7867"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:7900"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:7900"
        },
        {
            "message": "unknown tag: nginject",
            "line": " web\\bower_components\\angular-material\\angular-material.js:7983"
        },
        {
            "message": "unknown tag: this",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8101"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8222"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8250"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8386"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8416"
        },
        {
            "message": "unknown tag: nginject",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8486"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8526"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8597"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8614"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8714"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8732"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8732"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8732"
        },
        {
            "message": "unknown tag: nginject",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8873"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8873"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8880"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8905"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8914"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8932"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8941"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8950"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9027"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9027"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9027"
        },
        {
            "message": "unknown tag: nginject",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9147"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9672"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9681"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9690"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9699"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9708"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9718"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9728"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9739"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9750"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9760"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9770"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9780"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9804"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9817"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9886"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9886"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9898"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9898"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9898"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9898"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9968"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9968"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9976"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9976"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9976"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9976"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:10335"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:10335"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:10359"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:10359"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\angular-material.js:10359"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\angular-material.js:10359"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:10589"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:10589"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:10611"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:10611"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\angular-material.js:10611"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\angular-material.js:10611"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:10786"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:10786"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:10797"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:10797"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\angular-material.js:10797"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\angular-material.js:10797"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:11025"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:11140"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:11431"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:11431"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\angular-material.js:11431"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\angular-material.js:11431"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:11548"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:11548"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:11556"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:11556"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\angular-material.js:11556"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\angular-material.js:11556"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:11586"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:11586"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:11600"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:11600"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:11623"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:11623"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\angular-material.js:11623"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\angular-material.js:11623"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:11729"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:11729"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\angular-material.js:11729"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\angular-material.js:11729"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:12158"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:12158"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\angular-material.js:12158"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\angular-material.js:12158"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:12411"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:12411"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:12425"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:12425"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:12438"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:12438"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\angular-material.js:12438"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\angular-material.js:12438"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:12472"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:12472"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\angular-material.js:12472"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\angular-material.js:12472"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:12735"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:12735"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:12749"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:12749"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:12759"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:12759"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\angular-material.js:12759"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\angular-material.js:12759"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:12987"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:13012"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:13012"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:13022"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:13022"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\angular-material.js:13022"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\angular-material.js:13022"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:13188"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:13204"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:13204"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:13215"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:13215"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\angular-material.js:13215"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\angular-material.js:13215"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:13408"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:13408"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\angular-material.js:13408"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\angular-material.js:13408"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:13548"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:13565"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:13565"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:13590"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:13590"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\angular-material.js:13590"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\angular-material.js:13590"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:15049"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:15049"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:15092"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:15092"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:15110"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:15110"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\angular-material.js:15110"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:15205"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:15205"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\angular-material.js:15205"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\angular-material.js:15205"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:15237"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:15237"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\angular-material.js:15237"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\angular-material.js:15237"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:15418"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:15509"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:15509"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:15518"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:15518"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\angular-material.js:15518"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\angular-material.js:15518"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:15892"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:15901"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:15910"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:15930"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:15930"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:15944"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:15944"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\angular-material.js:15944"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:15944"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:16300"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:16300"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:16325"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:16325"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\angular-material.js:16325"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\angular-material.js:16325"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:16399"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:16399"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:16404"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:16404"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\angular-material.js:16404"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\angular-material.js:16404"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:16420"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:16420"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\angular-material.js:16420"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\angular-material.js:16420"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:16436"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:16436"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\angular-material.js:16436"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\angular-material.js:16436"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:16452"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:16452"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\angular-material.js:16452"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\angular-material.js:16452"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:16500"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:16500"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:16512"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:16512"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\angular-material.js:16512"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\angular-material.js:16512"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:16668"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:16668"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:16696"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:16696"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\angular-material.js:16696"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:16753"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:16753"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:16753"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:16766"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:16766"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:16766"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:16794"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:16794"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:16803"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:16803"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:16803"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:16813"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:16813"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:16813"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:16858"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:16858"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:16858"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:16873"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:16873"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:16873"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:17054"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:17054"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:17086"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:17086"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:17096"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:17096"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\angular-material.js:17096"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\angular-material.js:17096"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:17324"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:17324"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:17332"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:17332"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\angular-material.js:17332"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:17620"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:17620"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:17632"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:17632"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\angular-material.js:17632"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\angular-material.js:17632"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:17996"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:17996"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\angular-material.js:17996"
        },
        {
            "message": "unknown tag: priority",
            "line": " web\\bower_components\\angular-material\\angular-material.js:17996"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\angular-material.js:17996"
        },
        {
            "message": "unknown tag: typedef",
            "line": " web\\bower_components\\angular-material\\angular-material.js:18121"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\angular-material.js:18475"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:18527"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:18527"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:18535"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:18535"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\angular-material.js:18535"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\angular-material.js:18535"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:18660"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:18698"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:18795"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:18806"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:19041"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:19049"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:19066"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:19080"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:19101"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:19112"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:19120"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:19128"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:19136"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:19144"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:19152"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:19261"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:19348"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:19348"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\angular-material.js:19348"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:19762"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:19762"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\angular-material.js:19762"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:19815"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:19815"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\angular-material.js:19815"
        },
        {
            "message": "unknown tag: nginject",
            "line": " web\\bower_components\\angular-material\\angular-material.js:19839"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:19880"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:19880"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\angular-material.js:19880"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:19897"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:20474"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:20474"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\angular-material.js:20474"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:20659"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:20848"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:20848"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\angular-material.js:20848"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:20938"
        },
        {
            "message": "unknown tag: nginject",
            "line": " web\\bower_components\\angular-material\\angular-material.js:20938"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:20988"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:20988"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\angular-material.js:20988"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\angular-material.js:20988"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:21238"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:21238"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\angular-material.js:21238"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:21299"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:21299"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:21299"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\angular-material.js:21299"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:21328"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:21328"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:21328"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\angular-material.js:21328"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:21359"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:21359"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:21359"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\angular-material.js:21359"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:21388"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:21388"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\angular-material.js:21388"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:21420"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:21420"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:21420"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\angular-material.js:21420"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:21567"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:21567"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:21567"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\angular-material.js:21567"
        },
        {
            "message": "unknown tag: nginject",
            "line": " web\\bower_components\\angular-material\\angular-material.js:21788"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:22033"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:22033"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\angular-material.js:22033"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\angular-material.js:22033"
        },
        {
            "message": "unknown tag: nginjdect",
            "line": " web\\bower_components\\angular-material\\angular-material.js:22127"
        },
        {
            "message": "unknown tag: nginject",
            "line": " web\\bower_components\\angular-material\\angular-material.js:22199"
        },
        {
            "message": "unknown tag: nginjdect",
            "line": " web\\bower_components\\angular-material\\angular-material.js:22308"
        },
        {
            "message": "unknown tag: nginject",
            "line": " web\\bower_components\\angular-material\\angular-material.js:22374"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:22597"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:22597"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\angular-material.js:22597"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\angular-material.js:22597"
        },
        {
            "message": "unknown tag: nginject",
            "line": " web\\bower_components\\angular-material\\angular-material.js:22743"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:22858"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:23176"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:23336"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:23336"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\angular-material.js:23336"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\angular-material.js:23336"
        },
        {
            "message": "unknown tag: nginject",
            "line": " web\\bower_components\\angular-material\\angular-material.js:23526"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:23902"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:23942"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:23965"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:23973"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:23983"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:23999"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:24007"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:24018"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:24162"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:24223"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-material\\angular-material.js:24265"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-material\\angular-material.js:24295"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-material\\angular-material.js:24295"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-material\\angular-material.js:24295"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-material\\angular-material.js:24295"
        },
        {
            "message": "unknown tag: license",
            "line": " web\\bower_components\\angular-messages\\angular-messages.js:1"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-messages\\angular-messages.js:16"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-messages\\angular-messages.js:16"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-messages\\angular-messages.js:251"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-messages\\angular-messages.js:251"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-messages\\angular-messages.js:251"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-messages\\angular-messages.js:251"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-messages\\angular-messages.js:487"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-messages\\angular-messages.js:487"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-messages\\angular-messages.js:487"
        },
        {
            "message": "unknown tag: scope",
            "line": " web\\bower_components\\angular-messages\\angular-messages.js:487"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-messages\\angular-messages.js:487"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-messages\\angular-messages.js:541"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-messages\\angular-messages.js:541"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-messages\\angular-messages.js:541"
        },
        {
            "message": "unknown tag: scope",
            "line": " web\\bower_components\\angular-messages\\angular-messages.js:541"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-messages\\angular-messages.js:541"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-messages\\angular-messages.js:576"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-messages\\angular-messages.js:576"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-messages\\angular-messages.js:576"
        },
        {
            "message": "unknown tag: priority",
            "line": " web\\bower_components\\angular-messages\\angular-messages.js:576"
        },
        {
            "message": "unknown tag: scope",
            "line": " web\\bower_components\\angular-messages\\angular-messages.js:576"
        },
        {
            "message": "unknown tag: usage",
            "line": " web\\bower_components\\angular-messages\\angular-messages.js:576"
        },
        {
            "message": "unknown tag: license",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:1"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:10"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:10"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:19"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:81"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:106"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:137"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:173"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:173"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:182"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:182"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:219"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:219"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:268"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:268"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:307"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:307"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:315"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:315"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:329"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:329"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:343"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:343"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:357"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:357"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:371"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:371"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:387"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:387"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:419"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:419"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:419"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:496"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:496"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:496"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:523"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:523"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:596"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:596"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:762"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:762"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:857"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:857"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:876"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:876"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:929"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:929"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:999"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:999"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:1406"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:1406"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:1406"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:1454"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:1454"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:1454"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:1469"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:1469"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:1469"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:1484"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:1484"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:1484"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:1499"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:1499"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:1499"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:1516"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:1516"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:1516"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:1533"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:1533"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:1533"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:1548"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:1548"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:1548"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:1595"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:1595"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:1595"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:1635"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:1635"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:1635"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:1650"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:1650"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:1650"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:1665"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:1665"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:1665"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:1680"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:1680"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:1680"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:1698"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:1698"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:1698"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:1716"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:1716"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:1716"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:1734"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:1734"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:1734"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:1749"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:1749"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:1749"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:1767"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:1767"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:1795"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:1795"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:1817"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:1817"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:1837"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:1837"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:2017"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:2017"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:2028"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:2028"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:2041"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:2041"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:2104"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:2104"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:2174"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:2174"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:2218"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:2218"
        },
        {
            "message": "unknown tag: packagename",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:2218"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:2249"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:2249"
        },
        {
            "message": "unknown tag: packagename",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:2249"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:2264"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:2264"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:2315"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:2315"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:2315"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:2346"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:2346"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:2346"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:2363"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:2363"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:2363"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:2380"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:2380"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:2380"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:2397"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:2397"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:2397"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:2415"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:2415"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:2415"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:2433"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:2433"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:2433"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:2451"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:2451"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:2451"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:2466"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:2466"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:2466"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:2484"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:2484"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:2506"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:2506"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:2506"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:2537"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:2537"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:2537"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:2628"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:2628"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:2677"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:2677"
        },
        {
            "message": "unknown tag: version",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:1"
        },
        {
            "message": "unknown tag: link",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:1"
        },
        {
            "message": "unknown tag: license",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:1"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:225"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:225"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:238"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:238"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:252"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:252"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:268"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:268"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:308"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:308"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:329"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:329"
        },
        {
            "message": "unknown tag: methodof",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:329"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:492"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:492"
        },
        {
            "message": "unknown tag: methodof",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:492"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:561"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:561"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:575"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:575"
        },
        {
            "message": "unknown tag: methodof",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:575"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:609"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:609"
        },
        {
            "message": "unknown tag: methodof",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:609"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:628"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:628"
        },
        {
            "message": "unknown tag: methodof",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:628"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:650"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:650"
        },
        {
            "message": "unknown tag: methodof",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:650"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:674"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:674"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:674"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:848"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:848"
        },
        {
            "message": "unknown tag: methodof",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:848"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:848"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:886"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:886"
        },
        {
            "message": "unknown tag: methodof",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:886"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:886"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:958"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:958"
        },
        {
            "message": "unknown tag: methodof",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:958"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:958"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:974"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:974"
        },
        {
            "message": "unknown tag: methodof",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:974"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:974"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:990"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:990"
        },
        {
            "message": "unknown tag: methodof",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:990"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:990"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:1061"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:1061"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:1061"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:1095"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:1095"
        },
        {
            "message": "unknown tag: methodof",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:1095"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:1095"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:1114"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:1114"
        },
        {
            "message": "unknown tag: methodof",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:1114"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:1114"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:1133"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:1133"
        },
        {
            "message": "unknown tag: methodof",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:1133"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:1133"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:1150"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:1150"
        },
        {
            "message": "unknown tag: methodof",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:1150"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:1150"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:1252"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:1252"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:1347"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:1347"
        },
        {
            "message": "unknown tag: methodof",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:1347"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:1347"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:1364"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:1364"
        },
        {
            "message": "unknown tag: methodof",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:1364"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:1364"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:1381"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:1381"
        },
        {
            "message": "unknown tag: methodof",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:1381"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:1404"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:1404"
        },
        {
            "message": "unknown tag: methodof",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:1404"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:1404"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:1420"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:1420"
        },
        {
            "message": "unknown tag: methodof",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:1420"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:1420"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:1444"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:1444"
        },
        {
            "message": "unknown tag: methodof",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:1444"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:1444"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:1754"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:1754"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:1787"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:1787"
        },
        {
            "message": "unknown tag: methodof",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:1787"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:1824"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:1824"
        },
        {
            "message": "unknown tag: methodof",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:1824"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:1872"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:1872"
        },
        {
            "message": "unknown tag: methodof",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:1872"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:1954"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:1954"
        },
        {
            "message": "unknown tag: methodof",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:1954"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:2007"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:2007"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:2064"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:2064"
        },
        {
            "message": "unknown tag: methodof",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:2064"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:2122"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:2122"
        },
        {
            "message": "unknown tag: methodof",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:2122"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:2122"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:2186"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:2186"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:2440"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:2440"
        },
        {
            "message": "unknown tag: methodof",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:2440"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:2547"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:2547"
        },
        {
            "message": "unknown tag: methodof",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:2547"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:2875"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:2875"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:2911"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:2911"
        },
        {
            "message": "unknown tag: eventof",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:2911"
        },
        {
            "message": "unknown tag: eventtype",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:2911"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:2982"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:2982"
        },
        {
            "message": "unknown tag: methodof",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:2982"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:2982"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:3038"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:3038"
        },
        {
            "message": "unknown tag: methodof",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:3038"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:3038"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:3110"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:3110"
        },
        {
            "message": "unknown tag: methodof",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:3110"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:3110"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:3245"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:3245"
        },
        {
            "message": "unknown tag: eventof",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:3245"
        },
        {
            "message": "unknown tag: eventtype",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:3245"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:3338"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:3338"
        },
        {
            "message": "unknown tag: eventof",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:3338"
        },
        {
            "message": "unknown tag: eventtype",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:3338"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:3361"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:3361"
        },
        {
            "message": "unknown tag: eventof",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:3361"
        },
        {
            "message": "unknown tag: eventtype",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:3361"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:3391"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:3391"
        },
        {
            "message": "unknown tag: methodof",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:3391"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:3391"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:3434"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:3434"
        },
        {
            "message": "unknown tag: methodof",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:3434"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:3434"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:3501"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:3501"
        },
        {
            "message": "unknown tag: methodof",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:3501"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:3501"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:3551"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:3551"
        },
        {
            "message": "unknown tag: methodof",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:3551"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:3551"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:3662"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:3662"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:3676"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:3676"
        },
        {
            "message": "unknown tag: methodof",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:3676"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:3703"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:3703"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:3714"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:3714"
        },
        {
            "message": "unknown tag: methodof",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:3714"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:3727"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:3727"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:3758"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:3758"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:3758"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:4007"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:4007"
        },
        {
            "message": "unknown tag: eventof",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:4007"
        },
        {
            "message": "unknown tag: eventtype",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:4007"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:4036"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:4036"
        },
        {
            "message": "unknown tag: eventof",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:4036"
        },
        {
            "message": "unknown tag: eventtype",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:4036"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:4161"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:4161"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:4161"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:4256"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:4256"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:4256"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:4302"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:4302"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:4302"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:4379"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:4379"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:4379"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:4500"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:4500"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:4518"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:4518"
        },
        {
            "message": "unknown tag: version",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.min.js:1"
        },
        {
            "message": "unknown tag: link",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.min.js:1"
        },
        {
            "message": "unknown tag: license",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.min.js:1"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\src\\common.js:212"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\src\\common.js:212"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\src\\common.js:225"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\src\\common.js:225"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\src\\common.js:239"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\src\\common.js:239"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\src\\common.js:255"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\src\\common.js:255"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\src\\resolve.js:1"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\src\\resolve.js:1"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\src\\resolve.js:22"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\src\\resolve.js:22"
        },
        {
            "message": "unknown tag: methodof",
            "line": " web\\bower_components\\angular-ui-router\\src\\resolve.js:22"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\src\\resolve.js:185"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\src\\resolve.js:185"
        },
        {
            "message": "unknown tag: methodof",
            "line": " web\\bower_components\\angular-ui-router\\src\\resolve.js:185"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\src\\state.js:1"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\src\\state.js:1"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\src\\state.js:255"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\src\\state.js:255"
        },
        {
            "message": "unknown tag: methodof",
            "line": " web\\bower_components\\angular-ui-router\\src\\state.js:255"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\src\\state.js:362"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\src\\state.js:362"
        },
        {
            "message": "unknown tag: methodof",
            "line": " web\\bower_components\\angular-ui-router\\src\\state.js:362"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\src\\state.js:690"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\src\\state.js:690"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\src\\state.js:726"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\src\\state.js:726"
        },
        {
            "message": "unknown tag: eventof",
            "line": " web\\bower_components\\angular-ui-router\\src\\state.js:726"
        },
        {
            "message": "unknown tag: eventtype",
            "line": " web\\bower_components\\angular-ui-router\\src\\state.js:726"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\src\\state.js:797"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\src\\state.js:797"
        },
        {
            "message": "unknown tag: methodof",
            "line": " web\\bower_components\\angular-ui-router\\src\\state.js:797"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-ui-router\\src\\state.js:797"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\src\\state.js:853"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\src\\state.js:853"
        },
        {
            "message": "unknown tag: methodof",
            "line": " web\\bower_components\\angular-ui-router\\src\\state.js:853"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-ui-router\\src\\state.js:853"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\src\\state.js:925"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\src\\state.js:925"
        },
        {
            "message": "unknown tag: methodof",
            "line": " web\\bower_components\\angular-ui-router\\src\\state.js:925"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-ui-router\\src\\state.js:925"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\src\\state.js:1060"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\src\\state.js:1060"
        },
        {
            "message": "unknown tag: eventof",
            "line": " web\\bower_components\\angular-ui-router\\src\\state.js:1060"
        },
        {
            "message": "unknown tag: eventtype",
            "line": " web\\bower_components\\angular-ui-router\\src\\state.js:1060"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\src\\state.js:1153"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\src\\state.js:1153"
        },
        {
            "message": "unknown tag: eventof",
            "line": " web\\bower_components\\angular-ui-router\\src\\state.js:1153"
        },
        {
            "message": "unknown tag: eventtype",
            "line": " web\\bower_components\\angular-ui-router\\src\\state.js:1153"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\src\\state.js:1176"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\src\\state.js:1176"
        },
        {
            "message": "unknown tag: eventof",
            "line": " web\\bower_components\\angular-ui-router\\src\\state.js:1176"
        },
        {
            "message": "unknown tag: eventtype",
            "line": " web\\bower_components\\angular-ui-router\\src\\state.js:1176"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\src\\state.js:1206"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\src\\state.js:1206"
        },
        {
            "message": "unknown tag: methodof",
            "line": " web\\bower_components\\angular-ui-router\\src\\state.js:1206"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-ui-router\\src\\state.js:1206"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\src\\state.js:1249"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\src\\state.js:1249"
        },
        {
            "message": "unknown tag: methodof",
            "line": " web\\bower_components\\angular-ui-router\\src\\state.js:1249"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-ui-router\\src\\state.js:1249"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\src\\state.js:1316"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\src\\state.js:1316"
        },
        {
            "message": "unknown tag: methodof",
            "line": " web\\bower_components\\angular-ui-router\\src\\state.js:1316"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-ui-router\\src\\state.js:1316"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\src\\state.js:1366"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\src\\state.js:1366"
        },
        {
            "message": "unknown tag: methodof",
            "line": " web\\bower_components\\angular-ui-router\\src\\state.js:1366"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-ui-router\\src\\state.js:1366"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\src\\stateDirectives.js:54"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\src\\stateDirectives.js:54"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-ui-router\\src\\stateDirectives.js:54"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\src\\stateDirectives.js:149"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\src\\stateDirectives.js:149"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-ui-router\\src\\stateDirectives.js:149"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\src\\stateDirectives.js:195"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\src\\stateDirectives.js:195"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-ui-router\\src\\stateDirectives.js:195"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\src\\stateDirectives.js:272"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\src\\stateDirectives.js:272"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-ui-router\\src\\stateDirectives.js:272"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\src\\stateFilters.js:1"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\src\\stateFilters.js:1"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\src\\stateFilters.js:19"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\src\\stateFilters.js:19"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\src\\templateFactory.js:1"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\src\\templateFactory.js:1"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\src\\templateFactory.js:15"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\src\\templateFactory.js:15"
        },
        {
            "message": "unknown tag: methodof",
            "line": " web\\bower_components\\angular-ui-router\\src\\templateFactory.js:15"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\src\\templateFactory.js:49"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\src\\templateFactory.js:49"
        },
        {
            "message": "unknown tag: methodof",
            "line": " web\\bower_components\\angular-ui-router\\src\\templateFactory.js:49"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\src\\templateFactory.js:68"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\src\\templateFactory.js:68"
        },
        {
            "message": "unknown tag: methodof",
            "line": " web\\bower_components\\angular-ui-router\\src\\templateFactory.js:68"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\src\\templateFactory.js:90"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\src\\templateFactory.js:90"
        },
        {
            "message": "unknown tag: methodof",
            "line": " web\\bower_components\\angular-ui-router\\src\\templateFactory.js:90"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js:3"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js:3"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js:3"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js:177"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js:177"
        },
        {
            "message": "unknown tag: methodof",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js:177"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js:177"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js:215"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js:215"
        },
        {
            "message": "unknown tag: methodof",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js:215"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js:215"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js:287"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js:287"
        },
        {
            "message": "unknown tag: methodof",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js:287"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js:287"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js:303"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js:303"
        },
        {
            "message": "unknown tag: methodof",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js:303"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js:303"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js:319"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js:319"
        },
        {
            "message": "unknown tag: methodof",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js:319"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js:319"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js:390"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js:390"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js:390"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js:424"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js:424"
        },
        {
            "message": "unknown tag: methodof",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js:424"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js:424"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js:443"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js:443"
        },
        {
            "message": "unknown tag: methodof",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js:443"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js:443"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js:462"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js:462"
        },
        {
            "message": "unknown tag: methodof",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js:462"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js:462"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js:479"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js:479"
        },
        {
            "message": "unknown tag: methodof",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js:479"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js:479"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js:581"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js:581"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js:676"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js:676"
        },
        {
            "message": "unknown tag: methodof",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js:676"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js:676"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js:693"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js:693"
        },
        {
            "message": "unknown tag: methodof",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js:693"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js:693"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js:710"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js:710"
        },
        {
            "message": "unknown tag: methodof",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js:710"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js:733"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js:733"
        },
        {
            "message": "unknown tag: methodof",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js:733"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js:733"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js:749"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js:749"
        },
        {
            "message": "unknown tag: methodof",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js:749"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js:749"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js:773"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js:773"
        },
        {
            "message": "unknown tag: methodof",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js:773"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js:773"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlRouter.js:1"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlRouter.js:1"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlRouter.js:34"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlRouter.js:34"
        },
        {
            "message": "unknown tag: methodof",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlRouter.js:34"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlRouter.js:71"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlRouter.js:71"
        },
        {
            "message": "unknown tag: methodof",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlRouter.js:71"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlRouter.js:119"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlRouter.js:119"
        },
        {
            "message": "unknown tag: methodof",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlRouter.js:119"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlRouter.js:201"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlRouter.js:201"
        },
        {
            "message": "unknown tag: methodof",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlRouter.js:201"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlRouter.js:254"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlRouter.js:254"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlRouter.js:311"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlRouter.js:311"
        },
        {
            "message": "unknown tag: methodof",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlRouter.js:311"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlRouter.js:369"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlRouter.js:369"
        },
        {
            "message": "unknown tag: methodof",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlRouter.js:369"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlRouter.js:369"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\src\\view.js:6"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\src\\view.js:6"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\src\\view.js:20"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\src\\view.js:20"
        },
        {
            "message": "unknown tag: methodof",
            "line": " web\\bower_components\\angular-ui-router\\src\\view.js:20"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\src\\viewDirective.js:3"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\src\\viewDirective.js:3"
        },
        {
            "message": "unknown tag: restrict",
            "line": " web\\bower_components\\angular-ui-router\\src\\viewDirective.js:3"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\src\\viewDirective.js:252"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\src\\viewDirective.js:252"
        },
        {
            "message": "unknown tag: eventof",
            "line": " web\\bower_components\\angular-ui-router\\src\\viewDirective.js:252"
        },
        {
            "message": "unknown tag: eventtype",
            "line": " web\\bower_components\\angular-ui-router\\src\\viewDirective.js:252"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\src\\viewDirective.js:281"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\src\\viewDirective.js:281"
        },
        {
            "message": "unknown tag: eventof",
            "line": " web\\bower_components\\angular-ui-router\\src\\viewDirective.js:281"
        },
        {
            "message": "unknown tag: eventtype",
            "line": " web\\bower_components\\angular-ui-router\\src\\viewDirective.js:281"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\src\\viewScroll.js:1"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\src\\viewScroll.js:1"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\src\\viewScroll.js:12"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\src\\viewScroll.js:12"
        },
        {
            "message": "unknown tag: methodof",
            "line": " web\\bower_components\\angular-ui-router\\src\\viewScroll.js:12"
        },
        {
            "message": "unknown tag: ngdoc",
            "line": " web\\bower_components\\angular-ui-router\\src\\viewScroll.js:25"
        },
        {
            "message": "unknown tag: name",
            "line": " web\\bower_components\\angular-ui-router\\src\\viewScroll.js:25"
        },
        {
            "message": "Missing item type\nLogin PageObject for Protractor testing.\n\nLogin View: userDialog.html, the popup window that appears.",
            "line": " tests\\e2e\\login\\LoginPage.js:1"
        },
        {
            "message": "Missing item type\nTest that the information in the username and password fields match the expected input.",
            "line": " tests\\e2e\\login\\LoginPage.js:31"
        },
        {
            "message": "Missing item type\nTest that the login for the user worked.",
            "line": " tests\\e2e\\login\\LoginPage.js:46"
        },
        {
            "message": "Missing item type\nTest that we can cancel logging in.",
            "line": " tests\\e2e\\login\\LoginPage.js:67"
        },
        {
            "message": "Missing item type\nTest that we can navigate to the Registration page.",
            "line": " tests\\e2e\\login\\LoginPage.js:92"
        },
        {
            "message": "Missing item type\nTest that the cancel button on the Registration page works.",
            "line": " tests\\e2e\\login\\LoginPage.js:104"
        },
        {
            "message": "Missing item type\nTest the entire registration process functionality.",
            "line": " tests\\e2e\\login\\LoginPage.js:131"
        },
        {
            "message": "Missing item type\nThis function tests that someone can log out of the application successfully.",
            "line": " tests\\e2e\\login\\LoginPage.js:158"
        },
        {
            "message": "Missing item type\nRequired for proper Protractor functionality.",
            "line": " tests\\e2e\\login\\LoginPage.js:191"
        },
        {
            "message": "Missing item type\nLogin Scenario for testing.",
            "line": " tests\\e2e\\login\\LoginSpec.js:1"
        },
        {
            "message": "Missing item type\nSearch PageObject for Protractor testing.\n\nSearch View: search.html, the html file used for the core search page of the webapp.\nSearch bar however is located within main.html <-- Actually is in chemautoperson too x.x\n\nAutocompletion (associated with search bar) is located within the chemautoperson.html file.",
            "line": " tests\\e2e\\search\\SearchPage.js:1"
        },
        {
            "message": "Missing item type\nHard coded for now, yes I know this is not good to hard code but tight on time.",
            "line": " tests\\e2e\\search\\SearchPage.js:40"
        },
        {
            "message": "Missing item type\nHard coded for now, yes I know this is not good to hard code but tight on time.",
            "line": " tests\\e2e\\search\\SearchPage.js:57"
        },
        {
            "message": "Missing item type\nProtractor end to end testing for the search page functionality.",
            "line": " tests\\e2e\\search\\SearchSpec.js:1"
        },
        {
            "message": "Missing item type\nSubmit PageObject for Protractor testing.\n\nSubmit View:  submit.html",
            "line": " tests\\e2e\\submit\\SubmitPage.js:1"
        },
        {
            "message": "Missing item type\nTests basic inputs for all things to see that they match what is expected.",
            "line": " tests\\e2e\\submit\\SubmitPage.js:91"
        },
        {
            "message": "Missing item type\nConfiguration file as described at https://angular.github.io/protractor/#/page-objects\nHas suites for each frontend page.",
            "line": " tests\\conf.js:1"
        },
        {
            "message": "Missing item type\nConfiguration file as described at https://angular.github.io/protractor/#/page-objects\nHas suites for each frontend page.",
            "line": " tests\\spec.js:1"
        },
        {
            "message": "Missing item type\nThis section is concerned with obtaining the object from the backend and then bursting it onto the\nentire edit page appropriately.",
            "line": " web\\app\\controllers\\editController.js:41"
        },
        {
            "message": "Missing item type\nConstructor... for the model object of this edit page.",
            "line": " web\\app\\controllers\\editController.js:114"
        },
        {
            "message": "Missing item type\nSUEPRVISED POSTDOCS SECTION YES THIS IS A MESS HERE BUT IT MUST BE DONE FASTT!!!! AHHHHHHH!!!!!!!!!!!!!",
            "line": " web\\app\\controllers\\editController.js:181"
        },
        {
            "message": "Missing item type\nObject for SuperDoc",
            "line": " web\\app\\controllers\\editController.js:193"
        },
        {
            "message": "Missing item type\nInitialize superDoc array as an empty array. Will hold SuperDoc objects :)!",
            "line": " web\\app\\controllers\\editController.js:228"
        },
        {
            "message": "Missing item type\nSUPERDEGREE SECTION",
            "line": " web\\app\\controllers\\editController.js:269"
        },
        {
            "message": "Missing item type\nSuper degree variables.",
            "line": " web\\app\\controllers\\editController.js:275"
        },
        {
            "message": "Missing item type\nConstruct a super DEGREE object.",
            "line": " web\\app\\controllers\\editController.js:293"
        },
        {
            "message": "Missing item type\nInitialize as an empty array, for now. Will be populated with SUPER DEGREE objects.",
            "line": " web\\app\\controllers\\editController.js:351"
        },
        {
            "message": "Missing item type\nOTHER STUFFS",
            "line": " web\\app\\controllers\\editController.js:375"
        },
        {
            "message": "Missing item type\nThis function will be how I retrieve the proper object from the backend, through the editService\nfile.",
            "line": " web\\app\\controllers\\editController.js:397"
        },
        {
            "message": "Missing item type\nMock Object. This is what I will be expecting to recieve from the backend throughthe function\n\"obtainUserInformationFromBackEnd\".",
            "line": " web\\app\\controllers\\editController.js:419"
        },
        {
            "message": "Missing item type\nThe major model object that is handed to the backend to process all of the edits made in the frontend",
            "line": " web\\app\\controllers\\editController.js:451"
        },
        {
            "message": "Missing item type",
            "line": " web\\app\\controllers\\editController.js:476"
        },
        {
            "message": "Missing item type\nThis section deals with trivial information collection on the submit page such as first and last names.",
            "line": " web\\app\\controllers\\editController.js:478"
        },
        {
            "message": "Missing item type\nThis function when invoked will take the current and then the old tab and then it will combine\nthe data together in such a way that we have the previous now equal to the selected, and then\nindex into the \"tabs\" list with the current value.\n\n            $scope.$watch('degreeInfoSelectedIndex', function(current2, old2){\n               previous = selected;\n               selected = degreeInfoTab[current2];\n               if ( old2 + 1 && (old2 != current2)) $log.debug('Goodbye ' + previous.title + '!');\n               if ( current2 + 1 )                $log.debug('Hello ' + selected.title + '!');",
            "line": " web\\app\\controllers\\editController.js:677"
        },
        {
            "message": "Missing item type\nInformation regarding the postdoc appointments furnished on the submit page.",
            "line": " web\\app\\controllers\\editController.js:739"
        },
        {
            "message": "Missing item type\nObject that represents a single postdoc instance when furnished with values.",
            "line": " web\\app\\controllers\\editController.js:749"
        },
        {
            "message": "Missing item type\nWarnings made for the postdoc information empty fields warning to the users.",
            "line": " web\\app\\controllers\\editController.js:769"
        },
        {
            "message": "Missing item type\n$scope.clearPostDocFields = function(){\n   pdStartYear = \"\";\n   pdEndYear = \"\";\n   pdSupervisor = \"\";\n   pdInstitution = \"\";\n   console.log(\"clearPostDocFields called! :)\");",
            "line": " web\\app\\controllers\\editController.js:855"
        },
        {
            "message": "Missing item type\nThis section deals with the cards associated with the degrees a user may have.",
            "line": " web\\app\\controllers\\editController.js:885"
        },
        {
            "message": "Missing item type\nInformation regarding the postdoc appointments furnished on the submit page.",
            "line": " web\\app\\controllers\\editController.js:913"
        },
        {
            "message": "Missing item type\nConstructor for the DegreeInfoInstance Object.\nThis is the object that holds together the information of a single degree for a particular individual.",
            "line": " web\\app\\controllers\\editController.js:923"
        },
        {
            "message": "Missing item type\nWarnings for degree information fields being empty! :(",
            "line": " web\\app\\controllers\\editController.js:950"
        },
        {
            "message": "Missing item type\nThis is the model for this submission page.\nFirst name, last name, title, degree type, current position title, current institution, postdoc info",
            "line": " web\\app\\controllers\\editController.js:1042"
        },
        {
            "message": "Missing item type\nThis is the constructor for bundling all of the submission page information into one object.\nCalled by hitting the final submission button, which evokes a function that plops this together.\n\nParams are self explanitory I'd hope?",
            "line": " web\\app\\controllers\\editController.js:1050"
        },
        {
            "message": "Missing item type\nWarnings for the various input fields. Initially set to false.\nBut if the value is null then it is set to true and pops up a warning message.",
            "line": " web\\app\\controllers\\editController.js:1131"
        },
        {
            "message": "Missing item type\nMy work",
            "line": " web\\app\\controllers\\searchController.js:120"
        },
        {
            "message": "Missing item type\nSUEPRVISED POSTDOCS SECTION YES THIS IS A MESS HERE BUT IT MUST BE DONE FASTT!!!! AHHHHHHH!!!!!!!!!!!!!",
            "line": " web\\app\\controllers\\submitController.js:57"
        },
        {
            "message": "Missing item type\nObject for SuperDoc",
            "line": " web\\app\\controllers\\submitController.js:69"
        },
        {
            "message": "Missing item type\nThis function is invoked when we want to create a new superdoc object with the parameters supplied\nto this method, and then it will also put this newly created object into the array of all of the\nsuperdoc objects.",
            "line": " web\\app\\controllers\\submitController.js:86"
        },
        {
            "message": "Missing item type\nInitialize superDoc array as an empty array. Will hold SuperDoc objects :)!",
            "line": " web\\app\\controllers\\submitController.js:105"
        },
        {
            "message": "Missing item type\nSUPERDEGREE SECTION",
            "line": " web\\app\\controllers\\submitController.js:147"
        },
        {
            "message": "Missing item type\nSuper degree variables.",
            "line": " web\\app\\controllers\\submitController.js:153"
        },
        {
            "message": "Missing item type\nConstruct a super DEGREE object.",
            "line": " web\\app\\controllers\\submitController.js:165"
        },
        {
            "message": "Missing item type\nAdds a new instance of a superdegree to the arraylist of super degree objects.",
            "line": " web\\app\\controllers\\submitController.js:182"
        },
        {
            "message": "Missing item type\nInitialize as an empty array, for now. Will be populated with SUPER DEGREE objects.",
            "line": " web\\app\\controllers\\submitController.js:211"
        },
        {
            "message": "Missing item type\nOTHER STUFFS",
            "line": " web\\app\\controllers\\submitController.js:236"
        },
        {
            "message": "Missing item type\nThis function when invoked will take the current and then the old tab and then it will combine\nthe data together in such a way that we have the previous now equal to the selected, and then\nindex into the \"tabs\" list with the current value.\n\n           $scope.$watch('selectedIndex', function(current, old){\n               previousPD = selectedPD;\n               selectedPD = postDocTab[current];\n               if ( old + 1 && (old != current)) $log.debug('Goodbye ' + previousPD.title + '!');\n               if ( current + 1 )                $log.debug('Hello ' + selectedPD.title + '!');\n           });",
            "line": " web\\app\\controllers\\submitController.js:252"
        },
        {
            "message": "Missing item type\nThis function when invoked will take the current and then the old tab and then it will combine\nthe data together in such a way that we have the previous now equal to the selected, and then\nindex into the \"tabs\" list with the current value.\n\n           $scope.$watch('degreeInfoSelectedIndex', function(current2, old2){\n               previous = selected;\n               selected = degreeInfoTab[current2];\n               if ( old2 + 1 && (old2 != current2)) $log.debug('Goodbye ' + previous.title + '!');\n               if ( current2 + 1 )                $log.debug('Hello ' + selected.title + '!');",
            "line": " web\\app\\controllers\\submitController.js:298"
        },
        {
            "message": "Missing item type\nInformation regarding the postdoc appointments furnished on the submit page.",
            "line": " web\\app\\controllers\\submitController.js:360"
        },
        {
            "message": "Missing item type\nConstructs a new PostDoc object",
            "line": " web\\app\\controllers\\submitController.js:370"
        },
        {
            "message": "Missing item type\nWarnings made for the postdoc information empty fields warning to the users.",
            "line": " web\\app\\controllers\\submitController.js:400"
        },
        {
            "message": "Missing item type\n$scope.clearPostDocFields = function(){\n    pdStartYear = \"\";\n    pdEndYear = \"\";\n    pdSupervisor = \"\";\n    pdInstitution = \"\";\n    console.log(\"clearPostDocFields called! :)\");",
            "line": " web\\app\\controllers\\submitController.js:487"
        },
        {
            "message": "Missing item type\nThis section deals with the cards associated with the degrees a user may have.",
            "line": " web\\app\\controllers\\submitController.js:517"
        },
        {
            "message": "Missing item type\nInformation regarding the postdoc appointments furnished on the submit page.",
            "line": " web\\app\\controllers\\submitController.js:553"
        },
        {
            "message": "Missing item type\nConstructor for the DegreeInfoInstance Object.\nThis is the object that holds together the information of a single degree for a particular individual.",
            "line": " web\\app\\controllers\\submitController.js:564"
        },
        {
            "message": "Missing item type\nWarnings for degree information fields being empty! :(",
            "line": " web\\app\\controllers\\submitController.js:585"
        },
        {
            "message": "Missing item type\nThis section deals with trivial information collection on the submit page such as first and last names.",
            "line": " web\\app\\controllers\\submitController.js:676"
        },
        {
            "message": "Missing item type\nThis is the model for this submission page.\nFirst name, last name, title, degree type, current position title, current institution, postdoc info",
            "line": " web\\app\\controllers\\submitController.js:701"
        },
        {
            "message": "Missing item type\nThis is the constructor for bundling all of the submission page information into one object.\nCalled by hitting the final submission button, which evokes a function that plops this together.\n\nParams are self explanitory I'd hope?",
            "line": " web\\app\\controllers\\submitController.js:709"
        },
        {
            "message": "Missing item type\nWarnings for the various input fields. Initially set to false.\nBut if the value is null then it is set to true and pops up a warning message.",
            "line": " web\\app\\controllers\\submitController.js:746"
        },
        {
            "message": "Missing item type\nEdit Service\n\nStatus: SERVICE\nAssociated files: vis controller",
            "line": " web\\app\\services\\editService.js:1"
        },
        {
            "message": "Missing item type\nPass some param like name or id, and that will obtain all information I need. May need to parse it all.",
            "line": " web\\app\\services\\editService.js:12"
        },
        {
            "message": "Missing item type\nThis service when called will PUT the edited data object onto the aggregated url, sending it to\nthe backend to be parsed and the modifications made in the server.",
            "line": " web\\app\\services\\editService.js:53"
        },
        {
            "message": "Missing item type\nThis is just needed for the service to actually work. Just standard notation.",
            "line": " web\\app\\services\\editService.js:92"
        },
        {
            "message": "Missing item type\nWhen evoked will check if the user can be obtained, if the user is not equal to null we must have a user logged\ninto our app. Otherwise return false (if null), as we do not have a user.",
            "line": " web\\app\\services\\loginService.js:4"
        },
        {
            "message": "Missing item type\nObtain from local storage the value of the userNamespace key.",
            "line": " web\\app\\services\\loginService.js:18"
        },
        {
            "message": "Missing item type\nAn http call wrapped in a promise. upon success will store the user data in\nlocal storage.",
            "line": " web\\app\\services\\loginService.js:30"
        },
        {
            "message": "Missing item type\nLogs out the user, by removing the\nLocal storage for the store. Eg: if we're in chrome and we went to the cosnole and the resources then we'll find something on localhost:5000 then we'll see it there.\ntl;dr: Store is the local storage within the user's browser of the application that is being used.\nThis function removes this person from this local storage.",
            "line": " web\\app\\services\\loginService.js:54"
        },
        {
            "message": "Missing item type\nexposes the various functions.",
            "line": " web\\app\\services\\loginService.js:74"
        },
        {
            "message": "Missing item type\nRegister Service\n\nStatus: SERVICE\nAssociated files: userDialogController\n\nThe Register service is associated with storing and handling the local information services in the app.",
            "line": " web\\app\\services\\registerService.js:1"
        },
        {
            "message": "Missing item type\nhttp request to the user route that is wrapped in a promise",
            "line": " web\\app\\services\\registerService.js:14"
        },
        {
            "message": "Missing item type\nexposes the register function",
            "line": " web\\app\\services\\registerService.js:37"
        },
        {
            "message": "Missing item type\nSearch Service\n\nStatus: SERVICE\nAssociated files: vis controller",
            "line": " web\\app\\services\\submitService.js:1"
        },
        {
            "message": "Missing item type\nDon't ever call without a submitfileobject. Please :)",
            "line": " web\\app\\services\\submitService.js:13"
        },
        {
            "message": "Missing item type\nReturn block, as a javascript object. This reveals these functions as being public, anything not listed\nis considered private.",
            "line": " web\\app\\services\\submitService.js:46"
        },
        {
            "message": "Missing item type\nService for the view page of our application.\n\nInvolved with making it so that the view page can retrieve the data from the backend to display.",
            "line": " web\\app\\services\\viewService.js:1"
        },
        {
            "message": "Missing item type\nModules are the containers of the different parts of our application. Like controllers,\n\n\nFor more on what a module is:\nhttps://docs.angularjs.org/guide/module",
            "line": " web\\app\\module.js:1"
        },
        {
            "message": "Missing item type\nSets the storage.",
            "line": " web\\bower_components\\a0-angular-storage\\dist\\angular-storage.js:156"
        },
        {
            "message": "Missing item type\nReturns a namespaced store",
            "line": " web\\bower_components\\a0-angular-storage\\dist\\angular-storage.js:170"
        },
        {
            "message": "Missing item type\nRun test once and exit",
            "line": " web\\bower_components\\a0-angular-storage\\gulpfile.js:38"
        },
        {
            "message": "Missing item type\nRun test once in all available browsers and exit",
            "line": " web\\bower_components\\a0-angular-storage\\gulpfile.js:48"
        },
        {
            "message": "Missing item type\nRun test once and exit",
            "line": " web\\bower_components\\a0-angular-storage\\gulpfile.js:66"
        },
        {
            "message": "Missing item type\nRun test once and exit",
            "line": " web\\bower_components\\a0-angular-storage\\gulpfile.js:76"
        },
        {
            "message": "Missing item type\nRun code coverage tests once and exit",
            "line": " web\\bower_components\\a0-angular-storage\\gulpfile.js:86"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular\\angular.js:1"
        },
        {
            "message": "Missing item type\nThis object provides a utility for producing rich Error messages within\nAngular. It can be called as follows:\n\nvar exampleMinErr = minErr('example');\nthrow exampleMinErr('one', 'This {0} is {1}', foo, bar);\n\nThe above creates an instance of minErr in the example namespace. The\nresulting error will have a namespaced error code of example.one.  The\nresulting error will replace {0} with the value of foo, and {1} with the\nvalue of bar. The object is not restricted in the number of arguments it can\ntake.\n\nIf fewer arguments are specified than necessary for interpolation, the extra\ninterpolation markers will be preserved in the final string.\n\nSince data will be parsed statically during a build step, some restrictions\nare applied with respect to how minErr instances are created and called.\nInstances should have names of the form namespaceMinErr for a minErr created\nusing minErr('namespace') . Error codes, namespaces and template strings\nshould all be static strings, not variables or general expressions.",
            "line": " web\\bower_components\\angular\\angular.js:8"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular\\angular.js:231"
        },
        {
            "message": "Missing item type\ndocumentMode is an IE-only property\nhttp://msdn.microsoft.com/en-us/library/ie/cc196988(v=vs.85).aspx",
            "line": " web\\bower_components\\angular\\angular.js:236"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular\\angular.js:243"
        },
        {
            "message": "Missing item type\nwhen using forEach the params are value, key, but it is often useful to have key, value.",
            "line": " web\\bower_components\\angular\\angular.js:359"
        },
        {
            "message": "Missing item type\nA consistent way of creating unique IDs in angular.\n\nUsing simple numbers allows us to generate 28.6 million unique ids per second for 10 years before\nwe hit number precision issues in JavaScript.\n\nMath.pow(2,53) / 60 / 60 / 24 / 365 / 10 = 28.6M",
            "line": " web\\bower_components\\angular\\angular.js:368"
        },
        {
            "message": "Missing item type\nSet or clear the hashkey for an object.",
            "line": " web\\bower_components\\angular\\angular.js:383"
        },
        {
            "message": "Missing item type\nDetermine if a value is an object with a null prototype",
            "line": " web\\bower_components\\angular\\angular.js:585"
        },
        {
            "message": "Missing item type\nDetermines if a value is a regular expression object.",
            "line": " web\\bower_components\\angular\\angular.js:677"
        },
        {
            "message": "Missing item type\nChecks if `obj` is a window object.",
            "line": " web\\bower_components\\angular\\angular.js:689"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular\\angular.js:772"
        },
        {
            "message": "Missing item type\nCreates a shallow copy of an object, an array or a primitive.\n\nAssumes that there are no proto properties for objects.",
            "line": " web\\bower_components\\angular\\angular.js:993"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular\\angular.js:1311"
        },
        {
            "message": "Missing item type\nTries to decode the URI component without throwing an exception.",
            "line": " web\\bower_components\\angular\\angular.js:1336"
        },
        {
            "message": "Missing item type\nParses an escaped url query string into key-value pairs.",
            "line": " web\\bower_components\\angular\\angular.js:1353"
        },
        {
            "message": "Missing item type\nWe need our custom method because encodeURIComponent is too aggressive and doesn't follow\nhttp://www.ietf.org/rfc/rfc3986.txt with regards to the character set (pchar) allowed in path\nsegments:\n   segment       = *pchar\n   pchar         = unreserved / pct-encoded / sub-delims / \":\" / \"@\"\n   pct-encoded   = \"%\" HEXDIG HEXDIG\n   unreserved    = ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\"\n   sub-delims    = \"!\" / \"$\" / \"&\" / \"'\" / \"(\" / \")\"\n                    / \"*\" / \"+\" / \",\" / \";\" / \"=\"",
            "line": " web\\bower_components\\angular\\angular.js:1401"
        },
        {
            "message": "Missing item type\nThis method is intended for encoding *key* or *value* parts of query component. We need a custom\nmethod because encodeURIComponent is too aggressive and encodes stuff that doesn't have to be\nencoded per http://tools.ietf.org/html/rfc3986:\n   query       = *( pchar / \"/\" / \"?\" )\n   pchar         = unreserved / pct-encoded / sub-delims / \":\" / \"@\"\n   unreserved    = ALPHA / DIGIT / \"-\" / \".\" / \"_\" / \"~\"\n   pct-encoded   = \"%\" HEXDIG HEXDIG\n   sub-delims    = \"!\" / \"$\" / \"&\" / \"'\" / \"(\" / \")\"\n                    / \"*\" / \"+\" / \",\" / \";\" / \"=\"",
            "line": " web\\bower_components\\angular\\angular.js:1420"
        },
        {
            "message": "Missing item type\nthrow error if the argument is falsy.",
            "line": " web\\bower_components\\angular\\angular.js:1820"
        },
        {
            "message": "Missing item type\nthrow error if the name given is hasOwnProperty",
            "line": " web\\bower_components\\angular\\angular.js:1840"
        },
        {
            "message": "Missing item type\nReturn the value accessible from the object by path. Any undefined traversals are ignored",
            "line": " web\\bower_components\\angular\\angular.js:1851"
        },
        {
            "message": "Missing item type\nReturn the DOM siblings between the first and last node in the given array.",
            "line": " web\\bower_components\\angular\\angular.js:1878"
        },
        {
            "message": "Missing item type\nCreates a new object without a prototype. This object is useful for lookup without having to\nguard against prototypically inherited properties via hasOwnProperty.\n\nRelated micro-benchmarks:\n- http://jsperf.com/object-create2\n- http://jsperf.com/proto-map-lookup/2\n- http://jsperf.com/for-in-vs-object-keys2",
            "line": " web\\bower_components\\angular\\angular.js:1902"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular\\angular.js:1948"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular\\angular.js:2020"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular\\angular.js:2023"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular\\angular.js:2026"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular\\angular.js:2031"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular\\angular.js:2254"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular\\angular.js:2268"
        },
        {
            "message": "Missing item type\nConverts snake_case to camelCase.\nAlso there is special case for Moz prefix starting with upper case letter.",
            "line": " web\\bower_components\\angular\\angular.js:2719"
        },
        {
            "message": "Missing item type\nProperties: writes return selection, reads return first value",
            "line": " web\\bower_components\\angular\\angular.js:3295"
        },
        {
            "message": "Missing item type\nchaining functions",
            "line": " web\\bower_components\\angular\\angular.js:3621"
        },
        {
            "message": "Missing item type\nComputes a hash of an 'obj'.\nHash of a:\n string is string\n number is number as string\n object is either result of calling $$hashKey function on the object or uniquely generated id,\n        that is also assigned to the $$hashKey property of the object.",
            "line": " web\\bower_components\\angular\\angular.js:3667"
        },
        {
            "message": "Missing item type\nHashMap which can use objects as keys",
            "line": " web\\bower_components\\angular\\angular.js:3699"
        },
        {
            "message": "Missing item type\nStore key value pair",
            "line": " web\\bower_components\\angular\\angular.js:3712"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular\\angular.js:3721"
        },
        {
            "message": "Missing item type\nRemove the key/value pair",
            "line": " web\\bower_components\\angular\\angular.js:3729"
        },
        {
            "message": "Missing item type\nImplicit module which gets automatically added to each {@link auto.$injector $injector}.",
            "line": " web\\bower_components\\angular\\angular.js:3800"
        },
        {
            "message": "Missing item type\n`$injector` is used to retrieve object instances as defined by\n{@link auto.$provide provider}, instantiate types, invoke methods,\nand load modules.\n\nThe following always holds true:\n\n```js\n  var $injector = angular.injector();\n  expect($injector.get('$injector')).toBe($injector);\n  expect($injector.invoke(function($injector) {\n    return $injector;\n  })).toBe($injector);\n```\n\n# Injection Function Annotation\n\nJavaScript does not have annotations, and annotations are needed for dependency injection. The\nfollowing are all valid ways of annotating function with injection arguments and are equivalent.\n\n```js\n  // inferred (only works if code not minified/obfuscated)\n  $injector.invoke(function(serviceA){});\n\n  // annotated\n  function explicit(serviceA) {};\n  explicit.$inject = ['serviceA'];\n  $injector.invoke(explicit);\n\n  // inline\n  $injector.invoke(['serviceA', function(serviceA){}]);\n```\n\n## Inference\n\nIn JavaScript calling `toString()` on a function returns the function definition. The definition\ncan then be parsed and the function arguments can be extracted. This method of discovering\nannotations is disallowed when the injector is in strict mode.\n*NOTE:* This does not work with minification, and obfuscation tools since these tools change the\nargument names.\n\n## `$inject` Annotation\nBy adding an `$inject` property onto a function the injection parameters can be specified.\n\n## Inline\nAs an array of injection names, where the last item in the array is the function to call.",
            "line": " web\\bower_components\\angular\\angular.js:3868"
        },
        {
            "message": "Missing item type\nReturn an instance of the service.",
            "line": " web\\bower_components\\angular\\angular.js:3921"
        },
        {
            "message": "Missing item type\nInvoke the method and supply the method arguments from the `$injector`.",
            "line": " web\\bower_components\\angular\\angular.js:3933"
        },
        {
            "message": "Missing item type\nAllows the user to query if the particular service exists.",
            "line": " web\\bower_components\\angular\\angular.js:3948"
        },
        {
            "message": "Missing item type\nCreate a new instance of JS type. The method takes a constructor function, invokes the new\noperator, and supplies all of the arguments to the constructor function as specified by the\nconstructor annotation.",
            "line": " web\\bower_components\\angular\\angular.js:3959"
        },
        {
            "message": "Missing item type\nReturns an array of service names which the function is requesting for injection. This API is\nused by the injector to determine which services need to be injected into the function when the\nfunction is invoked. There are three ways in which the function can be annotated with the needed\ndependencies.\n\n# Argument names\n\nThe simplest form is to extract the dependencies from the arguments of the function. This is done\nby converting the function into a string using `toString()` method and extracting the argument\nnames.\n```js\n  // Given\n  function MyController($scope, $route) {\n    // ...\n  }\n\n  // Then\n  expect(injector.annotate(MyController)).toEqual(['$scope', '$route']);\n```\n\nYou can disallow this method by using strict injection mode.\n\nThis method does not work with code minification / obfuscation. For this reason the following\nannotation strategies are supported.\n\n# The `$inject` property\n\nIf a function has an `$inject` property and its value is an array of strings, then the strings\nrepresent names of services to be injected into the function.\n```js\n  // Given\n  var MyController = function(obfuscatedScope, obfuscatedRoute) {\n    // ...\n  }\n  // Define function dependencies\n  MyController['$inject'] = ['$scope', '$route'];\n\n  // Then\n  expect(injector.annotate(MyController)).toEqual(['$scope', '$route']);\n```\n\n# The array notation\n\nIt is often desirable to inline Injected functions and that's when setting the `$inject` property\nis very inconvenient. In these situations using the array notation to specify the dependencies in\na way that survives minification is a better choice:\n\n```js\n  // We wish to write this (not minification / obfuscation safe)\n  injector.invoke(function($compile, $rootScope) {\n    // ...\n  });\n\n  // We are forced to write break inlining\n  var tmpFn = function(obfuscatedCompile, obfuscatedRootScope) {\n    // ...\n  };\n  tmpFn.$inject = ['$compile', '$rootScope'];\n  injector.invoke(tmpFn);\n\n  // To better support inline function the inline annotation is supported\n  injector.invoke(['$compile', '$rootScope', function(obfCompile, obfRootScope) {\n    // ...\n  }]);\n\n  // Therefore\n  expect(injector.annotate(\n     ['$compile', '$rootScope', function(obfus_$compile, obfus_$rootScope) {}])\n   ).toEqual(['$compile', '$rootScope']);\n```",
            "line": " web\\bower_components\\angular\\angular.js:3973"
        },
        {
            "message": "Missing item type\nThe {@link auto.$provide $provide} service has a number of methods for registering components\nwith the {@link auto.$injector $injector}. Many of these functions are also exposed on\n{@link angular.Module}.\n\nAn Angular **service** is a singleton object created by a **service factory**.  These **service\nfactories** are functions which, in turn, are created by a **service provider**.\nThe **service providers** are constructor functions. When instantiated they must contain a\nproperty called `$get`, which holds the **service factory** function.\n\nWhen you request a service, the {@link auto.$injector $injector} is responsible for finding the\ncorrect **service provider**, instantiating it and then calling its `$get` **service factory**\nfunction to get the instance of the **service**.\n\nOften services have no configuration options and there is no need to add methods to the service\nprovider.  The provider will be no more than a constructor function with a `$get` property. For\nthese cases the {@link auto.$provide $provide} service has additional helper methods to register\nservices without specifying a provider.\n\n* {@link auto.$provide#provider provider(provider)} - registers a **service provider** with the\n    {@link auto.$injector $injector}\n* {@link auto.$provide#constant constant(obj)} - registers a value/object that can be accessed by\n    providers and services.\n* {@link auto.$provide#value value(obj)} - registers a value/object that can only be accessed by\n    services, not providers.\n* {@link auto.$provide#factory factory(fn)} - registers a service **factory function**, `fn`,\n    that will be wrapped in a **service provider** object, whose `$get` property will contain the\n    given factory function.\n* {@link auto.$provide#service service(class)} - registers a **constructor function**, `class`\n    that will be wrapped in a **service provider** object, whose `$get` property will instantiate\n     a new object using the given constructor function.\n\nSee the individual methods for more information and examples.",
            "line": " web\\bower_components\\angular\\angular.js:4060"
        },
        {
            "message": "Missing item type\nRegister a **provider function** with the {@link auto.$injector $injector}. Provider functions\nare constructor functions, whose instances are responsible for \"providing\" a factory for a\nservice.\n\nService provider names start with the name of the service they provide followed by `Provider`.\nFor example, the {@link ng.$log $log} service has a provider called\n{@link ng.$logProvider $logProvider}.\n\nService provider objects can have additional methods which allow configuration of the provider\nand its service. Importantly, you can configure what kind of service is created by the `$get`\nmethod, or how that service will act. For example, the {@link ng.$logProvider $logProvider} has a\nmethod {@link ng.$logProvider#debugEnabled debugEnabled}\nwhich lets you specify whether the {@link ng.$log $log} service will log debug messages to the\nconsole or not.",
            "line": " web\\bower_components\\angular\\angular.js:4100"
        },
        {
            "message": "Missing item type\nRegister a **service factory**, which will be called to return the service instance.\nThis is short for registering a service where its provider consists of only a `$get` property,\nwhich is the given service factory function.\nYou should use {@link auto.$provide#factory $provide.factory(getFn)} if you do not need to\nconfigure your service in a provider.",
            "line": " web\\bower_components\\angular\\angular.js:4196"
        },
        {
            "message": "Missing item type\nRegister a **service constructor**, which will be invoked with `new` to create the service\ninstance.\nThis is short for registering a service where its provider's `$get` property is a factory\nfunction that returns an instance instantiated by the injector from the service constructor\nfunction.\n\nInternally it looks a bit like this:\n\n```\n{\n  $get: function() {\n    return $injector.instantiate(constructor);\n  }\n}\n```\n\n\nYou should use {@link auto.$provide#service $provide.service(class)} if you define your service\nas a type/class.",
            "line": " web\\bower_components\\angular\\angular.js:4230"
        },
        {
            "message": "Missing item type\nRegister a **value service** with the {@link auto.$injector $injector}, such as a string, a\nnumber, an array, an object or a function.  This is short for registering a service where its\nprovider's `$get` property is a factory function that takes no arguments and returns the **value\nservice**.\n\nValue services are similar to constant services, except that they cannot be injected into a\nmodule configuration function (see {@link angular.Module#config}) but they can be overridden by\nan Angular\n{@link auto.$provide#decorator decorator}.",
            "line": " web\\bower_components\\angular\\angular.js:4284"
        },
        {
            "message": "Missing item type\nRegister a **constant service**, such as a string, a number, an array, an object or a function,\nwith the {@link auto.$injector $injector}. Unlike {@link auto.$provide#value value} it can be\ninjected into a module configuration function (see {@link angular.Module#config}) and it cannot\nbe overridden by an Angular {@link auto.$provide#decorator decorator}.",
            "line": " web\\bower_components\\angular\\angular.js:4317"
        },
        {
            "message": "Missing item type\nRegister a **service decorator** with the {@link auto.$injector $injector}. A service decorator\nintercepts the creation of a service, allowing it to override or modify the behavior of the\nservice. The object returned by the decorator may be the original service, or a new service\nobject which replaces or wraps and delegates to the original service.",
            "line": " web\\bower_components\\angular\\angular.js:4345"
        },
        {
            "message": "Missing item type\nUse `$anchorScrollProvider` to disable automatic scrolling whenever\n{@link ng.$location#hash $location.hash()} changes.",
            "line": " web\\bower_components\\angular\\angular.js:4637"
        },
        {
            "message": "Missing item type\nBy default, {@link ng.$anchorScroll $anchorScroll()} will automatically detect changes to\n{@link ng.$location#hash $location.hash()} and scroll to the element matching the new hash.<br />\nUse this method to disable automatic scrolling.\n\nIf automatic scrolling is disabled, one must explicitly call\n{@link ng.$anchorScroll $anchorScroll()} in order to scroll to the element related to the\ncurrent hash.",
            "line": " web\\bower_components\\angular\\angular.js:4649"
        },
        {
            "message": "Missing item type\nDefault implementation of $animate that doesn't perform any animations, instead just\nsynchronously performs DOM updates and resolves the returned runner promise.\n\nIn order to enable animations the `ngAnimate` module has to be loaded.\n\nTo see the functional implementation check out `src/ngAnimate/animate.js`.",
            "line": " web\\bower_components\\angular\\angular.js:5063"
        },
        {
            "message": "Missing item type\nRegisters a new injectable animation factory function. The factory function produces the\nanimation object which contains callback functions for each event that is expected to be\nanimated.\n\n  * `eventFn`: `function(element, ... , doneFunction, options)`\n  The element to animate, the `doneFunction` and the options fed into the animation. Depending\n  on the type of animation additional arguments will be injected into the animation function. The\n  list below explains the function signatures for the different animation methods:\n\n  - setClass: function(element, addedClasses, removedClasses, doneFunction, options)\n  - addClass: function(element, addedClasses, doneFunction, options)\n  - removeClass: function(element, removedClasses, doneFunction, options)\n  - enter, leave, move: function(element, doneFunction, options)\n  - animate: function(element, fromStyles, toStyles, doneFunction, options)\n\n  Make sure to trigger the `doneFunction` once the animation is fully complete.\n\n```js\n  return {\n    //enter, leave, move signature\n    eventFn : function(element, done, options) {\n      //code to run the animation\n      //once complete, then run done()\n      return function endFunction(wasCancelled) {\n        //code to cancel the animation\n      }\n    }\n  }\n```",
            "line": " web\\bower_components\\angular\\angular.js:5080"
        },
        {
            "message": "Missing item type\nSets and/or returns the CSS class regular expression that is checked when performing\nan animation. Upon bootstrap the classNameFilter value is not set at all and will\ntherefore enable $animate to attempt to perform an animation on any element that is triggered.\nWhen setting the `classNameFilter` value, animations will only be performed on elements\nthat successfully match the filter expression. This in turn can boost performance\nfor low-powered devices as well as applications containing a lot of structural operations.",
            "line": " web\\bower_components\\angular\\angular.js:5129"
        },
        {
            "message": "Missing item type\nThe $animate service exposes a series of DOM utility methods that provide support\nfor animation hooks. The default behavior is the application of DOM operations, however,\nwhen an animation is detected (and animations are enabled), $animate will do the heavy lifting\nto ensure that animation runs with the triggered DOM operation.\n\nBy default $animate doesn't trigger any animations. This is because the `ngAnimate` module isn't\nincluded and only when it is active then the animation hooks that `$animate` triggers will be\nfunctional. Once active then all structural `ng-` directives will trigger animations as they perform\ntheir DOM-related operations (enter, leave and move). Other directives such as `ngClass`,\n`ngShow`, `ngHide` and `ngMessages` also provide support for animations.\n\nIt is recommended that the`$animate` service is always used when executing DOM-related procedures within directives.\n\nTo learn more about enabling animation support, click here to visit the\n{@link ngAnimate ngAnimate module page}.",
            "line": " web\\bower_components\\angular\\angular.js:5171"
        },
        {
            "message": "Missing item type\nSets up an event listener to fire whenever the animation event (enter, leave, move, etc...)\n    has fired on the given element or among any of its children. Once the listener is fired, the provided callback\n    is fired with the following params:\n```js\n $animate.on('enter', container,\n    function callback(element, phase) {\n      // cool we detected an enter animation within the container\n    }\n );\n ```",
            "line": " web\\bower_components\\angular\\angular.js:5194"
        },
        {
            "message": "Missing item type\nDeregisters an event listener based on the event which has been associated with the provided element. This method\n can be used in three different ways depending on the arguments:\n```js\n // remove all the animation event listeners listening for `enter`\n $animate.off('enter');\n// remove all the animation event listeners listening for `enter` on the given element and its children\n $animate.off('enter', container);\n// remove the event listener function provided by `callback` that is set\n // to listen for `enter` on the given `container` as well as its children\n $animate.off('enter', container, callback);\n ```",
            "line": " web\\bower_components\\angular\\angular.js:5222"
        },
        {
            "message": "Missing item type\nAssociates the provided element with a host parent element to allow the element to be animated even if it exists\n   outside of the DOM structure of the Angular application. By doing so, any animation triggered via `$animate` can be issued on the\n   element despite being outside the realm of the application or within another application. Say for example if the application\n   was bootstrapped on an element that is somewhere inside of the `<body>` tag, but we wanted to allow for an element to be situated\n   as a direct child of `document.body`, then this can be achieved by pinning the element via `$animate.pin(element)`. Keep in mind\n   that calling `$animate.pin(element, parentElement)` will not actually insert into the DOM anywhere; it will just create the association.\n\n   Note that this feature is only active when the `ngAnimate` module is used.",
            "line": " web\\bower_components\\angular\\angular.js:5248"
        },
        {
            "message": "Missing item type\nUsed to get and set whether animations are enabled or not on the entire application or on an element and its children. This\n function can be called in four ways:\n```js\n // returns true or false\n $animate.enabled();\n// changes the enabled state for all animations\n $animate.enabled(false);\n $animate.enabled(true);\n// returns true or false if animations are enabled for an element\n $animate.enabled(element);\n// changes the enabled state for an element and its children\n $animate.enabled(element, true);\n $animate.enabled(element, false);\n ```",
            "line": " web\\bower_components\\angular\\angular.js:5266"
        },
        {
            "message": "Missing item type\nCancels the provided animation.",
            "line": " web\\bower_components\\angular\\angular.js:5297"
        },
        {
            "message": "Missing item type\nInserts the element into the DOM either after the `after` element (if provided) or\n   as the first child within the `parent` element and then triggers an animation.\n   A promise is returned that will be resolved during the next digest once the animation\n   has completed.",
            "line": " web\\bower_components\\angular\\angular.js:5309"
        },
        {
            "message": "Missing item type\nInserts (moves) the element into its new position in the DOM either after\n   the `after` element (if provided) or as the first child within the `parent` element\n   and then triggers an animation. A promise is returned that will be resolved\n   during the next digest once the animation has completed.",
            "line": " web\\bower_components\\angular\\angular.js:5335"
        },
        {
            "message": "Missing item type\nTriggers an animation and then removes the element from the DOM.\nWhen the function is called a promise is returned that will be resolved during the next\ndigest once the animation has completed.",
            "line": " web\\bower_components\\angular\\angular.js:5361"
        },
        {
            "message": "Missing item type\nTriggers an addClass animation surrounding the addition of the provided CSS class(es). Upon\n  execution, the addClass operation will only be handled after the next digest and it will not trigger an\n  animation if element already contains the CSS class or if the class is removed at a later step.\n  Note that class-based animations are treated differently compared to structural animations\n  (like enter, move and leave) since the CSS classes may be added/removed at different points\n  depending if CSS or JavaScript animations are used.",
            "line": " web\\bower_components\\angular\\angular.js:5380"
        },
        {
            "message": "Missing item type\nTriggers a removeClass animation surrounding the removal of the provided CSS class(es). Upon\n  execution, the removeClass operation will only be handled after the next digest and it will not trigger an\n  animation if element does not contain the CSS class or if the class is added at a later step.\n  Note that class-based animations are treated differently compared to structural animations\n  (like enter, move and leave) since the CSS classes may be added/removed at different points\n  depending if CSS or JavaScript animations are used.",
            "line": " web\\bower_components\\angular\\angular.js:5404"
        },
        {
            "message": "Missing item type\nPerforms both the addition and removal of a CSS classes on an element and (during the process)\n   triggers an animation surrounding the class addition/removal. Much like `$animate.addClass` and\n   `$animate.removeClass`, `setClass` will only evaluate the classes being added/removed once a digest has\n   passed. Note that class-based animations are treated differently compared to structural animations\n   (like enter, move and leave) since the CSS classes may be added/removed at different points\n   depending if CSS or JavaScript animations are used.",
            "line": " web\\bower_components\\angular\\angular.js:5428"
        },
        {
            "message": "Missing item type\nPerforms an inline animation on the element which applies the provided to and from CSS styles to the element.\nIf any detected CSS transition, keyframe or JavaScript matches the provided className value, then the animation will take\non the provided styles. For example, if a transition animation is set for the given classNamem, then the provided `from` and\n`to` styles will be applied alongside the given transition. If the CSS style provided in `from` does not have a corresponding\nstyle in `to`, the style in `from` is applied immediately, and no animation is run.\nIf a JavaScript animation is detected then the provided styles will be given in as function parameters into the `animate`\nmethod (or as part of the `options` parameter):\n\n```js\nngModule.animation('.my-inline-animation', function() {\n  return {\n    animate : function(element, from, to, done, options) {\n      //animation\n      done();\n    }\n  }\n});\n```",
            "line": " web\\bower_components\\angular\\angular.js:5454"
        },
        {
            "message": "Missing item type\nThis is the core version of `$animateCss`. By default, only when the `ngAnimate` is included,\nthen the `$animateCss` service will actually perform animations.\n\nClick here {@link ngAnimate.$animateCss to read the documentation for $animateCss}.",
            "line": " web\\bower_components\\angular\\angular.js:5685"
        },
        {
            "message": "Missing item type\nThis object has two goals:\n\n- hide all the global state in the browser caused by the window object\n- abstract away all the browser specific features and inconsistencies\n\nFor tests we provide {@link ngMock.$browser mock implementation} of the `$browser`\nservice, which can be used for convenient testing of the application without the interaction with\nthe real browser apis.",
            "line": " web\\bower_components\\angular\\angular.js:5759"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular\\angular.js:5774"
        },
        {
            "message": "Missing item type\nExecutes the `fn` function(supports currying) and decrements the `outstandingRequestCallbacks`\ncounter. If the counter reaches 0, all the `outstandingRequestCallbacks` are executed.",
            "line": " web\\bower_components\\angular\\angular.js:5798"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular\\angular.js:5824"
        },
        {
            "message": "Missing item type\nGETTER:\nWithout any argument, this method just returns current value of location.href.\n\nSETTER:\nWith at least one argument, this method sets url to new value.\nIf html5 history api supported, pushState/replaceState is used, otherwise\nlocation.href/location.replace is used.\nReturns its own instance to allow chaining\n\nNOTE: this api is intended for use only by the $location service. Please use the\n{@link ng.$location $location service} to change url.",
            "line": " web\\bower_components\\angular\\angular.js:5850"
        },
        {
            "message": "Missing item type\nThis method is a getter.\n\nReturn history.state or null if history.state is undefined.",
            "line": " web\\bower_components\\angular\\angular.js:5930"
        },
        {
            "message": "Missing item type\nRegister callback function that will be called, when url changes.\n\nIt's only called when the url is changed from outside of angular:\n- user types different url into address bar\n- user clicks on history (forward/back) button\n- user clicks on a link\n\nIt's not called when url is changed by $browser.url() method\n\nThe listener gets called with new url as parameter.\n\nNOTE: this api is intended for use only by the $location service. Please use the\n{@link ng.$location $location service} to monitor url changes in angular apps.",
            "line": " web\\bower_components\\angular\\angular.js:5987"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular\\angular.js:6027"
        },
        {
            "message": "Missing item type\nChecks whether the url has changed outside of Angular.\nNeeds to be exported to be able to check for changes that have been done in sync,\nas hashchange/popstate events fire in async.",
            "line": " web\\bower_components\\angular\\angular.js:6037"
        },
        {
            "message": "Missing item type\nReturns current <base href>\n(always relative - without domain)",
            "line": " web\\bower_components\\angular\\angular.js:6048"
        },
        {
            "message": "Missing item type\nExecutes a fn asynchronously via `setTimeout(fn, delay)`.\n\nUnlike when calling `setTimeout` directly, in test this function is mocked and instead of using\n`setTimeout` in tests, the fns are queued in an array, which can be programmatically flushed\nvia `$browser.defer.flush()`.",
            "line": " web\\bower_components\\angular\\angular.js:6062"
        },
        {
            "message": "Missing item type\nCancels a deferred task identified with `deferId`.",
            "line": " web\\bower_components\\angular\\angular.js:6088"
        },
        {
            "message": "Missing item type\nFactory that constructs {@link $cacheFactory.Cache Cache} objects and gives access to\nthem.\n\n```js\n\n var cache = $cacheFactory('cacheId');\n expect($cacheFactory.get('cacheId')).toBe(cache);\n expect($cacheFactory.get('noSuchCacheId')).not.toBeDefined();\n\n cache.put(\"key\", \"value\");\n cache.put(\"another key\", \"another value\");\n\n // We've specified no options on creation\n expect(cache.info()).toEqual({id: 'cacheId', size: 2});\n\n```",
            "line": " web\\bower_components\\angular\\angular.js:6117"
        },
        {
            "message": "Missing item type\nA cache object used to store and retrieve data, primarily used by\n{@link $http $http} and the {@link ng.directive:script script} directive to cache\ntemplates and other data.\n\n```js\n angular.module('superCache')\n   .factory('superCache', ['$cacheFactory', function($cacheFactory) {\n     return $cacheFactory('super-cache');\n   }]);\n```\n\nExample test:\n\n```js\n it('should behave like a cache', inject(function(superCache) {\n   superCache.put('key', 'value');\n   superCache.put('another key', 'another value');\n\n   expect(superCache.info()).toEqual({\n     id: 'super-cache',\n     size: 2\n   });\n\n   superCache.remove('another key');\n   expect(superCache.get('another key')).toBeUndefined();\n\n   superCache.removeAll();\n   expect(superCache.info()).toEqual({\n     id: 'super-cache',\n     size: 0\n   });\n }));\n```",
            "line": " web\\bower_components\\angular\\angular.js:6216"
        },
        {
            "message": "Missing item type\nInserts a named entry into the {@link $cacheFactory.Cache Cache} object to be\nretrieved later, and incrementing the size of the cache if the key was not already\npresent in the cache. If behaving like an LRU cache, it will also remove stale\nentries from the set.\n\nIt will not insert undefined values into the cache.",
            "line": " web\\bower_components\\angular\\angular.js:6257"
        },
        {
            "message": "Missing item type\nRetrieves named data stored in the {@link $cacheFactory.Cache Cache} object.",
            "line": " web\\bower_components\\angular\\angular.js:6293"
        },
        {
            "message": "Missing item type\nRemoves an entry from the {@link $cacheFactory.Cache Cache} object.",
            "line": " web\\bower_components\\angular\\angular.js:6317"
        },
        {
            "message": "Missing item type\nClears the cache object of any entries.",
            "line": " web\\bower_components\\angular\\angular.js:6347"
        },
        {
            "message": "Missing item type\nDestroys the {@link $cacheFactory.Cache Cache} object entirely,\nremoving it from the {@link $cacheFactory $cacheFactory} set.",
            "line": " web\\bower_components\\angular\\angular.js:6363"
        },
        {
            "message": "Missing item type\nRetrieve information regarding a particular {@link $cacheFactory.Cache Cache}.",
            "line": " web\\bower_components\\angular\\angular.js:6380"
        },
        {
            "message": "Missing item type\nmakes the `entry` the freshEnd of the LRU linked list",
            "line": " web\\bower_components\\angular\\angular.js:6402"
        },
        {
            "message": "Missing item type\nbidirectionally links two entries of the LRU linked list",
            "line": " web\\bower_components\\angular\\angular.js:6421"
        },
        {
            "message": "Missing item type\nGet information about all the caches that have been created",
            "line": " web\\bower_components\\angular\\angular.js:6433"
        },
        {
            "message": "Missing item type\nGet access to a cache object by the `cacheId` used when it was created.",
            "line": " web\\bower_components\\angular\\angular.js:6451"
        },
        {
            "message": "Missing item type\nThe first time a template is used, it is loaded in the template cache for quick retrieval. You\ncan load templates directly into the cache in a `script` tag, or by consuming the\n`$templateCache` service directly.\n\nAdding via the `script` tag:\n\n```html\n  <script type=\"text/ng-template\" id=\"templateId.html\">\n    <p>This is the content of the template</p>\n  </script>\n```\n\n**Note:** the `script` tag containing the template does not need to be included in the `head` of\nthe document, but it must be a descendent of the {@link ng.$rootElement $rootElement} (IE,\nelement with ng-app attribute), otherwise the template will be ignored.\n\nAdding via the `$templateCache` service:\n\n```js\nvar myApp = angular.module('myApp', []);\nmyApp.run(function($templateCache) {\n  $templateCache.put('templateId.html', 'This is the content of the template');\n});\n```\n\nTo retrieve the template later, simply use it in your HTML:\n```html\n<div ng-include=\" 'templateId.html' \"></div>\n```\n\nor get it via Javascript:\n```js\n$templateCache.get('templateId.html')\n```\n\nSee {@link ng.$cacheFactory $cacheFactory}.",
            "line": " web\\bower_components\\angular\\angular.js:6470"
        },
        {
            "message": "Missing item type\nCompiles an HTML string or DOM into a template and produces a template function, which\ncan then be used to link {@link ng.$rootScope.Scope `scope`} and the template together.\n\nThe compilation is a process of walking the DOM tree and matching DOM elements to\n{@link ng.$compileProvider#directive directives}.\n\n<div class=\"alert alert-warning\">\n**Note:** This document is an in-depth reference of all directive options.\nFor a gentle introduction to directives with examples of common use cases,\nsee the {@link guide/directive directive guide}.\n</div>\n\n## Comprehensive Directive API\n\nThere are many different options for a directive.\n\nThe difference resides in the return value of the factory function.\nYou can either return a \"Directive Definition Object\" (see below) that defines the directive properties,\nor just the `postLink` function (all other properties will have the default values).\n\n<div class=\"alert alert-success\">\n**Best Practice:** It's recommended to use the \"directive definition object\" form.\n</div>\n\nHere's an example directive declared with a Directive Definition Object:\n\n```js\n  var myModule = angular.module(...);\n\n  myModule.directive('directiveName', function factory(injectables) {\n    var directiveDefinitionObject = {\n      priority: 0,\n      template: '<div></div>', // or // function(tElement, tAttrs) { ... },\n      // or\n      // templateUrl: 'directive.html', // or // function(tElement, tAttrs) { ... },\n      transclude: false,\n      restrict: 'A',\n      templateNamespace: 'html',\n      scope: false,\n      controller: function($scope, $element, $attrs, $transclude, otherInjectables) { ... },\n      controllerAs: 'stringIdentifier',\n      bindToController: false,\n      require: 'siblingDirectiveName', // or // ['^parentDirectiveName', '?optionalDirectiveName', '?^optionalParent'],\n      compile: function compile(tElement, tAttrs, transclude) {\n        return {\n          pre: function preLink(scope, iElement, iAttrs, controller) { ... },\n          post: function postLink(scope, iElement, iAttrs, controller) { ... }\n        }\n        // or\n        // return function postLink( ... ) { ... }\n      },\n      // or\n      // link: {\n      //  pre: function preLink(scope, iElement, iAttrs, controller) { ... },\n      //  post: function postLink(scope, iElement, iAttrs, controller) { ... }\n      // }\n      // or\n      // link: function postLink( ... ) { ... }\n    };\n    return directiveDefinitionObject;\n  });\n```\n\n<div class=\"alert alert-warning\">\n**Note:** Any unspecified options will use the default value. You can see the default values below.\n</div>\n\nTherefore the above can be simplified as:\n\n```js\n  var myModule = angular.module(...);\n\n  myModule.directive('directiveName', function factory(injectables) {\n    var directiveDefinitionObject = {\n      link: function postLink(scope, iElement, iAttrs) { ... }\n    };\n    return directiveDefinitionObject;\n    // or\n    // return function postLink(scope, iElement, iAttrs) { ... }\n  });\n```\n\n\n\n### Directive Definition Object\n\nThe directive definition object provides instructions to the {@link ng.$compile\ncompiler}. The attributes are:\n\n#### `multiElement`\nWhen this property is set to true, the HTML compiler will collect DOM nodes between\nnodes with the attributes `directive-name-start` and `directive-name-end`, and group them\ntogether as the directive elements. It is recommended that this feature be used on directives\nwhich are not strictly behavioral (such as {@link ngClick}), and which\ndo not manipulate or replace child nodes (such as {@link ngInclude}).\n\n#### `priority`\nWhen there are multiple directives defined on a single DOM element, sometimes it\nis necessary to specify the order in which the directives are applied. The `priority` is used\nto sort the directives before their `compile` functions get called. Priority is defined as a\nnumber. Directives with greater numerical `priority` are compiled first. Pre-link functions\nare also run in priority order, but post-link functions are run in reverse order. The order\nof directives with the same priority is undefined. The default priority is `0`.\n\n#### `terminal`\nIf set to true then the current `priority` will be the last set of directives\nwhich will execute (any directives at the current priority will still execute\nas the order of execution on same `priority` is undefined). Note that expressions\nand other directives used in the directive's template will also be excluded from execution.\n\n#### `scope`\nThe scope property can be `true`, an object or a falsy value:\n\n* **falsy:** No scope will be created for the directive. The directive will use its parent's scope.\n\n* **`true`:** A new child scope that prototypically inherits from its parent will be created for\nthe directive's element. If multiple directives on the same element request a new scope,\nonly one new scope is created. The new scope rule does not apply for the root of the template\nsince the root of the template always gets a new scope.\n\n* **`{...}` (an object hash):** A new \"isolate\" scope is created for the directive's element. The\n'isolate' scope differs from normal scope in that it does not prototypically inherit from its parent\nscope. This is useful when creating reusable components, which should not accidentally read or modify\ndata in the parent scope.\n\nThe 'isolate' scope object hash defines a set of local scope properties derived from attributes on the\ndirective's element. These local properties are useful for aliasing values for templates. The keys in\nthe object hash map to the name of the property on the isolate scope; the values define how the property\nis bound to the parent scope, via matching attributes on the directive's element:\n\n* `@` or `@attr` - bind a local scope property to the value of DOM attribute. The result is\n  always a string since DOM attributes are strings. If no `attr` name is specified then the\n  attribute name is assumed to be the same as the local name. Given `<my-component\n  my-attr=\"hello {{name}}\">` and the isolate scope definition `scope: { localName:'@myAttr' }`,\n  the directive's scope property `localName` will reflect the interpolated value of `hello\n  {{name}}`. As the `name` attribute changes so will the `localName` property on the directive's\n  scope. The `name` is read from the parent scope (not the directive's scope).\n\n* `=` or `=attr` - set up a bidirectional binding between a local scope property and an expression\n  passed via the attribute `attr`. The expression is evaluated in the context of the parent scope.\n  If no `attr` name is specified then the attribute name is assumed to be the same as the local\n  name. Given `<my-component my-attr=\"parentModel\">` and the isolate scope definition `scope: {\n  localModel: '=myAttr' }`, the property `localModel` on the directive's scope will reflect the\n  value of `parentModel` on the parent scope. Changes to `parentModel` will be reflected in\n  `localModel` and vice versa. Optional attributes should be marked as such with a question mark:\n  `=?` or `=?attr`. If the binding expression is non-assignable, or if the attribute isn't\n  optional and doesn't exist, an exception ({@link error/$compile/nonassign `$compile:nonassign`})\n  will be thrown upon discovering changes to the local value, since it will be impossible to sync\n  them back to the parent scope. By default, the {@link ng.$rootScope.Scope#$watch `$watch`}\n  method is used for tracking changes, and the equality check is based on object identity.\n  However, if an object literal or an array literal is passed as the binding expression, the\n  equality check is done by value (using the {@link angular.equals} function). It's also possible\n  to watch the evaluated value shallowly with {@link ng.$rootScope.Scope#$watchCollection\n  `$watchCollection`}: use `=*` or `=*attr` (`=*?` or `=*?attr` if the attribute is optional).\n\n* `<` or `<attr` - set up a one-way (one-directional) binding between a local scope property and an\n  expression passed via the attribute `attr`. The expression is evaluated in the context of the\n  parent scope. If no `attr` name is specified then the attribute name is assumed to be the same as the\n  local name. You can also make the binding optional by adding `?`: `<?` or `<?attr`.\n\n  For example, given `<my-component my-attr=\"parentModel\">` and directive definition of\n  `scope: { localModel:'<myAttr' }`, then the isolated scope property `localModel` will reflect the\n  value of `parentModel` on the parent scope. Any changes to `parentModel` will be reflected\n  in `localModel`, but changes in `localModel` will not reflect in `parentModel`. There are however\n  two caveats:\n    1. one-way binding does not copy the value from the parent to the isolate scope, it simply\n    sets the same value. That means if your bound value is an object, changes to its properties\n    in the isolated scope will be reflected in the parent scope (because both reference the same object).\n    2. one-way binding watches changes to the **identity** of the parent value. That means the\n    {@link ng.$rootScope.Scope#$watch `$watch`} on the parent value only fires if the reference\n    to the value has changed. In most cases, this should not be of concern, but can be important\n    to know if you one-way bind to an object, and then replace that object in the isolated scope.\n    If you now change a property of the object in your parent scope, the change will not be\n    propagated to the isolated scope, because the identity of the object on the parent scope\n    has not changed. Instead you must assign a new object.\n\n  One-way binding is useful if you do not plan to propagate changes to your isolated scope bindings\n  back to the parent. However, it does not make this completely impossible.\n\n* `&` or `&attr` - provides a way to execute an expression in the context of the parent scope. If\n  no `attr` name is specified then the attribute name is assumed to be the same as the local name.\n  Given `<my-component my-attr=\"count = count + value\">` and the isolate scope definition `scope: {\n  localFn:'&myAttr' }`, the isolate scope property `localFn` will point to a function wrapper for\n  the `count = count + value` expression. Often it's desirable to pass data from the isolated scope\n  via an expression to the parent scope. This can be done by passing a map of local variable names\n  and values into the expression wrapper fn. For example, if the expression is `increment(amount)`\n  then we can specify the amount value by calling the `localFn` as `localFn({amount: 22})`.\n\nIn general it's possible to apply more than one directive to one element, but there might be limitations\ndepending on the type of scope required by the directives. The following points will help explain these limitations.\nFor simplicity only two directives are taken into account, but it is also applicable for several directives:\n\n* **no scope** + **no scope** => Two directives which don't require their own scope will use their parent's scope\n* **child scope** + **no scope** =>  Both directives will share one single child scope\n* **child scope** + **child scope** =>  Both directives will share one single child scope\n* **isolated scope** + **no scope** =>  The isolated directive will use it's own created isolated scope. The other directive will use\nits parent's scope\n* **isolated scope** + **child scope** =>  **Won't work!** Only one scope can be related to one element. Therefore these directives cannot\nbe applied to the same element.\n* **isolated scope** + **isolated scope**  =>  **Won't work!** Only one scope can be related to one element. Therefore these directives\ncannot be applied to the same element.\n\n\n#### `bindToController`\nThis property is used to bind scope properties directly to the controller. It can be either\n`true` or an object hash with the same format as the `scope` property. Additionally, a controller\nalias must be set, either by using `controllerAs: 'myAlias'` or by specifying the alias in the controller\ndefinition: `controller: 'myCtrl as myAlias'`.\n\nWhen an isolate scope is used for a directive (see above), `bindToController: true` will\nallow a component to have its properties bound to the controller, rather than to scope.\n\nAfter the controller is instantiated, the initial values of the isolate scope bindings will be bound to the controller\nproperties. You can access these bindings once they have been initialized by providing a controller method called\n`$onInit`, which is called after all the controllers on an element have been constructed and had their bindings\ninitialized.\n\n<div class=\"alert alert-warning\">\n**Deprecation warning:** although bindings for non-ES6 class controllers are currently\nbound to `this` before the controller constructor is called, this use is now deprecated. Please place initialization\ncode that relies upon bindings inside a `$onInit` method on the controller, instead.\n</div>\n\nIt is also possible to set `bindToController` to an object hash with the same format as the `scope` property.\nThis will set up the scope bindings to the controller directly. Note that `scope` can still be used\nto define which kind of scope is created. By default, no scope is created. Use `scope: {}` to create an isolate\nscope (useful for component directives).\n\nIf both `bindToController` and `scope` are defined and have object hashes, `bindToController` overrides `scope`.\n\n\n#### `controller`\nController constructor function. The controller is instantiated before the\npre-linking phase and can be accessed by other directives (see\n`require` attribute). This allows the directives to communicate with each other and augment\neach other's behavior. The controller is injectable (and supports bracket notation) with the following locals:\n\n* `$scope` - Current scope associated with the element\n* `$element` - Current element\n* `$attrs` - Current attributes object for the element\n* `$transclude` - A transclude linking function pre-bound to the correct transclusion scope:\n  `function([scope], cloneLinkingFn, futureParentElement, slotName)`:\n   * `scope`: (optional) override the scope.\n   * `cloneLinkingFn`: (optional) argument to create clones of the original transcluded content.\n   * `futureParentElement` (optional):\n       * defines the parent to which the `cloneLinkingFn` will add the cloned elements.\n       * default: `$element.parent()` resp. `$element` for `transclude:'element'` resp. `transclude:true`.\n       * only needed for transcludes that are allowed to contain non html elements (e.g. SVG elements)\n         and when the `cloneLinkinFn` is passed,\n         as those elements need to created and cloned in a special way when they are defined outside their\n         usual containers (e.g. like `<svg>`).\n       * See also the `directive.templateNamespace` property.\n   * `slotName`: (optional) the name of the slot to transclude. If falsy (e.g. `null`, `undefined` or `''`)\n     then the default translusion is provided.\n   The `$transclude` function also has a method on it, `$transclude.isSlotFilled(slotName)`, which returns\n   `true` if the specified slot contains content (i.e. one or more DOM nodes).\n\nThe controller can provide the following methods that act as life-cycle hooks:\n* `$onInit` - Called on each controller after all the controllers on an element have been constructed and\n  had their bindings initialized (and before the pre &amp; post linking functions for the directives on\n  this element). This is a good place to put initialization code for your controller.\n\n#### `require`\nRequire another directive and inject its controller as the fourth argument to the linking function. The\n`require` property can be a string, an array or an object:\n* a **string** containing the name of the directive to pass to the linking function\n* an **array** containing the names of directives to pass to the linking function. The argument passed to the\nlinking function will be an array of controllers in the same order as the names in the `require` property\n* an **object** whose property values are the names of the directives to pass to the linking function. The argument\npassed to the linking function will also be an object with matching keys, whose values will hold the corresponding\ncontrollers.\n\nIf the `require` property is an object and `bindToController` is truthy, then the required controllers are\nbound to the controller using the keys of the `require` property. This binding occurs after all the controllers\nhave been constructed but before `$onInit` is called.\nSee the {@link $compileProvider#component} helper for an example of how this can be used.\n\nIf no such required directive(s) can be found, or if the directive does not have a controller, then an error is\nraised (unless no link function is specified and the required controllers are not being bound to the directive\ncontroller, in which case error checking is skipped). The name can be prefixed with:\n\n* (no prefix) - Locate the required controller on the current element. Throw an error if not found.\n* `?` - Attempt to locate the required controller or pass `null` to the `link` fn if not found.\n* `^` - Locate the required controller by searching the element and its parents. Throw an error if not found.\n* `^^` - Locate the required controller by searching the element's parents. Throw an error if not found.\n* `?^` - Attempt to locate the required controller by searching the element and its parents or pass\n  `null` to the `link` fn if not found.\n* `?^^` - Attempt to locate the required controller by searching the element's parents, or pass\n  `null` to the `link` fn if not found.\n\n\n#### `controllerAs`\nIdentifier name for a reference to the controller in the directive's scope.\nThis allows the controller to be referenced from the directive template. This is especially\nuseful when a directive is used as component, i.e. with an `isolate` scope. It's also possible\nto use it in a directive without an `isolate` / `new` scope, but you need to be aware that the\n`controllerAs` reference might overwrite a property that already exists on the parent scope.\n\n\n#### `restrict`\nString of subset of `EACM` which restricts the directive to a specific directive\ndeclaration style. If omitted, the defaults (elements and attributes) are used.\n\n* `E` - Element name (default): `<my-directive></my-directive>`\n* `A` - Attribute (default): `<div my-directive=\"exp\"></div>`\n* `C` - Class: `<div class=\"my-directive: exp;\"></div>`\n* `M` - Comment: `<!-- directive: my-directive exp -->`\n\n\n#### `templateNamespace`\nString representing the document type used by the markup in the template.\nAngularJS needs this information as those elements need to be created and cloned\nin a special way when they are defined outside their usual containers like `<svg>` and `<math>`.\n\n* `html` - All root nodes in the template are HTML. Root nodes may also be\n  top-level elements such as `<svg>` or `<math>`.\n* `svg` - The root nodes in the template are SVG elements (excluding `<math>`).\n* `math` - The root nodes in the template are MathML elements (excluding `<svg>`).\n\nIf no `templateNamespace` is specified, then the namespace is considered to be `html`.\n\n#### `template`\nHTML markup that may:\n* Replace the contents of the directive's element (default).\n* Replace the directive's element itself (if `replace` is true - DEPRECATED).\n* Wrap the contents of the directive's element (if `transclude` is true).\n\nValue may be:\n\n* A string. For example `<div red-on-hover>{{delete_str}}</div>`.\n* A function which takes two arguments `tElement` and `tAttrs` (described in the `compile`\n  function api below) and returns a string value.\n\n\n#### `templateUrl`\nThis is similar to `template` but the template is loaded from the specified URL, asynchronously.\n\nBecause template loading is asynchronous the compiler will suspend compilation of directives on that element\nfor later when the template has been resolved.  In the meantime it will continue to compile and link\nsibling and parent elements as though this element had not contained any directives.\n\nThe compiler does not suspend the entire compilation to wait for templates to be loaded because this\nwould result in the whole app \"stalling\" until all templates are loaded asynchronously - even in the\ncase when only one deeply nested directive has `templateUrl`.\n\nTemplate loading is asynchronous even if the template has been preloaded into the {@link $templateCache}\n\nYou can specify `templateUrl` as a string representing the URL or as a function which takes two\narguments `tElement` and `tAttrs` (described in the `compile` function api below) and returns\na string value representing the url.  In either case, the template URL is passed through {@link\n$sce#getTrustedResourceUrl $sce.getTrustedResourceUrl}.\n\n\n#### `replace` ([*DEPRECATED*!], will be removed in next major release - i.e. v2.0)\nspecify what the template should replace. Defaults to `false`.\n\n* `true` - the template will replace the directive's element.\n* `false` - the template will replace the contents of the directive's element.\n\nThe replacement process migrates all of the attributes / classes from the old element to the new\none. See the {@link guide/directive#template-expanding-directive\nDirectives Guide} for an example.\n\nThere are very few scenarios where element replacement is required for the application function,\nthe main one being reusable custom components that are used within SVG contexts\n(because SVG doesn't work with custom elements in the DOM tree).\n\n#### `transclude`\nExtract the contents of the element where the directive appears and make it available to the directive.\nThe contents are compiled and provided to the directive as a **transclusion function**. See the\n{@link $compile#transclusion Transclusion} section below.\n\n\n#### `compile`\n\n```js\n  function compile(tElement, tAttrs, transclude) { ... }\n```\n\nThe compile function deals with transforming the template DOM. Since most directives do not do\ntemplate transformation, it is not used often. The compile function takes the following arguments:\n\n  * `tElement` - template element - The element where the directive has been declared. It is\n    safe to do template transformation on the element and child elements only.\n\n  * `tAttrs` - template attributes - Normalized list of attributes declared on this element shared\n    between all directive compile functions.\n\n  * `transclude` -  [*DEPRECATED*!] A transclude linking function: `function(scope, cloneLinkingFn)`\n\n<div class=\"alert alert-warning\">\n**Note:** The template instance and the link instance may be different objects if the template has\nbeen cloned. For this reason it is **not** safe to do anything other than DOM transformations that\napply to all cloned DOM nodes within the compile function. Specifically, DOM listener registration\nshould be done in a linking function rather than in a compile function.\n</div>\n\n<div class=\"alert alert-warning\">\n**Note:** The compile function cannot handle directives that recursively use themselves in their\nown templates or compile functions. Compiling these directives results in an infinite loop and\nstack overflow errors.\n\nThis can be avoided by manually using $compile in the postLink function to imperatively compile\na directive's template instead of relying on automatic template compilation via `template` or\n`templateUrl` declaration or manual compilation inside the compile function.\n</div>\n\n<div class=\"alert alert-danger\">\n**Note:** The `transclude` function that is passed to the compile function is deprecated, as it\n  e.g. does not know about the right outer scope. Please use the transclude function that is passed\n  to the link function instead.\n</div>\n\nA compile function can have a return value which can be either a function or an object.\n\n* returning a (post-link) function - is equivalent to registering the linking function via the\n  `link` property of the config object when the compile function is empty.\n\n* returning an object with function(s) registered via `pre` and `post` properties - allows you to\n  control when a linking function should be called during the linking phase. See info about\n  pre-linking and post-linking functions below.\n\n\n#### `link`\nThis property is used only if the `compile` property is not defined.\n\n```js\n  function link(scope, iElement, iAttrs, controller, transcludeFn) { ... }\n```\n\nThe link function is responsible for registering DOM listeners as well as updating the DOM. It is\nexecuted after the template has been cloned. This is where most of the directive logic will be\nput.\n\n  * `scope` - {@link ng.$rootScope.Scope Scope} - The scope to be used by the\n    directive for registering {@link ng.$rootScope.Scope#$watch watches}.\n\n  * `iElement` - instance element - The element where the directive is to be used. It is safe to\n    manipulate the children of the element only in `postLink` function since the children have\n    already been linked.\n\n  * `iAttrs` - instance attributes - Normalized list of attributes declared on this element shared\n    between all directive linking functions.\n\n  * `controller` - the directive's required controller instance(s) - Instances are shared\n    among all directives, which allows the directives to use the controllers as a communication\n    channel. The exact value depends on the directive's `require` property:\n      * no controller(s) required: the directive's own controller, or `undefined` if it doesn't have one\n      * `string`: the controller instance\n      * `array`: array of controller instances\n\n    If a required controller cannot be found, and it is optional, the instance is `null`,\n    otherwise the {@link error:$compile:ctreq Missing Required Controller} error is thrown.\n\n    Note that you can also require the directive's own controller - it will be made available like\n    any other controller.\n\n  * `transcludeFn` - A transclude linking function pre-bound to the correct transclusion scope.\n    This is the same as the `$transclude`\n    parameter of directive controllers, see there for details.\n    `function([scope], cloneLinkingFn, futureParentElement)`.\n\n#### Pre-linking function\n\nExecuted before the child elements are linked. Not safe to do DOM transformation since the\ncompiler linking function will fail to locate the correct elements for linking.\n\n#### Post-linking function\n\nExecuted after the child elements are linked.\n\nNote that child elements that contain `templateUrl` directives will not have been compiled\nand linked since they are waiting for their template to load asynchronously and their own\ncompilation and linking has been suspended until that occurs.\n\nIt is safe to do DOM transformation in the post-linking function on elements that are not waiting\nfor their async templates to be resolved.\n\n\n### Transclusion\n\nTransclusion is the process of extracting a collection of DOM elements from one part of the DOM and\ncopying them to another part of the DOM, while maintaining their connection to the original AngularJS\nscope from where they were taken.\n\nTransclusion is used (often with {@link ngTransclude}) to insert the\noriginal contents of a directive's element into a specified place in the template of the directive.\nThe benefit of transclusion, over simply moving the DOM elements manually, is that the transcluded\ncontent has access to the properties on the scope from which it was taken, even if the directive\nhas isolated scope.\nSee the {@link guide/directive#creating-a-directive-that-wraps-other-elements Directives Guide}.\n\nThis makes it possible for the widget to have private state for its template, while the transcluded\ncontent has access to its originating scope.\n\n<div class=\"alert alert-warning\">\n**Note:** When testing an element transclude directive you must not place the directive at the root of the\nDOM fragment that is being compiled. See {@link guide/unit-testing#testing-transclusion-directives\nTesting Transclusion Directives}.\n</div>\n\nThere are three kinds of transclusion depending upon whether you want to transclude just the contents of the\ndirective's element, the entire element or multiple parts of the element contents:\n\n* `true` - transclude the content (i.e. the child nodes) of the directive's element.\n* `'element'` - transclude the whole of the directive's element including any directives on this\n  element that defined at a lower priority than this directive. When used, the `template`\n  property is ignored.\n* **`{...}` (an object hash):** - map elements of the content onto transclusion \"slots\" in the template.\n\n**Mult-slot transclusion** is declared by providing an object for the `transclude` property.\n\nThis object is a map where the keys are the name of the slot to fill and the value is an element selector\nused to match the HTML to the slot. The element selector should be in normalized form (e.g. `myElement`)\nand will match the standard element variants (e.g. `my-element`, `my:element`, `data-my-element`, etc).\n\nFor further information check out the guide on {@link guide/directive#matching-directives Matching Directives}\n\nIf the element selector is prefixed with a `?` then that slot is optional.\n\nFor example, the transclude object `{ slotA: '?myCustomElement' }` maps `<my-custom-element>` elements to\nthe `slotA` slot, which can be accessed via the `$transclude` function or via the {@link ngTransclude} directive.\n\nSlots that are not marked as optional (`?`) will trigger a compile time error if there are no matching elements\nin the transclude content. If you wish to know if an optional slot was filled with content, then you can call\n`$transclude.isSlotFilled(slotName)` on the transclude function passed to the directive's link function and\ninjectable into the directive's controller.\n\n\n#### Transclusion Functions\n\nWhen a directive requests transclusion, the compiler extracts its contents and provides a **transclusion\nfunction** to the directive's `link` function and `controller`. This transclusion function is a special\n**linking function** that will return the compiled contents linked to a new transclusion scope.\n\n<div class=\"alert alert-info\">\nIf you are just using {@link ngTransclude} then you don't need to worry about this function, since\nngTransclude will deal with it for us.\n</div>\n\nIf you want to manually control the insertion and removal of the transcluded content in your directive\nthen you must use this transclude function. When you call a transclude function it returns a a jqLite/JQuery\nobject that contains the compiled DOM, which is linked to the correct transclusion scope.\n\nWhen you call a transclusion function you can pass in a **clone attach function**. This function accepts\ntwo parameters, `function(clone, scope) { ... }`, where the `clone` is a fresh compiled copy of your transcluded\ncontent and the `scope` is the newly created transclusion scope, to which the clone is bound.\n\n<div class=\"alert alert-info\">\n**Best Practice**: Always provide a `cloneFn` (clone attach function) when you call a transclude function\nsince you then get a fresh clone of the original DOM and also have access to the new transclusion scope.\n</div>\n\nIt is normal practice to attach your transcluded content (`clone`) to the DOM inside your **clone\nattach function**:\n\n```js\nvar transcludedContent, transclusionScope;\n\n$transclude(function(clone, scope) {\n  element.append(clone);\n  transcludedContent = clone;\n  transclusionScope = scope;\n});\n```\n\nLater, if you want to remove the transcluded content from your DOM then you should also destroy the\nassociated transclusion scope:\n\n```js\ntranscludedContent.remove();\ntransclusionScope.$destroy();\n```\n\n<div class=\"alert alert-info\">\n**Best Practice**: if you intend to add and remove transcluded content manually in your directive\n(by calling the transclude function to get the DOM and calling `element.remove()` to remove it),\nthen you are also responsible for calling `$destroy` on the transclusion scope.\n</div>\n\nThe built-in DOM manipulation directives, such as {@link ngIf}, {@link ngSwitch} and {@link ngRepeat}\nautomatically destroy their transcluded clones as necessary so you do not need to worry about this if\nyou are simply using {@link ngTransclude} to inject the transclusion into your directive.\n\n\n#### Transclusion Scopes\n\nWhen you call a transclude function it returns a DOM fragment that is pre-bound to a **transclusion\nscope**. This scope is special, in that it is a child of the directive's scope (and so gets destroyed\nwhen the directive's scope gets destroyed) but it inherits the properties of the scope from which it\nwas taken.\n\nFor example consider a directive that uses transclusion and isolated scope. The DOM hierarchy might look\nlike this:\n\n```html\n<div ng-app>\n  <div isolate>\n    <div transclusion>\n    </div>\n  </div>\n</div>\n```\n\nThe `$parent` scope hierarchy will look like this:\n\n  ```\n  - $rootScope\n    - isolate\n      - transclusion\n  ```\n\nbut the scopes will inherit prototypically from different scopes to their `$parent`.\n\n  ```\n  - $rootScope\n    - transclusion\n  - isolate\n  ```\n\n\n### Attributes\n\nThe {@link ng.$compile.directive.Attributes Attributes} object - passed as a parameter in the\n`link()` or `compile()` functions. It has a variety of uses.\n\n* *Accessing normalized attribute names:* Directives like 'ngBind' can be expressed in many ways:\n  'ng:bind', `data-ng-bind`, or 'x-ng-bind'. The attributes object allows for normalized access\n  to the attributes.\n\n* *Directive inter-communication:* All directives share the same instance of the attributes\n  object which allows the directives to use the attributes object as inter directive\n  communication.\n\n* *Supports interpolation:* Interpolation attributes are assigned to the attribute object\n  allowing other directives to read the interpolated value.\n\n* *Observing interpolated attributes:* Use `$observe` to observe the value changes of attributes\n  that contain interpolation (e.g. `src=\"{{bar}}\"`). Not only is this very efficient but it's also\n  the only way to easily get the actual value because during the linking phase the interpolation\n  hasn't been evaluated yet and so the value is at this time set to `undefined`.\n\n```js\nfunction linkingFn(scope, elm, attrs, ctrl) {\n  // get the attribute value\n  console.log(attrs.ngModel);\n\n  // change the attribute\n  attrs.$set('ngModel', 'new value');\n\n  // observe changes to interpolated attribute\n  attrs.$observe('ngModel', function(value) {\n    console.log('ngModel has changed value to ' + value);\n  });\n}\n```\n\n## Example\n\n<div class=\"alert alert-warning\">\n**Note**: Typically directives are registered with `module.directive`. The example below is\nto illustrate how `$compile` works.\n</div>\n\n<example module=\"compileExample\">\n  <file name=\"index.html\">\n   <script>\n     angular.module('compileExample', [], function($compileProvider) {\n       // configure new 'compile' directive by passing a directive\n       // factory function. The factory function injects the '$compile'\n       $compileProvider.directive('compile', function($compile) {\n         // directive factory creates a link function\n         return function(scope, element, attrs) {\n           scope.$watch(\n             function(scope) {\n                // watch the 'compile' expression for changes\n               return scope.$eval(attrs.compile);\n             },\n             function(value) {\n               // when the 'compile' expression changes\n               // assign it into the current DOM\n               element.html(value);\n\n               // compile the new DOM and link it to the current\n               // scope.\n               // NOTE: we only compile .childNodes so that\n               // we don't get into infinite loop compiling ourselves\n               $compile(element.contents())(scope);\n             }\n           );\n         };\n       });\n     })\n     .controller('GreeterController', ['$scope', function($scope) {\n       $scope.name = 'Angular';\n       $scope.html = 'Hello {{name}}';\n     }]);\n   </script>\n   <div ng-controller=\"GreeterController\">\n     <input ng-model=\"name\"> <br/>\n     <textarea ng-model=\"html\"></textarea> <br/>\n     <div compile=\"html\"></div>\n   </div>\n  </file>\n  <file name=\"protractor.js\" type=\"protractor\">\n    it('should auto compile', function() {\n      var textarea = $('textarea');\n      var output = $('div[compile]');\n      // The initial state reads 'Hello Angular'.\n      expect(output.getText()).toBe('Hello Angular');\n      textarea.clear();\n      textarea.sendKeys('{{name}}!');\n      expect(output.getText()).toBe('Angular!');\n    });\n  </file>\n</example>",
            "line": " web\\bower_components\\angular\\angular.js:6548"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular\\angular.js:7351"
        },
        {
            "message": "Missing item type\nRegister a new directive with the compiler.",
            "line": " web\\bower_components\\angular\\angular.js:7448"
        },
        {
            "message": "Missing item type\nRetrieves or overrides the default regular expression that is used for whitelisting of safe\nurls during a[href] sanitization.\n\nThe sanitization is a security measure aimed at preventing XSS attacks via html links.\n\nAny url about to be assigned to a[href] via data-binding is first normalized and turned into\nan absolute url. Afterwards, the url is matched against the `aHrefSanitizationWhitelist`\nregular expression. If a match is found, the original url is written into the dom. Otherwise,\nthe absolute url is prefixed with `'unsafe:'` string and only then is it written into the DOM.",
            "line": " web\\bower_components\\angular\\angular.js:7630"
        },
        {
            "message": "Missing item type\nRetrieves or overrides the default regular expression that is used for whitelisting of safe\nurls during img[src] sanitization.\n\nThe sanitization is a security measure aimed at prevent XSS attacks via html links.\n\nAny url about to be assigned to img[src] via data-binding is first normalized and turned into\nan absolute url. Afterwards, the url is matched against the `imgSrcSanitizationWhitelist`\nregular expression. If a match is found, the original url is written into the dom. Otherwise,\nthe absolute url is prefixed with `'unsafe:'` string and only then is it written into the DOM.",
            "line": " web\\bower_components\\angular\\angular.js:7660"
        },
        {
            "message": "Missing item type\nCall this method to enable/disable various debug runtime information in the compiler such as adding\nbinding information and a reference to the current scope on to DOM elements.\nIf enabled, the compiler will add the following to DOM elements that have been bound to the scope\n* `ng-binding` CSS class\n* `$binding` data property containing an array of the binding expressions\n\nYou may want to disable this in production for a significant performance boost. See\n{@link guide/production#disabling-debug-data Disabling Debug Data} for more.\n\nThe default value is true.",
            "line": " web\\bower_components\\angular\\angular.js:7689"
        },
        {
            "message": "Missing item type\nConverts an attribute name (e.g. dash/colon/underscore-delimited string, optionally prefixed with `x-` or\n`data-`) to its normalized, camelCase form.\n\nAlso there is special case for Moz prefix starting with upper case letter.\n\nFor further information check out the guide on {@link guide/directive#matching-directives Matching Directives}",
            "line": " web\\bower_components\\angular\\angular.js:7745"
        },
        {
            "message": "Missing item type\nAdds the CSS class value specified by the classVal parameter to the element. If animations\nare enabled then an animation will be triggered for the class addition.",
            "line": " web\\bower_components\\angular\\angular.js:7763"
        },
        {
            "message": "Missing item type\nRemoves the CSS class value specified by the classVal parameter from the element. If\nanimations are enabled then an animation will be triggered for the class removal.",
            "line": " web\\bower_components\\angular\\angular.js:7780"
        },
        {
            "message": "Missing item type\nAdds and removes the appropriate CSS class values to the element based on the difference\nbetween the new and old CSS class values (specified as newClasses and oldClasses).",
            "line": " web\\bower_components\\angular\\angular.js:7797"
        },
        {
            "message": "Missing item type\nSet a normalized attribute on the element in a way such that all directives\ncan share the attribute. This function properly handles boolean attributes.",
            "line": " web\\bower_components\\angular\\angular.js:7821"
        },
        {
            "message": "Missing item type\nObserves an interpolated attribute.\n\nThe observer function will be invoked once during the next `$digest` following\ncompilation. The observer is then invoked whenever the interpolated value\nchanges.",
            "line": " web\\bower_components\\angular\\angular.js:7927"
        },
        {
            "message": "Missing item type\nCompile function matches each node in nodeList against the directives. Once all directives\nfor a particular node are collected their compile functions are executed. The compile\nfunctions return values - the linking functions - are combined into a composite linking\nfunction, which is the a linking function for the node.",
            "line": " web\\bower_components\\angular\\angular.js:8121"
        },
        {
            "message": "Missing item type\nLooks for directives on the given node and adds them to the directive collection which is\nsorted.",
            "line": " web\\bower_components\\angular\\angular.js:8265"
        },
        {
            "message": "Missing item type\nGiven a node with an directive-start it collects all of the siblings until it finds\ndirective-end.",
            "line": " web\\bower_components\\angular\\angular.js:8373"
        },
        {
            "message": "Missing item type\nWrapper for linking function which converts normal linking function into a grouped\nlinking function.",
            "line": " web\\bower_components\\angular\\angular.js:8405"
        },
        {
            "message": "Missing item type\nA function generator that is used to support both eager and lazy compilation\nlinking function.",
            "line": " web\\bower_components\\angular\\angular.js:8420"
        },
        {
            "message": "Missing item type\nOnce the directives have been collected, their compile functions are executed. This method\nis responsible for inlining directive templates as well as terminating the application\nof the directives if the terminal directive has been reached.",
            "line": " web\\bower_components\\angular\\angular.js:8451"
        },
        {
            "message": "Missing item type\nlooks up the directive and decorates it with exception handling and proper parameters. We\ncall this the boundDirective.",
            "line": " web\\bower_components\\angular\\angular.js:9038"
        },
        {
            "message": "Missing item type\nlooks up the directive and returns true if it is a multi-element directive,\nand therefore requires DOM nodes between -start and -end markers to be grouped\ntogether.",
            "line": " web\\bower_components\\angular\\angular.js:9076"
        },
        {
            "message": "Missing item type\nWhen the element is replaced with HTML template then the new attributes\non the template need to be merged with the existing attributes in the DOM.\nThe desired effect is to have both of the attributes present.",
            "line": " web\\bower_components\\angular\\angular.js:9097"
        },
        {
            "message": "Missing item type\nSorting function for bound directives.",
            "line": " web\\bower_components\\angular\\angular.js:9255"
        },
        {
            "message": "Missing item type\nThis is a special jqLite.replaceWith, which can replace items which\nhave no parents, provided that the containing jqLite collection is provided.",
            "line": " web\\bower_components\\angular\\angular.js:9407"
        },
        {
            "message": "Missing item type\nConverts all accepted directives format into proper directive name.",
            "line": " web\\bower_components\\angular\\angular.js:9619"
        },
        {
            "message": "Missing item type\nA shared object between directive compile / linking functions which contains normalized DOM\nelement attributes. The values reflect current binding state `{{ }}`. The normalization is\nneeded since all of these are treated as equivalent in Angular:\n\n```\n   <span ng:bind=\"a\" ng-bind=\"a\" data-ng-bind=\"a\" x-ng-bind=\"a\">\n```",
            "line": " web\\bower_components\\angular\\angular.js:9627"
        },
        {
            "message": "Missing item type\nA map of DOM element attribute names to the normalized name. This is\nneeded to do reverse lookup from normalized name back to actual name.",
            "line": " web\\bower_components\\angular\\angular.js:9641"
        },
        {
            "message": "Missing item type\nSet DOM element attribute value.",
            "line": " web\\bower_components\\angular\\angular.js:9651"
        },
        {
            "message": "Missing item type\nClosure compiler type information",
            "line": " web\\bower_components\\angular\\angular.js:9668"
        },
        {
            "message": "Missing item type\nThe {@link ng.$controller $controller service} is used by Angular to create new\ncontrollers.\n\nThis provider allows controller registration via the\n{@link ng.$controllerProvider#register register} method.",
            "line": " web\\bower_components\\angular\\angular.js:9733"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular\\angular.js:9747"
        },
        {
            "message": "Missing item type\nIf called, allows `$controller` to find controller constructors on `window`",
            "line": " web\\bower_components\\angular\\angular.js:9764"
        },
        {
            "message": "Missing item type\n`$controller` service is responsible for instantiating controllers.\n\nIt's just a simple call to {@link auto.$injector $injector}, but extracted into\na service, so that one can override this service with [BC version](https://gist.github.com/1649788).",
            "line": " web\\bower_components\\angular\\angular.js:9776"
        },
        {
            "message": "Missing item type\nA {@link angular.element jQuery or jqLite} wrapper for the browser's `window.document` object.",
            "line": " web\\bower_components\\angular\\angular.js:9891"
        },
        {
            "message": "Missing item type\nAny uncaught exception in angular expressions is delegated to this service.\nThe default implementation simply delegates to `$log.error` which logs it into\nthe browser console.\n\nIn unit tests, if `angular-mocks.js` is loaded, this service is overridden by\n{@link ngMock.$exceptionHandler mock $exceptionHandler} which aids in testing.\n\n## Example:\n\n```js\n  angular.module('exceptionOverride', []).factory('$exceptionHandler', function() {\n    return function(exception, cause) {\n      exception.message += ' (caused by \"' + cause + '\")';\n      throw exception;\n    };\n  });\n```\n\nThis example will override the normal action of `$exceptionHandler`, to make angular\nexceptions fail hard when they happen, instead of just logging to the console.\n\n<hr />\nNote, that code executed in event-listeners (even those registered using jqLite's `on`/`bind`\nmethods) does not delegate exceptions to the {@link ng.$exceptionHandler $exceptionHandler}\n(unless executed during a digest).\n\nIf you wish, you can manually delegate exceptions, e.g.\n`try { ... } catch(e) { $exceptionHandler(e); }`",
            "line": " web\\bower_components\\angular\\angular.js:9922"
        },
        {
            "message": "Missing item type\nDefault {@link $http `$http`} params serializer that converts objects to strings\naccording to the following rules:\n\n* `{'foo': 'bar'}` results in `foo=bar`\n* `{'foo': Date.now()}` results in `foo=2015-04-01T09%3A50%3A49.262Z` (`toISOString()` and encoded representation of a Date object)\n* `{'foo': ['bar', 'baz']}` results in `foo=bar&foo=baz` (repeated key for each array element)\n* `{'foo': {'bar':'baz'}}` results in `foo=%7B%22bar%22%3A%22baz%22%7D\"` (stringified and encoded representation of an object)\n\nNote that serializer will sort the request parameters alphabetically.",
            "line": " web\\bower_components\\angular\\angular.js:10017"
        },
        {
            "message": "Missing item type\nAlternative {@link $http `$http`} params serializer that follows\njQuery's [`param()`](http://api.jquery.com/jquery.param/) method logic.\nThe serializer will also sort the params alphabetically.\n\nTo use it for serializing `$http` request parameters, set it as the `paramSerializer` property:\n\n```js\n$http({\n  url: myUrl,\n  method: 'GET',\n  params: myParams,\n  paramSerializer: '$httpParamSerializerJQLike'\n});\n```\n\nIt is also possible to set it as the default `paramSerializer` in the\n{@link $httpProvider#defaults `$httpProvider`}.\n\nAdditionally, you can inject the serializer and use it explicitly, for example to serialize\nform data for submission:\n\n```js\n.controller(function($http, $httpParamSerializerJQLike) {\n  //...\n\n  $http({\n    url: myUrl,\n    method: 'POST',\n    data: $httpParamSerializerJQLike(myData),\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded'\n    }\n  });\n\n});\n```",
            "line": " web\\bower_components\\angular\\angular.js:10054"
        },
        {
            "message": "Missing item type\nParse headers into key value object",
            "line": " web\\bower_components\\angular\\angular.js:10146"
        },
        {
            "message": "Missing item type\nReturns a function that provides access to parsed headers.\n\nHeaders are lazy parsed when first requested.",
            "line": " web\\bower_components\\angular\\angular.js:10176"
        },
        {
            "message": "Missing item type\nChain all given functions\n\nThis function is used for both request and response transforming",
            "line": " web\\bower_components\\angular\\angular.js:10207"
        },
        {
            "message": "Missing item type\nUse `$httpProvider` to change the default behavior of the {@link ng.$http $http} service.",
            "line": " web\\bower_components\\angular\\angular.js:10236"
        },
        {
            "message": "Missing item type\nObject containing default values for all {@link ng.$http $http} requests.\n\n- **`defaults.cache`** - {Object} - an object built with {@link ng.$cacheFactory `$cacheFactory`}\nthat will provide the cache for all requests who set their `cache` property to `true`.\nIf you set the `defaults.cache = false` then only requests that specify their own custom\ncache object will be cached. See {@link $http#caching $http Caching} for more information.\n\n- **`defaults.xsrfCookieName`** - {string} - Name of cookie containing the XSRF token.\nDefaults value is `'XSRF-TOKEN'`.\n\n- **`defaults.xsrfHeaderName`** - {string} - Name of HTTP header to populate with the\nXSRF token. Defaults value is `'X-XSRF-TOKEN'`.\n\n- **`defaults.headers`** - {Object} - Default headers for all $http requests.\nRefer to {@link ng.$http#setting-http-headers $http} for documentation on\nsetting default headers.\n    - **`defaults.headers.common`**\n    - **`defaults.headers.post`**\n    - **`defaults.headers.put`**\n    - **`defaults.headers.patch`**\n\n\n- **`defaults.paramSerializer`** - `{string|function(Object<string,string>):string}` - A function\n used to the prepare string representation of request parameters (specified as an object).\n If specified as string, it is interpreted as a function registered with the {@link auto.$injector $injector}.\n Defaults to {@link ng.$httpParamSerializer $httpParamSerializer}.",
            "line": " web\\bower_components\\angular\\angular.js:10243"
        },
        {
            "message": "Missing item type\nConfigure $http service to combine processing of multiple http responses received at around\nthe same time via {@link ng.$rootScope.Scope#$applyAsync $rootScope.$applyAsync}. This can result in\nsignificant performance improvement for bigger applications that make many HTTP requests\nconcurrently (common during application bootstrap).\n\nDefaults to false. If no value is specified, returns the current configured value.",
            "line": " web\\bower_components\\angular\\angular.js:10302"
        },
        {
            "message": "Missing item type\nConfigure `$http` service to return promises without the shorthand methods `success` and `error`.\nThis should be used to make sure that applications work without these methods.\n\nDefaults to true. If no value is specified, returns the current configured value.",
            "line": " web\\bower_components\\angular\\angular.js:10330"
        },
        {
            "message": "Missing item type\nArray containing service factories for all synchronous or asynchronous {@link ng.$http $http}\npre-processing of request or postprocessing of responses.\n\nThese service factories are ordered by request, i.e. they are applied in the same order as the\narray, on request, but reverse order, on response.\n\n{@link ng.$http#interceptors Interceptors detailed info}",
            "line": " web\\bower_components\\angular\\angular.js:10353"
        },
        {
            "message": "Missing item type\nMake sure that default param serializer is exposed as a function",
            "line": " web\\bower_components\\angular\\angular.js:10373"
        },
        {
            "message": "Missing item type\nInterceptors stored in reverse order. Inner interceptors before outer interceptors.\nThe reversal is needed so that we can build up the interception chain around the\nserver request.",
            "line": " web\\bower_components\\angular\\angular.js:10379"
        },
        {
            "message": "Missing item type\nShortcut method to perform `GET` request.",
            "line": " web\\bower_components\\angular\\angular.js:11048"
        },
        {
            "message": "Missing item type\nShortcut method to perform `DELETE` request.",
            "line": " web\\bower_components\\angular\\angular.js:11060"
        },
        {
            "message": "Missing item type\nShortcut method to perform `HEAD` request.",
            "line": " web\\bower_components\\angular\\angular.js:11072"
        },
        {
            "message": "Missing item type\nShortcut method to perform `JSONP` request.",
            "line": " web\\bower_components\\angular\\angular.js:11084"
        },
        {
            "message": "Missing item type\nShortcut method to perform `POST` request.",
            "line": " web\\bower_components\\angular\\angular.js:11098"
        },
        {
            "message": "Missing item type\nShortcut method to perform `PUT` request.",
            "line": " web\\bower_components\\angular\\angular.js:11111"
        },
        {
            "message": "Missing item type\nShortcut method to perform `PATCH` request.",
            "line": " web\\bower_components\\angular\\angular.js:11124"
        },
        {
            "message": "Missing item type\nRuntime equivalent of the `$httpProvider.defaults` property. Allows configuration of\ndefault headers, withCredentials as well as request and response transformations.\n\nSee \"Setting HTTP Headers\" and \"Transforming Requests and Responses\" sections above.",
            "line": " web\\bower_components\\angular\\angular.js:11138"
        },
        {
            "message": "Missing item type\nMakes the request.\n\n!!! ACCESSES CLOSURE VARS:\n$httpBackend, defaults, $log, $rootScope, defaultCache, $http.pendingRequests",
            "line": " web\\bower_components\\angular\\angular.js:11179"
        },
        {
            "message": "Missing item type\nCallback registered to $httpBackend():\n - caches the response if desired\n - resolves the raw $http promise\n - calls $apply",
            "line": " web\\bower_components\\angular\\angular.js:11242"
        },
        {
            "message": "Missing item type\nResolves the raw $http promise.",
            "line": " web\\bower_components\\angular\\angular.js:11271"
        },
        {
            "message": "Missing item type\nFactory function used to create XMLHttpRequest objects.\n\nReplace or decorate this service to create your own custom XMLHttpRequest objects.\n\n```\nangular.module('myApp', [])\n.factory('$xhrFactory', function() {\n  return function createXhr(method, url) {\n    return new window.XMLHttpRequest({mozSystem: true});\n  };\n});\n```",
            "line": " web\\bower_components\\angular\\angular.js:11307"
        },
        {
            "message": "Missing item type\nHTTP backend used by the {@link ng.$http service} that delegates to\nXMLHttpRequest object or JSONP and deals with browser incompatibilities.\n\nYou should never need to use this service directly, instead use the higher-level abstractions:\n{@link ng.$http $http} or {@link ngResource.$resource $resource}.\n\nDuring testing this implementation is swapped with {@link ngMock.$httpBackend mock\n$httpBackend} which can be trained with responses.",
            "line": " web\\bower_components\\angular\\angular.js:11336"
        },
        {
            "message": "Missing item type\nUsed for configuring the interpolation markup. Defaults to `{{` and `}}`.\n\n<div class=\"alert alert-danger\">\nThis feature is sometimes used to mix different markup languages, e.g. to wrap an Angular\ntemplate within a Python Jinja template (or any other template language). Mixing templating\nlanguages is **very dangerous**. The embedding template language will not safely escape Angular\nexpressions, so any user-controlled values in the template will cause Cross Site Scripting (XSS)\nsecurity bugs!\n</div>",
            "line": " web\\bower_components\\angular\\angular.js:11518"
        },
        {
            "message": "Missing item type\nSymbol to denote start of expression in the interpolated string. Defaults to `{{`.",
            "line": " web\\bower_components\\angular\\angular.js:11565"
        },
        {
            "message": "Missing item type\nSymbol to denote the end of expression in the interpolated string. Defaults to `}}`.",
            "line": " web\\bower_components\\angular\\angular.js:11583"
        },
        {
            "message": "Missing item type\nCompiles a string with markup into an interpolation function. This service is used by the\nHTML {@link ng.$compile $compile} service for data binding. See\n{@link ng.$interpolateProvider $interpolateProvider} for configuring the\ninterpolation markup.\n\n\n```js\n  var $interpolate = ...; // injected\n  var exp = $interpolate('Hello {{name | uppercase}}!');\n  expect(exp({name:'Angular'})).toEqual('Hello ANGULAR!');\n```\n\n`$interpolate` takes an optional fourth argument, `allOrNothing`. If `allOrNothing` is\n`true`, the interpolation function will return `undefined` unless all embedded expressions\nevaluate to a value other than `undefined`.\n\n```js\n  var $interpolate = ...; // injected\n  var context = {greeting: 'Hello', name: undefined };\n\n  // default \"forgiving\" mode\n  var exp = $interpolate('{{greeting}} {{name}}!');\n  expect(exp(context)).toEqual('Hello !');\n\n  // \"allOrNothing\" mode\n  exp = $interpolate('{{greeting}} {{name}}!', false, null, true);\n  expect(exp(context)).toBeUndefined();\n  context.name = 'Angular';\n  expect(exp(context)).toEqual('Hello Angular!');\n```\n\n`allOrNothing` is useful for interpolating URLs. `ngSrc` and `ngSrcset` use this behavior.\n\n####Escaped Interpolation\n$interpolate provides a mechanism for escaping interpolation markers. Start and end markers\ncan be escaped by preceding each of their characters with a REVERSE SOLIDUS U+005C (backslash).\nIt will be rendered as a regular start/end marker, and will not be interpreted as an expression\nor binding.\n\nThis enables web-servers to prevent script injection attacks and defacing attacks, to some\ndegree, while also enabling code examples to work without relying on the\n{@link ng.directive:ngNonBindable ngNonBindable} directive.\n\n**For security purposes, it is strongly encouraged that web servers escape user-supplied data,\nreplacing angle brackets (&lt;, &gt;) with &amp;lt; and &amp;gt; respectively, and replacing all\ninterpolation start/end markers with their escaped counterparts.**\n\nEscaped interpolation markers are only replaced with the actual interpolation markers in rendered\noutput when the $interpolate service processes the text. So, for HTML elements interpolated\nby {@link ng.$compile $compile}, or otherwise interpolated with the `mustHaveExpression` parameter\nset to `true`, the interpolated text must contain an unescaped interpolation expression. As such,\nthis is typically useful only when user-data is used in rendering a template from the server, or\nwhen otherwise untrusted data is used by a directive.\n\n<example>\n <file name=\"index.html\">\n   <div ng-init=\"username='A user'\">\n     <p ng-init=\"apptitle='Escaping demo'\">{{apptitle}}: \\{\\{ username = \"defaced value\"; \\}\\}\n       </p>\n     <p><strong>{{username}}</strong> attempts to inject code which will deface the\n       application, but fails to accomplish their task, because the server has correctly\n       escaped the interpolation start/end markers with REVERSE SOLIDUS U+005C (backslash)\n       characters.</p>\n     <p>Instead, the result of the attempted script injection is visible, and can be removed\n       from the database by an administrator.</p>\n   </div>\n </file>\n</example>",
            "line": " web\\bower_components\\angular\\angular.js:11643"
        },
        {
            "message": "Missing item type\nSymbol to denote the start of expression in the interpolated string. Defaults to `{{`.\n\nUse {@link ng.$interpolateProvider#startSymbol `$interpolateProvider.startSymbol`} to change\nthe symbol.",
            "line": " web\\bower_components\\angular\\angular.js:11851"
        },
        {
            "message": "Missing item type\nSymbol to denote the end of expression in the interpolated string. Defaults to `}}`.\n\nUse {@link ng.$interpolateProvider#endSymbol `$interpolateProvider.endSymbol`} to change\nthe symbol.",
            "line": " web\\bower_components\\angular\\angular.js:11867"
        },
        {
            "message": "Missing item type\nAngular's wrapper for `window.setInterval`. The `fn` function is executed every `delay`\nmilliseconds.\n\nThe return value of registering an interval function is a promise. This promise will be\nnotified upon each tick of the interval, and will be resolved after `count` iterations, or\nrun indefinitely if `count` is not defined. The value of the notification will be the\nnumber of iterations that have run.\nTo cancel an interval, call `$interval.cancel(promise)`.\n\nIn tests you can use {@link ngMock.$interval#flush `$interval.flush(millis)`} to\nmove forward by `millis` milliseconds and trigger any functions scheduled to run in that\ntime.\n\n<div class=\"alert alert-warning\">\n**Note**: Intervals created by this service must be explicitly destroyed when you are finished\nwith them.  In particular they are not automatically destroyed when a controller's scope or a\ndirective's element are destroyed.\nYou should take this into consideration and make sure to always cancel the interval at the\nappropriate moment.  See the example below for more details on how and when to do this.\n</div>",
            "line": " web\\bower_components\\angular\\angular.js:11892"
        },
        {
            "message": "Missing item type\nCancels a task associated with the `promise`.",
            "line": " web\\bower_components\\angular\\angular.js:12061"
        },
        {
            "message": "Missing item type\n$locale service provides localization rules for various Angular components. As of right now the\nonly public api is:\n\n* `id` – `{string}` – locale id formatted as `languageId-countryId` (e.g. `en-us`)",
            "line": " web\\bower_components\\angular\\angular.js:12085"
        },
        {
            "message": "Missing item type\nEncode path using encodeUriSegment, ignoring forward slashes",
            "line": " web\\bower_components\\angular\\angular.js:12101"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular\\angular.js:12145"
        },
        {
            "message": "Missing item type\nLocationHtml5Url represents an url\nThis object is exposed as $location service when HTML5 mode is enabled and supported",
            "line": " web\\bower_components\\angular\\angular.js:12179"
        },
        {
            "message": "Missing item type\nParse given html5 (regular) url string into properties",
            "line": " web\\bower_components\\angular\\angular.js:12194"
        },
        {
            "message": "Missing item type\nCompose url and update `absUrl` property",
            "line": " web\\bower_components\\angular\\angular.js:12215"
        },
        {
            "message": "Missing item type\nLocationHashbangUrl represents url\nThis object is exposed as $location service when developer doesn't opt into html5 mode.\nIt also serves as the base class for html5 mode fallback on legacy browsers.",
            "line": " web\\bower_components\\angular\\angular.js:12257"
        },
        {
            "message": "Missing item type\nParse given hashbang url into properties",
            "line": " web\\bower_components\\angular\\angular.js:12272"
        },
        {
            "message": "Missing item type\nCompose hashbang url and update `absUrl` property",
            "line": " web\\bower_components\\angular\\angular.js:12347"
        },
        {
            "message": "Missing item type\nLocationHashbangUrl represents url\nThis object is exposed as $location service when html5 history api is enabled but the browser\ndoes not support it.",
            "line": " web\\bower_components\\angular\\angular.js:12369"
        },
        {
            "message": "Missing item type\nAre we in html5 mode?",
            "line": " web\\bower_components\\angular\\angular.js:12421"
        },
        {
            "message": "Missing item type\nHas any change been replacing?",
            "line": " web\\bower_components\\angular\\angular.js:12427"
        },
        {
            "message": "Missing item type\nThis method is getter only.\n\nReturn full url representation with all segments encoded according to rules specified in\n[RFC 3986](http://www.ietf.org/rfc/rfc3986.txt).\n\n\n```js\n// given url http://example.com/#/some/path?foo=bar&baz=xoxo\nvar absUrl = $location.absUrl();\n// => \"http://example.com/#/some/path?foo=bar&baz=xoxo\"\n```",
            "line": " web\\bower_components\\angular\\angular.js:12433"
        },
        {
            "message": "Missing item type\nThis method is getter / setter.\n\nReturn url (e.g. `/path?a=b#hash`) when called without any parameter.\n\nChange path, search and hash, when called with parameter and return `$location`.\n\n\n```js\n// given url http://example.com/#/some/path?foo=bar&baz=xoxo\nvar url = $location.url();\n// => \"/some/path?foo=bar&baz=xoxo\"\n```",
            "line": " web\\bower_components\\angular\\angular.js:12454"
        },
        {
            "message": "Missing item type\nThis method is getter only.\n\nReturn protocol of current url.\n\n\n```js\n// given url http://example.com/#/some/path?foo=bar&baz=xoxo\nvar protocol = $location.protocol();\n// => \"http\"\n```",
            "line": " web\\bower_components\\angular\\angular.js:12488"
        },
        {
            "message": "Missing item type\nThis method is getter only.\n\nReturn host of current url.\n\nNote: compared to the non-angular version `location.host` which returns `hostname:port`, this returns the `hostname` portion only.\n\n\n```js\n// given url http://example.com/#/some/path?foo=bar&baz=xoxo\nvar host = $location.host();\n// => \"example.com\"\n\n// given url http://user:password@example.com:8080/#/some/path?foo=bar&baz=xoxo\nhost = $location.host();\n// => \"example.com\"\nhost = location.host;\n// => \"example.com:8080\"\n```",
            "line": " web\\bower_components\\angular\\angular.js:12508"
        },
        {
            "message": "Missing item type\nThis method is getter only.\n\nReturn port of current url.\n\n\n```js\n// given url http://example.com/#/some/path?foo=bar&baz=xoxo\nvar port = $location.port();\n// => 80\n```",
            "line": " web\\bower_components\\angular\\angular.js:12536"
        },
        {
            "message": "Missing item type\nThis method is getter / setter.\n\nReturn path of current url when called without any parameter.\n\nChange path when called with parameter and return `$location`.\n\nNote: Path should always begin with forward slash (/), this method will add the forward slash\nif it is missing.\n\n\n```js\n// given url http://example.com/#/some/path?foo=bar&baz=xoxo\nvar path = $location.path();\n// => \"/some/path\"\n```",
            "line": " web\\bower_components\\angular\\angular.js:12556"
        },
        {
            "message": "Missing item type\nThis method is getter / setter.\n\nReturn search part (as object) of current url when called without any parameter.\n\nChange search part when called with parameter and return `$location`.\n\n\n```js\n// given url http://example.com/#/some/path?foo=bar&baz=xoxo\nvar searchObject = $location.search();\n// => {foo: 'bar', baz: 'xoxo'}\n\n// set foo to 'yipee'\n$location.search('foo', 'yipee');\n// $location.search() => {foo: 'yipee', baz: 'xoxo'}\n```",
            "line": " web\\bower_components\\angular\\angular.js:12585"
        },
        {
            "message": "Missing item type\nThis method is getter / setter.\n\nReturns the hash fragment when called without any parameters.\n\nChanges the hash fragment when called with a parameter and returns `$location`.\n\n\n```js\n// given url http://example.com/#/some/path?foo=bar&baz=xoxo#hashValue\nvar hash = $location.hash();\n// => \"hashValue\"\n```",
            "line": " web\\bower_components\\angular\\angular.js:12663"
        },
        {
            "message": "Missing item type\nIf called, all changes to $location during the current `$digest` will replace the current history\nrecord, instead of adding a new one.",
            "line": " web\\bower_components\\angular\\angular.js:12688"
        },
        {
            "message": "Missing item type\nThis method is getter / setter.\n\nReturn the history state object when called without any parameter.\n\nChange the history state object when called with one parameter and return `$location`.\nThe state object is later passed to `pushState` or `replaceState`.\n\nNOTE: This method is supported only in HTML5 mode and only in browsers supporting\nthe HTML5 History API (i.e. methods `pushState` and `replaceState`). If you need to support\nolder browsers (like IE9 or Android < 4.0), don't use this method.",
            "line": " web\\bower_components\\angular\\angular.js:12705"
        },
        {
            "message": "Missing item type\nThe $location service parses the URL in the browser address bar (based on the\n[window.location](https://developer.mozilla.org/en/window.location)) and makes the URL\navailable to your application. Changes to the URL in the address bar are reflected into\n$location service and changes to $location are reflected into the browser address bar.\n\n**The $location service:**\n\n- Exposes the current URL in the browser address bar, so you can\n  - Watch and observe the URL.\n  - Change the URL.\n- Synchronizes the URL with the browser when the user\n  - Changes the address bar.\n  - Clicks the back or forward button (or clicks a History link).\n  - Clicks on a link.\n- Represents the URL object as a set of methods (protocol, host, port, path, search, hash).\n\nFor more information see {@link guide/$location Developer Guide: Using $location}",
            "line": " web\\bower_components\\angular\\angular.js:12764"
        },
        {
            "message": "Missing item type\nUse the `$locationProvider` to configure how the application deep linking paths are stored.",
            "line": " web\\bower_components\\angular\\angular.js:12790"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular\\angular.js:12804"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular\\angular.js:12820"
        },
        {
            "message": "Missing item type\nBroadcasted before a URL will change.\n\nThis change can be prevented by calling\n`preventDefault` method of the event. See {@link ng.$rootScope.Scope#$on} for more\ndetails about event object. Upon successful change\n{@link ng.$location#$locationChangeSuccess $locationChangeSuccess} is fired.\n\nThe `newState` and `oldState` parameters may be defined only in HTML5 mode and when\nthe browser supports the HTML5 History API.",
            "line": " web\\bower_components\\angular\\angular.js:12863"
        },
        {
            "message": "Missing item type\nBroadcasted after a URL was changed.\n\nThe `newState` and `oldState` parameters may be defined only in HTML5 mode and when\nthe browser supports the HTML5 History API.",
            "line": " web\\bower_components\\angular\\angular.js:12885"
        },
        {
            "message": "Missing item type\nSimple service for logging. Default implementation safely writes the message\ninto the browser's console (if present).\n\nThe main purpose of this service is to simplify debugging and troubleshooting.\n\nThe default is to log `debug` messages. You can use\n{@link ng.$logProvider ng.$logProvider#debugEnabled} to change this.",
            "line": " web\\bower_components\\angular\\angular.js:13086"
        },
        {
            "message": "Missing item type\nUse the `$logProvider` to configure how the application logs messages",
            "line": " web\\bower_components\\angular\\angular.js:13124"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular\\angular.js:13134"
        },
        {
            "message": "Missing item type\nWrite a log message",
            "line": " web\\bower_components\\angular\\angular.js:13152"
        },
        {
            "message": "Missing item type\nWrite an information message",
            "line": " web\\bower_components\\angular\\angular.js:13161"
        },
        {
            "message": "Missing item type\nWrite a warning message",
            "line": " web\\bower_components\\angular\\angular.js:13170"
        },
        {
            "message": "Missing item type\nWrite an error message",
            "line": " web\\bower_components\\angular\\angular.js:13179"
        },
        {
            "message": "Missing item type\nWrite a debug message",
            "line": " web\\bower_components\\angular\\angular.js:13188"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular\\angular.js:13378"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular\\angular.js:14911"
        },
        {
            "message": "Missing item type\nConverts Angular {@link guide/expression expression} into a function.\n\n```js\n  var getter = $parse('user.name');\n  var setter = getter.assign;\n  var context = {user:{name:'angular'}};\n  var locals = {user:{name:'local'}};\n\n  expect(getter(context)).toEqual('angular');\n  setter(context, 'newValue');\n  expect(context.user.name).toEqual('newValue');\n  expect(getter(context, locals)).toEqual('local');\n```",
            "line": " web\\bower_components\\angular\\angular.js:14943"
        },
        {
            "message": "Missing item type\n`$parseProvider` can be used for configuring the default behavior of the {@link ng.$parse $parse}\n service.",
            "line": " web\\bower_components\\angular\\angular.js:14984"
        },
        {
            "message": "Missing item type\nA service that helps you run functions asynchronously, and use their return values (or exceptions)\nwhen they are done processing.\n\nThis is an implementation of promises/deferred objects inspired by\n[Kris Kowal's Q](https://github.com/kriskowal/q).\n\n$q can be used in two fashions --- one which is more similar to Kris Kowal's Q or jQuery's Deferred\nimplementations, and the other which resembles ES6 promises to some degree.\n\n# $q constructor\n\nThe streamlined ES6 style promise is essentially just using $q as a constructor which takes a `resolver`\nfunction as the first argument. This is similar to the native Promise implementation from ES6 Harmony,\nsee [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise).\n\nWhile the constructor-style use is supported, not all of the supporting methods from ES6 Harmony promises are\navailable yet.\n\nIt can be used like so:\n\n```js\n  // for the purpose of this example let's assume that variables `$q` and `okToGreet`\n  // are available in the current lexical scope (they could have been injected or passed in).\n\n  function asyncGreet(name) {\n    // perform some asynchronous operation, resolve or reject the promise when appropriate.\n    return $q(function(resolve, reject) {\n      setTimeout(function() {\n        if (okToGreet(name)) {\n          resolve('Hello, ' + name + '!');\n        } else {\n          reject('Greeting ' + name + ' is not allowed.');\n        }\n      }, 1000);\n    });\n  }\n\n  var promise = asyncGreet('Robin Hood');\n  promise.then(function(greeting) {\n    alert('Success: ' + greeting);\n  }, function(reason) {\n    alert('Failed: ' + reason);\n  });\n```\n\nNote: progress/notify callbacks are not currently supported via the ES6-style interface.\n\nNote: unlike ES6 behavior, an exception thrown in the constructor function will NOT implicitly reject the promise.\n\nHowever, the more traditional CommonJS-style usage is still available, and documented below.\n\n[The CommonJS Promise proposal](http://wiki.commonjs.org/wiki/Promises) describes a promise as an\ninterface for interacting with an object that represents the result of an action that is\nperformed asynchronously, and may or may not be finished at any given point in time.\n\nFrom the perspective of dealing with error handling, deferred and promise APIs are to\nasynchronous programming what `try`, `catch` and `throw` keywords are to synchronous programming.\n\n```js\n  // for the purpose of this example let's assume that variables `$q` and `okToGreet`\n  // are available in the current lexical scope (they could have been injected or passed in).\n\n  function asyncGreet(name) {\n    var deferred = $q.defer();\n\n    setTimeout(function() {\n      deferred.notify('About to greet ' + name + '.');\n\n      if (okToGreet(name)) {\n        deferred.resolve('Hello, ' + name + '!');\n      } else {\n        deferred.reject('Greeting ' + name + ' is not allowed.');\n      }\n    }, 1000);\n\n    return deferred.promise;\n  }\n\n  var promise = asyncGreet('Robin Hood');\n  promise.then(function(greeting) {\n    alert('Success: ' + greeting);\n  }, function(reason) {\n    alert('Failed: ' + reason);\n  }, function(update) {\n    alert('Got notification: ' + update);\n  });\n```\n\nAt first it might not be obvious why this extra complexity is worth the trouble. The payoff\ncomes in the way of guarantees that promise and deferred APIs make, see\nhttps://github.com/kriskowal/uncommonjs/blob/master/promises/specification.md.\n\nAdditionally the promise api allows for composition that is very hard to do with the\ntraditional callback ([CPS](http://en.wikipedia.org/wiki/Continuation-passing_style)) approach.\nFor more on this please see the [Q documentation](https://github.com/kriskowal/q) especially the\nsection on serial or parallel joining of promises.\n\n# The Deferred API\n\nA new instance of deferred is constructed by calling `$q.defer()`.\n\nThe purpose of the deferred object is to expose the associated Promise instance as well as APIs\nthat can be used for signaling the successful or unsuccessful completion, as well as the status\nof the task.\n\n**Methods**\n\n- `resolve(value)` – resolves the derived promise with the `value`. If the value is a rejection\n  constructed via `$q.reject`, the promise will be rejected instead.\n- `reject(reason)` – rejects the derived promise with the `reason`. This is equivalent to\n  resolving it with a rejection constructed via `$q.reject`.\n- `notify(value)` - provides updates on the status of the promise's execution. This may be called\n  multiple times before the promise is either resolved or rejected.\n\n**Properties**\n\n- promise – `{Promise}` – promise object associated with this deferred.\n\n\n# The Promise API\n\nA new promise instance is created when a deferred instance is created and can be retrieved by\ncalling `deferred.promise`.\n\nThe purpose of the promise object is to allow for interested parties to get access to the result\nof the deferred task when it completes.\n\n**Methods**\n\n- `then(successCallback, errorCallback, notifyCallback)` – regardless of when the promise was or\n  will be resolved or rejected, `then` calls one of the success or error callbacks asynchronously\n  as soon as the result is available. The callbacks are called with a single argument: the result\n  or rejection reason. Additionally, the notify callback may be called zero or more times to\n  provide a progress indication, before the promise is resolved or rejected.\n\n  This method *returns a new promise* which is resolved or rejected via the return value of the\n  `successCallback`, `errorCallback` (unless that value is a promise, in which case it is resolved\n  with the value which is resolved in that promise using\n  [promise chaining](http://www.html5rocks.com/en/tutorials/es6/promises/#toc-promises-queues)).\n  It also notifies via the return value of the `notifyCallback` method. The promise cannot be\n  resolved or rejected from the notifyCallback method.\n\n- `catch(errorCallback)` – shorthand for `promise.then(null, errorCallback)`\n\n- `finally(callback, notifyCallback)` – allows you to observe either the fulfillment or rejection of a promise,\n  but to do so without modifying the final value. This is useful to release resources or do some\n  clean-up that needs to be done whether the promise was rejected or resolved. See the [full\n  specification](https://github.com/kriskowal/q/wiki/API-Reference#promisefinallycallback) for\n  more information.\n\n# Chaining promises\n\nBecause calling the `then` method of a promise returns a new derived promise, it is easily\npossible to create a chain of promises:\n\n```js\n  promiseB = promiseA.then(function(result) {\n    return result + 1;\n  });\n\n  // promiseB will be resolved immediately after promiseA is resolved and its value\n  // will be the result of promiseA incremented by 1\n```\n\nIt is possible to create chains of any length and since a promise can be resolved with another\npromise (which will defer its resolution further), it is possible to pause/defer resolution of\nthe promises at any point in the chain. This makes it possible to implement powerful APIs like\n$http's response interceptors.\n\n\n# Differences between Kris Kowal's Q and $q\n\n There are two main differences:\n\n- $q is integrated with the {@link ng.$rootScope.Scope} Scope model observation\n  mechanism in angular, which means faster propagation of resolution or rejection into your\n  models and avoiding unnecessary browser repaints, which would result in flickering UI.\n- Q has many more features than $q, but that comes at a cost of bytes. $q is tiny, but contains\n  all the important functionality needed for common async tasks.\n\n # Testing\n\n ```js\n   it('should simulate promise', inject(function($q, $rootScope) {\n     var deferred = $q.defer();\n     var promise = deferred.promise;\n     var resolvedValue;\n\n     promise.then(function(value) { resolvedValue = value; });\n     expect(resolvedValue).toBeUndefined();\n\n     // Simulate resolving of promise\n     deferred.resolve(123);\n     // Note that the 'then' function does not get called synchronously.\n     // This is because we want the promise API to always be async, whether or not\n     // it got called synchronously or asynchronously.\n     expect(resolvedValue).toBeUndefined();\n\n     // Propagate promise resolution to 'then' functions using $apply().\n     $rootScope.$apply();\n     expect(resolvedValue).toEqual(123);\n   }));\n ```",
            "line": " web\\bower_components\\angular\\angular.js:15240"
        },
        {
            "message": "Missing item type\nConstructs a promise manager.",
            "line": " web\\bower_components\\angular\\angular.js:15473"
        },
        {
            "message": "Missing item type\nCreates a `Deferred` object which represents a task which will finish in the future.",
            "line": " web\\bower_components\\angular\\angular.js:15484"
        },
        {
            "message": "Missing item type\nCreates a promise that is resolved as rejected with the specified `reason`. This api should be\nused to forward rejection in a chain of promises. If you are dealing with the last promise in\na promise chain, you don't need to worry about it.\n\nWhen comparing deferreds/promises to the familiar behavior of try/catch/throw, think of\n`reject` as the `throw` keyword in JavaScript. This also means that if you \"catch\" an error via\na promise error callback and you want to forward the error to the promise derived from the\ncurrent promise, you have to \"rethrow\" the error by returning a rejection constructed via\n`reject`.\n\n```js\n  promiseB = promiseA.then(function(result) {\n    // success: do something and resolve promiseB\n    //          with the old or a new result\n    return result;\n  }, function(reason) {\n    // error: handle the error if possible and\n    //        resolve promiseB with newPromiseOrValue,\n    //        otherwise forward the rejection to promiseB\n    if (canHandle(reason)) {\n     // handle the error and recover\n     return newPromiseOrValue;\n    }\n    return $q.reject(reason);\n  });\n```",
            "line": " web\\bower_components\\angular\\angular.js:15651"
        },
        {
            "message": "Missing item type\nWraps an object that might be a value or a (3rd party) then-able promise into a $q promise.\nThis is useful when you are dealing with an object that might or might not be a promise, or if\nthe promise comes from a source that can't be trusted.",
            "line": " web\\bower_components\\angular\\angular.js:15721"
        },
        {
            "message": "Missing item type\nAlias of {@link ng.$q#when when} to maintain naming consistency with ES6.",
            "line": " web\\bower_components\\angular\\angular.js:15745"
        },
        {
            "message": "Missing item type\nCombines multiple promises into a single promise that is resolved when all of the input\npromises are resolved.",
            "line": " web\\bower_components\\angular\\angular.js:15761"
        },
        {
            "message": "Missing item type\nDESIGN NOTES\n\nThe design decisions behind the scope are heavily favored for speed and memory consumption.\n\nThe typical use of scope is to watch the expressions, which most of the time return the same\nvalue as last time so we optimize the operation.\n\nClosures construction is expensive in terms of speed as well as memory:\n  - No closures, instead use prototypical inheritance for API\n  - Internal state needs to be stored on scope directly, which means that private state is\n    exposed as $$____ properties\n\nLoop operations are optimized by using while(count--) { ... }\n  - This means that in order to keep the same order of execution as addition we have to add\n    items to the array at the beginning (unshift) instead of at the end (push)\n\nChild scopes are created and removed often\n  - Using an array would be slow since inserts in the middle are expensive; so we use linked lists\n\nThere are fewer watches than observers. This is why you don't want the observer to be implemented\nin the same way as watch. Watch requires return of the initialization function which is expensive\nto construct.",
            "line": " web\\bower_components\\angular\\angular.js:15864"
        },
        {
            "message": "Missing item type\nProvider for the $rootScope service.",
            "line": " web\\bower_components\\angular\\angular.js:15890"
        },
        {
            "message": "Missing item type\nSets the number of `$digest` iterations the scope should attempt to execute before giving up and\nassuming that the model is unstable.\n\nThe current default is 10 iterations.\n\nIn complex applications it's possible that the dependencies between `$watch`s will result in\nseveral digest iterations. However if an application needs more than the default 10 digest\niterations for its model to stabilize then you should investigate what is causing the model to\ncontinuously change during the digest.\n\nIncreasing the TTL could have performance implications, so you should not change it without\nproper justification.",
            "line": " web\\bower_components\\angular\\angular.js:15898"
        },
        {
            "message": "Missing item type\nEvery application has a single root {@link ng.$rootScope.Scope scope}.\nAll other scopes are descendant scopes of the root scope. Scopes provide separation\nbetween the model and the view, via a mechanism for watching the model for changes.\nThey also provide event emission/broadcast and subscription facility. See the\n{@link guide/scope developer guide on scopes}.",
            "line": " web\\bower_components\\angular\\angular.js:15920"
        },
        {
            "message": "Missing item type\nA root scope can be retrieved using the {@link ng.$rootScope $rootScope} key from the\n{@link auto.$injector $injector}. Child scopes are created using the\n{@link ng.$rootScope.Scope#$new $new()} method. (Most scopes are created automatically when\ncompiled HTML template is executed.) See also the {@link guide/scope Scopes guide} for\nan in-depth introduction and usage examples.\n\n\n# Inheritance\nA scope can inherit from a parent scope, as in this example:\n```js\n        var parent = $rootScope;\n        var child = parent.$new();\n\n        parent.salutation = \"Hello\";\n        expect(child.salutation).toEqual('Hello');\n\n        child.salutation = \"Welcome\";\n        expect(child.salutation).toEqual('Welcome');\n        expect(parent.salutation).toEqual('Hello');\n```\n\nWhen interacting with `Scope` in tests, additional helper methods are available on the\ninstances of `Scope` type. See {@link ngMock.$rootScope.Scope ngMock Scope} for additional\ndetails.",
            "line": " web\\bower_components\\angular\\angular.js:15988"
        },
        {
            "message": "Missing item type\nUnique scope ID (monotonically increasing) useful for debugging.",
            "line": " web\\bower_components\\angular\\angular.js:16041"
        },
        {
            "message": "Missing item type\nReference to the parent scope.",
            "line": " web\\bower_components\\angular\\angular.js:16049"
        },
        {
            "message": "Missing item type\nReference to the root scope.",
            "line": " web\\bower_components\\angular\\angular.js:16057"
        },
        {
            "message": "Missing item type\nCreates a new child {@link ng.$rootScope.Scope scope}.\n\nThe parent scope will propagate the {@link ng.$rootScope.Scope#$digest $digest()} event.\nThe scope can be removed from the scope hierarchy using {@link ng.$rootScope.Scope#$destroy $destroy()}.\n\n{@link ng.$rootScope.Scope#$destroy $destroy()} must be called on a scope when it is\ndesired for the scope and its child scopes to be permanently detached from the parent and\nthus stop participating in model change detection and listener notification by invoking.",
            "line": " web\\bower_components\\angular\\angular.js:16067"
        },
        {
            "message": "Missing item type\nRegisters a `listener` callback to be executed whenever the `watchExpression` changes.\n\n- The `watchExpression` is called on every call to {@link ng.$rootScope.Scope#$digest\n  $digest()} and should return the value that will be watched. (`watchExpression` should not change\n  its value when executed multiple times with the same input because it may be executed multiple\n  times by {@link ng.$rootScope.Scope#$digest $digest()}. That is, `watchExpression` should be\n  [idempotent](http://en.wikipedia.org/wiki/Idempotence).\n- The `listener` is called only when the value from the current `watchExpression` and the\n  previous call to `watchExpression` are not equal (with the exception of the initial run,\n  see below). Inequality is determined according to reference inequality,\n  [strict comparison](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Comparison_Operators)\n   via the `!==` Javascript operator, unless `objectEquality == true`\n  (see next point)\n- When `objectEquality == true`, inequality of the `watchExpression` is determined\n  according to the {@link angular.equals} function. To save the value of the object for\n  later comparison, the {@link angular.copy} function is used. This therefore means that\n  watching complex objects will have adverse memory and performance implications.\n- The watch `listener` may change the model, which may trigger other `listener`s to fire.\n  This is achieved by rerunning the watchers until no changes are detected. The rerun\n  iteration limit is 10 to prevent an infinite loop deadlock.\n\n\nIf you want to be notified whenever {@link ng.$rootScope.Scope#$digest $digest} is called,\nyou can register a `watchExpression` function with no `listener`. (Be prepared for\nmultiple calls to your `watchExpression` because it will execute multiple times in a\nsingle {@link ng.$rootScope.Scope#$digest $digest} cycle if a change is detected.)\n\nAfter a watcher is registered with the scope, the `listener` fn is called asynchronously\n(via {@link ng.$rootScope.Scope#$evalAsync $evalAsync}) to initialize the\nwatcher. In rare cases, this is undesirable because the listener is called when the result\nof `watchExpression` didn't change. To detect this scenario within the `listener` fn, you\ncan compare the `newVal` and `oldVal`. If these two values are identical (`===`) then the\nlistener was called due to initialization.\n\n\n\n# Example\n```js\n          // let's assume that scope was dependency injected as the $rootScope\n          var scope = $rootScope;\n          scope.name = 'misko';\n          scope.counter = 0;\n\n          expect(scope.counter).toEqual(0);\n          scope.$watch('name', function(newValue, oldValue) {\n            scope.counter = scope.counter + 1;\n          });\n          expect(scope.counter).toEqual(0);\n\n          scope.$digest();\n          // the listener is always called during the first $digest loop after it was registered\n          expect(scope.counter).toEqual(1);\n\n          scope.$digest();\n          // but now it will not be called unless the value changes\n          expect(scope.counter).toEqual(1);\n\n          scope.name = 'adam';\n          scope.$digest();\n          expect(scope.counter).toEqual(2);\n\n\n\n          // Using a function as a watchExpression\n          var food;\n          scope.foodCounter = 0;\n          expect(scope.foodCounter).toEqual(0);\n          scope.$watch(\n            // This function returns the value being watched. It is called for each turn of the $digest loop\n            function() { return food; },\n            // This is the change listener, called when the value returned from the above function changes\n            function(newValue, oldValue) {\n              if ( newValue !== oldValue ) {\n                // Only increment the counter if the value changed\n                scope.foodCounter = scope.foodCounter + 1;\n              }\n            }\n          );\n          // No digest has been run so the counter will be zero\n          expect(scope.foodCounter).toEqual(0);\n\n          // Run the digest but since food has not changed count will still be zero\n          scope.$digest();\n          expect(scope.foodCounter).toEqual(0);\n\n          // Update food and run digest.  Now the counter will increment\n          food = 'cheeseburger';\n          scope.$digest();\n          expect(scope.foodCounter).toEqual(1);\n\n```",
            "line": " web\\bower_components\\angular\\angular.js:16131"
        },
        {
            "message": "Missing item type\nA variant of {@link ng.$rootScope.Scope#$watch $watch()} where it watches an array of `watchExpressions`.\nIf any one expression in the collection changes the `listener` is executed.\n\n- The items in the `watchExpressions` array are observed via standard $watch operation and are examined on every\n  call to $digest() to see if any items changes.\n- The `listener` is called whenever any expression in the `watchExpressions` array changes.",
            "line": " web\\bower_components\\angular\\angular.js:16285"
        },
        {
            "message": "Missing item type\nShallow watches the properties of an object and fires whenever any of the properties change\n(for arrays, this implies watching the array items; for object maps, this implies watching\nthe properties). If a change is detected, the `listener` callback is fired.\n\n- The `obj` collection is observed via standard $watch operation and is examined on every\n  call to $digest() to see if any items have been added, removed, or moved.\n- The `listener` is called whenever anything within the `obj` has changed. Examples include\n  adding, removing, and moving items belonging to an object or array.\n\n\n# Example\n```js\n         $scope.names = ['igor', 'matias', 'misko', 'james'];\n         $scope.dataCount = 4;\n\n         $scope.$watchCollection('names', function(newNames, oldNames) {\n           $scope.dataCount = newNames.length;\n         });\n\n         expect($scope.dataCount).toEqual(4);\n         $scope.$digest();\n\n         //still at 4 ... no changes\n         expect($scope.dataCount).toEqual(4);\n\n         $scope.names.pop();\n         $scope.$digest();\n\n         //now there's been a change\n         expect($scope.dataCount).toEqual(3);\n```",
            "line": " web\\bower_components\\angular\\angular.js:16369"
        },
        {
            "message": "Missing item type\nProcesses all of the {@link ng.$rootScope.Scope#$watch watchers} of the current scope and\nits children. Because a {@link ng.$rootScope.Scope#$watch watcher}'s listener can change\nthe model, the `$digest()` keeps calling the {@link ng.$rootScope.Scope#$watch watchers}\nuntil no more listeners are firing. This means that it is possible to get into an infinite\nloop. This function will throw `'Maximum iteration limit exceeded.'` if the number of\niterations exceeds 10.\n\nUsually, you don't call `$digest()` directly in\n{@link ng.directive:ngController controllers} or in\n{@link ng.$compileProvider#directive directives}.\nInstead, you should call {@link ng.$rootScope.Scope#$apply $apply()} (typically from within\na {@link ng.$compileProvider#directive directive}), which will force a `$digest()`.\n\nIf you want to be notified whenever `$digest()` is called,\nyou can register a `watchExpression` function with\n{@link ng.$rootScope.Scope#$watch $watch()} with no `listener`.\n\nIn unit tests, you may need to call `$digest()` to simulate the scope life cycle.\n\n# Example\n```js\n          var scope = ...;\n          scope.name = 'misko';\n          scope.counter = 0;\n\n          expect(scope.counter).toEqual(0);\n          scope.$watch('name', function(newValue, oldValue) {\n            scope.counter = scope.counter + 1;\n          });\n          expect(scope.counter).toEqual(0);\n\n          scope.$digest();\n          // the listener is always called during the first $digest loop after it was registered\n          expect(scope.counter).toEqual(1);\n\n          scope.$digest();\n          // but now it will not be called unless the value changes\n          expect(scope.counter).toEqual(1);\n\n          scope.name = 'adam';\n          scope.$digest();\n          expect(scope.counter).toEqual(2);\n```",
            "line": " web\\bower_components\\angular\\angular.js:16556"
        },
        {
            "message": "Missing item type\nBroadcasted when a scope and its children are being destroyed.\n\nNote that, in AngularJS, there is also a `$destroy` jQuery event, which can be used to\nclean up DOM bindings before an element is removed from the DOM.",
            "line": " web\\bower_components\\angular\\angular.js:16722"
        },
        {
            "message": "Missing item type\nRemoves the current scope (and all of its children) from the parent scope. Removal implies\nthat calls to {@link ng.$rootScope.Scope#$digest $digest()} will no longer\npropagate to the current scope and its children. Removal also implies that the current\nscope is eligible for garbage collection.\n\nThe `$destroy()` is usually used by directives such as\n{@link ng.directive:ngRepeat ngRepeat} for managing the\nunrolling of the loop.\n\nJust before a scope is destroyed, a `$destroy` event is broadcasted on this scope.\nApplication code can register a `$destroy` event handler that will give it a chance to\nperform any necessary cleanup.\n\nNote that, in AngularJS, there is also a `$destroy` jQuery event, which can be used to\nclean up DOM bindings before an element is removed from the DOM.",
            "line": " web\\bower_components\\angular\\angular.js:16734"
        },
        {
            "message": "Missing item type\nExecutes the `expression` on the current scope and returns the result. Any exceptions in\nthe expression are propagated (uncaught). This is useful when evaluating Angular\nexpressions.\n\n# Example\n```js\n          var scope = ng.$rootScope.Scope();\n          scope.a = 1;\n          scope.b = 2;\n\n          expect(scope.$eval('a+b')).toEqual(3);\n          expect(scope.$eval(function(scope){ return scope.a + scope.b; })).toEqual(3);\n```",
            "line": " web\\bower_components\\angular\\angular.js:16791"
        },
        {
            "message": "Missing item type\nExecutes the expression on the current scope at a later point in time.\n\nThe `$evalAsync` makes no guarantees as to when the `expression` will be executed, only\nthat:\n\n  - it will execute after the function that scheduled the evaluation (preferably before DOM\n    rendering).\n  - at least one {@link ng.$rootScope.Scope#$digest $digest cycle} will be performed after\n    `expression` execution.\n\nAny exceptions from the execution of the expression are forwarded to the\n{@link ng.$exceptionHandler $exceptionHandler} service.\n\n__Note:__ if this function is called outside of a `$digest` cycle, a new `$digest` cycle\nwill be scheduled. However, it is encouraged to always call code that changes the model\nfrom within an `$apply` call. That includes code evaluated via `$evalAsync`.",
            "line": " web\\bower_components\\angular\\angular.js:16823"
        },
        {
            "message": "Missing item type\n`$apply()` is used to execute an expression in angular from outside of the angular\nframework. (For example from browser DOM events, setTimeout, XHR or third party libraries).\nBecause we are calling into the angular framework we need to perform proper scope life\ncycle of {@link ng.$exceptionHandler exception handling},\n{@link ng.$rootScope.Scope#$digest executing watches}.\n\n## Life cycle\n\n# Pseudo-Code of `$apply()`\n```js\n          function $apply(expr) {\n            try {\n              return $eval(expr);\n            } catch (e) {\n              $exceptionHandler(e);\n            } finally {\n              $root.$digest();\n            }\n          }\n```\n\n\nScope's `$apply()` method transitions through the following stages:\n\n1. The {@link guide/expression expression} is executed using the\n   {@link ng.$rootScope.Scope#$eval $eval()} method.\n2. Any exceptions from the execution of the expression are forwarded to the\n   {@link ng.$exceptionHandler $exceptionHandler} service.\n3. The {@link ng.$rootScope.Scope#$watch watch} listeners are fired immediately after the\n   expression was executed using the {@link ng.$rootScope.Scope#$digest $digest()} method.",
            "line": " web\\bower_components\\angular\\angular.js:16871"
        },
        {
            "message": "Missing item type\nSchedule the invocation of $apply to occur at a later time. The actual time difference\nvaries across browsers, but is typically around ~10 milliseconds.\n\nThis can be used to queue up multiple expressions which need to be evaluated in the same\ndigest.",
            "line": " web\\bower_components\\angular\\angular.js:16936"
        },
        {
            "message": "Missing item type\nListens on events of a given type. See {@link ng.$rootScope.Scope#$emit $emit} for\ndiscussion of event life cycle.\n\nThe event listener function format is: `function(event, args...)`. The `event` object\npassed into the listener has the following attributes:\n\n  - `targetScope` - `{Scope}`: the scope on which the event was `$emit`-ed or\n    `$broadcast`-ed.\n  - `currentScope` - `{Scope}`: the scope that is currently handling the event. Once the\n    event propagates through the scope hierarchy, this property is set to null.\n  - `name` - `{string}`: name of the event.\n  - `stopPropagation` - `{function=}`: calling `stopPropagation` function will cancel\n    further event propagation (available only for events that were `$emit`-ed).\n  - `preventDefault` - `{function}`: calling `preventDefault` sets `defaultPrevented` flag\n    to true.\n  - `defaultPrevented` - `{boolean}`: true if `preventDefault` was called.",
            "line": " web\\bower_components\\angular\\angular.js:16964"
        },
        {
            "message": "Missing item type\nDispatches an event `name` upwards through the scope hierarchy notifying the\nregistered {@link ng.$rootScope.Scope#$on} listeners.\n\nThe event life cycle starts at the scope on which `$emit` was called. All\n{@link ng.$rootScope.Scope#$on listeners} listening for `name` event on this scope get\nnotified. Afterwards, the event traverses upwards toward the root scope and calls all\nregistered listeners along the way. The event will stop propagating if one of the listeners\ncancels it.\n\nAny exception emitted from the {@link ng.$rootScope.Scope#$on listeners} will be passed\nonto the {@link ng.$exceptionHandler $exceptionHandler} service.",
            "line": " web\\bower_components\\angular\\angular.js:17017"
        },
        {
            "message": "Missing item type\nDispatches an event `name` downwards to all child scopes (and their children) notifying the\nregistered {@link ng.$rootScope.Scope#$on} listeners.\n\nThe event life cycle starts at the scope on which `$broadcast` was called. All\n{@link ng.$rootScope.Scope#$on listeners} listening for `name` event on this scope get\nnotified. Afterwards, the event propagates to all direct and indirect scopes of the current\nscope and calls all registered listeners along the way. The event cannot be canceled.\n\nAny exception emitted from the {@link ng.$rootScope.Scope#$on listeners} will be passed\nonto the {@link ng.$exceptionHandler $exceptionHandler} service.",
            "line": " web\\bower_components\\angular\\angular.js:17090"
        },
        {
            "message": "Missing item type\nfunction used as an initial value for watchers.\nbecause it's unique we can easily tell it apart from other values",
            "line": " web\\bower_components\\angular\\angular.js:17204"
        },
        {
            "message": "Missing item type\nThe root element of Angular application. This is either the element where {@link\nng.directive:ngApp ngApp} was declared or the element passed into\n{@link angular.bootstrap}. The element represents the root element of application. It is also the\nlocation where the application's {@link auto.$injector $injector} service gets\npublished, and can be retrieved using `$rootElement.injector()`.",
            "line": " web\\bower_components\\angular\\angular.js:17231"
        },
        {
            "message": "Missing item type\nPrivate service to sanitize uris for links and images. Used by $compile and $sanitize.",
            "line": " web\\bower_components\\angular\\angular.js:17246"
        },
        {
            "message": "Missing item type\nRetrieves or overrides the default regular expression that is used for whitelisting of safe\nurls during a[href] sanitization.\n\nThe sanitization is a security measure aimed at prevent XSS attacks via html links.\n\nAny url about to be assigned to a[href] via data-binding is first normalized and turned into\nan absolute url. Afterwards, the url is matched against the `aHrefSanitizationWhitelist`\nregular expression. If a match is found, the original url is written into the dom. Otherwise,\nthe absolute url is prefixed with `'unsafe:'` string and only then is it written into the DOM.",
            "line": " web\\bower_components\\angular\\angular.js:17254"
        },
        {
            "message": "Missing item type\nRetrieves or overrides the default regular expression that is used for whitelisting of safe\nurls during img[src] sanitization.\n\nThe sanitization is a security measure aimed at prevent XSS attacks via html links.\n\nAny url about to be assigned to img[src] via data-binding is first normalized and turned into\nan absolute url. Afterwards, the url is matched against the `imgSrcSanitizationWhitelist`\nregular expression. If a match is found, the original url is written into the dom. Otherwise,\nthe absolute url is prefixed with `'unsafe:'` string and only then is it written into the DOM.",
            "line": " web\\bower_components\\angular\\angular.js:17279"
        },
        {
            "message": "Missing item type\n`$sceDelegate` is a service that is used by the `$sce` service to provide {@link ng.$sce Strict\nContextual Escaping (SCE)} services to AngularJS.\n\nTypically, you would configure or override the {@link ng.$sceDelegate $sceDelegate} instead of\nthe `$sce` service to customize the way Strict Contextual Escaping works in AngularJS.  This is\nbecause, while the `$sce` provides numerous shorthand methods, etc., you really only need to\noverride 3 core functions (`trustAs`, `getTrusted` and `valueOf`) to replace the way things\nwork because `$sce` delegates to `$sceDelegate` for these operations.\n\nRefer {@link ng.$sceDelegateProvider $sceDelegateProvider} to configure this service.\n\nThe default instance of `$sceDelegate` should work out of the box with little pain.  While you\ncan override it completely to change the behavior of `$sce`, the common case would\ninvolve configuring the {@link ng.$sceDelegateProvider $sceDelegateProvider} instead by setting\nyour own whitelists and blacklists for trusting URLs used for loading AngularJS resources such as\ntemplates.  Refer {@link ng.$sceDelegateProvider#resourceUrlWhitelist\n$sceDelegateProvider.resourceUrlWhitelist} and {@link\nng.$sceDelegateProvider#resourceUrlBlacklist $sceDelegateProvider.resourceUrlBlacklist}",
            "line": " web\\bower_components\\angular\\angular.js:17380"
        },
        {
            "message": "Missing item type\nThe `$sceDelegateProvider` provider allows developers to configure the {@link ng.$sceDelegate\n$sceDelegate} service.  This allows one to get/set the whitelists and blacklists used to ensure\nthat the URLs used for sourcing Angular templates are safe.  Refer {@link\nng.$sceDelegateProvider#resourceUrlWhitelist $sceDelegateProvider.resourceUrlWhitelist} and\n{@link ng.$sceDelegateProvider#resourceUrlBlacklist $sceDelegateProvider.resourceUrlBlacklist}\n\nFor the general details about this service in Angular, read the main page for {@link ng.$sce\nStrict Contextual Escaping (SCE)}.\n\n**Example**:  Consider the following case. <a name=\"example\"></a>\n\n- your app is hosted at url `http://myapp.example.com/`\n- but some of your templates are hosted on other domains you control such as\n  `http://srv01.assets.example.com/`,  `http://srv02.assets.example.com/`, etc.\n- and you have an open redirect at `http://myapp.example.com/clickThru?...`.\n\nHere is what a secure configuration for this scenario might look like:\n\n```\n angular.module('myApp', []).config(function($sceDelegateProvider) {\n   $sceDelegateProvider.resourceUrlWhitelist([\n     // Allow same origin resource loads.\n     'self',\n     // Allow loading from our assets domain.  Notice the difference between * and **.\n     'http://srv*.assets.example.com/**'\n   ]);\n\n   // The blacklist overrides the whitelist so the open redirect here is blocked.\n   $sceDelegateProvider.resourceUrlBlacklist([\n     'http://myapp.example.com/clickThru**'\n   ]);\n });\n```",
            "line": " web\\bower_components\\angular\\angular.js:17407"
        },
        {
            "message": "Missing item type\nSets/Gets the whitelist of trusted resource URLs.",
            "line": " web\\bower_components\\angular\\angular.js:17454"
        },
        {
            "message": "Missing item type\nSets/Gets the blacklist of trusted resource URLs.",
            "line": " web\\bower_components\\angular\\angular.js:17485"
        },
        {
            "message": "Missing item type\nReturns an object that is trusted by angular for use in specified strict\ncontextual escaping contexts (such as ng-bind-html, ng-include, any src\nattribute interpolation, any dom event binding attribute interpolation\nsuch as for onclick,  etc.) that uses the provided value.\nSee {@link ng.$sce $sce} for enabling strict contextual escaping.",
            "line": " web\\bower_components\\angular\\angular.js:17588"
        },
        {
            "message": "Missing item type\nIf the passed parameter had been returned by a prior call to {@link ng.$sceDelegate#trustAs\n`$sceDelegate.trustAs`}, returns the value that had been passed to {@link\nng.$sceDelegate#trustAs `$sceDelegate.trustAs`}.\n\nIf the passed parameter is not a value that had been returned by {@link\nng.$sceDelegate#trustAs `$sceDelegate.trustAs`}, returns it as-is.",
            "line": " web\\bower_components\\angular\\angular.js:17625"
        },
        {
            "message": "Missing item type\nTakes the result of a {@link ng.$sceDelegate#trustAs `$sceDelegate.trustAs`} call and\nreturns the originally supplied value if the queried context type is a supertype of the\ncreated type.  If this condition isn't satisfied, throws an exception.\n\n<div class=\"alert alert-danger\">\nDisabling auto-escaping is extremely dangerous, it usually creates a Cross Site Scripting\n(XSS) vulnerability in your application.\n</div>",
            "line": " web\\bower_components\\angular\\angular.js:17651"
        },
        {
            "message": "Missing item type\nThe $sceProvider provider allows developers to configure the {@link ng.$sce $sce} service.\n-   enable/disable Strict Contextual Escaping (SCE) in a module\n-   override the default implementation with a custom delegate\n\nRead more about {@link ng.$sce Strict Contextual Escaping (SCE)}.",
            "line": " web\\bower_components\\angular\\angular.js:17703"
        },
        {
            "message": "Missing item type\n`$sce` is a service that provides Strict Contextual Escaping services to AngularJS.\n\n# Strict Contextual Escaping\n\nStrict Contextual Escaping (SCE) is a mode in which AngularJS requires bindings in certain\ncontexts to result in a value that is marked as safe to use for that context.  One example of\nsuch a context is binding arbitrary html controlled by the user via `ng-bind-html`.  We refer\nto these contexts as privileged or SCE contexts.\n\nAs of version 1.2, Angular ships with SCE enabled by default.\n\nNote:  When enabled (the default), IE<11 in quirks mode is not supported.  In this mode, IE<11 allow\none to execute arbitrary javascript by the use of the expression() syntax.  Refer\n<http://blogs.msdn.com/b/ie/archive/2008/10/16/ending-expressions.aspx> to learn more about them.\nYou can ensure your document is in standards mode and not quirks mode by adding `<!doctype html>`\nto the top of your HTML document.\n\nSCE assists in writing code in way that (a) is secure by default and (b) makes auditing for\nsecurity vulnerabilities such as XSS, clickjacking, etc. a lot easier.\n\nHere's an example of a binding in a privileged context:\n\n```\n<input ng-model=\"userHtml\" aria-label=\"User input\">\n<div ng-bind-html=\"userHtml\"></div>\n```\n\nNotice that `ng-bind-html` is bound to `userHtml` controlled by the user.  With SCE\ndisabled, this application allows the user to render arbitrary HTML into the DIV.\nIn a more realistic example, one may be rendering user comments, blog articles, etc. via\nbindings.  (HTML is just one example of a context where rendering user controlled input creates\nsecurity vulnerabilities.)\n\nFor the case of HTML, you might use a library, either on the client side, or on the server side,\nto sanitize unsafe HTML before binding to the value and rendering it in the document.\n\nHow would you ensure that every place that used these types of bindings was bound to a value that\nwas sanitized by your library (or returned as safe for rendering by your server?)  How can you\nensure that you didn't accidentally delete the line that sanitized the value, or renamed some\nproperties/fields and forgot to update the binding to the sanitized value?\n\nTo be secure by default, you want to ensure that any such bindings are disallowed unless you can\ndetermine that something explicitly says it's safe to use a value for binding in that\ncontext.  You can then audit your code (a simple grep would do) to ensure that this is only done\nfor those values that you can easily tell are safe - because they were received from your server,\nsanitized by your library, etc.  You can organize your codebase to help with this - perhaps\nallowing only the files in a specific directory to do this.  Ensuring that the internal API\nexposed by that code doesn't markup arbitrary values as safe then becomes a more manageable task.\n\nIn the case of AngularJS' SCE service, one uses {@link ng.$sce#trustAs $sce.trustAs}\n(and shorthand methods such as {@link ng.$sce#trustAsHtml $sce.trustAsHtml}, etc.) to\nobtain values that will be accepted by SCE / privileged contexts.\n\n\n## How does it work?\n\nIn privileged contexts, directives and code will bind to the result of {@link ng.$sce#getTrusted\n$sce.getTrusted(context, value)} rather than to the value directly.  Directives use {@link\nng.$sce#parseAs $sce.parseAs} rather than `$parse` to watch attribute bindings, which performs the\n{@link ng.$sce#getTrusted $sce.getTrusted} behind the scenes on non-constant literals.\n\nAs an example, {@link ng.directive:ngBindHtml ngBindHtml} uses {@link\nng.$sce#parseAsHtml $sce.parseAsHtml(binding expression)}.  Here's the actual code (slightly\nsimplified):\n\n```\nvar ngBindHtmlDirective = ['$sce', function($sce) {\n  return function(scope, element, attr) {\n    scope.$watch($sce.parseAsHtml(attr.ngBindHtml), function(value) {\n      element.html(value || '');\n    });\n  };\n}];\n```\n\n## Impact on loading templates\n\nThis applies both to the {@link ng.directive:ngInclude `ng-include`} directive as well as\n`templateUrl`'s specified by {@link guide/directive directives}.\n\nBy default, Angular only loads templates from the same domain and protocol as the application\ndocument.  This is done by calling {@link ng.$sce#getTrustedResourceUrl\n$sce.getTrustedResourceUrl} on the template URL.  To load templates from other domains and/or\nprotocols, you may either {@link ng.$sceDelegateProvider#resourceUrlWhitelist whitelist\nthem} or {@link ng.$sce#trustAsResourceUrl wrap it} into a trusted value.\n\n*Please note*:\nThe browser's\n[Same Origin Policy](https://code.google.com/p/browsersec/wiki/Part2#Same-origin_policy_for_XMLHttpRequest)\nand [Cross-Origin Resource Sharing (CORS)](http://www.w3.org/TR/cors/)\npolicy apply in addition to this and may further restrict whether the template is successfully\nloaded.  This means that without the right CORS policy, loading templates from a different domain\nwon't work on all browsers.  Also, loading templates from `file://` URL does not work on some\nbrowsers.\n\n## This feels like too much overhead\n\nIt's important to remember that SCE only applies to interpolation expressions.\n\nIf your expressions are constant literals, they're automatically trusted and you don't need to\ncall `$sce.trustAs` on them (remember to include the `ngSanitize` module) (e.g.\n`<div ng-bind-html=\"'<b>implicitly trusted</b>'\"></div>`) just works.\n\nAdditionally, `a[href]` and `img[src]` automatically sanitize their URLs and do not pass them\nthrough {@link ng.$sce#getTrusted $sce.getTrusted}.  SCE doesn't play a role here.\n\nThe included {@link ng.$sceDelegate $sceDelegate} comes with sane defaults to allow you to load\ntemplates in `ng-include` from your application's domain without having to even know about SCE.\nIt blocks loading templates from other domains or loading templates over http from an https\nserved document.  You can change these by setting your own custom {@link\nng.$sceDelegateProvider#resourceUrlWhitelist whitelists} and {@link\nng.$sceDelegateProvider#resourceUrlBlacklist blacklists} for matching such URLs.\n\nThis significantly reduces the overhead.  It is far easier to pay the small overhead and have an\napplication that's secure and can be audited to verify that with much more ease than bolting\nsecurity onto an application later.\n\n<a name=\"contexts\"></a>\n## What trusted context types are supported?\n\n| Context             | Notes          |\n|---------------------|----------------|\n| `$sce.HTML`         | For HTML that's safe to source into the application.  The {@link ng.directive:ngBindHtml ngBindHtml} directive uses this context for bindings. If an unsafe value is encountered and the {@link ngSanitize $sanitize} module is present this will sanitize the value instead of throwing an error. |\n| `$sce.CSS`          | For CSS that's safe to source into the application.  Currently unused.  Feel free to use it in your own directives. |\n| `$sce.URL`          | For URLs that are safe to follow as links.  Currently unused (`<a href=` and `<img src=` sanitize their urls and don't constitute an SCE context. |\n| `$sce.RESOURCE_URL` | For URLs that are not only safe to follow as links, but whose contents are also safe to include in your application.  Examples include `ng-include`, `src` / `ngSrc` bindings for tags other than `IMG` (e.g. `IFRAME`, `OBJECT`, etc.)  <br><br>Note that `$sce.RESOURCE_URL` makes a stronger statement about the URL than `$sce.URL` does and therefore contexts requiring values trusted for `$sce.RESOURCE_URL` can be used anywhere that values trusted for `$sce.URL` are required. |\n| `$sce.JS`           | For JavaScript that is safe to execute in your application's context.  Currently unused.  Feel free to use it in your own directives. |\n\n## Format of items in {@link ng.$sceDelegateProvider#resourceUrlWhitelist resourceUrlWhitelist}/{@link ng.$sceDelegateProvider#resourceUrlBlacklist Blacklist} <a name=\"resourceUrlPatternItem\"></a>\n\n Each element in these arrays must be one of the following:\n\n - **'self'**\n   - The special **string**, `'self'`, can be used to match against all URLs of the **same\n     domain** as the application document using the **same protocol**.\n - **String** (except the special value `'self'`)\n   - The string is matched against the full *normalized / absolute URL* of the resource\n     being tested (substring matches are not good enough.)\n   - There are exactly **two wildcard sequences** - `*` and `**`.  All other characters\n     match themselves.\n   - `*`: matches zero or more occurrences of any character other than one of the following 6\n     characters: '`:`', '`/`', '`.`', '`?`', '`&`' and '`;`'.  It's a useful wildcard for use\n     in a whitelist.\n   - `**`: matches zero or more occurrences of *any* character.  As such, it's not\n     appropriate for use in a scheme, domain, etc. as it would match too much.  (e.g.\n     http://**.example.com/ would match http://evil.com/?ignore=.example.com/ and that might\n     not have been the intention.)  Its usage at the very end of the path is ok.  (e.g.\n     http://foo.example.com/templates/**).\n - **RegExp** (*see caveat below*)\n   - *Caveat*:  While regular expressions are powerful and offer great flexibility,  their syntax\n     (and all the inevitable escaping) makes them *harder to maintain*.  It's easy to\n     accidentally introduce a bug when one updates a complex expression (imho, all regexes should\n     have good test coverage).  For instance, the use of `.` in the regex is correct only in a\n     small number of cases.  A `.` character in the regex used when matching the scheme or a\n     subdomain could be matched against a `:` or literal `.` that was likely not intended.   It\n     is highly recommended to use the string patterns and only fall back to regular expressions\n     as a last resort.\n   - The regular expression must be an instance of RegExp (i.e. not a string.)  It is\n     matched against the **entire** *normalized / absolute URL* of the resource being tested\n     (even when the RegExp did not have the `^` and `$` codes.)  In addition, any flags\n     present on the RegExp (such as multiline, global, ignoreCase) are ignored.\n   - If you are generating your JavaScript from some other templating engine (not\n     recommended, e.g. in issue [#4006](https://github.com/angular/angular.js/issues/4006)),\n     remember to escape your regular expression (and be aware that you might need more than\n     one level of escaping depending on your templating engine and the way you interpolated\n     the value.)  Do make use of your platform's escaping mechanism as it might be good\n     enough before coding your own.  E.g. Ruby has\n     [Regexp.escape(str)](http://www.ruby-doc.org/core-2.0.0/Regexp.html#method-c-escape)\n     and Python has [re.escape](http://docs.python.org/library/re.html#re.escape).\n     Javascript lacks a similar built in function for escaping.  Take a look at Google\n     Closure library's [goog.string.regExpEscape(s)](\n     http://docs.closure-library.googlecode.com/git/closure_goog_string_string.js.source.html#line962).\n\nRefer {@link ng.$sceDelegateProvider $sceDelegateProvider} for an example.\n\n## Show me an example using SCE.\n\n<example module=\"mySceApp\" deps=\"angular-sanitize.js\">\n<file name=\"index.html\">\n  <div ng-controller=\"AppController as myCtrl\">\n    <i ng-bind-html=\"myCtrl.explicitlyTrustedHtml\" id=\"explicitlyTrustedHtml\"></i><br><br>\n    <b>User comments</b><br>\n    By default, HTML that isn't explicitly trusted (e.g. Alice's comment) is sanitized when\n    $sanitize is available.  If $sanitize isn't available, this results in an error instead of an\n    exploit.\n    <div class=\"well\">\n      <div ng-repeat=\"userComment in myCtrl.userComments\">\n        <b>{{userComment.name}}</b>:\n        <span ng-bind-html=\"userComment.htmlComment\" class=\"htmlComment\"></span>\n        <br>\n      </div>\n    </div>\n  </div>\n</file>\n\n<file name=\"script.js\">\n  angular.module('mySceApp', ['ngSanitize'])\n    .controller('AppController', ['$http', '$templateCache', '$sce',\n      function($http, $templateCache, $sce) {\n        var self = this;\n        $http.get(\"test_data.json\", {cache: $templateCache}).success(function(userComments) {\n          self.userComments = userComments;\n        });\n        self.explicitlyTrustedHtml = $sce.trustAsHtml(\n            '<span onmouseover=\"this.textContent=&quot;Explicitly trusted HTML bypasses ' +\n            'sanitization.&quot;\">Hover over this text.</span>');\n      }]);\n</file>\n\n<file name=\"test_data.json\">\n[\n  { \"name\": \"Alice\",\n    \"htmlComment\":\n        \"<span onmouseover='this.textContent=\\\"PWN3D!\\\"'>Is <i>anyone</i> reading this?</span>\"\n  },\n  { \"name\": \"Bob\",\n    \"htmlComment\": \"<i>Yes!</i>  Am I the only other one?\"\n  }\n]\n</file>\n\n<file name=\"protractor.js\" type=\"protractor\">\n  describe('SCE doc demo', function() {\n    it('should sanitize untrusted values', function() {\n      expect(element.all(by.css('.htmlComment')).first().getInnerHtml())\n          .toBe('<span>Is <i>anyone</i> reading this?</span>');\n    });\n\n    it('should NOT sanitize explicitly trusted values', function() {\n      expect(element(by.id('explicitlyTrustedHtml')).getInnerHtml()).toBe(\n          '<span onmouseover=\"this.textContent=&quot;Explicitly trusted HTML bypasses ' +\n          'sanitization.&quot;\">Hover over this text.</span>');\n    });\n  });\n</file>\n</example>\n\n\n\n## Can I disable SCE completely?\n\nYes, you can.  However, this is strongly discouraged.  SCE gives you a lot of security benefits\nfor little coding overhead.  It will be much harder to take an SCE disabled application and\neither secure it on your own or enable SCE at a later stage.  It might make sense to disable SCE\nfor cases where you have a lot of existing code that was written before SCE was introduced and\nyou're migrating them a module at a time.\n\nThat said, here's how you can completely disable SCE:\n\n```\nangular.module('myAppWithSceDisabledmyApp', []).config(function($sceProvider) {\n  // Completely disable SCE.  For demonstration purposes only!\n  // Do not use in new projects.\n  $sceProvider.enabled(false);\n});\n```",
            "line": " web\\bower_components\\angular\\angular.js:17717"
        },
        {
            "message": "Missing item type\nEnables/disables SCE and returns the current value.",
            "line": " web\\bower_components\\angular\\angular.js:17987"
        },
        {
            "message": "Missing item type\nReturns a boolean indicating if SCE is enabled.",
            "line": " web\\bower_components\\angular\\angular.js:18065"
        },
        {
            "message": "Missing item type\nConverts Angular {@link guide/expression expression} into a function.  This is like {@link\nng.$parse $parse} and is identical when the expression is a literal constant.  Otherwise, it\nwraps the expression in a call to {@link ng.$sce#getTrusted $sce.getTrusted(*type*,\n*result*)}",
            "line": " web\\bower_components\\angular\\angular.js:18088"
        },
        {
            "message": "Missing item type\nDelegates to {@link ng.$sceDelegate#trustAs `$sceDelegate.trustAs`}.  As such,\nreturns an object that is trusted by angular for use in specified strict contextual\nescaping contexts (such as ng-bind-html, ng-include, any src attribute\ninterpolation, any dom event binding attribute interpolation such as for onclick,  etc.)\nthat uses the provided value.  See * {@link ng.$sce $sce} for enabling strict contextual\nescaping.",
            "line": " web\\bower_components\\angular\\angular.js:18118"
        },
        {
            "message": "Missing item type\nShorthand method.  `$sce.trustAsHtml(value)` →\n    {@link ng.$sceDelegate#trustAs `$sceDelegate.trustAs($sce.HTML, value)`}",
            "line": " web\\bower_components\\angular\\angular.js:18137"
        },
        {
            "message": "Missing item type\nShorthand method.  `$sce.trustAsUrl(value)` →\n    {@link ng.$sceDelegate#trustAs `$sceDelegate.trustAs($sce.URL, value)`}",
            "line": " web\\bower_components\\angular\\angular.js:18152"
        },
        {
            "message": "Missing item type\nShorthand method.  `$sce.trustAsResourceUrl(value)` →\n    {@link ng.$sceDelegate#trustAs `$sceDelegate.trustAs($sce.RESOURCE_URL, value)`}",
            "line": " web\\bower_components\\angular\\angular.js:18167"
        },
        {
            "message": "Missing item type\nShorthand method.  `$sce.trustAsJs(value)` →\n    {@link ng.$sceDelegate#trustAs `$sceDelegate.trustAs($sce.JS, value)`}",
            "line": " web\\bower_components\\angular\\angular.js:18182"
        },
        {
            "message": "Missing item type\nDelegates to {@link ng.$sceDelegate#getTrusted `$sceDelegate.getTrusted`}.  As such,\ntakes the result of a {@link ng.$sce#trustAs `$sce.trustAs`}() call and returns the\noriginally supplied value if the queried context type is a supertype of the created type.\nIf this condition isn't satisfied, throws an exception.",
            "line": " web\\bower_components\\angular\\angular.js:18197"
        },
        {
            "message": "Missing item type\nShorthand method.  `$sce.getTrustedHtml(value)` →\n    {@link ng.$sceDelegate#getTrusted `$sceDelegate.getTrusted($sce.HTML, value)`}",
            "line": " web\\bower_components\\angular\\angular.js:18215"
        },
        {
            "message": "Missing item type\nShorthand method.  `$sce.getTrustedCss(value)` →\n    {@link ng.$sceDelegate#getTrusted `$sceDelegate.getTrusted($sce.CSS, value)`}",
            "line": " web\\bower_components\\angular\\angular.js:18227"
        },
        {
            "message": "Missing item type\nShorthand method.  `$sce.getTrustedUrl(value)` →\n    {@link ng.$sceDelegate#getTrusted `$sceDelegate.getTrusted($sce.URL, value)`}",
            "line": " web\\bower_components\\angular\\angular.js:18239"
        },
        {
            "message": "Missing item type\nShorthand method.  `$sce.getTrustedResourceUrl(value)` →\n    {@link ng.$sceDelegate#getTrusted `$sceDelegate.getTrusted($sce.RESOURCE_URL, value)`}",
            "line": " web\\bower_components\\angular\\angular.js:18251"
        },
        {
            "message": "Missing item type\nShorthand method.  `$sce.getTrustedJs(value)` →\n    {@link ng.$sceDelegate#getTrusted `$sceDelegate.getTrusted($sce.JS, value)`}",
            "line": " web\\bower_components\\angular\\angular.js:18263"
        },
        {
            "message": "Missing item type\nShorthand method.  `$sce.parseAsHtml(expression string)` →\n    {@link ng.$sce#parseAs `$sce.parseAs($sce.HTML, value)`}",
            "line": " web\\bower_components\\angular\\angular.js:18275"
        },
        {
            "message": "Missing item type\nShorthand method.  `$sce.parseAsCss(value)` →\n    {@link ng.$sce#parseAs `$sce.parseAs($sce.CSS, value)`}",
            "line": " web\\bower_components\\angular\\angular.js:18292"
        },
        {
            "message": "Missing item type\nShorthand method.  `$sce.parseAsUrl(value)` →\n    {@link ng.$sce#parseAs `$sce.parseAs($sce.URL, value)`}",
            "line": " web\\bower_components\\angular\\angular.js:18309"
        },
        {
            "message": "Missing item type\nShorthand method.  `$sce.parseAsResourceUrl(value)` →\n    {@link ng.$sce#parseAs `$sce.parseAs($sce.RESOURCE_URL, value)`}",
            "line": " web\\bower_components\\angular\\angular.js:18326"
        },
        {
            "message": "Missing item type\nShorthand method.  `$sce.parseAsJs(value)` →\n    {@link ng.$sce#parseAs `$sce.parseAs($sce.JS, value)`}",
            "line": " web\\bower_components\\angular\\angular.js:18343"
        },
        {
            "message": "Missing item type\nUsed to configure the options passed to the {@link $http} service when making a template request.\n\nFor example, it can be used for specifying the \"Accept\" header that is sent to the server, when\nrequesting a template.",
            "line": " web\\bower_components\\angular\\angular.js:18471"
        },
        {
            "message": "Missing item type\nThe options to be passed to the {@link $http} service when making the request.\nYou can use this to override options such as the \"Accept\" header for template requests.\n\nThe {@link $templateRequest} will set the `cache` and the `transformResponse` properties of the\noptions if not overridden here.",
            "line": " web\\bower_components\\angular\\angular.js:18484"
        },
        {
            "message": "Missing item type\nThe private $$testability service provides a collection of methods for use when debugging\nor by automated test and debugging tools.",
            "line": " web\\bower_components\\angular\\angular.js:18582"
        },
        {
            "message": "Missing item type\nReturns an array of elements that are bound (via ng-bind or {{}})\nto expressions matching the input.",
            "line": " web\\bower_components\\angular\\angular.js:18591"
        },
        {
            "message": "Missing item type\nReturns an array of elements that are two-way found via ng-model to\nexpressions matching the input.",
            "line": " web\\bower_components\\angular\\angular.js:18626"
        },
        {
            "message": "Missing item type\nShortcut for getting the location in a browser agnostic way. Returns\n    the path, search, and hash. (e.g. /path?a=b#hash)",
            "line": " web\\bower_components\\angular\\angular.js:18650"
        },
        {
            "message": "Missing item type\nShortcut for navigating to a location without doing a full page reload.",
            "line": " web\\bower_components\\angular\\angular.js:18661"
        },
        {
            "message": "Missing item type\nCalls the callback when $timeout and $http requests are completed.",
            "line": " web\\bower_components\\angular\\angular.js:18677"
        },
        {
            "message": "Missing item type\nAngular's wrapper for `window.setTimeout`. The `fn` function is wrapped into a try/catch\nblock and delegates any exceptions to\n{@link ng.$exceptionHandler $exceptionHandler} service.\n\nThe return value of calling `$timeout` is a promise, which will be resolved when\nthe delay has passed and the timeout function, if provided, is executed.\n\nTo cancel a timeout request, call `$timeout.cancel(promise)`.\n\nIn tests you can use {@link ngMock.$timeout `$timeout.flush()`} to\nsynchronously flush the queue of deferred functions.\n\nIf you only want a promise that will be resolved after some specified delay\nthen you can call `$timeout` without the `fn` function.",
            "line": " web\\bower_components\\angular\\angular.js:18700"
        },
        {
            "message": "Missing item type\nCancels a task associated with the `promise`. As a result of this, the promise will be\nresolved with a rejection.",
            "line": " web\\bower_components\\angular\\angular.js:18763"
        },
        {
            "message": "Missing item type\nNormalizes and parses a URL.",
            "line": " web\\bower_components\\angular\\angular.js:18799"
        },
        {
            "message": "Missing item type\nParse a request URL and determine whether this is a same-origin request as the application document.",
            "line": " web\\bower_components\\angular\\angular.js:18871"
        },
        {
            "message": "Missing item type\nA reference to the browser's `window` object. While `window`\nis globally available in JavaScript, it causes testability problems, because\nit is a global variable. In angular we always refer to it through the\n`$window` service, so it may be overridden, removed or mocked for testing.\n\nExpressions, like the one defined for the `ngClick` directive in the example\nbelow, are evaluated with respect to the current scope.  Therefore, there is\nno risk of inadvertently coding in a dependency on a global value in such an\nexpression.",
            "line": " web\\bower_components\\angular\\angular.js:18884"
        },
        {
            "message": "Missing item type\nThis is a private service for reading cookies used by $http and ngCookies",
            "line": " web\\bower_components\\angular\\angular.js:18929"
        },
        {
            "message": "Missing item type\nFilters are just functions which transform input to an output. However filters need to be\nDependency Injected. To achieve this a filter definition consists of a factory function which is\nannotated with dependencies and is responsible for creating a filter function.\n\n<div class=\"alert alert-warning\">\n**Note:** Filter names must be valid angular {@link expression} identifiers, such as `uppercase` or `orderBy`.\nNames with special characters, such as hyphens and dots, are not allowed. If you wish to namespace\nyour filters, then you can use capitalization (`myappSubsectionFilterx`) or underscores\n(`myapp_subsection_filterx`).\n</div>\n\n```js\n  // Filter registration\n  function MyModule($provide, $filterProvider) {\n    // create a service to demonstrate injection (not always needed)\n    $provide.value('greet', function(name){\n      return 'Hello ' + name + '!';\n    });\n\n    // register a filter factory which uses the\n    // greet service to demonstrate DI.\n    $filterProvider.register('greet', function(greet){\n      // return the filter function which uses the greet service\n      // to generate salutation\n      return function(text) {\n        // filters need to be forgiving so check input validity\n        return text && greet(text) || text;\n      };\n    });\n  }\n```\n\nThe filter function is registered with the `$injector` under the filter name suffix with\n`Filter`.\n\n```js\n  it('should be the same instance', inject(\n    function($filterProvider) {\n      $filterProvider.register('reverse', function(){\n        return ...;\n      });\n    },\n    function($filter, reverseFilter) {\n      expect($filter('reverse')).toBe(reverseFilter);\n    });\n```\n\n\nFor more information about how angular filters work, and how to create your own filters, see\n{@link guide/filter Filters} in the Angular Developer Guide.",
            "line": " web\\bower_components\\angular\\angular.js:18995"
        },
        {
            "message": "Missing item type\nFilters are used for formatting data displayed to the user.\n\nThe general syntax in templates is as follows:\n\n        {{ expression [| filter_name[:parameter_value] ... ] }}",
            "line": " web\\bower_components\\angular\\angular.js:19052"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular\\angular.js:19087"
        },
        {
            "message": "Missing item type\nSelects a subset of items from `array` and returns it as a new array.",
            "line": " web\\bower_components\\angular\\angular.js:19147"
        },
        {
            "message": "Missing item type\nFormats a number as a currency (ie $1,234.56). When no currency symbol is provided, default\nsymbol for current locale is used.",
            "line": " web\\bower_components\\angular\\angular.js:19406"
        },
        {
            "message": "Missing item type\nFormats a number as text.\n\nIf the input is null or undefined, it will just be returned.\nIf the input is infinite (Infinity/-Infinity) the Infinity symbol '∞' is returned.\nIf the input is not a number an empty string is returned.",
            "line": " web\\bower_components\\angular\\angular.js:19478"
        },
        {
            "message": "Missing item type\nParse a number (as a string) into three components that can be used\nfor formatting the number.\n\n(Significant bits of this parse algorithm came from https://github.com/MikeMcl/big.js/)",
            "line": " web\\bower_components\\angular\\angular.js:19543"
        },
        {
            "message": "Missing item type\nRound the parsed number to the specified number of decimal places\nThis function changed the parsedNumber in-place",
            "line": " web\\bower_components\\angular\\angular.js:19607"
        },
        {
            "message": "Missing item type\nFormat a number into a string",
            "line": " web\\bower_components\\angular\\angular.js:19649"
        },
        {
            "message": "Missing item type\nFormats `date` to a string based on the requested `format`.\n\n  `format` string can be composed of the following elements:\n\n  * `'yyyy'`: 4 digit representation of year (e.g. AD 1 => 0001, AD 2010 => 2010)\n  * `'yy'`: 2 digit representation of year, padded (00-99). (e.g. AD 2001 => 01, AD 2010 => 10)\n  * `'y'`: 1 digit representation of year, e.g. (AD 1 => 1, AD 199 => 199)\n  * `'MMMM'`: Month in year (January-December)\n  * `'MMM'`: Month in year (Jan-Dec)\n  * `'MM'`: Month in year, padded (01-12)\n  * `'M'`: Month in year (1-12)\n  * `'dd'`: Day in month, padded (01-31)\n  * `'d'`: Day in month (1-31)\n  * `'EEEE'`: Day in Week,(Sunday-Saturday)\n  * `'EEE'`: Day in Week, (Sun-Sat)\n  * `'HH'`: Hour in day, padded (00-23)\n  * `'H'`: Hour in day (0-23)\n  * `'hh'`: Hour in AM/PM, padded (01-12)\n  * `'h'`: Hour in AM/PM, (1-12)\n  * `'mm'`: Minute in hour, padded (00-59)\n  * `'m'`: Minute in hour (0-59)\n  * `'ss'`: Second in minute, padded (00-59)\n  * `'s'`: Second in minute (0-59)\n  * `'sss'`: Millisecond in second, padded (000-999)\n  * `'a'`: AM/PM marker\n  * `'Z'`: 4 digit (+sign) representation of the timezone offset (-1200-+1200)\n  * `'ww'`: Week of year, padded (00-53). Week 01 is the week with the first Thursday of the year\n  * `'w'`: Week of year (0-53). Week 1 is the week with the first Thursday of the year\n  * `'G'`, `'GG'`, `'GGG'`: The abbreviated form of the era string (e.g. 'AD')\n  * `'GGGG'`: The long form of the era string (e.g. 'Anno Domini')\n\n  `format` string can also be one of the following predefined\n  {@link guide/i18n localizable formats}:\n\n  * `'medium'`: equivalent to `'MMM d, y h:mm:ss a'` for en_US locale\n    (e.g. Sep 3, 2010 12:05:08 PM)\n  * `'short'`: equivalent to `'M/d/yy h:mm a'` for en_US  locale (e.g. 9/3/10 12:05 PM)\n  * `'fullDate'`: equivalent to `'EEEE, MMMM d, y'` for en_US  locale\n    (e.g. Friday, September 3, 2010)\n  * `'longDate'`: equivalent to `'MMMM d, y'` for en_US  locale (e.g. September 3, 2010)\n  * `'mediumDate'`: equivalent to `'MMM d, y'` for en_US  locale (e.g. Sep 3, 2010)\n  * `'shortDate'`: equivalent to `'M/d/yy'` for en_US locale (e.g. 9/3/10)\n  * `'mediumTime'`: equivalent to `'h:mm:ss a'` for en_US locale (e.g. 12:05:08 PM)\n  * `'shortTime'`: equivalent to `'h:mm a'` for en_US locale (e.g. 12:05 PM)\n\n  `format` string can contain literal values. These need to be escaped by surrounding with single quotes (e.g.\n  `\"h 'in the morning'\"`). In order to output a single quote, escape it - i.e., two single quotes in a sequence\n  (e.g. `\"h 'o''clock'\"`).",
            "line": " web\\bower_components\\angular\\angular.js:19853"
        },
        {
            "message": "Missing item type\nAllows you to convert a JavaScript object into JSON string.\n\n  This filter is mostly useful for debugging. When using the double curly {{value}} notation\n  the binding is automatically converted to JSON.",
            "line": " web\\bower_components\\angular\\angular.js:20023"
        },
        {
            "message": "Missing item type\nConverts string to lowercase.",
            "line": " web\\bower_components\\angular\\angular.js:20064"
        },
        {
            "message": "Missing item type\nConverts string to uppercase.",
            "line": " web\\bower_components\\angular\\angular.js:20075"
        },
        {
            "message": "Missing item type\nCreates a new array or string containing only a specified number of elements. The elements\nare taken from either the beginning or the end of the source array, string or number, as specified by\nthe value and sign (positive or negative) of `limit`. If a number is used as input, it is\nconverted to a string.",
            "line": " web\\bower_components\\angular\\angular.js:20085"
        },
        {
            "message": "Missing item type\nOrders a specified `array` by the `expression` predicate. It is ordered alphabetically\nfor strings and numerically for numbers. Note: if you notice numbers are not being sorted\nas expected, make sure they are actually being saved as numbers and not strings.\nArray-like values (e.g. NodeLists, jQuery objects, TypedArrays, Strings, etc) are also supported.",
            "line": " web\\bower_components\\angular\\angular.js:20210"
        },
        {
            "message": "Missing item type\nModifies the default behavior of the html A tag so that the default action is prevented when\nthe href attribute is empty.\n\nThis change permits the easy creation of action links with the `ngClick` directive\nwithout changing the location or causing page reloads, e.g.:\n`<a href=\"\" ng-click=\"list.addItem()\">Add Item</a>`",
            "line": " web\\bower_components\\angular\\angular.js:20536"
        },
        {
            "message": "Missing item type\nRollback all form controls pending updates to the `$modelValue`.\n\nUpdates may be pending by a debounced event or because the input is waiting for a some future\nevent defined in `ng-model-options`. This method is typically needed by the reset button of\na form that uses `ng-model-options` to pend updates.",
            "line": " web\\bower_components\\angular\\angular.js:21071"
        },
        {
            "message": "Missing item type\nCommit all form controls pending updates to the `$modelValue`.\n\nUpdates may be pending by a debounced event or because the input is waiting for a some future\nevent defined in `ng-model-options`. This method is rarely needed as `NgModelController`\nusually handles calling this in response to input events.",
            "line": " web\\bower_components\\angular\\angular.js:21088"
        },
        {
            "message": "Missing item type\nRegister a control with the form. Input elements using ngModelController do this automatically\nwhen they are linked.\n\nNote that the current state of the control will not be reflected on the new parent form. This\nis not an issue with normal use, as freshly compiled and linked controls are in a `$pristine`\nstate.\n\nHowever, if the method is used programmatically, for example by adding dynamically created controls,\nor controls that have been previously removed without destroying their corresponding DOM element,\nit's the developers responsibility to make sure the current state propagates to the parent form.\n\nFor example, if an input control is added that is already `$dirty` and has `$error` properties,\ncalling `$setDirty()` and `$validate()` afterwards will propagate the state to the parent form.",
            "line": " web\\bower_components\\angular\\angular.js:21105"
        },
        {
            "message": "Missing item type\nDeregister a control from the form.\n\nInput elements using ngModelController do this automatically when they are destroyed.\n\nNote that only the removed control's validation state (`$errors`etc.) will be removed from the\nform. `$dirty`, `$submitted` states will not be changed, because the expected behavior can be\ndifferent from case to case. For example, removing the only `$dirty` control from a form may or\nmay not mean that the form is still `$dirty`.",
            "line": " web\\bower_components\\angular\\angular.js:21150"
        },
        {
            "message": "Missing item type\nSets the validity of a form control.\n\nThis method will also propagate to parent forms.",
            "line": " web\\bower_components\\angular\\angular.js:21185"
        },
        {
            "message": "Missing item type\nSets the form to a dirty state.\n\nThis method can be called to add the 'ng-dirty' class and set the form to a dirty\nstate (ng-dirty class). This method will also propagate to parent forms.",
            "line": " web\\bower_components\\angular\\angular.js:21221"
        },
        {
            "message": "Missing item type\nSets the form to its pristine state.\n\nThis method can be called to remove the 'ng-dirty' class and set the form to its pristine\nstate (ng-pristine class). This method will also propagate to all the controls contained\nin this form.\n\nSetting a form back to a pristine state is often useful when we want to 'reuse' a form after\nsaving or resetting it.",
            "line": " web\\bower_components\\angular\\angular.js:21239"
        },
        {
            "message": "Missing item type\nSets the form to its untouched state.\n\nThis method can be called to remove the 'ng-touched' class and set the form controls to their\nuntouched state (ng-untouched class).\n\nSetting a form controls back to their untouched state is often useful when setting the form\nback to its pristine state.",
            "line": " web\\bower_components\\angular\\angular.js:21263"
        },
        {
            "message": "Missing item type\nSets the form to its submitted state.",
            "line": " web\\bower_components\\angular\\angular.js:21282"
        },
        {
            "message": "Missing item type\nNestable alias of {@link ng.directive:form `form`} directive. HTML\ndoes not allow nesting of form elements. It is useful to nest forms, for example if the validity of a\nsub-group of controls needs to be determined.\n\nNote: the purpose of `ngForm` is to group controls,\nbut not to be a replacement for the `<form>` tag with all of its capabilities\n(e.g. posting to the server, ...).",
            "line": " web\\bower_components\\angular\\angular.js:21296"
        },
        {
            "message": "Missing item type\nDirective that instantiates\n{@link form.FormController FormController}.\n\nIf the `name` attribute is specified, the form controller is published onto the current scope under\nthis name.\n\n# Alias: {@link ng.directive:ngForm `ngForm`}\n\nIn Angular, forms can be nested. This means that the outer form is valid when all of the child\nforms are valid as well. However, browsers do not allow nesting of `<form>` elements, so\nAngular provides the {@link ng.directive:ngForm `ngForm`} directive, which behaves identically to\n`form` but can be nested. Nested forms can be useful, for example, if the validity of a sub-group\nof controls needs to be determined.\n\n# CSS classes\n - `ng-valid` is set if the form is valid.\n - `ng-invalid` is set if the form is invalid.\n - `ng-pending` is set if the form is pending.\n - `ng-pristine` is set if the form is pristine.\n - `ng-dirty` is set if the form is dirty.\n - `ng-submitted` is set if the form was submitted.\n\nKeep in mind that ngAnimate can detect each of these classes when added and removed.\n\n\n# Submitting a form and preventing the default action\n\nSince the role of forms in client-side Angular applications is different than in classical\nroundtrip apps, it is desirable for the browser not to translate the form submission into a full\npage reload that sends the data to the server. Instead some javascript logic should be triggered\nto handle the form submission in an application-specific way.\n\nFor this reason, Angular prevents the default action (form submission to the server) unless the\n`<form>` element has an `action` attribute specified.\n\nYou can use one of the following two ways to specify what javascript method should be called when\na form is submitted:\n\n- {@link ng.directive:ngSubmit ngSubmit} directive on the form element\n- {@link ng.directive:ngClick ngClick} directive on the first\n button or input field of type submit (input[type=submit])\n\nTo prevent double execution of the handler, use only one of the {@link ng.directive:ngSubmit ngSubmit}\nor {@link ng.directive:ngClick ngClick} directives.\nThis is because of the following form submission rules in the HTML specification:\n\n- If a form has only one input field then hitting enter in this field triggers form submit\n(`ngSubmit`)\n- if a form has 2+ input fields and no buttons or input[type=submit] then hitting enter\ndoesn't trigger submit\n- if a form has one or more input fields and one or more buttons or input[type=submit] then\nhitting enter in any of the input fields will trigger the click handler on the *first* button or\ninput[type=submit] (`ngClick`) *and* a submit handler on the enclosing form (`ngSubmit`)\n\nAny pending `ngModelOptions` changes will take place immediately when an enclosing form is\nsubmitted. Note that `ngClick` events will occur before the model is updated. Use `ngSubmit`\nto have access to the updated model.\n\n## Animation Hooks\n\nAnimations in ngForm are triggered when any of the associated CSS classes are added and removed.\nThese classes are: `.ng-pristine`, `.ng-dirty`, `.ng-invalid` and `.ng-valid` as well as any\nother validations that are performed within the form. Animations in ngForm are similar to how\nthey work in ngClass and animations can be hooked into using CSS transitions, keyframes as well\nas JS animations.\n\nThe following example shows a simple way to utilize CSS transitions to style a form element\nthat has been rendered as invalid after it has been validated:\n\n<pre>\n//be sure to include ngAnimate as a module to hook into more\n//advanced animations\n.my-form {\n  transition:0.5s linear all;\n  background: white;\n}\n.my-form.ng-invalid {\n  background: red;\n  color:white;\n}\n</pre>",
            "line": " web\\bower_components\\angular\\angular.js:21315"
        },
        {
            "message": "Missing item type\nStandard HTML text input with angular data binding, inherited by most of the `input` elements.",
            "line": " web\\bower_components\\angular\\angular.js:21576"
        },
        {
            "message": "Missing item type\nInput with date validation and transformation. In browsers that do not yet support\nthe HTML5 date input, a text element will be used. In that case, text must be entered in a valid ISO-8601\ndate format (yyyy-MM-dd), for example: `2009-01-06`. Since many\nmodern browsers do not yet support this input type, it is important to provide cues to users on the\nexpected input format via a placeholder or label.\n\nThe model must always be a Date object, otherwise Angular will throw an error.\nInvalid `Date` objects (dates whose `getTime()` is `NaN`) will be rendered as an empty string.\n\nThe timezone to be used to read/write the `Date` instance in the model can be defined using\n{@link ng.directive:ngModelOptions ngModelOptions}. By default, this is the timezone of the browser.",
            "line": " web\\bower_components\\angular\\angular.js:21672"
        },
        {
            "message": "Missing item type\nInput with datetime validation and transformation. In browsers that do not yet support\nthe HTML5 date input, a text element will be used. In that case, the text must be entered in a valid ISO-8601\nlocal datetime format (yyyy-MM-ddTHH:mm:ss), for example: `2010-12-28T14:57:00`.\n\nThe model must always be a Date object, otherwise Angular will throw an error.\nInvalid `Date` objects (dates whose `getTime()` is `NaN`) will be rendered as an empty string.\n\nThe timezone to be used to read/write the `Date` instance in the model can be defined using\n{@link ng.directive:ngModelOptions ngModelOptions}. By default, this is the timezone of the browser.",
            "line": " web\\bower_components\\angular\\angular.js:21777"
        },
        {
            "message": "Missing item type\nInput with time validation and transformation. In browsers that do not yet support\nthe HTML5 time input, a text element will be used. In that case, the text must be entered in a valid ISO-8601\nlocal time format (HH:mm:ss), for example: `14:57:00`. Model must be a Date object. This binding will always output a\nDate object to the model of January 1, 1970, or local date `new Date(1970, 0, 1, HH, mm, ss)`.\n\nThe model must always be a Date object, otherwise Angular will throw an error.\nInvalid `Date` objects (dates whose `getTime()` is `NaN`) will be rendered as an empty string.\n\nThe timezone to be used to read/write the `Date` instance in the model can be defined using\n{@link ng.directive:ngModelOptions ngModelOptions}. By default, this is the timezone of the browser.",
            "line": " web\\bower_components\\angular\\angular.js:21880"
        },
        {
            "message": "Missing item type\nInput with week-of-the-year validation and transformation to Date. In browsers that do not yet support\nthe HTML5 week input, a text element will be used. In that case, the text must be entered in a valid ISO-8601\nweek format (yyyy-W##), for example: `2013-W02`.\n\nThe model must always be a Date object, otherwise Angular will throw an error.\nInvalid `Date` objects (dates whose `getTime()` is `NaN`) will be rendered as an empty string.\n\nThe timezone to be used to read/write the `Date` instance in the model can be defined using\n{@link ng.directive:ngModelOptions ngModelOptions}. By default, this is the timezone of the browser.",
            "line": " web\\bower_components\\angular\\angular.js:21984"
        },
        {
            "message": "Missing item type\nInput with month validation and transformation. In browsers that do not yet support\nthe HTML5 month input, a text element will be used. In that case, the text must be entered in a valid ISO-8601\nmonth format (yyyy-MM), for example: `2009-01`.\n\nThe model must always be a Date object, otherwise Angular will throw an error.\nInvalid `Date` objects (dates whose `getTime()` is `NaN`) will be rendered as an empty string.\nIf the model is not set to the first of the month, the next view to model update will set it\nto the first of the month.\n\nThe timezone to be used to read/write the `Date` instance in the model can be defined using\n{@link ng.directive:ngModelOptions ngModelOptions}. By default, this is the timezone of the browser.",
            "line": " web\\bower_components\\angular\\angular.js:22087"
        },
        {
            "message": "Missing item type\nText input with number validation and transformation. Sets the `number` validation\nerror if not a valid number.\n\n<div class=\"alert alert-warning\">\nThe model must always be of type `number` otherwise Angular will throw an error.\nBe aware that a string containing a number is not enough. See the {@link ngModel:numfmt}\nerror docs for more information and an example of how to convert your model if necessary.\n</div>\n\n## Issues with HTML5 constraint validation\n\nIn browsers that follow the\n[HTML5 specification](https://html.spec.whatwg.org/multipage/forms.html#number-state-%28type=number%29),\n`input[number]` does not work as expected with {@link ngModelOptions `ngModelOptions.allowInvalid`}.\nIf a non-number is entered in the input, the browser will report the value as an empty string,\nwhich means the view / model values in `ngModel` and subsequently the scope value\nwill also be an empty string.",
            "line": " web\\bower_components\\angular\\angular.js:22193"
        },
        {
            "message": "Missing item type\nText input with URL validation. Sets the `url` validation error key if the content is not a\nvalid URL.\n\n<div class=\"alert alert-warning\">\n**Note:** `input[url]` uses a regex to validate urls that is derived from the regex\nused in Chromium. If you need stricter validation, you can use `ng-pattern` or modify\nthe built-in validators (see the {@link guide/forms Forms guide})\n</div>",
            "line": " web\\bower_components\\angular\\angular.js:22303"
        },
        {
            "message": "Missing item type\nText input with email validation. Sets the `email` validation error key if not a valid email\naddress.\n\n<div class=\"alert alert-warning\">\n**Note:** `input[email]` uses a regex to validate email addresses that is derived from the regex\nused in Chromium. If you need stricter validation (e.g. requiring a top-level domain), you can\nuse `ng-pattern` or modify the built-in validators (see the {@link guide/forms Forms guide})\n</div>",
            "line": " web\\bower_components\\angular\\angular.js:22402"
        },
        {
            "message": "Missing item type\nHTML radio button.",
            "line": " web\\bower_components\\angular\\angular.js:22500"
        },
        {
            "message": "Missing item type\nHTML checkbox.",
            "line": " web\\bower_components\\angular\\angular.js:22566"
        },
        {
            "message": "Missing item type\nHTML textarea element control with angular data-binding. The data-binding and validation\nproperties of this element are exactly the same as those of the\n{@link ng.directive:input input element}.",
            "line": " web\\bower_components\\angular\\angular.js:23042"
        },
        {
            "message": "Missing item type\nHTML input element control. When used together with {@link ngModel `ngModel`}, it provides data-binding,\ninput state control, and validation.\nInput control follows HTML5 input types and polyfills the HTML5 validation behavior for older browsers.\n\n<div class=\"alert alert-warning\">\n**Note:** Not every feature offered is available for all input types.\nSpecifically, data binding and event handling via `ng-model` is unsupported for `input[file]`.\n</div>",
            "line": " web\\bower_components\\angular\\angular.js:23078"
        },
        {
            "message": "Missing item type\nFetches, compiles and includes an external HTML fragment.\n\nBy default, the template URL is restricted to the same domain and protocol as the\napplication document. This is done by calling {@link $sce#getTrustedResourceUrl\n$sce.getTrustedResourceUrl} on it. To load templates from other domains or protocols\nyou may either {@link ng.$sceDelegateProvider#resourceUrlWhitelist whitelist them} or\n{@link $sce#trustAsResourceUrl wrap them} as trusted values. Refer to Angular's {@link\nng.$sce Strict Contextual Escaping}.\n\nIn addition, the browser's\n[Same Origin Policy](https://code.google.com/p/browsersec/wiki/Part2#Same-origin_policy_for_XMLHttpRequest)\nand [Cross-Origin Resource Sharing (CORS)](http://www.w3.org/TR/cors/)\npolicy may further restrict whether the template is successfully loaded.\nFor example, `ngInclude` won't work for cross-domain requests on all browsers and for `file://`\naccess on some browsers.",
            "line": " web\\bower_components\\angular\\angular.js:25093"
        },
        {
            "message": "Missing item type\nEmitted every time the ngInclude content is requested.",
            "line": " web\\bower_components\\angular\\angular.js:25242"
        },
        {
            "message": "Missing item type\nEmitted every time the ngInclude content is reloaded.",
            "line": " web\\bower_components\\angular\\angular.js:25254"
        },
        {
            "message": "Missing item type\nEmitted when a template HTTP request yields an erroneous response (status < 200 || status > 299)",
            "line": " web\\bower_components\\angular\\angular.js:25266"
        },
        {
            "message": "Missing item type\nCalled when the view needs to be updated. It is expected that the user of the ng-model\ndirective will implement this method.\n\nThe `$render()` method is invoked in the following situations:\n\n* `$rollbackViewValue()` is called.  If we are rolling back the view value to the last\n  committed value then `$render()` is called to update the input control.\n* The value referenced by `ng-model` is changed programmatically and both the `$modelValue` and\n  the `$viewValue` are different from last time.\n\nSince `ng-model` does not do a deep watch, `$render()` is only invoked if the values of\n`$modelValue` and `$viewValue` are actually different from their previous value. If `$modelValue`\nor `$viewValue` are objects (rather than a string or number) then `$render()` will not be\ninvoked if you only change a property on the objects.",
            "line": " web\\bower_components\\angular\\angular.js:25869"
        },
        {
            "message": "Missing item type\nThis is called when we need to determine if the value of an input is empty.\n\nFor instance, the required directive does this to work out if the input has data or not.\n\nThe default `$isEmpty` function checks whether the value is `undefined`, `''`, `null` or `NaN`.\n\nYou can override this for input directives whose concept of being empty is different from the\ndefault. The `checkboxInputType` directive does this because in its case a value of `false`\nimplies empty.",
            "line": " web\\bower_components\\angular\\angular.js:25891"
        },
        {
            "message": "Missing item type\nChange the validity state, and notify the form.\n\nThis method can be called within $parsers/$formatters or a custom validation implementation.\nHowever, in most cases it should be sufficient to use the `ngModel.$validators` and\n`ngModel.$asyncValidators` collections which will call `$setValidity` automatically.",
            "line": " web\\bower_components\\angular\\angular.js:25926"
        },
        {
            "message": "Missing item type\nSets the control to its pristine state.\n\nThis method can be called to remove the `ng-dirty` class and set the control to its pristine\nstate (`ng-pristine` class). A model is considered to be pristine when the control\nhas not been changed from when first compiled.",
            "line": " web\\bower_components\\angular\\angular.js:25960"
        },
        {
            "message": "Missing item type\nSets the control to its dirty state.\n\nThis method can be called to remove the `ng-pristine` class and set the control to its dirty\nstate (`ng-dirty` class). A model is considered to be dirty when the control has been changed\nfrom when first compiled.",
            "line": " web\\bower_components\\angular\\angular.js:25978"
        },
        {
            "message": "Missing item type\nSets the control to its untouched state.\n\nThis method can be called to remove the `ng-touched` class and set the control to its\nuntouched state (`ng-untouched` class). Upon compilation, a model is set as untouched\nby default, however this function can be used to restore that state if the model has\nalready been touched by the user.",
            "line": " web\\bower_components\\angular\\angular.js:25997"
        },
        {
            "message": "Missing item type\nSets the control to its touched state.\n\nThis method can be called to remove the `ng-untouched` class and set the control to its\ntouched state (`ng-touched` class). A model is considered to be touched when the user has\nfirst focused the control element and then shifted focus away from the control (blur event).",
            "line": " web\\bower_components\\angular\\angular.js:26015"
        },
        {
            "message": "Missing item type\nCancel an update and reset the input element's value to prevent an update to the `$modelValue`,\nwhich may be caused by a pending debounced event or because the input is waiting for a some\nfuture event.\n\nIf you have an input that uses `ng-model-options` to set up debounced updates or updates that\ndepend on special events such as blur, you can have a situation where there is a period when\nthe `$viewValue` is out of sync with the ngModel's `$modelValue`.\n\nIn this case, you can use `$rollbackViewValue()` to manually cancel the debounced / future update\nand reset the input to the last committed view value.\n\nIt is also possible that you run into difficulties if you try to update the ngModel's `$modelValue`\nprogrammatically before these debounced/future events have resolved/occurred, because Angular's\ndirty checking mechanism is not able to tell whether the model has actually changed or not.\n\nThe `$rollbackViewValue()` method should be called before programmatically changing the model of an\ninput which may have such events pending. This is important in order to make sure that the\ninput field will be updated with the new model value and any pending operations are cancelled.\n\n<example name=\"ng-model-cancel-update\" module=\"cancel-update-example\">\n  <file name=\"app.js\">\n    angular.module('cancel-update-example', [])\n\n    .controller('CancelUpdateController', ['$scope', function($scope) {\n      $scope.model = {};\n\n      $scope.setEmpty = function(e, value, rollback) {\n        if (e.keyCode == 27) {\n          e.preventDefault();\n          if (rollback) {\n            $scope.myForm[value].$rollbackViewValue();\n          }\n          $scope.model[value] = '';\n        }\n      };\n    }]);\n  </file>\n  <file name=\"index.html\">\n    <div ng-controller=\"CancelUpdateController\">\n       <p>Both of these inputs are only updated if they are blurred. Hitting escape should\n       empty them. Follow these steps and observe the difference:</p>\n      <ol>\n        <li>Type something in the input. You will see that the model is not yet updated</li>\n        <li>Press the Escape key.\n          <ol>\n            <li> In the first example, nothing happens, because the model is already '', and no\n            update is detected. If you blur the input, the model will be set to the current view.\n            </li>\n            <li> In the second example, the pending update is cancelled, and the input is set back\n            to the last committed view value (''). Blurring the input does nothing.\n            </li>\n          </ol>\n        </li>\n      </ol>\n\n      <form name=\"myForm\" ng-model-options=\"{ updateOn: 'blur' }\">\n        <div>\n       <p id=\"inputDescription1\">Without $rollbackViewValue():</p>\n        <input name=\"value1\" aria-describedby=\"inputDescription1\" ng-model=\"model.value1\"\n               ng-keydown=\"setEmpty($event, 'value1')\">\n        value1: \"{{ model.value1 }}\"\n        </div>\n\n        <div>\n       <p id=\"inputDescription2\">With $rollbackViewValue():</p>\n        <input name=\"value2\" aria-describedby=\"inputDescription2\" ng-model=\"model.value2\"\n               ng-keydown=\"setEmpty($event, 'value2', true)\">\n        value2: \"{{ model.value2 }}\"\n        </div>\n      </form>\n    </div>\n  </file>\n      <file name=\"style.css\">\n         div {\n           display: table-cell;\n         }\n         div:nth-child(1) {\n           padding-right: 30px;\n         }\n\n       </file>\n</example>",
            "line": " web\\bower_components\\angular\\angular.js:26032"
        },
        {
            "message": "Missing item type\nRuns each of the registered validators (first synchronous validators and then\nasynchronous validators).\nIf the validity changes to invalid, the model will be set to `undefined`,\nunless {@link ngModelOptions `ngModelOptions.allowInvalid`} is `true`.\nIf the validity changes to valid, it will set the model to the last available valid\n`$modelValue`, i.e. either the last parsed value or the last value set from the scope.",
            "line": " web\\bower_components\\angular\\angular.js:26126"
        },
        {
            "message": "Missing item type\nCommit a pending update to the `$modelValue`.\n\nUpdates may be pending by a debounced event or because the input is waiting for a some future\nevent defined in `ng-model-options`. this method is rarely needed as `NgModelController`\nusually handles calling this in response to input events.",
            "line": " web\\bower_components\\angular\\angular.js:26265"
        },
        {
            "message": "Missing item type\nUpdate the view value.\n\nThis method should be called when a control wants to change the view value; typically,\nthis is done from within a DOM event handler. For example, the {@link ng.directive:input input}\ndirective calls it when the value of the input changes and {@link ng.directive:select select}\ncalls it when an option is selected.\n\nWhen `$setViewValue` is called, the new `value` will be staged for committing through the `$parsers`\nand `$validators` pipelines. If there are no special {@link ngModelOptions} specified then the staged\nvalue sent directly for processing, finally to be applied to `$modelValue` and then the\n**expression** specified in the `ng-model` attribute. Lastly, all the registered change listeners,\nin the `$viewChangeListeners` list, are called.\n\nIn case the {@link ng.directive:ngModelOptions ngModelOptions} directive is used with `updateOn`\nand the `default` trigger is not listed, all those actions will remain pending until one of the\n`updateOn` events is triggered on the DOM element.\nAll these actions will be debounced if the {@link ng.directive:ngModelOptions ngModelOptions}\ndirective is used with a custom debounce for this particular event.\nNote that a `$digest` is only triggered once the `updateOn` events are fired, or if `debounce`\nis specified, once the timer runs out.\n\nWhen used with standard inputs, the view value will always be a string (which is in some cases\nparsed into another type, such as a `Date` object for `input[date]`.)\nHowever, custom controls might also pass objects to this method. In this case, we should make\na copy of the object before passing it to `$setViewValue`. This is because `ngModel` does not\nperform a deep watch of objects, it only looks for a change of identity. If you only change\nthe property of the object then ngModel will not realize that the object has changed and\nwill not invoke the `$parsers` and `$validators` pipelines. For this reason, you should\nnot change properties of the copy once it has been passed to `$setViewValue`.\nOtherwise you may cause the model value on the scope to change incorrectly.\n\n<div class=\"alert alert-info\">\nIn any case, the value passed to the method should always reflect the current value\nof the control. For example, if you are calling `$setViewValue` for an input element,\nyou should pass the input DOM value. Otherwise, the control and the scope model become\nout of sync. It's also important to note that `$setViewValue` does not call `$render` or change\nthe control's DOM value in any way. If we want to change the control's DOM value\nprogrammatically, we should update the `ngModel` scope expression. Its new value will be\npicked up by the model controller, which will run it through the `$formatters`, `$render` it\nto update the DOM, and finally call `$validate` on it.\n</div>",
            "line": " web\\bower_components\\angular\\angular.js:26355"
        },
        {
            "message": "Missing item type\nAllows tuning how model updates are done. Using `ngModelOptions` you can specify a custom list of\nevents that will trigger a model update and/or a debouncing delay so that the actual update only\ntakes place when a timer expires; this timer will be reset after another change takes place.\n\nGiven the nature of `ngModelOptions`, the value displayed inside input fields in the view might\nbe different from the value in the actual model. This means that if you update the model you\nshould also invoke {@link ngModel.NgModelController `$rollbackViewValue`} on the relevant input field in\norder to make sure it is synchronized with the model and that any debounced action is canceled.\n\nThe easiest way to reference the control's {@link ngModel.NgModelController `$rollbackViewValue`}\nmethod is by making sure the input is placed inside a form that has a `name` attribute. This is\nimportant because `form` controllers are published to the related scope under the name in their\n`name` attribute.\n\nAny pending changes will take place immediately when an enclosing form is submitted via the\n`submit` event. Note that `ngClick` events will occur before the model is updated. Use `ngSubmit`\nto have access to the updated model.\n\n`ngModelOptions` has an effect on the element it's declared on and its descendants.",
            "line": " web\\bower_components\\angular\\angular.js:26728"
        },
        {
            "message": "Missing item type\nThe `ngOptions` attribute can be used to dynamically generate a list of `<option>`\nelements for the `<select>` element using the array or object obtained by evaluating the\n`ngOptions` comprehension expression.\n\nIn many cases, `ngRepeat` can be used on `<option>` elements instead of `ngOptions` to achieve a\nsimilar result. However, `ngOptions` provides some benefits such as reducing memory and\nincreasing speed by not creating a new scope for each repeated instance, as well as providing\nmore flexibility in how the `<select>`'s model is assigned via the `select` **`as`** part of the\ncomprehension expression. `ngOptions` should be used when the `<select>` model needs to be bound\n to a non-string value. This is because an option element can only be bound to string values at\npresent.\n\nWhen an item in the `<select>` menu is selected, the array element or object property\nrepresented by the selected option will be bound to the model identified by the `ngModel`\ndirective.\n\nOptionally, a single hard-coded `<option>` element, with the value set to an empty string, can\nbe nested into the `<select>` element. This element will then represent the `null` or \"not selected\"\noption. See example below for demonstration.\n\n## Complex Models (objects or collections)\n\nBy default, `ngModel` watches the model by reference, not value. This is important to know when\nbinding the select to a model that is an object or a collection.\n\nOne issue occurs if you want to preselect an option. For example, if you set\nthe model to an object that is equal to an object in your collection, `ngOptions` won't be able to set the selection,\nbecause the objects are not identical. So by default, you should always reference the item in your collection\nfor preselections, e.g.: `$scope.selected = $scope.collection[3]`.\n\nAnother solution is to use a `track by` clause, because then `ngOptions` will track the identity\nof the item not by reference, but by the result of the `track by` expression. For example, if your\ncollection items have an id property, you would `track by item.id`.\n\nA different issue with objects or collections is that ngModel won't detect if an object property or\na collection item changes. For that reason, `ngOptions` additionally watches the model using\n`$watchCollection`, when the expression contains a `track by` clause or the the select has the `multiple` attribute.\nThis allows ngOptions to trigger a re-rendering of the options even if the actual object/collection\nhas not changed identity, but only a property on the object or an item in the collection changes.\n\nNote that `$watchCollection` does a shallow comparison of the properties of the object (or the items in the collection\nif the model is an array). This means that changing a property deeper than the first level inside the\nobject/collection will not trigger a re-rendering.\n\n## `select` **`as`**\n\nUsing `select` **`as`** will bind the result of the `select` expression to the model, but\nthe value of the `<select>` and `<option>` html elements will be either the index (for array data sources)\nor property name (for object data sources) of the value within the collection. If a **`track by`** expression\nis used, the result of that expression will be set as the value of the `option` and `select` elements.\n\n\n### `select` **`as`** and **`track by`**\n\n<div class=\"alert alert-warning\">\nBe careful when using `select` **`as`** and **`track by`** in the same expression.\n</div>\n\nGiven this array of items on the $scope:\n\n```js\n$scope.items = [{\n  id: 1,\n  label: 'aLabel',\n  subItem: { name: 'aSubItem' }\n}, {\n  id: 2,\n  label: 'bLabel',\n  subItem: { name: 'bSubItem' }\n}];\n```\n\nThis will work:\n\n```html\n<select ng-options=\"item as item.label for item in items track by item.id\" ng-model=\"selected\"></select>\n```\n```js\n$scope.selected = $scope.items[0];\n```\n\nbut this will not work:\n\n```html\n<select ng-options=\"item.subItem as item.label for item in items track by item.id\" ng-model=\"selected\"></select>\n```\n```js\n$scope.selected = $scope.items[0].subItem;\n```\n\nIn both examples, the **`track by`** expression is applied successfully to each `item` in the\n`items` array. Because the selected option has been set programmatically in the controller, the\n**`track by`** expression is also applied to the `ngModel` value. In the first example, the\n`ngModel` value is `items[0]` and the **`track by`** expression evaluates to `items[0].id` with\nno issue. In the second example, the `ngModel` value is `items[0].subItem` and the **`track by`**\nexpression evaluates to `items[0].subItem.id` (which is undefined). As a result, the model value\nis not matched against any `<option>` and the `<select>` appears as having no selected value.",
            "line": " web\\bower_components\\angular\\angular.js:27056"
        },
        {
            "message": "Missing item type\n`ngPluralize` is a directive that displays messages according to en-US localization rules.\nThese rules are bundled with angular.js, but can be overridden\n(see {@link guide/i18n Angular i18n} dev guide). You configure ngPluralize directive\nby specifying the mappings between\n[plural categories](http://unicode.org/repos/cldr-tmp/trunk/diff/supplemental/language_plural_rules.html)\nand the strings to be displayed.\n\n# Plural categories and explicit number rules\nThere are two\n[plural categories](http://unicode.org/repos/cldr-tmp/trunk/diff/supplemental/language_plural_rules.html)\nin Angular's default en-US locale: \"one\" and \"other\".\n\nWhile a plural category may match many numbers (for example, in en-US locale, \"other\" can match\nany number that is not 1), an explicit number rule can only match one number. For example, the\nexplicit number rule for \"3\" matches the number 3. There are examples of plural categories\nand explicit number rules throughout the rest of this documentation.\n\n# Configuring ngPluralize\nYou configure ngPluralize by providing 2 attributes: `count` and `when`.\nYou can also provide an optional attribute, `offset`.\n\nThe value of the `count` attribute can be either a string or an {@link guide/expression\nAngular expression}; these are evaluated on the current scope for its bound value.\n\nThe `when` attribute specifies the mappings between plural categories and the actual\nstring to be displayed. The value of the attribute should be a JSON object.\n\nThe following example shows how to configure ngPluralize:\n\n```html\n<ng-pluralize count=\"personCount\"\n                when=\"{'0': 'Nobody is viewing.',\n                     'one': '1 person is viewing.',\n                     'other': '{} people are viewing.'}\">\n</ng-pluralize>\n```\n\nIn the example, `\"0: Nobody is viewing.\"` is an explicit number rule. If you did not\nspecify this rule, 0 would be matched to the \"other\" category and \"0 people are viewing\"\nwould be shown instead of \"Nobody is viewing\". You can specify an explicit number rule for\nother numbers, for example 12, so that instead of showing \"12 people are viewing\", you can\nshow \"a dozen people are viewing\".\n\nYou can use a set of closed braces (`{}`) as a placeholder for the number that you want substituted\ninto pluralized strings. In the previous example, Angular will replace `{}` with\n<span ng-non-bindable>`{{personCount}}`</span>. The closed braces `{}` is a placeholder\nfor <span ng-non-bindable>{{numberExpression}}</span>.\n\nIf no rule is defined for a category, then an empty string is displayed and a warning is generated.\nNote that some locales define more categories than `one` and `other`. For example, fr-fr defines `few` and `many`.\n\n# Configuring ngPluralize with offset\nThe `offset` attribute allows further customization of pluralized text, which can result in\na better user experience. For example, instead of the message \"4 people are viewing this document\",\nyou might display \"John, Kate and 2 others are viewing this document\".\nThe offset attribute allows you to offset a number by any desired value.\nLet's take a look at an example:\n\n```html\n<ng-pluralize count=\"personCount\" offset=2\n              when=\"{'0': 'Nobody is viewing.',\n                     '1': '{{person1}} is viewing.',\n                     '2': '{{person1}} and {{person2}} are viewing.',\n                     'one': '{{person1}}, {{person2}} and one other person are viewing.',\n                     'other': '{{person1}}, {{person2}} and {} other people are viewing.'}\">\n</ng-pluralize>\n```\n\nNotice that we are still using two plural categories(one, other), but we added\nthree explicit number rules 0, 1 and 2.\nWhen one person, perhaps John, views the document, \"John is viewing\" will be shown.\nWhen three people view the document, no explicit number rule is found, so\nan offset of 2 is taken off 3, and Angular uses 1 to decide the plural category.\nIn this case, plural category 'one' is matched and \"John, Mary and one other person are viewing\"\nis shown.\n\nNote that when you specify offsets, you must provide explicit number rules for\nnumbers from 0 up to and including the offset. If you use an offset of 3, for example,\nyou must provide explicit number rules for 0, 1, 2 and 3. You must also provide plural strings for\nplural categories \"one\" and \"other\".",
            "line": " web\\bower_components\\angular\\angular.js:27811"
        },
        {
            "message": "Missing item type\nThe `ngSwitch` directive is used to conditionally swap DOM structure on your template based on a scope expression.\nElements within `ngSwitch` but without `ngSwitchWhen` or `ngSwitchDefault` directives will be preserved at the location\nas specified in the template.\n\nThe directive itself works similar to ngInclude, however, instead of downloading template code (or loading it\nfrom the template cache), `ngSwitch` simply chooses one of the nested elements and makes it visible based on which element\nmatches the value obtained from the evaluated expression. In other words, you define a container element\n(where you place the directive), place an expression on the **`on=\"...\"` attribute**\n(or the **`ng-switch=\"...\"` attribute**), define any inner elements inside of the directive and place\na when attribute per element. The when attribute is used to inform ngSwitch which element to display when the on\nexpression is evaluated. If a matching expression is not found via a when attribute then an element with the default\nattribute is displayed.\n\n<div class=\"alert alert-info\">\nBe aware that the attribute values to match against cannot be expressions. They are interpreted\nas literal string values to match against.\nFor example, **`ng-switch-when=\"someVal\"`** will match against the string `\"someVal\"` not against the\nvalue of the expression `$scope.someVal`.\n</div>",
            "line": " web\\bower_components\\angular\\angular.js:28985"
        },
        {
            "message": "Missing item type\nLoad the content of a `<script>` element into {@link ng.$templateCache `$templateCache`}, so that the\ntemplate can be used by {@link ng.directive:ngInclude `ngInclude`},\n{@link ngRoute.directive:ngView `ngView`}, or {@link guide/directive directives}. The type of the\n`<script>` element must be specified as `text/ng-template`, and a cache name for the template must be\nassigned through the element's `id`, which can then be used as a directive's `templateUrl`.",
            "line": " web\\bower_components\\angular\\angular.js:29379"
        },
        {
            "message": "Missing item type\nThe controller for the `<select>` directive. This provides support for reading\nand writing the selected value(s) of the control and also coordinates dynamically\nadded `<option>` elements, perhaps by an `ngRepeat` directive.",
            "line": " web\\bower_components\\angular\\angular.js:29438"
        },
        {
            "message": "Missing item type\nHTML `SELECT` element with angular data-binding.\n\nThe `select` directive is used together with {@link ngModel `ngModel`} to provide data-binding\nbetween the scope and the `<select>` control (including setting default values).\nIt also handles dynamic `<option>` elements, which can be added using the {@link ngRepeat `ngRepeat}` or\n{@link ngOptions `ngOptions`} directives.\n\nWhen an item in the `<select>` menu is selected, the value of the selected option will be bound\nto the model identified by the `ngModel` directive. With static or repeated options, this is\nthe content of the `value` attribute or the textContent of the `<option>`, if the value attribute is missing.\nIf you want dynamic value attributes, you can use interpolation inside the value attribute.\n\n<div class=\"alert alert-warning\">\nNote that the value of a `select` directive used without `ngOptions` is always a string.\nWhen the model needs to be bound to a non-string value, you must either explicitly convert it\nusing a directive (see example below) or use `ngOptions` to specify the set of options.\nThis is because an option element can only be bound to string values at present.\n</div>\n\nIf the viewValue of `ngModel` does not match any of the options, then the control\nwill automatically add an \"unknown\" option, which it then removes when the mismatch is resolved.\n\nOptionally, a single hard-coded `<option>` element, with the value set to an empty string, can\nbe nested into the `<select>` element. This element will then represent the `null` or \"not selected\"\noption. See example below for demonstration.\n\n<div class=\"alert alert-info\">\nIn many cases, `ngRepeat` can be used on `<option>` elements instead of {@link ng.directive:ngOptions\nngOptions} to achieve a similar result. However, `ngOptions` provides some benefits, such as\nmore flexibility in how the `<select>`'s model is assigned via the `select` **`as`** part of the\ncomprehension expression, and additionally in reducing memory and increasing speed by not creating\na new scope for each repeated instance.\n</div>",
            "line": " web\\bower_components\\angular\\angular.js:29574"
        },
        {
            "message": "Missing item type\nngRequired adds the required {@link ngModel.NgModelController#$validators `validator`} to {@link ngModel `ngModel`}.\nIt is most often used for {@link input `input`} and {@link select `select`} controls, but can also be\napplied to custom controls.\n\nThe directive sets the `required` attribute on the element if the Angular expression inside\n`ngRequired` evaluates to true. A special directive for setting `required` is necessary because we\ncannot use interpolation inside `required`. See the {@link guide/interpolation interpolation guide}\nfor more info.\n\nThe validator will set the `required` error key to true if the `required` attribute is set and\ncalling {@link ngModel.NgModelController#$isEmpty `NgModelController.$isEmpty`} with the\n{@link ngModel.NgModelController#$viewValue `ngModel.$viewValue`} returns `true`. For example, the\n`$isEmpty()` implementation for `input[text]` checks the length of the `$viewValue`. When developing\ncustom controls, `$isEmpty()` can be overwritten to account for a $viewValue that is not string-based.",
            "line": " web\\bower_components\\angular\\angular.js:29915"
        },
        {
            "message": "Missing item type\nngPattern adds the pattern {@link ngModel.NgModelController#$validators `validator`} to {@link ngModel `ngModel`}.\nIt is most often used for text-based {@link input `input`} controls, but can also be applied to custom text-based controls.\n\nThe validator sets the `pattern` error key if the {@link ngModel.NgModelController#$viewValue `ngModel.$viewValue`}\ndoes not match a RegExp which is obtained by evaluating the Angular expression given in the\n`ngPattern` attribute value:\n* If the expression evaluates to a RegExp object, then this is used directly.\n* If the expression evaluates to a string, then it will be converted to a RegExp after wrapping it\nin `^` and `$` characters. For instance, `\"abc\"` will be converted to `new RegExp('^abc$')`.\n\n<div class=\"alert alert-info\">\n**Note:** Avoid using the `g` flag on the RegExp, as it will cause each successive search to\nstart at the index of the last search's match, thus not taking the whole input value into\naccount.\n</div>\n\n<div class=\"alert alert-info\">\n**Note:** This directive is also added when the plain `pattern` attribute is used, with two\ndifferences:\n<ol>\n  <li>\n    `ngPattern` does not set the `pattern` attribute and therefore HTML5 constraint validation is\n    not available.\n  </li>\n  <li>\n    The `ngPattern` attribute must be an expression, while the `pattern` value must be\n    interpolated.\n  </li>\n</ol>\n</div>",
            "line": " web\\bower_components\\angular\\angular.js:29992"
        },
        {
            "message": "Missing item type\nngMaxlength adds the maxlength {@link ngModel.NgModelController#$validators `validator`} to {@link ngModel `ngModel`}.\nIt is most often used for text-based {@link input `input`} controls, but can also be applied to custom text-based controls.\n\nThe validator sets the `maxlength` error key if the {@link ngModel.NgModelController#$viewValue `ngModel.$viewValue`}\nis longer than the integer obtained by evaluating the Angular expression given in the\n`ngMaxlength` attribute value.\n\n<div class=\"alert alert-info\">\n**Note:** This directive is also added when the plain `maxlength` attribute is used, with two\ndifferences:\n<ol>\n  <li>\n    `ngMaxlength` does not set the `maxlength` attribute and therefore HTML5 constraint\n    validation is not available.\n  </li>\n  <li>\n    The `ngMaxlength` attribute must be an expression, while the `maxlength` value must be\n    interpolated.\n  </li>\n</ol>\n</div>",
            "line": " web\\bower_components\\angular\\angular.js:30098"
        },
        {
            "message": "Missing item type\nngMinlength adds the minlength {@link ngModel.NgModelController#$validators `validator`} to {@link ngModel `ngModel`}.\nIt is most often used for text-based {@link input `input`} controls, but can also be applied to custom text-based controls.\n\nThe validator sets the `minlength` error key if the {@link ngModel.NgModelController#$viewValue `ngModel.$viewValue`}\nis shorter than the integer obtained by evaluating the Angular expression given in the\n`ngMinlength` attribute value.\n\n<div class=\"alert alert-info\">\n**Note:** This directive is also added when the plain `minlength` attribute is used, with two\ndifferences:\n<ol>\n  <li>\n    `ngMinlength` does not set the `minlength` attribute and therefore HTML5 constraint\n    validation is not available.\n  </li>\n  <li>\n    The `ngMinlength` value must be an expression, while the `minlength` value must be\n    interpolated.\n  </li>\n</ol>\n</div>",
            "line": " web\\bower_components\\angular\\angular.js:30184"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-animate\\angular-animate.js:1"
        },
        {
            "message": "Missing item type\nThe `$animateCss` service is a useful utility to trigger customized CSS-based transitions/keyframes\nfrom a JavaScript-based animation or directly from a directive. The purpose of `$animateCss` is NOT\nto side-step how `$animate` and ngAnimate work, but the goal is to allow pre-existing animations or\ndirectives to create more complex animations that can be purely driven using CSS code.\n\nNote that only browsers that support CSS transitions and/or keyframe animations are capable of\nrendering animations triggered via `$animateCss` (bad news for IE9 and lower).\n\n## Usage\nOnce again, `$animateCss` is designed to be used inside of a registered JavaScript animation that\nis powered by ngAnimate. It is possible to use `$animateCss` directly inside of a directive, however,\nany automatic control over cancelling animations and/or preventing animations from being run on\nchild elements will not be handled by Angular. For this to work as expected, please use `$animate` to\ntrigger the animation and then setup a JavaScript animation that injects `$animateCss` to trigger\nthe CSS animation.\n\nThe example below shows how we can create a folding animation on an element using `ng-if`:\n\n```html\n<!-- notice the `fold-animation` CSS class -->\n<div ng-if=\"onOff\" class=\"fold-animation\">\n  This element will go BOOM\n</div>\n<button ng-click=\"onOff=true\">Fold In</button>\n```\n\nNow we create the **JavaScript animation** that will trigger the CSS transition:\n\n```js\nngModule.animation('.fold-animation', ['$animateCss', function($animateCss) {\n  return {\n    enter: function(element, doneFn) {\n      var height = element[0].offsetHeight;\n      return $animateCss(element, {\n        from: { height:'0px' },\n        to: { height:height + 'px' },\n        duration: 1 // one second\n      });\n    }\n  }\n}]);\n```\n\n## More Advanced Uses\n\n`$animateCss` is the underlying code that ngAnimate uses to power **CSS-based animations** behind the scenes. Therefore CSS hooks\nlike `.ng-EVENT`, `.ng-EVENT-active`, `.ng-EVENT-stagger` are all features that can be triggered using `$animateCss` via JavaScript code.\n\nThis also means that just about any combination of adding classes, removing classes, setting styles, dynamically setting a keyframe animation,\napplying a hardcoded duration or delay value, changing the animation easing or applying a stagger animation are all options that work with\n`$animateCss`. The service itself is smart enough to figure out the combination of options and examine the element styling properties in order\nto provide a working animation that will run in CSS.\n\nThe example below showcases a more advanced version of the `.fold-animation` from the example above:\n\n```js\nngModule.animation('.fold-animation', ['$animateCss', function($animateCss) {\n  return {\n    enter: function(element, doneFn) {\n      var height = element[0].offsetHeight;\n      return $animateCss(element, {\n        addClass: 'red large-text pulse-twice',\n        easing: 'ease-out',\n        from: { height:'0px' },\n        to: { height:height + 'px' },\n        duration: 1 // one second\n      });\n    }\n  }\n}]);\n```\n\nSince we're adding/removing CSS classes then the CSS transition will also pick those up:\n\n```css\n/&#42; since a hardcoded duration value of 1 was provided in the JavaScript animation code,\nthe CSS classes below will be transitioned despite them being defined as regular CSS classes &#42;/\n.red { background:red; }\n.large-text { font-size:20px; }\n\n/&#42; we can also use a keyframe animation and $animateCss will make it work alongside the transition &#42;/\n.pulse-twice {\n  animation: 0.5s pulse linear 2;\n  -webkit-animation: 0.5s pulse linear 2;\n}",
            "line": " web\\bower_components\\angular-animate\\angular-animate.js:535"
        },
        {
            "message": "Missing item type\nThis fn returns false if any of the following is true:\na) animations on any parent element are disabled, and animations on the element aren't explicitly allowed\nb) a parent element has an ongoing structural animation, and animateChildren is false\nc) the element is not a child of the body\nd) the element is not a child of the $rootElement",
            "line": " web\\bower_components\\angular-animate\\angular-animate.js:2716"
        },
        {
            "message": "Missing item type\nngAnimateSwap is a animation-oriented directive that allows for the container to\nbe removed and entered in whenever the associated expression changes. A\ncommon usecase for this directive is a rotating banner component which\ncontains one image being present at a time. When the active image changes\nthen the old image will perform a `leave` animation and the new element\nwill be inserted via an `enter` animation.",
            "line": " web\\bower_components\\angular-animate\\angular-animate.js:3231"
        },
        {
            "message": "Missing item type\nThe `ngAnimate` module provides support for CSS-based animations (keyframes and transitions) as well as JavaScript-based animations via\ncallback hooks. Animations are not enabled by default, however, by including `ngAnimate` the animation hooks are enabled for an Angular app.\n\n<div doc-module-components=\"ngAnimate\"></div>\n\n# Usage\nSimply put, there are two ways to make use of animations when ngAnimate is used: by using **CSS** and **JavaScript**. The former works purely based\nusing CSS (by using matching CSS selectors/styles) and the latter triggers animations that are registered via `module.animation()`. For\nboth CSS and JS animations the sole requirement is to have a matching `CSS class` that exists both in the registered animation and within\nthe HTML element that the animation will be triggered on.\n\n## Directive Support\nThe following directives are \"animation aware\":\n\n| Directive                                                                                                | Supported Animations                                                     |\n|----------------------------------------------------------------------------------------------------------|--------------------------------------------------------------------------|\n| {@link ng.directive:ngRepeat#animations ngRepeat}                                                        | enter, leave and move                                                    |\n| {@link ngRoute.directive:ngView#animations ngView}                                                       | enter and leave                                                          |\n| {@link ng.directive:ngInclude#animations ngInclude}                                                      | enter and leave                                                          |\n| {@link ng.directive:ngSwitch#animations ngSwitch}                                                        | enter and leave                                                          |\n| {@link ng.directive:ngIf#animations ngIf}                                                                | enter and leave                                                          |\n| {@link ng.directive:ngClass#animations ngClass}                                                          | add and remove (the CSS class(es) present)                               |\n| {@link ng.directive:ngShow#animations ngShow} & {@link ng.directive:ngHide#animations ngHide}            | add and remove (the ng-hide class value)                                 |\n| {@link ng.directive:form#animation-hooks form} & {@link ng.directive:ngModel#animation-hooks ngModel}    | add and remove (dirty, pristine, valid, invalid & all other validations) |\n| {@link module:ngMessages#animations ngMessages}                                                          | add and remove (ng-active & ng-inactive)                                 |\n| {@link module:ngMessages#animations ngMessage}                                                           | enter and leave                                                          |\n\n(More information can be found by visiting each the documentation associated with each directive.)\n\n## CSS-based Animations\n\nCSS-based animations with ngAnimate are unique since they require no JavaScript code at all. By using a CSS class that we reference between our HTML\nand CSS code we can create an animation that will be picked up by Angular when an the underlying directive performs an operation.\n\nThe example below shows how an `enter` animation can be made possible on an element using `ng-if`:\n\n```html\n<div ng-if=\"bool\" class=\"fade\">\n   Fade me in out\n</div>\n<button ng-click=\"bool=true\">Fade In!</button>\n<button ng-click=\"bool=false\">Fade Out!</button>\n```\n\nNotice the CSS class **fade**? We can now create the CSS transition code that references this class:\n\n```css\n/&#42; The starting CSS styles for the enter animation &#42;/\n.fade.ng-enter {\n  transition:0.5s linear all;\n  opacity:0;\n}\n\n/&#42; The finishing CSS styles for the enter animation &#42;/\n.fade.ng-enter.ng-enter-active {\n  opacity:1;\n}\n```\n\nThe key thing to remember here is that, depending on the animation event (which each of the directives above trigger depending on what's going on) two\ngenerated CSS classes will be applied to the element; in the example above we have `.ng-enter` and `.ng-enter-active`. For CSS transitions, the transition\ncode **must** be defined within the starting CSS class (in this case `.ng-enter`). The destination class is what the transition will animate towards.\n\nIf for example we wanted to create animations for `leave` and `move` (ngRepeat triggers move) then we can do so using the same CSS naming conventions:\n\n```css\n/&#42; now the element will fade out before it is removed from the DOM &#42;/\n.fade.ng-leave {\n  transition:0.5s linear all;\n  opacity:1;\n}\n.fade.ng-leave.ng-leave-active {\n  opacity:0;\n}\n```\n\nWe can also make use of **CSS Keyframes** by referencing the keyframe animation within the starting CSS class:\n\n```css\n/&#42; there is no need to define anything inside of the destination\nCSS class since the keyframe will take charge of the animation &#42;/\n.fade.ng-leave {\n  animation: my_fade_animation 0.5s linear;\n  -webkit-animation: my_fade_animation 0.5s linear;\n}",
            "line": " web\\bower_components\\angular-animate\\angular-animate.js:3354"
        },
        {
            "message": "Missing item type\nThe ngAnimate `$animate` service documentation is the same for the core `$animate` service.\n\nClick here {@link ng.$animate to learn more about animations with `$animate`}.",
            "line": " web\\bower_components\\angular-animate\\angular-animate.js:4095"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-aria\\angular-aria.js:1"
        },
        {
            "message": "Missing item type\nThe `ngAria` module provides support for common\n[<abbr title=\"Accessible Rich Internet Applications\">ARIA</abbr>](http://www.w3.org/TR/wai-aria/)\nattributes that convey state or semantic information about the application for users\nof assistive technologies, such as screen readers.\n\n<div doc-module-components=\"ngAria\"></div>\n\n## Usage\n\nFor ngAria to do its magic, simply include the module `ngAria` as a dependency. The following\ndirectives are supported:\n`ngModel`, `ngChecked`, `ngRequired`, `ngValue`, `ngDisabled`, `ngShow`, `ngHide`, `ngClick`,\n`ngDblClick`, and `ngMessages`.\n\nBelow is a more detailed breakdown of the attributes handled by ngAria:\n\n| Directive                                   | Supported Attributes                                                                   |\n|---------------------------------------------|----------------------------------------------------------------------------------------|\n| {@link ng.directive:ngModel ngModel}        | aria-checked, aria-valuemin, aria-valuemax, aria-valuenow, aria-invalid, aria-required, input roles |\n| {@link ng.directive:ngDisabled ngDisabled}  | aria-disabled                                                                          |\n| {@link ng.directive:ngRequired ngRequired}  | aria-required                                                                          |\n| {@link ng.directive:ngChecked ngChecked}    | aria-checked                                                                           |\n| {@link ng.directive:ngValue ngValue}        | aria-checked                                                                           |\n| {@link ng.directive:ngShow ngShow}          | aria-hidden                                                                            |\n| {@link ng.directive:ngHide ngHide}          | aria-hidden                                                                            |\n| {@link ng.directive:ngDblclick ngDblclick}  | tabindex                                                                               |\n| {@link module:ngMessages ngMessages}        | aria-live                                                                              |\n| {@link ng.directive:ngClick ngClick}        | tabindex, keypress event, button role                                                  |\n\nFind out more information about each directive by reading the\n{@link guide/accessibility ngAria Developer Guide}.\n\n##Example\nUsing ngDisabled with ngAria:\n```html\n<md-checkbox ng-disabled=\"disabled\">\n```\nBecomes:\n```html\n<md-checkbox ng-disabled=\"disabled\" aria-disabled=\"true\">\n```\n\n##Disabling Attributes\nIt's possible to disable individual attributes added by ngAria with the\n{@link ngAria.$ariaProvider#config config} method. For more details, see the\n{@link guide/accessibility Developer Guide}.",
            "line": " web\\bower_components\\angular-aria\\angular-aria.js:8"
        },
        {
            "message": "Missing item type\nInternal Utilities",
            "line": " web\\bower_components\\angular-aria\\angular-aria.js:64"
        },
        {
            "message": "Missing item type\nUsed for configuring the ARIA attributes injected and managed by ngAria.\n\n```js\nangular.module('myApp', ['ngAria'], function config($ariaProvider) {\n  $ariaProvider.config({\n    ariaValue: true,\n    tabindex: false\n  });\n});\n```\n\n## Dependencies\nRequires the {@link ngAria} module to be installed.",
            "line": " web\\bower_components\\angular-aria\\angular-aria.js:74"
        },
        {
            "message": "Missing item type\nEnables/disables various ARIA attributes",
            "line": " web\\bower_components\\angular-aria\\angular-aria.js:108"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-aria\\angular-aria.js:145"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js:11"
        },
        {
            "message": "Missing item type\nInitialize the controller, setup watchers, gather elements",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js:83"
        },
        {
            "message": "Missing item type\nCalculates the dropdown's position and applies the new styles to the menu element",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js:98"
        },
        {
            "message": "Missing item type\nCalculates the vertical offset for floating label examples to account for ngMessages",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js:136"
        },
        {
            "message": "Missing item type\nMakes sure that the menu doesn't go off of the screen on either side.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js:154"
        },
        {
            "message": "Missing item type\nMoves the dropdown menu to the body tag in order to avoid z-index and overflow issues.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js:167"
        },
        {
            "message": "Missing item type\nSends focus to the input element.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js:178"
        },
        {
            "message": "Missing item type\nSets up any watchers used by autocomplete",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js:185"
        },
        {
            "message": "Missing item type\nRemoves any events or leftover elements created by this controller",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js:198"
        },
        {
            "message": "Missing item type\nGathers all of the elements needed for this controller",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js:215"
        },
        {
            "message": "Missing item type\nFinds the element that the menu will base its position on",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js:233"
        },
        {
            "message": "Missing item type\nGathers angular-wrapped versions of each element",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js:244"
        },
        {
            "message": "Missing item type\nHandles changes to the `hidden` property.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js:259"
        },
        {
            "message": "Missing item type\nWhen the user mouses over the dropdown menu, ignore blur events.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js:280"
        },
        {
            "message": "Missing item type\nWhen the user's mouse leaves the menu, blur events may hide the menu again.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js:287"
        },
        {
            "message": "Missing item type\nWhen the mouse button is released, send focus back to the input field.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js:296"
        },
        {
            "message": "Missing item type\nHandles changes to the selected item.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js:303"
        },
        {
            "message": "Missing item type\nUse the user-defined expression to announce changes each time a new item is selected",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js:319"
        },
        {
            "message": "Missing item type\nUse the user-defined expression to announce changes each time the search text is changed",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js:326"
        },
        {
            "message": "Missing item type\nCalls any external watchers listening for the selected item.  Used in conjunction with\n`registerSelectedItemWatcher`.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js:333"
        },
        {
            "message": "Missing item type\nRegister a function to be called when the selected item changes.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js:343"
        },
        {
            "message": "Missing item type\nUnregister a function previously registered for selected item changes.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js:353"
        },
        {
            "message": "Missing item type\nHandles changes to the searchText property.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js:364"
        },
        {
            "message": "Missing item type\nHandles input blur event, determines if the dropdown should hide.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js:395"
        },
        {
            "message": "Missing item type\nForce blur on input element",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js:405"
        },
        {
            "message": "Missing item type\nHandles input focus event, determines if the dropdown should show.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js:417"
        },
        {
            "message": "Missing item type\nHandles keyboard input.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js:428"
        },
        {
            "message": "Missing item type\nReturns the minimum length needed to display the dropdown.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js:479"
        },
        {
            "message": "Missing item type\nReturns the display value for an item.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js:487"
        },
        {
            "message": "Missing item type\nGetter function to invoke user-defined expression (in the directive)\nto convert your object to a single string.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js:495"
        },
        {
            "message": "Missing item type\nReturns the locals object for compiling item templates.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js:504"
        },
        {
            "message": "Missing item type\nReturns the default index based on whether or not autoselect is enabled.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js:518"
        },
        {
            "message": "Missing item type\nSets the loading parameter and updates the hidden state.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js:526"
        },
        {
            "message": "Missing item type\nDetermines if the menu should be hidden.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js:539"
        },
        {
            "message": "Missing item type\nDetermines if the menu should be shown.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js:550"
        },
        {
            "message": "Missing item type\nReturns true if the search text has matches.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js:558"
        },
        {
            "message": "Missing item type\nReturns true if the autocomplete has a valid selection.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js:566"
        },
        {
            "message": "Missing item type\nReturns true if the loading indicator is, or should be, visible.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js:574"
        },
        {
            "message": "Missing item type\nReturns the display value of the current item.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js:582"
        },
        {
            "message": "Missing item type\nDetermines if the minimum length is met by the search text.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js:590"
        },
        {
            "message": "Missing item type\nDefines a public property with a handler and a default value.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js:600"
        },
        {
            "message": "Missing item type\nSelects the item at the given index.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js:617"
        },
        {
            "message": "Missing item type\nClears the searchText value and selected item.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js:635"
        },
        {
            "message": "Missing item type\nFetches the results for the provided search text.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js:658"
        },
        {
            "message": "Missing item type\nUpdates the ARIA messages",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js:690"
        },
        {
            "message": "Missing item type\nReturns the ARIA message for how many results match the current query.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js:699"
        },
        {
            "message": "Missing item type\nMakes sure that the focused element is within view.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js:716"
        },
        {
            "message": "Missing item type\nStarts the query to gather the results for the current searchText.  Attempts to return cached\nresults first, then forwards the process to `fetchResults` if necessary.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js:743"
        },
        {
            "message": "Missing item type\nIf there is only one matching item and the search text matches its display value exactly,\nautomatically select that item.  Note: This function is only called if the user uses the\n`md-select-on-match` flag.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js:761"
        },
        {
            "message": "Missing item type\nCreates a watcher for variables that are copied from the parent scope",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js:1091"
        },
        {
            "message": "Missing item type\nCreates watchers on scope and newScope that ensure that for any\n$digest of scope, newScope is also $digested.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\autocomplete\\autocomplete.js:1106"
        },
        {
            "message": "Missing item type\nBottomSheet",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\bottomSheet\\bottomSheet.js:10"
        },
        {
            "message": "Missing item type\nShow a bottom sheet with the specified options.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\bottomSheet\\bottomSheet.js:74"
        },
        {
            "message": "Missing item type\nHide the existing bottom sheet and resolve the promise returned from\n`$mdBottomSheet.show()`. This call will close the most recently opened/current bottomsheet (if any).",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\bottomSheet\\bottomSheet.js:113"
        },
        {
            "message": "Missing item type\nHide the existing bottom sheet and reject the promise returned from\n`$mdBottomSheet.show()`.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\bottomSheet\\bottomSheet.js:125"
        },
        {
            "message": "Missing item type\nBottomSheet class to apply bottom-sheet behavior to an element",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\bottomSheet\\bottomSheet.js:225"
        },
        {
            "message": "Missing item type\nButton",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\button\\button.js:9"
        },
        {
            "message": "Missing item type\nCard components.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\card\\card.js:9"
        },
        {
            "message": "Missing item type\nCheckbox module!",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\checkbox\\checkbox.js:9"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js:10"
        },
        {
            "message": "Missing item type\nMDChip Directive Definition",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js:50"
        },
        {
            "message": "Missing item type\nMdChipRemove Directive Definition.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js:104"
        },
        {
            "message": "Missing item type\nController for the MdChips component. Responsible for adding to and\nremoving from the list of chips, marking chips as selected, and binding to\nthe models of various input components.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js:168"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js:180"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js:183"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js:186"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js:189"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js:192"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js:195"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js:198"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js:201"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js:204"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js:207"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js:210"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js:213"
        },
        {
            "message": "Missing item type\nHidden hint text for how to delete a chip. Used to give context to screen readers.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js:217"
        },
        {
            "message": "Missing item type\nHidden label for the delete button. Used to give context to screen readers.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js:223"
        },
        {
            "message": "Missing item type\nModel used by the input element.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js:229"
        },
        {
            "message": "Missing item type\nWhether to use the onAppend expression to transform the chip buffer\nbefore appending it to the list.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js:235"
        },
        {
            "message": "Missing item type\nWhether to use the transformChip expression to transform the chip buffer\nbefore appending it to the list.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js:245"
        },
        {
            "message": "Missing item type\nWhether to use the onAdd expression to notify of chip additions.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js:252"
        },
        {
            "message": "Missing item type\nWhether to use the onRemove expression to notify of chip removals.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js:258"
        },
        {
            "message": "Missing item type\nWhether to use the onSelect expression to notify the component's user\nafter selecting a chip from the list.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js:264"
        },
        {
            "message": "Missing item type\nHandles the keydown event on the input element: by default <enter> appends\nthe buffer to the chip list, while backspace removes the last chip in the\nlist if the current buffer is empty.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js:273"
        },
        {
            "message": "Missing item type\nHandles the keydown event on the chip elements: backspace removes the selected chip, arrow\nkeys switch which chips is active",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js:309"
        },
        {
            "message": "Missing item type\nGet the input's placeholder - uses `placeholder` when list is empty and `secondary-placeholder`\nwhen the list is non-empty. If `secondary-placeholder` is not provided, `placeholder` is used\nalways.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js:341"
        },
        {
            "message": "Missing item type\nRemoves chip at {@code index} and selects the adjacent chip.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js:353"
        },
        {
            "message": "Missing item type\nSets the selected chip index to -1.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js:365"
        },
        {
            "message": "Missing item type\nGets the index of an adjacent chip to select after deletion. Adjacency is\ndetermined as the next chip in the list, unless the target chip is the\nlast in the list, then it is the chip immediately preceding the target. If\nthere is only one item in the list, -1 is returned (select none).\nThe number returned is the index to select AFTER the target has been\nremoved.\nIf the current chip is not selected, then -1 is returned to select none.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js:372"
        },
        {
            "message": "Missing item type\nAppend the contents of the buffer to the chip list. This method will first\ncall out to the md-transform-chip method, if provided.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js:387"
        },
        {
            "message": "Missing item type\nSets whether to use the md-on-append expression. This expression is\nbound to scope and controller in {@code MdChipsDirective} as\n{@code onAppend}. Due to the nature of directive scope bindings, the\ncontroller cannot know on its own/from the scope whether an expression was\nactually provided.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js:424"
        },
        {
            "message": "Missing item type\nSets whether to use the md-transform-chip expression. This expression is\nbound to scope and controller in {@code MdChipsDirective} as\n{@code transformChip}. Due to the nature of directive scope bindings, the\ncontroller cannot know on its own/from the scope whether an expression was\nactually provided.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js:443"
        },
        {
            "message": "Missing item type\nSets whether to use the md-on-add expression. This expression is\nbound to scope and controller in {@code MdChipsDirective} as\n{@code onAdd}. Due to the nature of directive scope bindings, the\ncontroller cannot know on its own/from the scope whether an expression was\nactually provided.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js:454"
        },
        {
            "message": "Missing item type\nSets whether to use the md-on-remove expression. This expression is\nbound to scope and controller in {@code MdChipsDirective} as\n{@code onRemove}. Due to the nature of directive scope bindings, the\ncontroller cannot know on its own/from the scope whether an expression was\nactually provided.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js:465"
        },
        {
            "message": "Missing item type\nGets the input buffer. The input buffer can be the model bound to the\ndefault input item {@code this.chipBuffer}, the {@code selectedItem}\nmodel of an {@code md-autocomplete}, or, through some magic, the model\nbound to any inpput or text area element found within a\n{@code md-input-container} element.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js:487"
        },
        {
            "message": "Missing item type\nResets the input buffer for either the internal input or user provided input element.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js:501"
        },
        {
            "message": "Missing item type\nRemoves the chip at the given index.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js:517"
        },
        {
            "message": "Missing item type\nSelects the chip at `index`,",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js:533"
        },
        {
            "message": "Missing item type\nMarks the chip at the given index as selected.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js:550"
        },
        {
            "message": "Missing item type\nSelects the chip at `index` and gives it focus.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js:567"
        },
        {
            "message": "Missing item type\nCall `focus()` on the chip at `index`",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js:578"
        },
        {
            "message": "Missing item type\nConfigures the required interactions with the ngModel Controller.\nSpecifically, set {@code this.items} to the {@code NgModelCtrl#$viewVale}.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js:585"
        },
        {
            "message": "Missing item type\nConfigure event bindings on a user-provided input element.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js:615"
        },
        {
            "message": "Missing item type\nMDChips Directive Definition",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js:816"
        },
        {
            "message": "Missing item type\nBuilds the final template for `md-chips` and returns the postLink function.\n\nBuilding the template involves 3 key components:\nstatic chips\nchip template\ninput control\n\nIf no `ng-model` is provided, only the static chip work needs to be done.\n\nIf no user-passed `md-chip-template` exists, the default template is used. This resulting\ntemplate is appended to the chip content element.\n\nThe remove button may be overridden by passing an element with an md-chip-remove attribute.\n\nIf an `input` or `md-autocomplete` element is provided by the caller, it is set aside for\ntransclusion later. The transclusion happens in `postLink` as the parent scope is required.\nIf no user input is provided, a default one is appended to the input container node in the\ntemplate.\n\nStatic Chips (i.e. `md-chip` elements passed from the caller) are gathered and set aside for\ntransclusion in the `postLink` function.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js:854"
        },
        {
            "message": "Missing item type\nConfigures controller and transcludes.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js:907"
        },
        {
            "message": "Missing item type\nController for the MdContactChips component",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js:1002"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js:1007"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js:1010"
        },
        {
            "message": "Missing item type\nMDContactChips Directive Definition",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\chips\\chips.js:1125"
        },
        {
            "message": "Missing item type\nScrollable content",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\content\\content.js:9"
        },
        {
            "message": "Missing item type\nInitialization function that validates environment\nrequirements.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:13"
        },
        {
            "message": "Missing item type\nDetect if the ng-Touch module is also being used.\nWarn if detected.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:29"
        },
        {
            "message": "Missing item type\nUse this to throttle events that come in often.\nThe throttled function will always use the *last* invocation before the\ncoming frame.\n\nFor example, window resize events that fire many times a second:\nIf we set to use an raf-throttled callback on window resize, then\nour callback will only be fired once per frame, with the last resize\nevent that happened before that frame.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:58"
        },
        {
            "message": "Missing item type\nFactory function that creates the grab-bag $mdConstant service.\nngInject",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:200"
        },
        {
            "message": "Missing item type\nAs defined in core/style/variables.scss\n\n$layout-breakpoint-xs:     600px !default;\n$layout-breakpoint-sm:     960px !default;\n$layout-breakpoint-md:     1280px !default;\n$layout-breakpoint-lg:     1920px !default;",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:245"
        },
        {
            "message": "Missing item type\nInject the iterator facade to easily support iteration and accessors",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:286"
        },
        {
            "message": "Missing item type\niterator is a list facade to easily support iteration and accessors",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:297"
        },
        {
            "message": "Missing item type\nPublish copy of the enumerable set",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:338"
        },
        {
            "message": "Missing item type\nDetermine length of the list",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:346"
        },
        {
            "message": "Missing item type\nIs the index specified valid",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:354"
        },
        {
            "message": "Missing item type\nCan the iterator proceed to the next item in the list; relative to\nthe specified item.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:363"
        },
        {
            "message": "Missing item type\nCan the iterator proceed to the previous item in the list; relative to\nthe specified item.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:374"
        },
        {
            "message": "Missing item type\nGet item at specified index/position",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:385"
        },
        {
            "message": "Missing item type\nFind all elements matching the key/value pair\notherwise return null",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:394"
        },
        {
            "message": "Missing item type\nAdd item to list",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:409"
        },
        {
            "message": "Missing item type\nRemove item from list...",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:427"
        },
        {
            "message": "Missing item type\nGet the zero-based index of the target item",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:437"
        },
        {
            "message": "Missing item type\nBoolean existence check",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:446"
        },
        {
            "message": "Missing item type\nReturn first item in the list",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:455"
        },
        {
            "message": "Missing item type\nReturn last item in the list...",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:463"
        },
        {
            "message": "Missing item type\nFind the next item. If reloop is true and at the end of the list, it will go back to the\nfirst item. If given, the `validate` callback will be used to determine whether the next item\nis valid. If not valid, it will try to find the next item again.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:471"
        },
        {
            "message": "Missing item type\nUtil",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:705"
        },
        {
            "message": "Missing item type\nChecks if the target element has the requested style by key",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:721"
        },
        {
            "message": "Missing item type\nCalculate the positive scroll offset\nTODO: Check with pinch-zoom in IE/Chrome;\n      https://code.google.com/p/chromium/issues/detail?id=496285",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:778"
        },
        {
            "message": "Missing item type\nFinds the proper focus target by searching the DOM.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:793"
        },
        {
            "message": "Missing item type\nCan target and nested children for specified Selector (attribute)\nwhose value may be an expression that evaluates to True/False.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:818"
        },
        {
            "message": "Missing item type\nfacade to build md-backdrop element with desired styles\nNOTE: Use $compile to trigger backdrop postLink function",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:976"
        },
        {
            "message": "Missing item type\nsupplant() method from Crockford's `Remedial Javascript`\nEquivalent to use of $interpolate; without dependency on\ninterpolation symbols and scope. Note: the '{<token>}' can\nbe property names, property chains, or array indices.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:984"
        },
        {
            "message": "Missing item type\nMeasures the number of milliseconds taken to run the provided callback\nfunction. Uses a high-precision timer if available.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:1068"
        },
        {
            "message": "Missing item type\nCreate an implicit getter that caches its `getter()`\nlookup value",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:1078"
        },
        {
            "message": "Missing item type\nGet a unique ID.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:1094"
        },
        {
            "message": "Missing item type\nBuild polyfill for the Node.contains feature (if needed)",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:1167"
        },
        {
            "message": "Missing item type\nFunctional equivalent for $element.filter(‘md-bottom-sheet’)\nuseful with interimElements where the element and its container are important...",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:1180"
        },
        {
            "message": "Missing item type\nBreadth-First tree scan for element with matching `nodeName`",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:1197"
        },
        {
            "message": "Missing item type\nCase-insensitive scan of current elements only (do not descend).",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:1204"
        },
        {
            "message": "Missing item type\nScan children of specified node",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:1218"
        },
        {
            "message": "Missing item type\nGive optional properties with no value a boolean true if attr provided or false otherwise",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:1238"
        },
        {
            "message": "Missing item type\nAlternative to $timeout calls with 0 delay.\nnextTick() coalesces all calls within a single frame\nto minimize $digest thrashing",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:1251"
        },
        {
            "message": "Missing item type\nGrab a copy of the current queue\nClear the queue for future use\nProcess the existing queue\nTrigger digest if necessary",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:1279"
        },
        {
            "message": "Missing item type\nProcesses a template and replaces the start/end symbols if the application has\noverriden them.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:1302"
        },
        {
            "message": "Missing item type\nScan up dom hierarchy for enabled parent;",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:1318"
        },
        {
            "message": "Missing item type\nCheck if expected attribute has been specified on the target element or child",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:1391"
        },
        {
            "message": "Missing item type\nThe position of the most recent click if that click was on a label element.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:1619"
        },
        {
            "message": "Missing item type\n$get is used to build an instance of $mdGesture\nngInject",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:1665"
        },
        {
            "message": "Missing item type\nMdGesture factory construction function\nngInject",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:1676"
        },
        {
            "message": "Missing item type\nMdGestureHandler\nA GestureHandler is an object which is able to dispatch custom dom events\nbased on native dom {touch,pointer,mouse}{start,move,end} events.\n\nA gesture will manage its lifecycle through the start,move,end, and cancel\nfunctions, which are called by native dom events.\n\nA gesture has the concept of 'options' (eg a swipe's required velocity), which can be\noverridden by elements registering through $mdGesture.register()",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:1932"
        },
        {
            "message": "Missing item type\nAttach Gestures: hook document and check shouldHijack clicks\nngInject",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:2089"
        },
        {
            "message": "Missing item type\nGets whether the given event is an input event that was caused by clicking on an\nassociated label element.\n\nThis is necessary because the browser will, upon clicking on a label element, fire an\n*extra* click event on its associated input (if any). mdGesture is able to flag the label\nclick as with `$material` correctly, but not the second input click.\n\nIn order to determine whether an input event is from a label click, we compare the (x, y) for\nthe event to the (x, y) for the most recent label click (which is cleared whenever a non-label\nclick occurs). Unfortunately, there are no event properties that tie the input and the label\ntogether (such as relatedTarget).",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:2260"
        },
        {
            "message": "Missing item type\nEnable directive attribute-to-class conversions\nDevelopers can use `<body md-layout-css />` to quickly\ndisable the Layout directives and prohibit the injection of Layout classNames",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:2330"
        },
        {
            "message": "Missing item type\nList of mediaQuery breakpoints and associated suffixes\n\n  [\n   { suffix: \"sm\", mediaQuery: \"screen and (max-width: 599px)\" },\n   { suffix: \"md\", mediaQuery: \"screen and (min-width: 600px) and (max-width: 959px)\" }\n  ]",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:2337"
        },
        {
            "message": "Missing item type\nregisterLayoutAPI()\n\nThe original ngMaterial Layout solution used attribute selectors and CSS.\n\n  ```html\n  <div layout=\"column\"> My Content </div>\n  ```\n\n  ```css\n  [layout] {\n box-sizing: border-box;\n display:flex;\n  }\n  [layout=column] {\n flex-direction : column\n  }\n  ```\n\n  Use of attribute selectors creates significant performance impacts in some\n  browsers... mainly IE.\n\n  This module registers directives that allow the same layout attributes to be\n  interpreted and converted to class selectors. The directive will add equivalent classes to each element that\n  contains a Layout directive.\n\n ```html\n<div layout=\"column\" class=\"layout layout-column\"> My Content </div>\n```\n\n  ```css\n  .layout {\n box-sizing: border-box;\n display:flex;\n  }\n  .layout-column {\n flex-direction : column\n  }\n  ```",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:2350"
        },
        {
            "message": "Missing item type\nConverts snake_case to camelCase.\nAlso there is special case for Moz prefix starting with upper case letter.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:2446"
        },
        {
            "message": "Missing item type\nSpecial directive that will disable ALL Layout conversions of layout\nattribute(s) to classname(s).\n\n<link rel=\"stylesheet\" href=\"angular-material.min.css\">\n<link rel=\"stylesheet\" href=\"angular-material.layout.css\">\n\n<body md-layout-css>\n ...\n</body>\n\nNote: Using md-layout-css directive requires the developer to load the Material\nLayout Attribute stylesheet (which only uses attribute selectors):\n\n      `angular-material.layout.css`\n\nAnother option is to use the LayoutProvider to configure and disable the attribute\nconversions; this would obviate the use of the `md-layout-css` directive",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:2461"
        },
        {
            "message": "Missing item type\nTail-hook ngCloak to delay the uncloaking while Layout transformers\nfinish processing. Eliminates flicker with Material.Layoouts",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:2492"
        },
        {
            "message": "Missing item type\nCreates a directive registration function where a possible dynamic attribute\nvalue will be observed/watched.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:2530"
        },
        {
            "message": "Missing item type\nAdd as transformed class selector(s), then\nremove the deprecated attribute selector",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:2565"
        },
        {
            "message": "Missing item type\nCreates a registration function for ngMaterial Layout attribute directive.\nThis is a `simple` transpose of attribute usage to class usage; where we ignore\nany attribute value",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:2578"
        },
        {
            "message": "Missing item type\nAdd as transformed class selector, then\nremove the deprecated attribute selector",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:2612"
        },
        {
            "message": "Missing item type\nAfter link-phase, do NOT remove deprecated layout attribute selector.\nInstead watch the attribute so interpolated data-bindings to layout\nselectors will continue to be supported.\n\n$observe() the className and update with new class (after removing the last one)\n\ne.g. `layout=\"{{layoutDemo.direction}}\"` will update...\n\nNOTE: The value must match one of the specified styles in the CSS.\nFor example `flex-gt-md=\"{{size}}`  where `scope.size == 47` will NOT work since\nonly breakpoints for 0, 5, 10, 15... 100, 33, 34, 66, 67 are defined.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:2623"
        },
        {
            "message": "Missing item type\nProvide console warning that this layout attribute has been deprecated",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:2650"
        },
        {
            "message": "Missing item type\nCentralize warnings for known flexbox issues (especially IE-related issues)",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:2662"
        },
        {
            "message": "Missing item type\nFor the Layout attribute value, validate or replace with default\nfallback value",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:2686"
        },
        {
            "message": "Missing item type\nReplace current attribute value with fallback value",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:2739"
        },
        {
            "message": "Missing item type\nSee if the original value has interpolation symbols:\ne.g.  flex-gt-md=\"{{triggerPoint}}\"",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:2753"
        },
        {
            "message": "Missing item type\nReturns a new provider which allows configuration of a new interimElement\nservice. Allows configuration of default options & methods for options,\nas well as configuration of 'preset' methods (eg dialog.basic(): basic is a preset method)",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:2842"
        },
        {
            "message": "Missing item type\nall interim elements will come with the 'build' preset",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:2862"
        },
        {
            "message": "Missing item type\nSave the configured defaults to be used when the factory is instantiated",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:2873"
        },
        {
            "message": "Missing item type\nAdd a method to the factory that isn't specific to any interim element operations",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:2882"
        },
        {
            "message": "Missing item type\nSave the configured preset to be used when the factory is instantiated",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:2891"
        },
        {
            "message": "Missing item type\nCreate a factory that has the given methods & defaults implementing interimElement",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:2917"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:3015"
        },
        {
            "message": "Missing item type\nSpecial method to hide and destroy an interimElement WITHOUT\nany 'leave` or hide animations ( an immediate force hide/remove )\n\nNOTE: This calls the onRemove() subclass method for each component...\nwhich must have code to respond to `options.$destroy == true`",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:3029"
        },
        {
            "message": "Missing item type\nHelper to call $injector.invoke with a local of the factory name for\nthis provider.\nIf an $mdDialog is providing options for a dialog and tries to inject\n$mdDialog, a circular dependency error will happen.\nWe get around that by manually injecting $mdDialog as a local.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:3040"
        },
        {
            "message": "Missing item type\nCompile, link, and show this interim element\nUse optional autoHided and transition-in effects",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:3229"
        },
        {
            "message": "Missing item type\nAfter the show process has finished/rejected:\n- announce 'removing',\n- perform the transition-out, and\n- perform optional clean up scope.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:3255"
        },
        {
            "message": "Missing item type\nThe `show()` returns a promise that will be resolved when the interim\nelement is hidden or cancelled...",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:3291"
        },
        {
            "message": "Missing item type\nForce the '$md<xxx>.show()' promise to reject",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:3299"
        },
        {
            "message": "Missing item type\nPrepare optional isolated scope and prepare $animate with default enter and leave\ntransitions for the new element instance.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:3307"
        },
        {
            "message": "Missing item type\nDefault usage to enable $animate to transition-in; can be easily overridden via 'options'",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:3322"
        },
        {
            "message": "Missing item type\nDefault usage to enable $animate to transition-out; can be easily overridden via 'options'",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:3329"
        },
        {
            "message": "Missing item type\nCompile an element with a templateUrl, controller, and locals",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:3341"
        },
        {
            "message": "Missing item type\nLink an element with compiled configuration",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:3358"
        },
        {
            "message": "Missing item type\nSearch for parent at insertion time, if not specified",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:3374"
        },
        {
            "message": "Missing item type\nIf auto-hide is enabled, start timer and prepare cancel function",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:3406"
        },
        {
            "message": "Missing item type\nShow the element ( with transitions), notify complete and start\noptional auto-Hide",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:3426"
        },
        {
            "message": "Missing item type\nA component instance registration service.\nNote: currently this as a private service in the SideNav component.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:3499"
        },
        {
            "message": "Missing item type\nUsed to print an error when an instance for a handle isn't found.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:3524"
        },
        {
            "message": "Missing item type\nReturn all registered instances as an array.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:3530"
        },
        {
            "message": "Missing item type\nGet a registered instance.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:3537"
        },
        {
            "message": "Missing item type\nRegister an instance.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:3554"
        },
        {
            "message": "Missing item type\nRemove registration for an instance",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:3568"
        },
        {
            "message": "Missing item type\nResolve any pending promises for this instance",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:3578"
        },
        {
            "message": "Missing item type\nAsync accessor to registered component instance\nIf not available then a promise is created to notify\nall listeners when the instance is registered.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:3590"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:3995"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:4002"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:4008"
        },
        {
            "message": "Missing item type\nService that makes an element apply theming related classes to itself.\n\n```js\napp.directive('myFancyDirective', function($mdTheming) {\n  return {\n    restrict: 'e',\n    link: function(scope, el, attrs) {\n      $mdTheming(el);\n    }\n  };\n});\n```",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:4296"
        },
        {
            "message": "Missing item type\nRipple",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:4782"
        },
        {
            "message": "Missing item type\nAttaching given scope, element and options to inkRipple controller",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:4871"
        },
        {
            "message": "Missing item type\nController used by the ripple service in order to apply ripples\nngInject",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:4899"
        },
        {
            "message": "Missing item type\nEither remove or unlock any remaining ripples when the user mouses off of the element (either by\nmouseup or mouseleave event)",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:4928"
        },
        {
            "message": "Missing item type\nReturns the color that the ripple should be (either based on CSS or hard-coded)",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:4942"
        },
        {
            "message": "Missing item type\nFinds the color element and returns its text color for use as default ripple color",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:4957"
        },
        {
            "message": "Missing item type\nUpdating the ripple colors based on the current inkRipple value\nor the element's computed style color",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:4969"
        },
        {
            "message": "Missing item type\nTakes a string color and converts it to RGBA format",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:4978"
        },
        {
            "message": "Missing item type\nConverts hex value to RGBA string",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:4993"
        },
        {
            "message": "Missing item type\nConverts an RGB color to RGBA",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:5012"
        },
        {
            "message": "Missing item type\nBinds events to the root element for",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:5023"
        },
        {
            "message": "Missing item type\nCreate a new ripple on every mousedown event from the root element",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:5033"
        },
        {
            "message": "Missing item type\nEither remove or unlock any remaining ripples when the user mouses off of the element (either by\nmouseup, touchend or mouseleave event)",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:5060"
        },
        {
            "message": "Missing item type\nEither remove or unlock any remaining ripples when the user mouses off of the element (by\ntouchmove)",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:5068"
        },
        {
            "message": "Missing item type\nCycles through all ripples and attempts to remove them.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:5076"
        },
        {
            "message": "Missing item type\nCycles through all ripples and attempts to remove them with fade.\nDepending on logic within `fadeInComplete`, some removals will be postponed.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:5085"
        },
        {
            "message": "Missing item type\nCreates the ripple container element",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:5095"
        },
        {
            "message": "Missing item type\nThe attribute `md-ink-ripple` may be a static or interpolated\ncolor value OR a boolean indicator (used to disable ripples)",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:5126"
        },
        {
            "message": "Missing item type\nCreates a new ripple and adds it to the container.  Also tracks ripple in `this.ripples`.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:5134"
        },
        {
            "message": "Missing item type\nAfter fadeIn finishes, either kicks off the fade-out animation or queues the element for removal on mouseup",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:5198"
        },
        {
            "message": "Missing item type\nKicks off the animation for removing a ripple",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:5212"
        },
        {
            "message": "Missing item type\nRemoves the provided ripple from the DOM",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:5230"
        },
        {
            "message": "Missing item type\nUsed to create an empty directive.  This is used to track flag-directives whose children may have\nfunctionality based on them.\n\nExample: `md-no-ink` will potentially be used by all child directives.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:5239"
        },
        {
            "message": "Missing item type\nFactory function that requires special injections",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:5298"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:5304"
        },
        {
            "message": "Missing item type\nSpecific reversal of the request translate animation above...",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:5319"
        },
        {
            "message": "Missing item type\nListen for transitionEnd event (with optional timeout)\nAnnounce completion or failure via promise handlers",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:5332"
        },
        {
            "message": "Missing item type\nUpon timeout or transitionEnd, reject or resolve (respectively) this promise.\nNOTE: Make sure this transitionEnd didn't bubble up from a child",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:5345"
        },
        {
            "message": "Missing item type\nCalculate the zoom transform from dialog to origin.\n\nWe use this to set the dialog position immediately;\nthen the md-transition-in actually translates back to\n`translate3d(0,0,0) scale(1.0)`...\n\nNOTE: all values are rounded to the nearest integer",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:5363"
        },
        {
            "message": "Missing item type\nThis is a fallback if the origin information is no longer valid, then the\norigin bounds simply becomes the current bounds for the dialogContainer's parent",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:5398"
        },
        {
            "message": "Missing item type\nEnhance raw values to represent valid css stylings...",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:5410"
        },
        {
            "message": "Missing item type\nConvert the translate CSS value to key/value pair(s).",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:5446"
        },
        {
            "message": "Missing item type\nClone the Rect and calculate the height/width if needed",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:5463"
        },
        {
            "message": "Missing item type\nCalculate ClientRect of element; return null if hidden or zero size",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:5481"
        },
        {
            "message": "Missing item type\nCalculate 'rounded' center point of Rect",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:5494"
        },
        {
            "message": "Missing item type\nOlder browsers [FF31] expect camelCase\nproperty keys.\ne.g.\n animation-duration --> animationDuration",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\core\\core.js:5895"
        },
        {
            "message": "Missing item type\nDatepicker",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:14"
        },
        {
            "message": "Missing item type\nHeight of one calendar month tbody. This must be made known to the virtual-repeat and is\nsubsequently used for scrolling to specific months.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:41"
        },
        {
            "message": "Missing item type\nHeight of a calendar month with a single row. This is needed to calculate the offset for\nrendering an extra month in virtual-repeat that only contains one row.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:47"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:85"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:88"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:91"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:94"
        },
        {
            "message": "Missing item type\nController for the mdCalendar component.\nngInject @constructor",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:97"
        },
        {
            "message": "Missing item type\nDummy array-like object for virtual-repeat to iterate over. The length is the total\nnumber of months that can be viewed. This is shorter than ideal because of (potential)\nFirefox bug https://bugzilla.mozilla.org/show_bug.cgi?id=1181658.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:104"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:120"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:123"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:126"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:129"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:132"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:135"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:138"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:141"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:144"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:147"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:150"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:153"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:156"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:170"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:173"
        },
        {
            "message": "Missing item type\nThe selected date. Keep track of this separately from the ng-model value so that we\ncan know, when the ng-model value changes, what the previous value was before it's updated\nin the component's UI.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:176"
        },
        {
            "message": "Missing item type\nThe date that is currently focused or showing in the calendar. This will initially be set\nto the ng-model value if set, otherwise to today. It will be updated as the user navigates\nto other months. The cell corresponding to the displayDate does not necesarily always have\nfocus in the document (such as for cases when the user is scrolling the calendar).",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:185"
        },
        {
            "message": "Missing item type\nThe date that has or should have focus.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:194"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:200"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:203"
        },
        {
            "message": "Missing item type\nHandles a click event on a date cell.\nCreated here so that every cell can use the same function instance.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:215"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:235"
        },
        {
            "message": "Missing item type\nSets up the controller's reference to ngModelController.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:237"
        },
        {
            "message": "Missing item type\nInitialize the calendar by building the months that are initially visible.\nInitialization should occur after the ngModel value is known.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:250"
        },
        {
            "message": "Missing item type\nHides the vertical scrollbar on the calendar scroller by setting the width on the\ncalendar scroller and the `overflow: hidden` wrapper around the scroller, and then setting\na padding-right on the scroller equal to the width of the browser's scrollbar.\n\nThis will cause a reflow.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:262"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:284"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:290"
        },
        {
            "message": "Missing item type\nHandles a key event in the calendar with the appropriate action. The action will either\nbe to select the focused date or to navigate to focus a new date.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:292"
        },
        {
            "message": "Missing item type\nGets the date to focus as the result of a key event.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:336"
        },
        {
            "message": "Missing item type\nGets the \"index\" of the currently selected date as it would be in the virtual-repeat.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:364"
        },
        {
            "message": "Missing item type\nScrolls to the month of the given date.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:373"
        },
        {
            "message": "Missing item type\nSets the ng-model value for the calendar and emits a change event.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:386"
        },
        {
            "message": "Missing item type\nFocus the cell corresponding to the given date.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:396"
        },
        {
            "message": "Missing item type\nIf a date exceeds minDate or maxDate, returns date matching minDate or maxDate, respectively.\nOtherwise, returns the date.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:418"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:435"
        },
        {
            "message": "Missing item type\nChange the selected date in the calendar (ngModel value has already been changed).",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:437"
        },
        {
            "message": "Missing item type\nChange the date that is being shown in the calendar. If the given date is in a different\nmonth, the displayed month will be transitioned.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:469"
        },
        {
            "message": "Missing item type\nAnimates the transition from the calendar's current month to the given month.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:500"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:510"
        },
        {
            "message": "Missing item type\nBuilds and appends a day-of-the-week header to the calendar.\nThis should only need to be called once during initialization.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:512"
        },
        {
            "message": "Missing item type\nGets an identifier for a date unique to the calendar instance for internal\npurposes. Not to be displayed.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:530"
        },
        {
            "message": "Missing item type\nPrivate directive consumed by md-calendar. Having this directive lets the calender use\nmd-virtual-repeat and also cleanly separates the month DOM construction functions from\nthe rest of the calendar controller logic.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:555"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:587"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:590"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:593"
        },
        {
            "message": "Missing item type\nController for a single calendar month.\nngInject @constructor",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:596"
        },
        {
            "message": "Missing item type\nNumber of months from the start of the month \"items\" that the currently rendered month\noccurs. Set via angular data binding.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:606"
        },
        {
            "message": "Missing item type\nDate cell to focus after appending the month to the document.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:613"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:621"
        },
        {
            "message": "Missing item type\nCreates a single cell to contain a date in the calendar with all appropriate\nattributes and classes added. If a date is given, the cell content will be set\nbased on the date.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:636"
        },
        {
            "message": "Missing item type\nCheck whether date is in range and enabled",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:695"
        },
        {
            "message": "Missing item type\nBuilds a `tr` element for the calendar grid.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:707"
        },
        {
            "message": "Missing item type\nBuilds the <tbody> content for the given date's month.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:724"
        },
        {
            "message": "Missing item type\nGets the day-of-the-week index for a date for the current locale.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:824"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:915"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:917"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:920"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:923"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:926"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:929"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:932"
        },
        {
            "message": "Missing item type\nFunction that converts the date portion of a Date to a string.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:935"
        },
        {
            "message": "Missing item type\nFunction that converts a date string to a Date object (the date portion)",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:941"
        },
        {
            "message": "Missing item type\nFunction that formats a Date into a month header string.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:947"
        },
        {
            "message": "Missing item type\nFunction that formats a week number into a label for the week.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:953"
        },
        {
            "message": "Missing item type\nFunction that formats a date into a long aria-label that is read\nwhen the focused date changes.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:959"
        },
        {
            "message": "Missing item type\nARIA label for the calendar \"dialog\" used in the datepicker.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:966"
        },
        {
            "message": "Missing item type\nARIA label for the datepicker's \"Open calendar\" buttons.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:972"
        },
        {
            "message": "Missing item type\nFactory function that returns an instance of the dateLocale service.\nngInject",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:979"
        },
        {
            "message": "Missing item type\nDefault date-to-string formatting function.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:986"
        },
        {
            "message": "Missing item type\nDefault string-to-date parsing function.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1011"
        },
        {
            "message": "Missing item type\nDefault function to determine whether a string makes sense to be\nparsed to a Date object.\n\nThis is very permissive and is just a basic sanity check to ensure that\nthings like single integers aren't able to be parsed into dates.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1020"
        },
        {
            "message": "Missing item type\nDefault date-to-string formatter to get a month header.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1038"
        },
        {
            "message": "Missing item type\nDefault week number formatter.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1047"
        },
        {
            "message": "Missing item type\nDefault formatter for date cell aria-labels.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1056"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1220"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1223"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1226"
        },
        {
            "message": "Missing item type\nHeight of the calendar pane used to check if the pane is going outside the boundary of\nthe viewport. See calendar.scss for how $md-calendar-height is computed; an extra 20px is\nalso added to space the pane away from the exact edge of the screen.\n\n This is computed statically now, but can be changed to be measured if the circumstances\n of calendar sizing are changed.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1229"
        },
        {
            "message": "Missing item type\nWidth of the calendar pane used to check if the pane is going outside the boundary of\nthe viewport. See calendar.scss for how $md-calendar-width is computed; an extra 20px is\nalso added to space the pane away from the exact edge of the screen.\n\n This is computed statically now, but can be changed to be measured if the circumstances\n of calendar sizing are changed.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1239"
        },
        {
            "message": "Missing item type\nController for md-datepicker.\n\nngInject @constructor",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1249"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1256"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1259"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1262"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1265"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1268"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1271"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1277"
        },
        {
            "message": "Missing item type\nThe root document element. This is used for attaching a top-level click handler to\nclose the calendar panel when a click outside said panel occurs. We use `documentElement`\ninstead of body because, when scrolling is disabled, some browsers consider the body element\nto be completely off the screen and propagate events directly to the html element.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1280"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1289"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1292"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1295"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1298"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1301"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1304"
        },
        {
            "message": "Missing item type\nElement covering everything but the input in the top of the floating calendar pane.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1307"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1313"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1316"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1319"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1322"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1325"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1328"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1332"
        },
        {
            "message": "Missing item type\nElement from which the calendar pane was opened. Keep track of this so that we can return\nfocus to it when the pane is closed.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1335"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1346"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1349"
        },
        {
            "message": "Missing item type\nSets up the controller's reference to ngModelController.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1370"
        },
        {
            "message": "Missing item type\nAttach event listeners for both the text input and the md-calendar.\nEvents are used instead of ng-model so that updates don't infinitely update the other\non a change. This should also be more performant than using a $watch.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1393"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1416"
        },
        {
            "message": "Missing item type\nCapture properties set to the date-picker and imperitively handle internal changes.\nThis is done to avoid setting up additional $watches.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1435"
        },
        {
            "message": "Missing item type\nSets whether the date-picker is disabled.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1460"
        },
        {
            "message": "Missing item type\nSets the custom ngModel.$error flags to be consumed by ngMessages. Flags are:\n  - mindate: whether the selected date is before the minimum date.\n  - maxdate: whether the selected flag is after the maximum date.\n  - filtered: whether the selected date is allowed by the custom filtering function.\n  - valid: whether the entered text input is a valid date\n\nThe 'required' flag is handled automatically by ngModel.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1470"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1518"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1526"
        },
        {
            "message": "Missing item type\nSets the model value if the user input is a valid date.\nAdds an invalid class to the input element if not.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1531"
        },
        {
            "message": "Missing item type\nCheck whether date is in range and enabled",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1557"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1567"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1636"
        },
        {
            "message": "Missing item type\nOpen the floating calendar pane.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1649"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1682"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1698"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1703"
        },
        {
            "message": "Missing item type\nSets whether the input is currently focused.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1712"
        },
        {
            "message": "Missing item type\nHandles a click on the document body when the floating calendar pane is open.\nCloses the floating calendar pane if the click is not inside of it.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1723"
        },
        {
            "message": "Missing item type\nUtility for performing date calculations to facilitate operation of the calendar and\ndatepicker.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1744"
        },
        {
            "message": "Missing item type\nGets the first day of the month for the given date's month.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1770"
        },
        {
            "message": "Missing item type\nGets the number of days in the month for the given date's month.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1779"
        },
        {
            "message": "Missing item type\nGet an arbitrary date in the month after the given date's month.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1788"
        },
        {
            "message": "Missing item type\nGet an arbitrary date in the month before the given date's month.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1797"
        },
        {
            "message": "Missing item type\nGets whether two dates have the same month and year.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1806"
        },
        {
            "message": "Missing item type\nGets whether two dates are the same day (not not necesarily the same time).",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1816"
        },
        {
            "message": "Missing item type\nGets whether a date is in the month immediately after some date.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1826"
        },
        {
            "message": "Missing item type\nGets whether a date is in the month immediately before some date.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1837"
        },
        {
            "message": "Missing item type\nGets the midpoint between two dates.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1848"
        },
        {
            "message": "Missing item type\nGets the week of the month that a given date occurs in.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1858"
        },
        {
            "message": "Missing item type\nGets a new date incremented by the given number of days. Number of days can be negative.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1868"
        },
        {
            "message": "Missing item type\nGets a new date incremented by the given number of months. Number of months can be negative.\nIf the date of the given month does not match the target month, the date will be set to the\nlast day of the month.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1878"
        },
        {
            "message": "Missing item type\nGet the integer distance between two months. This *only* considers the month and year\nportion of the Date instances.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1902"
        },
        {
            "message": "Missing item type\nGets the last day of the month for the given date.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1915"
        },
        {
            "message": "Missing item type\nChecks whether a date is valid.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1924"
        },
        {
            "message": "Missing item type\nSets a date's time to midnight.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1933"
        },
        {
            "message": "Missing item type\nCreates a date with the time set to midnight.\nDrop-in replacement for two forms of the Date constructor:\n1. No argument for Date representing now.\n2. Single-argument value representing number of seconds since Unix Epoch\nor a Date object.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1943"
        },
        {
            "message": "Missing item type\nChecks if a date is within a min and max range, ignoring the time component.\nIf minDate or maxDate are not dates, they are ignored.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\datepicker\\datepicker.js:1963"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\dialog\\dialog.js:10"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\dialog\\dialog.js:75"
        },
        {
            "message": "Missing item type\nBuilds a preconfigured dialog with the specified message.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\dialog\\dialog.js:331"
        },
        {
            "message": "Missing item type\nBuilds a preconfigured dialog with the specified message. You can call show and the promise returned\nwill be resolved only if the user clicks the confirm action on the dialog.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\dialog\\dialog.js:352"
        },
        {
            "message": "Missing item type\nShow a dialog with the specified options.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\dialog\\dialog.js:377"
        },
        {
            "message": "Missing item type\nHide an existing dialog and resolve the promise returned from `$mdDialog.show()`.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\dialog\\dialog.js:441"
        },
        {
            "message": "Missing item type\nHide an existing dialog and reject the promise returned from `$mdDialog.show()`.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\dialog\\dialog.js:453"
        },
        {
            "message": "Missing item type\nThe specified template should contain a <md-dialog> wrapper element....",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\dialog\\dialog.js:546"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\dialog\\dialog.js:575"
        },
        {
            "message": "Missing item type\nCheck to see if they used the deprecated .md-actions class and log a warning",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\dialog\\dialog.js:591"
        },
        {
            "message": "Missing item type\nFor alerts, focus on content... otherwise focus on\nthe close button (or equivalent)",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\dialog\\dialog.js:602"
        },
        {
            "message": "Missing item type\nIf no element with class dialog-close, try to find the last\nbutton child in md-actions and assume it is a close button.\n\nIf we find no actions at all, log a warning to the console.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\dialog\\dialog.js:612"
        },
        {
            "message": "Missing item type\nRemove function for all dialogs",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\dialog\\dialog.js:629"
        },
        {
            "message": "Missing item type\nFor normal closes, animate the removal.\nFor forced closes (like $destroy events), skip the animations",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\dialog\\dialog.js:650"
        },
        {
            "message": "Missing item type\nDetach the element",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\dialog\\dialog.js:658"
        },
        {
            "message": "Missing item type\nCapture originator/trigger/from/to element information (if available)\nand the parent container for the dialog; defaults to the $rootElement\nunless overridden in the options.parent",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\dialog\\dialog.js:669"
        },
        {
            "message": "Missing item type\nIdentify the bounding RECT for the target element",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\dialog\\dialog.js:689"
        },
        {
            "message": "Missing item type\nIf the specifier is a simple string selector, then query for\nthe DOM element.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\dialog\\dialog.js:712"
        },
        {
            "message": "Missing item type\nListen for escape keys and outside clicks to auto close",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\dialog\\dialog.js:729"
        },
        {
            "message": "Missing item type\nShow modal backdrop element...",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\dialog\\dialog.js:821"
        },
        {
            "message": "Missing item type\nHide modal backdrop element...",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\dialog\\dialog.js:837"
        },
        {
            "message": "Missing item type\nInject ARIA-specific attributes appropriate for Dialogs",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\dialog\\dialog.js:855"
        },
        {
            "message": "Missing item type\nPrevents screen reader interaction behind modal window\non swipe interfaces",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\dialog\\dialog.js:909"
        },
        {
            "message": "Missing item type\nWalk DOM to apply or remove aria-hidden on sibling nodes\nand parent sibling nodes",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\dialog\\dialog.js:926"
        },
        {
            "message": "Missing item type\nEnsure the dialog container fill-stretches to the viewport",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\dialog\\dialog.js:950"
        },
        {
            "message": "Missing item type\nDialog open and pop-in animation",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\dialog\\dialog.js:966"
        },
        {
            "message": "Missing item type\nDialog close and pop-out animation",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\dialog\\dialog.js:1015"
        },
        {
            "message": "Missing item type\nUtility function to filter out raw DOM nodes",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\dialog\\dialog.js:1022"
        },
        {
            "message": "Missing item type\nDivider module!",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\divider\\divider.js:9"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\fabActions\\fabActions.js:12"
        },
        {
            "message": "Missing item type\nThe duration of the CSS animation in milliseconds.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\fabSpeedDial\\fabSpeedDial.js:310"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\fabSpeedDial\\fabSpeedDial.js:317"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\fabToolbar\\fabToolbar.js:15"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\fabTrigger\\fabTrigger.js:12"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\gridList\\gridList.js:9"
        },
        {
            "message": "Missing item type\nWatches for changes in media, invalidating layout as necessary.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\gridList\\gridList.js:125"
        },
        {
            "message": "Missing item type\nPerforms grid layout if the provided mediaName matches the currently\nactive media type.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\gridList\\gridList.js:148"
        },
        {
            "message": "Missing item type\nInvokes the layout engine, and uses its results to lay out our\ntile elements.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\gridList\\gridList.js:164"
        },
        {
            "message": "Missing item type\nGets the styles applied to a tile element described by the given parameters.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\gridList\\gridList.js:248"
        },
        {
            "message": "Missing item type\nGets an array of objects containing the rowspan and colspan for each tile.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\gridList\\gridList.js:363"
        },
        {
            "message": "Missing item type\nSet the reflow animator callback",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\gridList\\gridList.js:460"
        },
        {
            "message": "Missing item type\nPublish layout function",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\gridList\\gridList.js:469"
        },
        {
            "message": "Missing item type\nAn array of objects describing each tile's position in the grid.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\gridList\\gridList.js:481"
        },
        {
            "message": "Missing item type\nMaps grid positioning to an element and a set of styles using the\nprovided updateFn.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\gridList\\gridList.js:488"
        },
        {
            "message": "Missing item type\nDefault animator simply sets the element.css( <styles> ). An alternate\nanimator can be provided as an argument. The function has the following\nsignature:\n\n   function({grid: {element: JQLite, style: Object}, tiles: Array<{element: JQLite, style: Object}>)",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\gridList\\gridList.js:500"
        },
        {
            "message": "Missing item type\nTiming for the most recent layout run.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\gridList\\gridList.js:515"
        },
        {
            "message": "Missing item type\nDefault Gridlist animator simple sets the css for each element;\nNOTE: any transitions effects must be manually set in the CSS.\ne.g.\n\n md-grid-tile {\n   transition: all 700ms ease-out 50ms;\n }",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\gridList\\gridList.js:530"
        },
        {
            "message": "Missing item type\nCalculates the positions of tiles.\n\nThe algorithm works as follows:\n   An Array<Number> with length colCount (spaceTracker) keeps track of\n   available tiling positions, where elements of value 0 represents an\n   empty position. Space for a tile is reserved by finding a sequence of\n   0s with length <= than the tile's colspan. When such a space has been\n   found, the occupied tile positions are incremented by the tile's\n   rowspan value, as these positions have become unavailable for that\n   many rows.\n\n   If the end of a row has been reached without finding space for the\n   tile, spaceTracker's elements are each decremented by 1 to a minimum\n   of 0. Rows are searched in this fashion until space is found.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\gridList\\gridList.js:547"
        },
        {
            "message": "Missing item type\nIcon",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\icon\\icon.js:9"
        },
        {
            "message": "Missing item type\nDirective postLink\nSupports embedded SVGs, font-icons, & external SVGs",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\icon\\icon.js:197"
        },
        {
            "message": "Missing item type\nRegister a source URL for a specific icon name; the name may include optional 'icon set' name prefix.\nThese icons  will later be retrieved from the cache using `$mdIcon( <icon name> )`",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\icon\\icon.js:330"
        },
        {
            "message": "Missing item type\nRegister a source URL for a 'named' set of icons; group of SVG definitions where each definition\nhas an icon id. Individual icons can be subsequently retrieved from this cached set using\n`$mdIcon(<icon set name>:<icon name>)`",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\icon\\icon.js:359"
        },
        {
            "message": "Missing item type\nRegister a source URL for the default 'named' set of icons. Unless explicitly registered,\nsubsequent lookups of icons will failover to search this 'default' icon set.\nIcon can be retrieved from this cached, default set using `$mdIcon(<name>)`",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\icon\\icon.js:390"
        },
        {
            "message": "Missing item type\nWhen using Font-Icons, Angular Material assumes the the Material Design icons will be used and automatically\nconfigures the default font-set == 'material-icons'. Note that the font-set references the font-icon library\nclass style that should be applied to the `<md-icon>`.\n\nConfiguring the default means that the attributes\n`md-font-set=\"material-icons\"` or `class=\"material-icons\"` do not need to be explicitly declared on the\n`<md-icon>` markup. For example:\n\n `<md-icon> face </md-icon>`\n will render as\n `<span class=\"material-icons\"> face </span>`, and\n\n `<md-icon md-font-set=\"fa\"> face </md-icon>`\n will render as\n `<span class=\"fa\"> face </span>`",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\icon\\icon.js:419"
        },
        {
            "message": "Missing item type\nWhile `<md-icon />` markup can also be style with sizing CSS, this method configures\nthe default width **and** height used for all icons; unless overridden by specific CSS.\nThe default sizing is (24px, 24px).",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\icon\\icon.js:451"
        },
        {
            "message": "Missing item type\nRegister an alias name associated with a font-icon library style ;",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\icon\\icon.js:515"
        },
        {
            "message": "Missing item type\nSpecify a default style name associated with a font-icon library\nfallback to Material Icons.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\icon\\icon.js:526"
        },
        {
            "message": "Missing item type\nConfiguration item stored in the Icon registry; used for lookups\nto load if not already cached in the `loaded` cache",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\icon\\icon.js:589"
        },
        {
            "message": "Missing item type\nActual $mdIcon service is essentially a lookup function",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\icon\\icon.js:650"
        },
        {
            "message": "Missing item type\nLookup registered fontSet style using its alias...\nIf not found,",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\icon\\icon.js:668"
        },
        {
            "message": "Missing item type\nPrepare and cache the loaded icon for the specified `id`",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\icon\\icon.js:684"
        },
        {
            "message": "Missing item type\nLookup the configuration in the registry, if !registered throw an error\notherwise load the icon [on-demand] using the registered URL.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\icon\\icon.js:696"
        },
        {
            "message": "Missing item type\nLoads the file as XML and uses querySelector( <id> ) to find\nthe desired node...",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\icon\\icon.js:708"
        },
        {
            "message": "Missing item type\nLoad the icon by URL (may use the $templateCache).\nExtract the data for later conversion to Icon",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\icon\\icon.js:732"
        },
        {
            "message": "Missing item type\nCatch HTTP or generic errors not related to incorrect icon IDs.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\icon\\icon.js:744"
        },
        {
            "message": "Missing item type\nCheck target signature to see if it is an Icon instance.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\icon\\icon.js:754"
        },
        {
            "message": "Missing item type\nDefine the Icon class",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\icon\\icon.js:761"
        },
        {
            "message": "Missing item type\nPrepare the DOM element that will be cached in the\nloaded iconCache store.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\icon\\icon.js:779"
        },
        {
            "message": "Missing item type\nClone the Icon DOM element.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\icon\\icon.js:796"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\input\\input.js:9"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\input\\input.js:331"
        },
        {
            "message": "Missing item type\nList module",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\list\\list.js:9"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\menu\\menu.js:10"
        },
        {
            "message": "Missing item type\nngInject",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\menu\\menu.js:26"
        },
        {
            "message": "Missing item type\nCalled by our linking fn to provide access to the menu-content\nelement removed during link",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\menu\\menu.js:37"
        },
        {
            "message": "Missing item type\nUses the $mdMenu interim element service to open the menu contents",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\menu\\menu.js:126"
        },
        {
            "message": "Missing item type\nBuild a nice object out of our string attribute which specifies the\ntarget mode for left and top positioning",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\menu\\menu.js:203"
        },
        {
            "message": "Missing item type\nBuild a nice object out of our string attribute which specifies\nthe offset of top and left in pixels.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\menu\\menu.js:222"
        },
        {
            "message": "Missing item type\nngInject",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\menu\\menu.js:391"
        },
        {
            "message": "Missing item type\nShow modal backdrop element...",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\menu\\menu.js:502"
        },
        {
            "message": "Missing item type\nHide and destroys the backdrop created by showBackdrop()",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\menu\\menu.js:524"
        },
        {
            "message": "Missing item type\nRemoving the menu element from the DOM and remove all associated event listeners\nand backdrop",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\menu\\menu.js:533"
        },
        {
            "message": "Missing item type\nFor normal closes, animate the removal.\nFor forced closes (like $destroy events), skip the animations",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\menu\\menu.js:547"
        },
        {
            "message": "Missing item type\nDetach the element",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\menu\\menu.js:555"
        },
        {
            "message": "Missing item type\nInserts and configures the staged Menu element into the DOM, positioning it,\nand wiring up various interaction events",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\menu\\menu.js:566"
        },
        {
            "message": "Missing item type\nPlace the menu into the DOM and call positioning related functions",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\menu\\menu.js:588"
        },
        {
            "message": "Missing item type\nCheck for valid opts and set some sane defaults",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\menu\\menu.js:613"
        },
        {
            "message": "Missing item type\nConfigure various resize listeners for screen changes",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\menu\\menu.js:631"
        },
        {
            "message": "Missing item type\nActivate interaction on the menu. Wire up keyboard listerns for\nclicks, keypresses, backdrop closing, etc.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\menu\\menu.js:657"
        },
        {
            "message": "Missing item type\nTakes a keypress event and focuses the next/previous menu\nitem from the emitting element",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\menu\\menu.js:793"
        },
        {
            "message": "Missing item type\nAttempts to focus an element. Checks whether that element is the currently\nfocused element after attempting.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\menu\\menu.js:820"
        },
        {
            "message": "Missing item type\nUse browser to remove this element without triggering a $destroy event",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\menu\\menu.js:833"
        },
        {
            "message": "Missing item type\nComputes menu position and sets the style on the menu container",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\menu\\menu.js:846"
        },
        {
            "message": "Missing item type\nClamps the repositioning of the menu within the confines of\nbounding element (often the screen/body)",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\menu\\menu.js:945"
        },
        {
            "message": "Missing item type\nGets the first visible child in the openMenuNode\nNecessary incase menu nodes are being dynamically hidden",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\menu\\menu.js:954"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\menuBar\\menuBar.js:10"
        },
        {
            "message": "Missing item type\nngInject",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\menuBar\\menuBar.js:27"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\menuBar\\menuBar.js:362"
        },
        {
            "message": "Missing item type\nngInject",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\menuBar\\menuBar.js:426"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\menuBar\\menuBar.js:531"
        },
        {
            "message": "Missing item type\nCircular Progress module!",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\progressCircular\\progressCircular.js:9"
        },
        {
            "message": "Missing item type\nWatch the value and md-mode attributes",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\progressCircular\\progressCircular.js:114"
        },
        {
            "message": "Missing item type\nUpdate size/scaling of the progress indicator\nWatch the \"value\" and \"md-mode\" attributes",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\progressCircular\\progressCircular.js:143"
        },
        {
            "message": "Missing item type\nAuto-defaults the mode to either `determinate` or `indeterminate` mode; if not specified",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\progressCircular\\progressCircular.js:159"
        },
        {
            "message": "Missing item type\nManually animate the Determinate indicator based on the specified\npercentage value (0-100).\n\nNote: this animation was previously done using SCSS.\n- generated 54K of styles\n- use attribute selectors which had poor performances in IE",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\progressCircular\\progressCircular.js:177"
        },
        {
            "message": "Missing item type\nWe will scale the progress circle based on the default diameter.\n\nDetermine the diameter percentage (defaults to 100%)\nMay be express as float, percentage, or integer",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\progressCircular\\progressCircular.js:211"
        },
        {
            "message": "Missing item type\nIs the md-mode a valid option?",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\progressCircular\\progressCircular.js:227"
        },
        {
            "message": "Missing item type\nClamps the value to be between 0 and 100.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\progressCircular\\progressCircular.js:247"
        },
        {
            "message": "Missing item type\nLinear Progress module!",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\progressLinear\\progressLinear.js:9"
        },
        {
            "message": "Missing item type\nWatch the value, md-buffer-value, and md-mode attributes",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\progressLinear\\progressLinear.js:103"
        },
        {
            "message": "Missing item type\nAuto-defaults the mode to either `determinate` or `indeterminate` mode; if not specified",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\progressLinear\\progressLinear.js:136"
        },
        {
            "message": "Missing item type\nIs the md-mode a valid option?",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\progressLinear\\progressLinear.js:152"
        },
        {
            "message": "Missing item type\nManually set CSS to animate the Determinate indicator based on the specified\npercentage value (0-100).",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\progressLinear\\progressLinear.js:172"
        },
        {
            "message": "Missing item type\nClamps the value to be between 0 and 100.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\progressLinear\\progressLinear.js:185"
        },
        {
            "message": "Missing item type\nradioButton module!",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\radioButton\\radioButton.js:9"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\radioButton\\radioButton.js:94"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\radioButton\\radioButton.js:101"
        },
        {
            "message": "Missing item type\nChange the radio group's selected button by a given increment.\nIf no button is selected, select the first button.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\radioButton\\radioButton.js:186"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\radioButton\\radioButton.js:275"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\radioButton\\radioButton.js:293"
        },
        {
            "message": "Missing item type\nAdd or remove the `.md-checked` class from the RadioButton (and conditionally its parent).\nUpdate the `aria-activedescendant` attribute.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\radioButton\\radioButton.js:304"
        },
        {
            "message": "Missing item type\nIf the radioButton is inside a div, then add class so highlighting will work...",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\radioButton\\radioButton.js:328"
        },
        {
            "message": "Missing item type\nInject ARIA-specific attributes appropriate for each radio button",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\radioButton\\radioButton.js:339"
        },
        {
            "message": "Missing item type\nBuild a unique ID for each radio button that will be used with aria-activedescendant.\nPreserve existing ID if already specified.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\radioButton\\radioButton.js:353"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\select\\select.js:10"
        },
        {
            "message": "Missing item type\n### TODO - POST RC1 ###\n - [ ] Abstract placement logic in $mdSelect service to $mdMenu service",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\select\\select.js:15"
        },
        {
            "message": "Missing item type\nInterim-element onRemove logic....",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\select\\select.js:920"
        },
        {
            "message": "Missing item type\nFor normal closes (eg clicks), animate the removal.\nFor forced closes (like $destroy events from navigation),\nskip the animations",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\select\\select.js:934"
        },
        {
            "message": "Missing item type\nRestore the element to a closed state",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\select\\select.js:943"
        },
        {
            "message": "Missing item type\nInterim-element onShow logic....",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\select\\select.js:961"
        },
        {
            "message": "Missing item type\nAttach the select DOM element(s) and animate to the correct positions\nand scalings...",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\select\\select.js:985"
        },
        {
            "message": "Missing item type\nInitialize container and dropDown menu positions/scale, then animate\nto show... and autoFocus.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\select\\select.js:1008"
        },
        {
            "message": "Missing item type\nShow modal backdrop element...",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\select\\select.js:1032"
        },
        {
            "message": "Missing item type\nHide modal backdrop element...",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\select\\select.js:1052"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\select\\select.js:1063"
        },
        {
            "message": "Missing item type\nCheck for valid opts and set some sane defaults",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\select\\select.js:1072"
        },
        {
            "message": "Missing item type\nConfigure various resize listeners for screen changes",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\select\\select.js:1092"
        },
        {
            "message": "Missing item type\nIf asynchronously loading, watch and update internal\n'$$loadingAsyncDone' flag",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\select\\select.js:1124"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\select\\select.js:1144"
        },
        {
            "message": "Missing item type\ncheck if the mouseup event was on a scrollbar",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\select\\select.js:1267"
        },
        {
            "message": "Missing item type\nTo notify listeners that the Select menu has closed,\ntrigger the [optional] user-defined expression",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\select\\select.js:1288"
        },
        {
            "message": "Missing item type\nCalculate the",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\select\\select.js:1302"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\showHide\\showHide.js:9"
        },
        {
            "message": "Missing item type\nA Sidenav QP component.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\sidenav\\sidenav.js:10"
        },
        {
            "message": "Missing item type\nDeferred lookup of component instance using $component registry",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\sidenav\\sidenav.js:109"
        },
        {
            "message": "Missing item type\nDirective Post Link function...",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\sidenav\\sidenav.js:235"
        },
        {
            "message": "Missing item type\nToggle the DOM classes to indicate `locked`",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\sidenav\\sidenav.js:273"
        },
        {
            "message": "Missing item type\nToggle the SideNav view and attach/detach listeners",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\sidenav\\sidenav.js:287"
        },
        {
            "message": "Missing item type\nPrevent parent scrolling (when the SideNav is open)",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\sidenav\\sidenav.js:318"
        },
        {
            "message": "Missing item type\nToggle the sideNav view and publish a promise to be resolved when\nthe view animation finishes.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\sidenav\\sidenav.js:336"
        },
        {
            "message": "Missing item type\nAuto-close sideNav when the `escape` key is pressed.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\sidenav\\sidenav.js:372"
        },
        {
            "message": "Missing item type\nWith backdrop `clicks` or `escape` key-press, immediately\napply the CSS close transition... Then notify the controller\nto close() and perform its own actions.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\sidenav\\sidenav.js:381"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\slider\\slider.js:9"
        },
        {
            "message": "Missing item type\nAttributes",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\slider\\slider.js:166"
        },
        {
            "message": "Missing item type\nRefreshing Dimensions",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\slider\\slider.js:226"
        },
        {
            "message": "Missing item type\nleft/right arrow listener",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\slider\\slider.js:239"
        },
        {
            "message": "Missing item type\nngModel setters and validators",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\slider\\slider.js:265"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\slider\\slider.js:296"
        },
        {
            "message": "Missing item type\nSlide listeners",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\slider\\slider.js:313"
        },
        {
            "message": "Missing item type\nSlide the UI by changing the model value",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\slider\\slider.js:371"
        },
        {
            "message": "Missing item type\nSlide the UI without changing the model (while dragging/panning)",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\slider\\slider.js:381"
        },
        {
            "message": "Missing item type\nClamps the value to be between 0 and 1.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\slider\\slider.js:392"
        },
        {
            "message": "Missing item type\nConvert horizontal position on slider to percentage value of offset from beginning...",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\slider\\slider.js:401"
        },
        {
            "message": "Missing item type\nConvert percentage offset on slide to equivalent model value",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\slider\\slider.js:410"
        },
        {
            "message": "Missing item type\nSticky effects for md",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\sticky\\sticky.js:10"
        },
        {
            "message": "Missing item type\nRegisters an element as sticky, used internally by directives to register themselves",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\sticky\\sticky.js:84"
        },
        {
            "message": "Missing item type\nPublic",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\sticky\\sticky.js:135"
        },
        {
            "message": "Missing item type\nPrivate",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\sticky\\sticky.js:187"
        },
        {
            "message": "Missing item type\nSubHeader module\n\n Subheaders are special list tiles that delineate distinct sections of a\n list or grid list and are typically related to the current filtering or\n sorting criteria. Subheader tiles are either displayed inline with tiles or\n can be associated with content, for example, in an adjacent column.\n\n Upon scrolling, subheaders remain pinned to the top of the screen and remain\n pinned until pushed on or off screen by the next subheader. @see [Material\n Design Specifications](https://www.google.com/design/spec/components/subheaders.html)\n\n > To improve the visual grouping of content, use the system color for your subheaders.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\subheader\\subheader.js:10"
        },
        {
            "message": "Missing item type\nSwipe module!",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\swipe\\swipe.js:9"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\switch\\switch.js:10"
        },
        {
            "message": "Missing item type\nTabs, created with the `<md-tabs>` directive provide *tabbed* navigation with different styles.\n The Tabs component consists of clickable tabs that are aligned horizontally side-by-side.\n\n Features include support for:\n\n - static or dynamic tabs,\n - responsive designs,\n - accessibility support (ARIA),\n - tab pagination,\n - external or internal tab content,\n - focus indicators and arrow-key navigations,\n - programmatic lookup and access to tab controllers, and\n - dynamic transitions through different tab contents.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js:10"
        },
        {
            "message": "Missing item type\nngInject",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js:212"
        },
        {
            "message": "Missing item type\nPerform initialization for the controller, setup events and watcher(s)",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js:275"
        },
        {
            "message": "Missing item type\nCompiles the template provided by the user.  This is passed as an attribute from the tabs\ndirective's template function.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js:294"
        },
        {
            "message": "Missing item type\nBinds events used by the tabs component.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js:306"
        },
        {
            "message": "Missing item type\nConfigure watcher(s) used by Tabs",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js:314"
        },
        {
            "message": "Missing item type\nCreates a one-way binding manually rather than relying on Angular's isolated scope",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js:321"
        },
        {
            "message": "Missing item type\nDefines boolean attributes with default value set to true.  (ie. md-stretch-tabs with no value\nwill be treated as being truthy)",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js:332"
        },
        {
            "message": "Missing item type\nRemove any events defined by this controller",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js:348"
        },
        {
            "message": "Missing item type\nToggles stretch tabs class and updates inkbar when tab stretching changes",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js:358"
        },
        {
            "message": "Missing item type\nAdd/remove the `md-no-tab-content` class depending on `ctrl.hasContent`",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js:391"
        },
        {
            "message": "Missing item type\nApply ctrl.offsetLeft to the paging element when it changes",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js:399"
        },
        {
            "message": "Missing item type\nUpdate the UI whenever `ctrl.focusIndex` is updated",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js:409"
        },
        {
            "message": "Missing item type\nUpdate the UI whenever the selected index changes. Calls user-defined select/deselect methods.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js:421"
        },
        {
            "message": "Missing item type\nQueues up a call to `handleWindowResize` when a resize occurs while the tabs component is\nhidden.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js:444"
        },
        {
            "message": "Missing item type\nHandle user keyboard interactions",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js:470"
        },
        {
            "message": "Missing item type\nUpdate the selected index and trigger a click event on the original `md-tab` element in order\nto fire user-added click events.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js:493"
        },
        {
            "message": "Missing item type\nWhen pagination is on, this makes sure the selected index is in view.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js:507"
        },
        {
            "message": "Missing item type\nSlides the tabs over approximately one page forward.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js:517"
        },
        {
            "message": "Missing item type\nSlides the tabs over approximately one page backward.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js:531"
        },
        {
            "message": "Missing item type\nUpdate size calculations when the window is resized.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js:543"
        },
        {
            "message": "Missing item type\nToggle dynamic height class when value changes",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js:559"
        },
        {
            "message": "Missing item type\nRemove a tab from the data and select the nearest valid tab.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js:567"
        },
        {
            "message": "Missing item type\nCreate an entry in the tabs array for a new tab at the specified index.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js:588"
        },
        {
            "message": "Missing item type\nGathers references to all of the DOM elements used by this controller.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js:628"
        },
        {
            "message": "Missing item type\nDetermines whether or not the left pagination arrow should be enabled.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js:651"
        },
        {
            "message": "Missing item type\nDetermines whether or not the right pagination arrow should be enabled.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js:659"
        },
        {
            "message": "Missing item type\nDetermines if the UI should stretch the tabs to fill the available space.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js:669"
        },
        {
            "message": "Missing item type\nDetermines if the tabs should appear centered.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js:685"
        },
        {
            "message": "Missing item type\nDetermines if pagination is necessary to display the tabs within the available space.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js:693"
        },
        {
            "message": "Missing item type\nFinds the nearest tab index that is available.  This is primarily used for when the active\ntab is removed.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js:704"
        },
        {
            "message": "Missing item type\nDefines a property using a getter and setter in order to trigger a change handler without\nusing `$watch` to observe changes.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js:725"
        },
        {
            "message": "Missing item type\nUpdates whether or not pagination should be displayed.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js:743"
        },
        {
            "message": "Missing item type\nRe-orders the tabs and updates the selected and focus indexes to their new positions.\nThis is triggered by `tabDirective.js` when the user's tabs have been re-ordered.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js:768"
        },
        {
            "message": "Missing item type\nThis moves the selected or focus index left or right.  This is used by the keydown handler.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js:782"
        },
        {
            "message": "Missing item type\nThis is used to forward focus to dummy elements.  This method is necessary to avoid animation\nissues when attempting to focus an item that is out of view.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js:798"
        },
        {
            "message": "Missing item type\nForces the pagination to move the focused tab into view.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js:806"
        },
        {
            "message": "Missing item type\nIterates through all queued functions and clears the queue.  This is used for functions that\nare called before the UI is ready, such as size calculations.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js:820"
        },
        {
            "message": "Missing item type\nDetermines if the tab content area is needed.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js:829"
        },
        {
            "message": "Missing item type\nMoves the indexes to their nearest valid values.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js:840"
        },
        {
            "message": "Missing item type\nCalculates the content height of the current tab.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js:848"
        },
        {
            "message": "Missing item type\nRepositions the ink bar to the selected tab.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js:909"
        },
        {
            "message": "Missing item type\nAdds left/right classes so that the ink bar will animate properly.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js:938"
        },
        {
            "message": "Missing item type\nTakes an offset value and makes sure that it is within the min/max allowed values.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js:951"
        },
        {
            "message": "Missing item type\nAttaches a ripple to the tab item element.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\tabs\\tabs.js:965"
        },
        {
            "message": "Missing item type\nForm",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\textField\\textField.js:12"
        },
        {
            "message": "Missing item type\nToast",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\toast\\toast.js:10"
        },
        {
            "message": "Missing item type\nConvenience method which builds and shows a simple toast.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\toast\\toast.js:95"
        },
        {
            "message": "Missing item type\nBuilds a preconfigured toast.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\toast\\toast.js:108"
        },
        {
            "message": "Missing item type\nUpdates the content of an existing toast. Useful for updating things like counts, etc.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\toast\\toast.js:136"
        },
        {
            "message": "Missing item type\nCreates a custom `$mdToastPreset` that you can configure.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\toast\\toast.js:145"
        },
        {
            "message": "Missing item type\nShows the toast.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\toast\\toast.js:155"
        },
        {
            "message": "Missing item type\nHide an existing toast and resolve the promise returned from `$mdToast.show()`.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\toast\\toast.js:200"
        },
        {
            "message": "Missing item type\n`DEPRECATED` - The promise returned from opening a toast is used only to notify about the closing of the toast.\nAs such, there isn't any reason to also allow that promise to be rejected,\nsince it's not clear what the difference between resolve and reject would be.\n\nHide the existing toast and reject the promise returned from\n`$mdToast.show()`.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\toast\\toast.js:215"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\toolbar\\toolbar.js:10"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\toolbar\\toolbar.js:126"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\toolbar\\toolbar.js:150"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\toolbar\\toolbar.js:166"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\toolbar\\toolbar.js:196"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\toolbar\\toolbar.js:215"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\tooltip\\tooltip.js:9"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js:10"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js:90"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js:98"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js:100"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js:102"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js:104"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js:106"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js:108"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js:110"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js:112"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js:114"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js:116"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js:120"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js:122"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js:172"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js:181"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js:187"
        },
        {
            "message": "Missing item type\nResizes the container.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js:193"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js:212"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js:229"
        },
        {
            "message": "Missing item type\nSets the scroller element to the specified size.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js:240"
        },
        {
            "message": "Missing item type\nIf auto-shrinking is enabled, shrinks or unshrinks as appropriate.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js:280"
        },
        {
            "message": "Missing item type\nSets the scrollHeight or scrollWidth. Called by the repeater based on\nits item count and item size.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js:310"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js:325"
        },
        {
            "message": "Missing item type\nScrolls to a given scrollTop position.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js:330"
        },
        {
            "message": "Missing item type\nScrolls the item with the given index to the top of the scroll container.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js:339"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js:452"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js:463"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js:465"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js:467"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js:469"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js:471"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js:473"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js:475"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js:479"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js:482"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js:485"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js:491"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js:494"
        },
        {
            "message": "Missing item type\nPresently rendered blocks by repeat index.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js:500"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js:505"
        },
        {
            "message": "Missing item type\nAn object representing a repeated item.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js:511"
        },
        {
            "message": "Missing item type\nCalled at startup by the md-virtual-repeat postLink function.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js:518"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js:543"
        },
        {
            "message": "Missing item type\nReturns the user-specified repeat list, transforming it into an array-like\nobject in the case of infinite scroll/dynamic load mode.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js:569"
        },
        {
            "message": "Missing item type\nCalled by the container. Informs us that the containers scroll or size has\nchanged.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js:588"
        },
        {
            "message": "Missing item type\nCalled by the container. Returns the size of a single repeated item.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js:633"
        },
        {
            "message": "Missing item type\nCalled by the container. Returns the size of a single repeated item.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js:642"
        },
        {
            "message": "Missing item type\nUpdates the order and visible offset of repeated blocks in response to scrolling\nor items updates.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js:651"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js:754"
        },
        {
            "message": "Missing item type\nUpdates and if not in a digest cycle, digests the specified block's scope to the data\nat the specified index.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js:780"
        },
        {
            "message": "Missing item type\nUpdates scope to the data at the specified index.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js:808"
        },
        {
            "message": "Missing item type\nPools the block at the specified index (Pulls its element out of the dom and stores it).",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js:821"
        },
        {
            "message": "Missing item type\nProduces a dom fragment containing the elements from the list of blocks.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js:833"
        },
        {
            "message": "Missing item type\nUpdates start and end indexes based on length of repeated items and container size.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js:849"
        },
        {
            "message": "Missing item type\nThis VirtualRepeatModelArrayLike class enforces the interface requirements\nfor infinite scrolling within a mdVirtualRepeatContainer. An object with this\ninterface must implement the following interface with two (2) methods:\n\ngetItemAtIndex: function(index) -> item at that index or null if it is not yet\n    loaded (It should start downloading the item in that case).\n\ngetLength: function() -> number The data legnth to which the repeater container\n    should be sized. Ideally, when the count is known, this method should return it.\n    Otherwise, return a higher number than the currently loaded items to produce an\n    infinite-scroll behavior.",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\virtualRepeat\\virtualRepeat.js:865"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\closure\\whiteframe\\whiteframe.js:9"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js:10"
        },
        {
            "message": "Missing item type\nInitialize the controller, setup watchers, gather elements",
            "line": " web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js:82"
        },
        {
            "message": "Missing item type\nCalculates the dropdown's position and applies the new styles to the menu element",
            "line": " web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js:97"
        },
        {
            "message": "Missing item type\nCalculates the vertical offset for floating label examples to account for ngMessages",
            "line": " web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js:135"
        },
        {
            "message": "Missing item type\nMakes sure that the menu doesn't go off of the screen on either side.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js:153"
        },
        {
            "message": "Missing item type\nMoves the dropdown menu to the body tag in order to avoid z-index and overflow issues.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js:166"
        },
        {
            "message": "Missing item type\nSends focus to the input element.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js:177"
        },
        {
            "message": "Missing item type\nSets up any watchers used by autocomplete",
            "line": " web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js:184"
        },
        {
            "message": "Missing item type\nRemoves any events or leftover elements created by this controller",
            "line": " web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js:197"
        },
        {
            "message": "Missing item type\nGathers all of the elements needed for this controller",
            "line": " web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js:214"
        },
        {
            "message": "Missing item type\nFinds the element that the menu will base its position on",
            "line": " web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js:232"
        },
        {
            "message": "Missing item type\nGathers angular-wrapped versions of each element",
            "line": " web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js:243"
        },
        {
            "message": "Missing item type\nHandles changes to the `hidden` property.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js:258"
        },
        {
            "message": "Missing item type\nWhen the user mouses over the dropdown menu, ignore blur events.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js:279"
        },
        {
            "message": "Missing item type\nWhen the user's mouse leaves the menu, blur events may hide the menu again.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js:286"
        },
        {
            "message": "Missing item type\nWhen the mouse button is released, send focus back to the input field.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js:295"
        },
        {
            "message": "Missing item type\nHandles changes to the selected item.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js:302"
        },
        {
            "message": "Missing item type\nUse the user-defined expression to announce changes each time a new item is selected",
            "line": " web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js:318"
        },
        {
            "message": "Missing item type\nUse the user-defined expression to announce changes each time the search text is changed",
            "line": " web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js:325"
        },
        {
            "message": "Missing item type\nCalls any external watchers listening for the selected item.  Used in conjunction with\n`registerSelectedItemWatcher`.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js:332"
        },
        {
            "message": "Missing item type\nRegister a function to be called when the selected item changes.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js:342"
        },
        {
            "message": "Missing item type\nUnregister a function previously registered for selected item changes.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js:352"
        },
        {
            "message": "Missing item type\nHandles changes to the searchText property.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js:363"
        },
        {
            "message": "Missing item type\nHandles input blur event, determines if the dropdown should hide.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js:394"
        },
        {
            "message": "Missing item type\nForce blur on input element",
            "line": " web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js:404"
        },
        {
            "message": "Missing item type\nHandles input focus event, determines if the dropdown should show.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js:416"
        },
        {
            "message": "Missing item type\nHandles keyboard input.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js:427"
        },
        {
            "message": "Missing item type\nReturns the minimum length needed to display the dropdown.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js:478"
        },
        {
            "message": "Missing item type\nReturns the display value for an item.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js:486"
        },
        {
            "message": "Missing item type\nGetter function to invoke user-defined expression (in the directive)\nto convert your object to a single string.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js:494"
        },
        {
            "message": "Missing item type\nReturns the locals object for compiling item templates.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js:503"
        },
        {
            "message": "Missing item type\nReturns the default index based on whether or not autoselect is enabled.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js:517"
        },
        {
            "message": "Missing item type\nSets the loading parameter and updates the hidden state.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js:525"
        },
        {
            "message": "Missing item type\nDetermines if the menu should be hidden.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js:538"
        },
        {
            "message": "Missing item type\nDetermines if the menu should be shown.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js:549"
        },
        {
            "message": "Missing item type\nReturns true if the search text has matches.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js:557"
        },
        {
            "message": "Missing item type\nReturns true if the autocomplete has a valid selection.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js:565"
        },
        {
            "message": "Missing item type\nReturns true if the loading indicator is, or should be, visible.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js:573"
        },
        {
            "message": "Missing item type\nReturns the display value of the current item.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js:581"
        },
        {
            "message": "Missing item type\nDetermines if the minimum length is met by the search text.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js:589"
        },
        {
            "message": "Missing item type\nDefines a public property with a handler and a default value.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js:599"
        },
        {
            "message": "Missing item type\nSelects the item at the given index.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js:616"
        },
        {
            "message": "Missing item type\nClears the searchText value and selected item.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js:634"
        },
        {
            "message": "Missing item type\nFetches the results for the provided search text.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js:657"
        },
        {
            "message": "Missing item type\nUpdates the ARIA messages",
            "line": " web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js:689"
        },
        {
            "message": "Missing item type\nReturns the ARIA message for how many results match the current query.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js:698"
        },
        {
            "message": "Missing item type\nMakes sure that the focused element is within view.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js:715"
        },
        {
            "message": "Missing item type\nStarts the query to gather the results for the current searchText.  Attempts to return cached\nresults first, then forwards the process to `fetchResults` if necessary.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js:742"
        },
        {
            "message": "Missing item type\nIf there is only one matching item and the search text matches its display value exactly,\nautomatically select that item.  Note: This function is only called if the user uses the\n`md-select-on-match` flag.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js:760"
        },
        {
            "message": "Missing item type\nCreates a watcher for variables that are copied from the parent scope",
            "line": " web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js:1090"
        },
        {
            "message": "Missing item type\nCreates watchers on scope and newScope that ensure that for any\n$digest of scope, newScope is also $digested.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\autocomplete\\autocomplete.js:1105"
        },
        {
            "message": "Missing item type\nBottomSheet",
            "line": " web\\bower_components\\angular-material\\modules\\js\\bottomSheet\\bottomSheet.js:10"
        },
        {
            "message": "Missing item type\nShow a bottom sheet with the specified options.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\bottomSheet\\bottomSheet.js:74"
        },
        {
            "message": "Missing item type\nHide the existing bottom sheet and resolve the promise returned from\n`$mdBottomSheet.show()`. This call will close the most recently opened/current bottomsheet (if any).",
            "line": " web\\bower_components\\angular-material\\modules\\js\\bottomSheet\\bottomSheet.js:113"
        },
        {
            "message": "Missing item type\nHide the existing bottom sheet and reject the promise returned from\n`$mdBottomSheet.show()`.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\bottomSheet\\bottomSheet.js:125"
        },
        {
            "message": "Missing item type\nBottomSheet class to apply bottom-sheet behavior to an element",
            "line": " web\\bower_components\\angular-material\\modules\\js\\bottomSheet\\bottomSheet.js:225"
        },
        {
            "message": "Missing item type\nButton",
            "line": " web\\bower_components\\angular-material\\modules\\js\\button\\button.js:10"
        },
        {
            "message": "Missing item type\nCard components.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\card\\card.js:10"
        },
        {
            "message": "Missing item type\nCheckbox module!",
            "line": " web\\bower_components\\angular-material\\modules\\js\\checkbox\\checkbox.js:10"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js:10"
        },
        {
            "message": "Missing item type\nMDChip Directive Definition",
            "line": " web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js:50"
        },
        {
            "message": "Missing item type\nMdChipRemove Directive Definition.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js:104"
        },
        {
            "message": "Missing item type\nController for the MdChips component. Responsible for adding to and\nremoving from the list of chips, marking chips as selected, and binding to\nthe models of various input components.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js:168"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js:180"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js:183"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js:186"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js:189"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js:192"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js:195"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js:198"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js:201"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js:204"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js:207"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js:210"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js:213"
        },
        {
            "message": "Missing item type\nHidden hint text for how to delete a chip. Used to give context to screen readers.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js:217"
        },
        {
            "message": "Missing item type\nHidden label for the delete button. Used to give context to screen readers.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js:223"
        },
        {
            "message": "Missing item type\nModel used by the input element.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js:229"
        },
        {
            "message": "Missing item type\nWhether to use the onAppend expression to transform the chip buffer\nbefore appending it to the list.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js:235"
        },
        {
            "message": "Missing item type\nWhether to use the transformChip expression to transform the chip buffer\nbefore appending it to the list.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js:245"
        },
        {
            "message": "Missing item type\nWhether to use the onAdd expression to notify of chip additions.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js:252"
        },
        {
            "message": "Missing item type\nWhether to use the onRemove expression to notify of chip removals.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js:258"
        },
        {
            "message": "Missing item type\nWhether to use the onSelect expression to notify the component's user\nafter selecting a chip from the list.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js:264"
        },
        {
            "message": "Missing item type\nHandles the keydown event on the input element: by default <enter> appends\nthe buffer to the chip list, while backspace removes the last chip in the\nlist if the current buffer is empty.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js:273"
        },
        {
            "message": "Missing item type\nHandles the keydown event on the chip elements: backspace removes the selected chip, arrow\nkeys switch which chips is active",
            "line": " web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js:309"
        },
        {
            "message": "Missing item type\nGet the input's placeholder - uses `placeholder` when list is empty and `secondary-placeholder`\nwhen the list is non-empty. If `secondary-placeholder` is not provided, `placeholder` is used\nalways.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js:341"
        },
        {
            "message": "Missing item type\nRemoves chip at {@code index} and selects the adjacent chip.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js:353"
        },
        {
            "message": "Missing item type\nSets the selected chip index to -1.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js:365"
        },
        {
            "message": "Missing item type\nGets the index of an adjacent chip to select after deletion. Adjacency is\ndetermined as the next chip in the list, unless the target chip is the\nlast in the list, then it is the chip immediately preceding the target. If\nthere is only one item in the list, -1 is returned (select none).\nThe number returned is the index to select AFTER the target has been\nremoved.\nIf the current chip is not selected, then -1 is returned to select none.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js:372"
        },
        {
            "message": "Missing item type\nAppend the contents of the buffer to the chip list. This method will first\ncall out to the md-transform-chip method, if provided.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js:387"
        },
        {
            "message": "Missing item type\nSets whether to use the md-on-append expression. This expression is\nbound to scope and controller in {@code MdChipsDirective} as\n{@code onAppend}. Due to the nature of directive scope bindings, the\ncontroller cannot know on its own/from the scope whether an expression was\nactually provided.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js:424"
        },
        {
            "message": "Missing item type\nSets whether to use the md-transform-chip expression. This expression is\nbound to scope and controller in {@code MdChipsDirective} as\n{@code transformChip}. Due to the nature of directive scope bindings, the\ncontroller cannot know on its own/from the scope whether an expression was\nactually provided.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js:443"
        },
        {
            "message": "Missing item type\nSets whether to use the md-on-add expression. This expression is\nbound to scope and controller in {@code MdChipsDirective} as\n{@code onAdd}. Due to the nature of directive scope bindings, the\ncontroller cannot know on its own/from the scope whether an expression was\nactually provided.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js:454"
        },
        {
            "message": "Missing item type\nSets whether to use the md-on-remove expression. This expression is\nbound to scope and controller in {@code MdChipsDirective} as\n{@code onRemove}. Due to the nature of directive scope bindings, the\ncontroller cannot know on its own/from the scope whether an expression was\nactually provided.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js:465"
        },
        {
            "message": "Missing item type\nGets the input buffer. The input buffer can be the model bound to the\ndefault input item {@code this.chipBuffer}, the {@code selectedItem}\nmodel of an {@code md-autocomplete}, or, through some magic, the model\nbound to any inpput or text area element found within a\n{@code md-input-container} element.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js:487"
        },
        {
            "message": "Missing item type\nResets the input buffer for either the internal input or user provided input element.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js:501"
        },
        {
            "message": "Missing item type\nRemoves the chip at the given index.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js:517"
        },
        {
            "message": "Missing item type\nSelects the chip at `index`,",
            "line": " web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js:533"
        },
        {
            "message": "Missing item type\nMarks the chip at the given index as selected.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js:550"
        },
        {
            "message": "Missing item type\nSelects the chip at `index` and gives it focus.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js:567"
        },
        {
            "message": "Missing item type\nCall `focus()` on the chip at `index`",
            "line": " web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js:578"
        },
        {
            "message": "Missing item type\nConfigures the required interactions with the ngModel Controller.\nSpecifically, set {@code this.items} to the {@code NgModelCtrl#$viewVale}.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js:585"
        },
        {
            "message": "Missing item type\nConfigure event bindings on a user-provided input element.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js:615"
        },
        {
            "message": "Missing item type\nMDChips Directive Definition",
            "line": " web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js:816"
        },
        {
            "message": "Missing item type\nBuilds the final template for `md-chips` and returns the postLink function.\n\nBuilding the template involves 3 key components:\nstatic chips\nchip template\ninput control\n\nIf no `ng-model` is provided, only the static chip work needs to be done.\n\nIf no user-passed `md-chip-template` exists, the default template is used. This resulting\ntemplate is appended to the chip content element.\n\nThe remove button may be overridden by passing an element with an md-chip-remove attribute.\n\nIf an `input` or `md-autocomplete` element is provided by the caller, it is set aside for\ntransclusion later. The transclusion happens in `postLink` as the parent scope is required.\nIf no user input is provided, a default one is appended to the input container node in the\ntemplate.\n\nStatic Chips (i.e. `md-chip` elements passed from the caller) are gathered and set aside for\ntransclusion in the `postLink` function.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js:854"
        },
        {
            "message": "Missing item type\nConfigures controller and transcludes.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js:907"
        },
        {
            "message": "Missing item type\nController for the MdContactChips component",
            "line": " web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js:1002"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js:1007"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js:1010"
        },
        {
            "message": "Missing item type\nMDContactChips Directive Definition",
            "line": " web\\bower_components\\angular-material\\modules\\js\\chips\\chips.js:1125"
        },
        {
            "message": "Missing item type\nScrollable content",
            "line": " web\\bower_components\\angular-material\\modules\\js\\content\\content.js:10"
        },
        {
            "message": "Missing item type\nInitialization function that validates environment\nrequirements.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:10"
        },
        {
            "message": "Missing item type\nDetect if the ng-Touch module is also being used.\nWarn if detected.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:26"
        },
        {
            "message": "Missing item type\nUse this to throttle events that come in often.\nThe throttled function will always use the *last* invocation before the\ncoming frame.\n\nFor example, window resize events that fire many times a second:\nIf we set to use an raf-throttled callback on window resize, then\nour callback will only be fired once per frame, with the last resize\nevent that happened before that frame.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:55"
        },
        {
            "message": "Missing item type\nFactory function that creates the grab-bag $mdConstant service.\nngInject",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:197"
        },
        {
            "message": "Missing item type\nAs defined in core/style/variables.scss\n\n$layout-breakpoint-xs:     600px !default;\n$layout-breakpoint-sm:     960px !default;\n$layout-breakpoint-md:     1280px !default;\n$layout-breakpoint-lg:     1920px !default;",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:242"
        },
        {
            "message": "Missing item type\nInject the iterator facade to easily support iteration and accessors",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:283"
        },
        {
            "message": "Missing item type\niterator is a list facade to easily support iteration and accessors",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:294"
        },
        {
            "message": "Missing item type\nPublish copy of the enumerable set",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:335"
        },
        {
            "message": "Missing item type\nDetermine length of the list",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:343"
        },
        {
            "message": "Missing item type\nIs the index specified valid",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:351"
        },
        {
            "message": "Missing item type\nCan the iterator proceed to the next item in the list; relative to\nthe specified item.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:360"
        },
        {
            "message": "Missing item type\nCan the iterator proceed to the previous item in the list; relative to\nthe specified item.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:371"
        },
        {
            "message": "Missing item type\nGet item at specified index/position",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:382"
        },
        {
            "message": "Missing item type\nFind all elements matching the key/value pair\notherwise return null",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:391"
        },
        {
            "message": "Missing item type\nAdd item to list",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:406"
        },
        {
            "message": "Missing item type\nRemove item from list...",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:424"
        },
        {
            "message": "Missing item type\nGet the zero-based index of the target item",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:434"
        },
        {
            "message": "Missing item type\nBoolean existence check",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:443"
        },
        {
            "message": "Missing item type\nReturn first item in the list",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:452"
        },
        {
            "message": "Missing item type\nReturn last item in the list...",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:460"
        },
        {
            "message": "Missing item type\nFind the next item. If reloop is true and at the end of the list, it will go back to the\nfirst item. If given, the `validate` callback will be used to determine whether the next item\nis valid. If not valid, it will try to find the next item again.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:468"
        },
        {
            "message": "Missing item type\nUtil",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:702"
        },
        {
            "message": "Missing item type\nChecks if the target element has the requested style by key",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:718"
        },
        {
            "message": "Missing item type\nCalculate the positive scroll offset\nTODO: Check with pinch-zoom in IE/Chrome;\n      https://code.google.com/p/chromium/issues/detail?id=496285",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:775"
        },
        {
            "message": "Missing item type\nFinds the proper focus target by searching the DOM.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:790"
        },
        {
            "message": "Missing item type\nCan target and nested children for specified Selector (attribute)\nwhose value may be an expression that evaluates to True/False.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:815"
        },
        {
            "message": "Missing item type\nfacade to build md-backdrop element with desired styles\nNOTE: Use $compile to trigger backdrop postLink function",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:973"
        },
        {
            "message": "Missing item type\nsupplant() method from Crockford's `Remedial Javascript`\nEquivalent to use of $interpolate; without dependency on\ninterpolation symbols and scope. Note: the '{<token>}' can\nbe property names, property chains, or array indices.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:981"
        },
        {
            "message": "Missing item type\nMeasures the number of milliseconds taken to run the provided callback\nfunction. Uses a high-precision timer if available.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:1065"
        },
        {
            "message": "Missing item type\nCreate an implicit getter that caches its `getter()`\nlookup value",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:1075"
        },
        {
            "message": "Missing item type\nGet a unique ID.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:1091"
        },
        {
            "message": "Missing item type\nBuild polyfill for the Node.contains feature (if needed)",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:1164"
        },
        {
            "message": "Missing item type\nFunctional equivalent for $element.filter(‘md-bottom-sheet’)\nuseful with interimElements where the element and its container are important...",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:1177"
        },
        {
            "message": "Missing item type\nBreadth-First tree scan for element with matching `nodeName`",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:1194"
        },
        {
            "message": "Missing item type\nCase-insensitive scan of current elements only (do not descend).",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:1201"
        },
        {
            "message": "Missing item type\nScan children of specified node",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:1215"
        },
        {
            "message": "Missing item type\nGive optional properties with no value a boolean true if attr provided or false otherwise",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:1235"
        },
        {
            "message": "Missing item type\nAlternative to $timeout calls with 0 delay.\nnextTick() coalesces all calls within a single frame\nto minimize $digest thrashing",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:1248"
        },
        {
            "message": "Missing item type\nGrab a copy of the current queue\nClear the queue for future use\nProcess the existing queue\nTrigger digest if necessary",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:1276"
        },
        {
            "message": "Missing item type\nProcesses a template and replaces the start/end symbols if the application has\noverriden them.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:1299"
        },
        {
            "message": "Missing item type\nScan up dom hierarchy for enabled parent;",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:1315"
        },
        {
            "message": "Missing item type\nCheck if expected attribute has been specified on the target element or child",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:1388"
        },
        {
            "message": "Missing item type\nReturns a new provider which allows configuration of a new interimElement\nservice. Allows configuration of default options & methods for options,\nas well as configuration of 'preset' methods (eg dialog.basic(): basic is a preset method)",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:1638"
        },
        {
            "message": "Missing item type\nall interim elements will come with the 'build' preset",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:1658"
        },
        {
            "message": "Missing item type\nSave the configured defaults to be used when the factory is instantiated",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:1669"
        },
        {
            "message": "Missing item type\nAdd a method to the factory that isn't specific to any interim element operations",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:1678"
        },
        {
            "message": "Missing item type\nSave the configured preset to be used when the factory is instantiated",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:1687"
        },
        {
            "message": "Missing item type\nCreate a factory that has the given methods & defaults implementing interimElement",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:1713"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:1811"
        },
        {
            "message": "Missing item type\nSpecial method to hide and destroy an interimElement WITHOUT\nany 'leave` or hide animations ( an immediate force hide/remove )\n\nNOTE: This calls the onRemove() subclass method for each component...\nwhich must have code to respond to `options.$destroy == true`",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:1825"
        },
        {
            "message": "Missing item type\nHelper to call $injector.invoke with a local of the factory name for\nthis provider.\nIf an $mdDialog is providing options for a dialog and tries to inject\n$mdDialog, a circular dependency error will happen.\nWe get around that by manually injecting $mdDialog as a local.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:1836"
        },
        {
            "message": "Missing item type\nCompile, link, and show this interim element\nUse optional autoHided and transition-in effects",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:2025"
        },
        {
            "message": "Missing item type\nAfter the show process has finished/rejected:\n- announce 'removing',\n- perform the transition-out, and\n- perform optional clean up scope.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:2051"
        },
        {
            "message": "Missing item type\nThe `show()` returns a promise that will be resolved when the interim\nelement is hidden or cancelled...",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:2087"
        },
        {
            "message": "Missing item type\nForce the '$md<xxx>.show()' promise to reject",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:2095"
        },
        {
            "message": "Missing item type\nPrepare optional isolated scope and prepare $animate with default enter and leave\ntransitions for the new element instance.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:2103"
        },
        {
            "message": "Missing item type\nDefault usage to enable $animate to transition-in; can be easily overridden via 'options'",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:2118"
        },
        {
            "message": "Missing item type\nDefault usage to enable $animate to transition-out; can be easily overridden via 'options'",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:2125"
        },
        {
            "message": "Missing item type\nCompile an element with a templateUrl, controller, and locals",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:2137"
        },
        {
            "message": "Missing item type\nLink an element with compiled configuration",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:2154"
        },
        {
            "message": "Missing item type\nSearch for parent at insertion time, if not specified",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:2170"
        },
        {
            "message": "Missing item type\nIf auto-hide is enabled, start timer and prepare cancel function",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:2202"
        },
        {
            "message": "Missing item type\nShow the element ( with transitions), notify complete and start\noptional auto-Hide",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:2222"
        },
        {
            "message": "Missing item type\nThe position of the most recent click if that click was on a label element.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:2305"
        },
        {
            "message": "Missing item type\n$get is used to build an instance of $mdGesture\nngInject",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:2351"
        },
        {
            "message": "Missing item type\nMdGesture factory construction function\nngInject",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:2362"
        },
        {
            "message": "Missing item type\nMdGestureHandler\nA GestureHandler is an object which is able to dispatch custom dom events\nbased on native dom {touch,pointer,mouse}{start,move,end} events.\n\nA gesture will manage its lifecycle through the start,move,end, and cancel\nfunctions, which are called by native dom events.\n\nA gesture has the concept of 'options' (eg a swipe's required velocity), which can be\noverridden by elements registering through $mdGesture.register()",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:2618"
        },
        {
            "message": "Missing item type\nAttach Gestures: hook document and check shouldHijack clicks\nngInject",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:2775"
        },
        {
            "message": "Missing item type\nGets whether the given event is an input event that was caused by clicking on an\nassociated label element.\n\nThis is necessary because the browser will, upon clicking on a label element, fire an\n*extra* click event on its associated input (if any). mdGesture is able to flag the label\nclick as with `$material` correctly, but not the second input click.\n\nIn order to determine whether an input event is from a label click, we compare the (x, y) for\nthe event to the (x, y) for the most recent label click (which is cleared whenever a non-label\nclick occurs). Unfortunately, there are no event properties that tie the input and the label\ntogether (such as relatedTarget).",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:2946"
        },
        {
            "message": "Missing item type\nEnable directive attribute-to-class conversions\nDevelopers can use `<body md-layout-css />` to quickly\ndisable the Layout directives and prohibit the injection of Layout classNames",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:3016"
        },
        {
            "message": "Missing item type\nList of mediaQuery breakpoints and associated suffixes\n\n  [\n   { suffix: \"sm\", mediaQuery: \"screen and (max-width: 599px)\" },\n   { suffix: \"md\", mediaQuery: \"screen and (min-width: 600px) and (max-width: 959px)\" }\n  ]",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:3023"
        },
        {
            "message": "Missing item type\nregisterLayoutAPI()\n\nThe original ngMaterial Layout solution used attribute selectors and CSS.\n\n  ```html\n  <div layout=\"column\"> My Content </div>\n  ```\n\n  ```css\n  [layout] {\n box-sizing: border-box;\n display:flex;\n  }\n  [layout=column] {\n flex-direction : column\n  }\n  ```\n\n  Use of attribute selectors creates significant performance impacts in some\n  browsers... mainly IE.\n\n  This module registers directives that allow the same layout attributes to be\n  interpreted and converted to class selectors. The directive will add equivalent classes to each element that\n  contains a Layout directive.\n\n ```html\n<div layout=\"column\" class=\"layout layout-column\"> My Content </div>\n```\n\n  ```css\n  .layout {\n box-sizing: border-box;\n display:flex;\n  }\n  .layout-column {\n flex-direction : column\n  }\n  ```",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:3036"
        },
        {
            "message": "Missing item type\nConverts snake_case to camelCase.\nAlso there is special case for Moz prefix starting with upper case letter.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:3132"
        },
        {
            "message": "Missing item type\nSpecial directive that will disable ALL Layout conversions of layout\nattribute(s) to classname(s).\n\n<link rel=\"stylesheet\" href=\"angular-material.min.css\">\n<link rel=\"stylesheet\" href=\"angular-material.layout.css\">\n\n<body md-layout-css>\n ...\n</body>\n\nNote: Using md-layout-css directive requires the developer to load the Material\nLayout Attribute stylesheet (which only uses attribute selectors):\n\n      `angular-material.layout.css`\n\nAnother option is to use the LayoutProvider to configure and disable the attribute\nconversions; this would obviate the use of the `md-layout-css` directive",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:3147"
        },
        {
            "message": "Missing item type\nTail-hook ngCloak to delay the uncloaking while Layout transformers\nfinish processing. Eliminates flicker with Material.Layoouts",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:3178"
        },
        {
            "message": "Missing item type\nCreates a directive registration function where a possible dynamic attribute\nvalue will be observed/watched.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:3216"
        },
        {
            "message": "Missing item type\nAdd as transformed class selector(s), then\nremove the deprecated attribute selector",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:3251"
        },
        {
            "message": "Missing item type\nCreates a registration function for ngMaterial Layout attribute directive.\nThis is a `simple` transpose of attribute usage to class usage; where we ignore\nany attribute value",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:3264"
        },
        {
            "message": "Missing item type\nAdd as transformed class selector, then\nremove the deprecated attribute selector",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:3298"
        },
        {
            "message": "Missing item type\nAfter link-phase, do NOT remove deprecated layout attribute selector.\nInstead watch the attribute so interpolated data-bindings to layout\nselectors will continue to be supported.\n\n$observe() the className and update with new class (after removing the last one)\n\ne.g. `layout=\"{{layoutDemo.direction}}\"` will update...\n\nNOTE: The value must match one of the specified styles in the CSS.\nFor example `flex-gt-md=\"{{size}}`  where `scope.size == 47` will NOT work since\nonly breakpoints for 0, 5, 10, 15... 100, 33, 34, 66, 67 are defined.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:3309"
        },
        {
            "message": "Missing item type\nProvide console warning that this layout attribute has been deprecated",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:3336"
        },
        {
            "message": "Missing item type\nCentralize warnings for known flexbox issues (especially IE-related issues)",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:3348"
        },
        {
            "message": "Missing item type\nFor the Layout attribute value, validate or replace with default\nfallback value",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:3372"
        },
        {
            "message": "Missing item type\nReplace current attribute value with fallback value",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:3425"
        },
        {
            "message": "Missing item type\nSee if the original value has interpolation symbols:\ne.g.  flex-gt-md=\"{{triggerPoint}}\"",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:3439"
        },
        {
            "message": "Missing item type\nA component instance registration service.\nNote: currently this as a private service in the SideNav component.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:3496"
        },
        {
            "message": "Missing item type\nUsed to print an error when an instance for a handle isn't found.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:3521"
        },
        {
            "message": "Missing item type\nReturn all registered instances as an array.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:3527"
        },
        {
            "message": "Missing item type\nGet a registered instance.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:3534"
        },
        {
            "message": "Missing item type\nRegister an instance.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:3551"
        },
        {
            "message": "Missing item type\nRemove registration for an instance",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:3565"
        },
        {
            "message": "Missing item type\nResolve any pending promises for this instance",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:3575"
        },
        {
            "message": "Missing item type\nAsync accessor to registered component instance\nIf not available then a promise is created to notify\nall listeners when the instance is registered.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:3587"
        },
        {
            "message": "Missing item type\nRipple",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:3734"
        },
        {
            "message": "Missing item type\nAttaching given scope, element and options to inkRipple controller",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:3823"
        },
        {
            "message": "Missing item type\nController used by the ripple service in order to apply ripples\nngInject",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:3851"
        },
        {
            "message": "Missing item type\nEither remove or unlock any remaining ripples when the user mouses off of the element (either by\nmouseup or mouseleave event)",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:3880"
        },
        {
            "message": "Missing item type\nReturns the color that the ripple should be (either based on CSS or hard-coded)",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:3894"
        },
        {
            "message": "Missing item type\nFinds the color element and returns its text color for use as default ripple color",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:3909"
        },
        {
            "message": "Missing item type\nUpdating the ripple colors based on the current inkRipple value\nor the element's computed style color",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:3921"
        },
        {
            "message": "Missing item type\nTakes a string color and converts it to RGBA format",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:3930"
        },
        {
            "message": "Missing item type\nConverts hex value to RGBA string",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:3945"
        },
        {
            "message": "Missing item type\nConverts an RGB color to RGBA",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:3964"
        },
        {
            "message": "Missing item type\nBinds events to the root element for",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:3975"
        },
        {
            "message": "Missing item type\nCreate a new ripple on every mousedown event from the root element",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:3985"
        },
        {
            "message": "Missing item type\nEither remove or unlock any remaining ripples when the user mouses off of the element (either by\nmouseup, touchend or mouseleave event)",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:4012"
        },
        {
            "message": "Missing item type\nEither remove or unlock any remaining ripples when the user mouses off of the element (by\ntouchmove)",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:4020"
        },
        {
            "message": "Missing item type\nCycles through all ripples and attempts to remove them.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:4028"
        },
        {
            "message": "Missing item type\nCycles through all ripples and attempts to remove them with fade.\nDepending on logic within `fadeInComplete`, some removals will be postponed.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:4037"
        },
        {
            "message": "Missing item type\nCreates the ripple container element",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:4047"
        },
        {
            "message": "Missing item type\nThe attribute `md-ink-ripple` may be a static or interpolated\ncolor value OR a boolean indicator (used to disable ripples)",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:4078"
        },
        {
            "message": "Missing item type\nCreates a new ripple and adds it to the container.  Also tracks ripple in `this.ripples`.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:4086"
        },
        {
            "message": "Missing item type\nAfter fadeIn finishes, either kicks off the fade-out animation or queues the element for removal on mouseup",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:4150"
        },
        {
            "message": "Missing item type\nKicks off the animation for removing a ripple",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:4164"
        },
        {
            "message": "Missing item type\nRemoves the provided ripple from the DOM",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:4182"
        },
        {
            "message": "Missing item type\nUsed to create an empty directive.  This is used to track flag-directives whose children may have\nfunctionality based on them.\n\nExample: `md-no-ink` will potentially be used by all child directives.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:4191"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:4612"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:4619"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:4625"
        },
        {
            "message": "Missing item type\nService that makes an element apply theming related classes to itself.\n\n```js\napp.directive('myFancyDirective', function($mdTheming) {\n  return {\n    restrict: 'e',\n    link: function(scope, el, attrs) {\n      $mdTheming(el);\n    }\n  };\n});\n```",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:4913"
        },
        {
            "message": "Missing item type\nFactory function that requires special injections",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:5295"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:5301"
        },
        {
            "message": "Missing item type\nSpecific reversal of the request translate animation above...",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:5316"
        },
        {
            "message": "Missing item type\nListen for transitionEnd event (with optional timeout)\nAnnounce completion or failure via promise handlers",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:5329"
        },
        {
            "message": "Missing item type\nUpon timeout or transitionEnd, reject or resolve (respectively) this promise.\nNOTE: Make sure this transitionEnd didn't bubble up from a child",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:5342"
        },
        {
            "message": "Missing item type\nCalculate the zoom transform from dialog to origin.\n\nWe use this to set the dialog position immediately;\nthen the md-transition-in actually translates back to\n`translate3d(0,0,0) scale(1.0)`...\n\nNOTE: all values are rounded to the nearest integer",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:5360"
        },
        {
            "message": "Missing item type\nThis is a fallback if the origin information is no longer valid, then the\norigin bounds simply becomes the current bounds for the dialogContainer's parent",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:5395"
        },
        {
            "message": "Missing item type\nEnhance raw values to represent valid css stylings...",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:5407"
        },
        {
            "message": "Missing item type\nConvert the translate CSS value to key/value pair(s).",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:5443"
        },
        {
            "message": "Missing item type\nClone the Rect and calculate the height/width if needed",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:5460"
        },
        {
            "message": "Missing item type\nCalculate ClientRect of element; return null if hidden or zero size",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:5478"
        },
        {
            "message": "Missing item type\nCalculate 'rounded' center point of Rect",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:5491"
        },
        {
            "message": "Missing item type\nOlder browsers [FF31] expect camelCase\nproperty keys.\ne.g.\n animation-duration --> animationDuration",
            "line": " web\\bower_components\\angular-material\\modules\\js\\core\\core.js:5892"
        },
        {
            "message": "Missing item type\nDatepicker",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:13"
        },
        {
            "message": "Missing item type\nHeight of one calendar month tbody. This must be made known to the virtual-repeat and is\nsubsequently used for scrolling to specific months.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:40"
        },
        {
            "message": "Missing item type\nHeight of a calendar month with a single row. This is needed to calculate the offset for\nrendering an extra month in virtual-repeat that only contains one row.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:46"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:84"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:87"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:90"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:93"
        },
        {
            "message": "Missing item type\nController for the mdCalendar component.\nngInject @constructor",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:96"
        },
        {
            "message": "Missing item type\nDummy array-like object for virtual-repeat to iterate over. The length is the total\nnumber of months that can be viewed. This is shorter than ideal because of (potential)\nFirefox bug https://bugzilla.mozilla.org/show_bug.cgi?id=1181658.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:103"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:119"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:122"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:125"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:128"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:131"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:134"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:137"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:140"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:143"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:146"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:149"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:152"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:155"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:169"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:172"
        },
        {
            "message": "Missing item type\nThe selected date. Keep track of this separately from the ng-model value so that we\ncan know, when the ng-model value changes, what the previous value was before it's updated\nin the component's UI.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:175"
        },
        {
            "message": "Missing item type\nThe date that is currently focused or showing in the calendar. This will initially be set\nto the ng-model value if set, otherwise to today. It will be updated as the user navigates\nto other months. The cell corresponding to the displayDate does not necesarily always have\nfocus in the document (such as for cases when the user is scrolling the calendar).",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:184"
        },
        {
            "message": "Missing item type\nThe date that has or should have focus.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:193"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:199"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:202"
        },
        {
            "message": "Missing item type\nHandles a click event on a date cell.\nCreated here so that every cell can use the same function instance.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:214"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:234"
        },
        {
            "message": "Missing item type\nSets up the controller's reference to ngModelController.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:236"
        },
        {
            "message": "Missing item type\nInitialize the calendar by building the months that are initially visible.\nInitialization should occur after the ngModel value is known.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:249"
        },
        {
            "message": "Missing item type\nHides the vertical scrollbar on the calendar scroller by setting the width on the\ncalendar scroller and the `overflow: hidden` wrapper around the scroller, and then setting\na padding-right on the scroller equal to the width of the browser's scrollbar.\n\nThis will cause a reflow.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:261"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:283"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:289"
        },
        {
            "message": "Missing item type\nHandles a key event in the calendar with the appropriate action. The action will either\nbe to select the focused date or to navigate to focus a new date.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:291"
        },
        {
            "message": "Missing item type\nGets the date to focus as the result of a key event.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:335"
        },
        {
            "message": "Missing item type\nGets the \"index\" of the currently selected date as it would be in the virtual-repeat.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:363"
        },
        {
            "message": "Missing item type\nScrolls to the month of the given date.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:372"
        },
        {
            "message": "Missing item type\nSets the ng-model value for the calendar and emits a change event.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:385"
        },
        {
            "message": "Missing item type\nFocus the cell corresponding to the given date.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:395"
        },
        {
            "message": "Missing item type\nIf a date exceeds minDate or maxDate, returns date matching minDate or maxDate, respectively.\nOtherwise, returns the date.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:417"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:434"
        },
        {
            "message": "Missing item type\nChange the selected date in the calendar (ngModel value has already been changed).",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:436"
        },
        {
            "message": "Missing item type\nChange the date that is being shown in the calendar. If the given date is in a different\nmonth, the displayed month will be transitioned.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:468"
        },
        {
            "message": "Missing item type\nAnimates the transition from the calendar's current month to the given month.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:499"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:509"
        },
        {
            "message": "Missing item type\nBuilds and appends a day-of-the-week header to the calendar.\nThis should only need to be called once during initialization.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:511"
        },
        {
            "message": "Missing item type\nGets an identifier for a date unique to the calendar instance for internal\npurposes. Not to be displayed.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:529"
        },
        {
            "message": "Missing item type\nPrivate directive consumed by md-calendar. Having this directive lets the calender use\nmd-virtual-repeat and also cleanly separates the month DOM construction functions from\nthe rest of the calendar controller logic.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:554"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:586"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:589"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:592"
        },
        {
            "message": "Missing item type\nController for a single calendar month.\nngInject @constructor",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:595"
        },
        {
            "message": "Missing item type\nNumber of months from the start of the month \"items\" that the currently rendered month\noccurs. Set via angular data binding.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:605"
        },
        {
            "message": "Missing item type\nDate cell to focus after appending the month to the document.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:612"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:620"
        },
        {
            "message": "Missing item type\nCreates a single cell to contain a date in the calendar with all appropriate\nattributes and classes added. If a date is given, the cell content will be set\nbased on the date.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:635"
        },
        {
            "message": "Missing item type\nCheck whether date is in range and enabled",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:694"
        },
        {
            "message": "Missing item type\nBuilds a `tr` element for the calendar grid.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:706"
        },
        {
            "message": "Missing item type\nBuilds the <tbody> content for the given date's month.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:723"
        },
        {
            "message": "Missing item type\nGets the day-of-the-week index for a date for the current locale.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:823"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:914"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:916"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:919"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:922"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:925"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:928"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:931"
        },
        {
            "message": "Missing item type\nFunction that converts the date portion of a Date to a string.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:934"
        },
        {
            "message": "Missing item type\nFunction that converts a date string to a Date object (the date portion)",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:940"
        },
        {
            "message": "Missing item type\nFunction that formats a Date into a month header string.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:946"
        },
        {
            "message": "Missing item type\nFunction that formats a week number into a label for the week.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:952"
        },
        {
            "message": "Missing item type\nFunction that formats a date into a long aria-label that is read\nwhen the focused date changes.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:958"
        },
        {
            "message": "Missing item type\nARIA label for the calendar \"dialog\" used in the datepicker.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:965"
        },
        {
            "message": "Missing item type\nARIA label for the datepicker's \"Open calendar\" buttons.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:971"
        },
        {
            "message": "Missing item type\nFactory function that returns an instance of the dateLocale service.\nngInject",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:978"
        },
        {
            "message": "Missing item type\nDefault date-to-string formatting function.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:985"
        },
        {
            "message": "Missing item type\nDefault string-to-date parsing function.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1010"
        },
        {
            "message": "Missing item type\nDefault function to determine whether a string makes sense to be\nparsed to a Date object.\n\nThis is very permissive and is just a basic sanity check to ensure that\nthings like single integers aren't able to be parsed into dates.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1019"
        },
        {
            "message": "Missing item type\nDefault date-to-string formatter to get a month header.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1037"
        },
        {
            "message": "Missing item type\nDefault week number formatter.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1046"
        },
        {
            "message": "Missing item type\nDefault formatter for date cell aria-labels.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1055"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1219"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1222"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1225"
        },
        {
            "message": "Missing item type\nHeight of the calendar pane used to check if the pane is going outside the boundary of\nthe viewport. See calendar.scss for how $md-calendar-height is computed; an extra 20px is\nalso added to space the pane away from the exact edge of the screen.\n\n This is computed statically now, but can be changed to be measured if the circumstances\n of calendar sizing are changed.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1228"
        },
        {
            "message": "Missing item type\nWidth of the calendar pane used to check if the pane is going outside the boundary of\nthe viewport. See calendar.scss for how $md-calendar-width is computed; an extra 20px is\nalso added to space the pane away from the exact edge of the screen.\n\n This is computed statically now, but can be changed to be measured if the circumstances\n of calendar sizing are changed.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1238"
        },
        {
            "message": "Missing item type\nController for md-datepicker.\n\nngInject @constructor",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1248"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1255"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1258"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1261"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1264"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1267"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1270"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1276"
        },
        {
            "message": "Missing item type\nThe root document element. This is used for attaching a top-level click handler to\nclose the calendar panel when a click outside said panel occurs. We use `documentElement`\ninstead of body because, when scrolling is disabled, some browsers consider the body element\nto be completely off the screen and propagate events directly to the html element.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1279"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1288"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1291"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1294"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1297"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1300"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1303"
        },
        {
            "message": "Missing item type\nElement covering everything but the input in the top of the floating calendar pane.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1306"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1312"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1315"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1318"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1321"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1324"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1327"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1331"
        },
        {
            "message": "Missing item type\nElement from which the calendar pane was opened. Keep track of this so that we can return\nfocus to it when the pane is closed.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1334"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1345"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1348"
        },
        {
            "message": "Missing item type\nSets up the controller's reference to ngModelController.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1369"
        },
        {
            "message": "Missing item type\nAttach event listeners for both the text input and the md-calendar.\nEvents are used instead of ng-model so that updates don't infinitely update the other\non a change. This should also be more performant than using a $watch.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1392"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1415"
        },
        {
            "message": "Missing item type\nCapture properties set to the date-picker and imperitively handle internal changes.\nThis is done to avoid setting up additional $watches.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1434"
        },
        {
            "message": "Missing item type\nSets whether the date-picker is disabled.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1459"
        },
        {
            "message": "Missing item type\nSets the custom ngModel.$error flags to be consumed by ngMessages. Flags are:\n  - mindate: whether the selected date is before the minimum date.\n  - maxdate: whether the selected flag is after the maximum date.\n  - filtered: whether the selected date is allowed by the custom filtering function.\n  - valid: whether the entered text input is a valid date\n\nThe 'required' flag is handled automatically by ngModel.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1469"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1517"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1525"
        },
        {
            "message": "Missing item type\nSets the model value if the user input is a valid date.\nAdds an invalid class to the input element if not.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1530"
        },
        {
            "message": "Missing item type\nCheck whether date is in range and enabled",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1556"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1566"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1635"
        },
        {
            "message": "Missing item type\nOpen the floating calendar pane.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1648"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1681"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1697"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1702"
        },
        {
            "message": "Missing item type\nSets whether the input is currently focused.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1711"
        },
        {
            "message": "Missing item type\nHandles a click on the document body when the floating calendar pane is open.\nCloses the floating calendar pane if the click is not inside of it.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1722"
        },
        {
            "message": "Missing item type\nUtility for performing date calculations to facilitate operation of the calendar and\ndatepicker.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1743"
        },
        {
            "message": "Missing item type\nGets the first day of the month for the given date's month.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1769"
        },
        {
            "message": "Missing item type\nGets the number of days in the month for the given date's month.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1778"
        },
        {
            "message": "Missing item type\nGet an arbitrary date in the month after the given date's month.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1787"
        },
        {
            "message": "Missing item type\nGet an arbitrary date in the month before the given date's month.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1796"
        },
        {
            "message": "Missing item type\nGets whether two dates have the same month and year.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1805"
        },
        {
            "message": "Missing item type\nGets whether two dates are the same day (not not necesarily the same time).",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1815"
        },
        {
            "message": "Missing item type\nGets whether a date is in the month immediately after some date.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1825"
        },
        {
            "message": "Missing item type\nGets whether a date is in the month immediately before some date.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1836"
        },
        {
            "message": "Missing item type\nGets the midpoint between two dates.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1847"
        },
        {
            "message": "Missing item type\nGets the week of the month that a given date occurs in.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1857"
        },
        {
            "message": "Missing item type\nGets a new date incremented by the given number of days. Number of days can be negative.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1867"
        },
        {
            "message": "Missing item type\nGets a new date incremented by the given number of months. Number of months can be negative.\nIf the date of the given month does not match the target month, the date will be set to the\nlast day of the month.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1877"
        },
        {
            "message": "Missing item type\nGet the integer distance between two months. This *only* considers the month and year\nportion of the Date instances.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1901"
        },
        {
            "message": "Missing item type\nGets the last day of the month for the given date.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1914"
        },
        {
            "message": "Missing item type\nChecks whether a date is valid.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1923"
        },
        {
            "message": "Missing item type\nSets a date's time to midnight.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1932"
        },
        {
            "message": "Missing item type\nCreates a date with the time set to midnight.\nDrop-in replacement for two forms of the Date constructor:\n1. No argument for Date representing now.\n2. Single-argument value representing number of seconds since Unix Epoch\nor a Date object.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1942"
        },
        {
            "message": "Missing item type\nChecks if a date is within a min and max range, ignoring the time component.\nIf minDate or maxDate are not dates, they are ignored.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\datepicker\\datepicker.js:1962"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\dialog\\dialog.js:10"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\dialog\\dialog.js:75"
        },
        {
            "message": "Missing item type\nBuilds a preconfigured dialog with the specified message.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\dialog\\dialog.js:331"
        },
        {
            "message": "Missing item type\nBuilds a preconfigured dialog with the specified message. You can call show and the promise returned\nwill be resolved only if the user clicks the confirm action on the dialog.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\dialog\\dialog.js:352"
        },
        {
            "message": "Missing item type\nShow a dialog with the specified options.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\dialog\\dialog.js:377"
        },
        {
            "message": "Missing item type\nHide an existing dialog and resolve the promise returned from `$mdDialog.show()`.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\dialog\\dialog.js:441"
        },
        {
            "message": "Missing item type\nHide an existing dialog and reject the promise returned from `$mdDialog.show()`.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\dialog\\dialog.js:453"
        },
        {
            "message": "Missing item type\nThe specified template should contain a <md-dialog> wrapper element....",
            "line": " web\\bower_components\\angular-material\\modules\\js\\dialog\\dialog.js:546"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\dialog\\dialog.js:575"
        },
        {
            "message": "Missing item type\nCheck to see if they used the deprecated .md-actions class and log a warning",
            "line": " web\\bower_components\\angular-material\\modules\\js\\dialog\\dialog.js:591"
        },
        {
            "message": "Missing item type\nFor alerts, focus on content... otherwise focus on\nthe close button (or equivalent)",
            "line": " web\\bower_components\\angular-material\\modules\\js\\dialog\\dialog.js:602"
        },
        {
            "message": "Missing item type\nIf no element with class dialog-close, try to find the last\nbutton child in md-actions and assume it is a close button.\n\nIf we find no actions at all, log a warning to the console.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\dialog\\dialog.js:612"
        },
        {
            "message": "Missing item type\nRemove function for all dialogs",
            "line": " web\\bower_components\\angular-material\\modules\\js\\dialog\\dialog.js:629"
        },
        {
            "message": "Missing item type\nFor normal closes, animate the removal.\nFor forced closes (like $destroy events), skip the animations",
            "line": " web\\bower_components\\angular-material\\modules\\js\\dialog\\dialog.js:650"
        },
        {
            "message": "Missing item type\nDetach the element",
            "line": " web\\bower_components\\angular-material\\modules\\js\\dialog\\dialog.js:658"
        },
        {
            "message": "Missing item type\nCapture originator/trigger/from/to element information (if available)\nand the parent container for the dialog; defaults to the $rootElement\nunless overridden in the options.parent",
            "line": " web\\bower_components\\angular-material\\modules\\js\\dialog\\dialog.js:669"
        },
        {
            "message": "Missing item type\nIdentify the bounding RECT for the target element",
            "line": " web\\bower_components\\angular-material\\modules\\js\\dialog\\dialog.js:689"
        },
        {
            "message": "Missing item type\nIf the specifier is a simple string selector, then query for\nthe DOM element.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\dialog\\dialog.js:712"
        },
        {
            "message": "Missing item type\nListen for escape keys and outside clicks to auto close",
            "line": " web\\bower_components\\angular-material\\modules\\js\\dialog\\dialog.js:729"
        },
        {
            "message": "Missing item type\nShow modal backdrop element...",
            "line": " web\\bower_components\\angular-material\\modules\\js\\dialog\\dialog.js:821"
        },
        {
            "message": "Missing item type\nHide modal backdrop element...",
            "line": " web\\bower_components\\angular-material\\modules\\js\\dialog\\dialog.js:837"
        },
        {
            "message": "Missing item type\nInject ARIA-specific attributes appropriate for Dialogs",
            "line": " web\\bower_components\\angular-material\\modules\\js\\dialog\\dialog.js:855"
        },
        {
            "message": "Missing item type\nPrevents screen reader interaction behind modal window\non swipe interfaces",
            "line": " web\\bower_components\\angular-material\\modules\\js\\dialog\\dialog.js:909"
        },
        {
            "message": "Missing item type\nWalk DOM to apply or remove aria-hidden on sibling nodes\nand parent sibling nodes",
            "line": " web\\bower_components\\angular-material\\modules\\js\\dialog\\dialog.js:926"
        },
        {
            "message": "Missing item type\nEnsure the dialog container fill-stretches to the viewport",
            "line": " web\\bower_components\\angular-material\\modules\\js\\dialog\\dialog.js:950"
        },
        {
            "message": "Missing item type\nDialog open and pop-in animation",
            "line": " web\\bower_components\\angular-material\\modules\\js\\dialog\\dialog.js:966"
        },
        {
            "message": "Missing item type\nDialog close and pop-out animation",
            "line": " web\\bower_components\\angular-material\\modules\\js\\dialog\\dialog.js:1015"
        },
        {
            "message": "Missing item type\nUtility function to filter out raw DOM nodes",
            "line": " web\\bower_components\\angular-material\\modules\\js\\dialog\\dialog.js:1022"
        },
        {
            "message": "Missing item type\nDivider module!",
            "line": " web\\bower_components\\angular-material\\modules\\js\\divider\\divider.js:10"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\fabActions\\fabActions.js:13"
        },
        {
            "message": "Missing item type\nThe duration of the CSS animation in milliseconds.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\fabSpeedDial\\fabSpeedDial.js:311"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\fabSpeedDial\\fabSpeedDial.js:318"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\fabToolbar\\fabToolbar.js:13"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\fabTrigger\\fabTrigger.js:13"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\gridList\\gridList.js:10"
        },
        {
            "message": "Missing item type\nWatches for changes in media, invalidating layout as necessary.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\gridList\\gridList.js:126"
        },
        {
            "message": "Missing item type\nPerforms grid layout if the provided mediaName matches the currently\nactive media type.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\gridList\\gridList.js:149"
        },
        {
            "message": "Missing item type\nInvokes the layout engine, and uses its results to lay out our\ntile elements.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\gridList\\gridList.js:165"
        },
        {
            "message": "Missing item type\nGets the styles applied to a tile element described by the given parameters.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\gridList\\gridList.js:249"
        },
        {
            "message": "Missing item type\nGets an array of objects containing the rowspan and colspan for each tile.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\gridList\\gridList.js:364"
        },
        {
            "message": "Missing item type\nSet the reflow animator callback",
            "line": " web\\bower_components\\angular-material\\modules\\js\\gridList\\gridList.js:461"
        },
        {
            "message": "Missing item type\nPublish layout function",
            "line": " web\\bower_components\\angular-material\\modules\\js\\gridList\\gridList.js:470"
        },
        {
            "message": "Missing item type\nAn array of objects describing each tile's position in the grid.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\gridList\\gridList.js:482"
        },
        {
            "message": "Missing item type\nMaps grid positioning to an element and a set of styles using the\nprovided updateFn.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\gridList\\gridList.js:489"
        },
        {
            "message": "Missing item type\nDefault animator simply sets the element.css( <styles> ). An alternate\nanimator can be provided as an argument. The function has the following\nsignature:\n\n   function({grid: {element: JQLite, style: Object}, tiles: Array<{element: JQLite, style: Object}>)",
            "line": " web\\bower_components\\angular-material\\modules\\js\\gridList\\gridList.js:501"
        },
        {
            "message": "Missing item type\nTiming for the most recent layout run.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\gridList\\gridList.js:516"
        },
        {
            "message": "Missing item type\nDefault Gridlist animator simple sets the css for each element;\nNOTE: any transitions effects must be manually set in the CSS.\ne.g.\n\n md-grid-tile {\n   transition: all 700ms ease-out 50ms;\n }",
            "line": " web\\bower_components\\angular-material\\modules\\js\\gridList\\gridList.js:531"
        },
        {
            "message": "Missing item type\nCalculates the positions of tiles.\n\nThe algorithm works as follows:\n   An Array<Number> with length colCount (spaceTracker) keeps track of\n   available tiling positions, where elements of value 0 represents an\n   empty position. Space for a tile is reserved by finding a sequence of\n   0s with length <= than the tile's colspan. When such a space has been\n   found, the occupied tile positions are incremented by the tile's\n   rowspan value, as these positions have become unavailable for that\n   many rows.\n\n   If the end of a row has been reached without finding space for the\n   tile, spaceTracker's elements are each decremented by 1 to a minimum\n   of 0. Rows are searched in this fashion until space is found.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\gridList\\gridList.js:548"
        },
        {
            "message": "Missing item type\nIcon",
            "line": " web\\bower_components\\angular-material\\modules\\js\\icon\\icon.js:10"
        },
        {
            "message": "Missing item type\nDirective postLink\nSupports embedded SVGs, font-icons, & external SVGs",
            "line": " web\\bower_components\\angular-material\\modules\\js\\icon\\icon.js:198"
        },
        {
            "message": "Missing item type\nRegister a source URL for a specific icon name; the name may include optional 'icon set' name prefix.\nThese icons  will later be retrieved from the cache using `$mdIcon( <icon name> )`",
            "line": " web\\bower_components\\angular-material\\modules\\js\\icon\\icon.js:331"
        },
        {
            "message": "Missing item type\nRegister a source URL for a 'named' set of icons; group of SVG definitions where each definition\nhas an icon id. Individual icons can be subsequently retrieved from this cached set using\n`$mdIcon(<icon set name>:<icon name>)`",
            "line": " web\\bower_components\\angular-material\\modules\\js\\icon\\icon.js:360"
        },
        {
            "message": "Missing item type\nRegister a source URL for the default 'named' set of icons. Unless explicitly registered,\nsubsequent lookups of icons will failover to search this 'default' icon set.\nIcon can be retrieved from this cached, default set using `$mdIcon(<name>)`",
            "line": " web\\bower_components\\angular-material\\modules\\js\\icon\\icon.js:391"
        },
        {
            "message": "Missing item type\nWhen using Font-Icons, Angular Material assumes the the Material Design icons will be used and automatically\nconfigures the default font-set == 'material-icons'. Note that the font-set references the font-icon library\nclass style that should be applied to the `<md-icon>`.\n\nConfiguring the default means that the attributes\n`md-font-set=\"material-icons\"` or `class=\"material-icons\"` do not need to be explicitly declared on the\n`<md-icon>` markup. For example:\n\n `<md-icon> face </md-icon>`\n will render as\n `<span class=\"material-icons\"> face </span>`, and\n\n `<md-icon md-font-set=\"fa\"> face </md-icon>`\n will render as\n `<span class=\"fa\"> face </span>`",
            "line": " web\\bower_components\\angular-material\\modules\\js\\icon\\icon.js:420"
        },
        {
            "message": "Missing item type\nWhile `<md-icon />` markup can also be style with sizing CSS, this method configures\nthe default width **and** height used for all icons; unless overridden by specific CSS.\nThe default sizing is (24px, 24px).",
            "line": " web\\bower_components\\angular-material\\modules\\js\\icon\\icon.js:452"
        },
        {
            "message": "Missing item type\nRegister an alias name associated with a font-icon library style ;",
            "line": " web\\bower_components\\angular-material\\modules\\js\\icon\\icon.js:516"
        },
        {
            "message": "Missing item type\nSpecify a default style name associated with a font-icon library\nfallback to Material Icons.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\icon\\icon.js:527"
        },
        {
            "message": "Missing item type\nConfiguration item stored in the Icon registry; used for lookups\nto load if not already cached in the `loaded` cache",
            "line": " web\\bower_components\\angular-material\\modules\\js\\icon\\icon.js:590"
        },
        {
            "message": "Missing item type\nActual $mdIcon service is essentially a lookup function",
            "line": " web\\bower_components\\angular-material\\modules\\js\\icon\\icon.js:651"
        },
        {
            "message": "Missing item type\nLookup registered fontSet style using its alias...\nIf not found,",
            "line": " web\\bower_components\\angular-material\\modules\\js\\icon\\icon.js:669"
        },
        {
            "message": "Missing item type\nPrepare and cache the loaded icon for the specified `id`",
            "line": " web\\bower_components\\angular-material\\modules\\js\\icon\\icon.js:685"
        },
        {
            "message": "Missing item type\nLookup the configuration in the registry, if !registered throw an error\notherwise load the icon [on-demand] using the registered URL.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\icon\\icon.js:697"
        },
        {
            "message": "Missing item type\nLoads the file as XML and uses querySelector( <id> ) to find\nthe desired node...",
            "line": " web\\bower_components\\angular-material\\modules\\js\\icon\\icon.js:709"
        },
        {
            "message": "Missing item type\nLoad the icon by URL (may use the $templateCache).\nExtract the data for later conversion to Icon",
            "line": " web\\bower_components\\angular-material\\modules\\js\\icon\\icon.js:733"
        },
        {
            "message": "Missing item type\nCatch HTTP or generic errors not related to incorrect icon IDs.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\icon\\icon.js:745"
        },
        {
            "message": "Missing item type\nCheck target signature to see if it is an Icon instance.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\icon\\icon.js:755"
        },
        {
            "message": "Missing item type\nDefine the Icon class",
            "line": " web\\bower_components\\angular-material\\modules\\js\\icon\\icon.js:762"
        },
        {
            "message": "Missing item type\nPrepare the DOM element that will be cached in the\nloaded iconCache store.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\icon\\icon.js:780"
        },
        {
            "message": "Missing item type\nClone the Icon DOM element.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\icon\\icon.js:797"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\input\\input.js:10"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\input\\input.js:332"
        },
        {
            "message": "Missing item type\nList module",
            "line": " web\\bower_components\\angular-material\\modules\\js\\list\\list.js:10"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\menu\\menu.js:10"
        },
        {
            "message": "Missing item type\nngInject",
            "line": " web\\bower_components\\angular-material\\modules\\js\\menu\\menu.js:26"
        },
        {
            "message": "Missing item type\nCalled by our linking fn to provide access to the menu-content\nelement removed during link",
            "line": " web\\bower_components\\angular-material\\modules\\js\\menu\\menu.js:37"
        },
        {
            "message": "Missing item type\nUses the $mdMenu interim element service to open the menu contents",
            "line": " web\\bower_components\\angular-material\\modules\\js\\menu\\menu.js:126"
        },
        {
            "message": "Missing item type\nBuild a nice object out of our string attribute which specifies the\ntarget mode for left and top positioning",
            "line": " web\\bower_components\\angular-material\\modules\\js\\menu\\menu.js:203"
        },
        {
            "message": "Missing item type\nBuild a nice object out of our string attribute which specifies\nthe offset of top and left in pixels.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\menu\\menu.js:222"
        },
        {
            "message": "Missing item type\nngInject",
            "line": " web\\bower_components\\angular-material\\modules\\js\\menu\\menu.js:391"
        },
        {
            "message": "Missing item type\nShow modal backdrop element...",
            "line": " web\\bower_components\\angular-material\\modules\\js\\menu\\menu.js:502"
        },
        {
            "message": "Missing item type\nHide and destroys the backdrop created by showBackdrop()",
            "line": " web\\bower_components\\angular-material\\modules\\js\\menu\\menu.js:524"
        },
        {
            "message": "Missing item type\nRemoving the menu element from the DOM and remove all associated event listeners\nand backdrop",
            "line": " web\\bower_components\\angular-material\\modules\\js\\menu\\menu.js:533"
        },
        {
            "message": "Missing item type\nFor normal closes, animate the removal.\nFor forced closes (like $destroy events), skip the animations",
            "line": " web\\bower_components\\angular-material\\modules\\js\\menu\\menu.js:547"
        },
        {
            "message": "Missing item type\nDetach the element",
            "line": " web\\bower_components\\angular-material\\modules\\js\\menu\\menu.js:555"
        },
        {
            "message": "Missing item type\nInserts and configures the staged Menu element into the DOM, positioning it,\nand wiring up various interaction events",
            "line": " web\\bower_components\\angular-material\\modules\\js\\menu\\menu.js:566"
        },
        {
            "message": "Missing item type\nPlace the menu into the DOM and call positioning related functions",
            "line": " web\\bower_components\\angular-material\\modules\\js\\menu\\menu.js:588"
        },
        {
            "message": "Missing item type\nCheck for valid opts and set some sane defaults",
            "line": " web\\bower_components\\angular-material\\modules\\js\\menu\\menu.js:613"
        },
        {
            "message": "Missing item type\nConfigure various resize listeners for screen changes",
            "line": " web\\bower_components\\angular-material\\modules\\js\\menu\\menu.js:631"
        },
        {
            "message": "Missing item type\nActivate interaction on the menu. Wire up keyboard listerns for\nclicks, keypresses, backdrop closing, etc.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\menu\\menu.js:657"
        },
        {
            "message": "Missing item type\nTakes a keypress event and focuses the next/previous menu\nitem from the emitting element",
            "line": " web\\bower_components\\angular-material\\modules\\js\\menu\\menu.js:793"
        },
        {
            "message": "Missing item type\nAttempts to focus an element. Checks whether that element is the currently\nfocused element after attempting.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\menu\\menu.js:820"
        },
        {
            "message": "Missing item type\nUse browser to remove this element without triggering a $destroy event",
            "line": " web\\bower_components\\angular-material\\modules\\js\\menu\\menu.js:833"
        },
        {
            "message": "Missing item type\nComputes menu position and sets the style on the menu container",
            "line": " web\\bower_components\\angular-material\\modules\\js\\menu\\menu.js:846"
        },
        {
            "message": "Missing item type\nClamps the repositioning of the menu within the confines of\nbounding element (often the screen/body)",
            "line": " web\\bower_components\\angular-material\\modules\\js\\menu\\menu.js:945"
        },
        {
            "message": "Missing item type\nGets the first visible child in the openMenuNode\nNecessary incase menu nodes are being dynamically hidden",
            "line": " web\\bower_components\\angular-material\\modules\\js\\menu\\menu.js:954"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\menuBar\\menuBar.js:10"
        },
        {
            "message": "Missing item type\nngInject",
            "line": " web\\bower_components\\angular-material\\modules\\js\\menuBar\\menuBar.js:27"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\menuBar\\menuBar.js:362"
        },
        {
            "message": "Missing item type\nngInject",
            "line": " web\\bower_components\\angular-material\\modules\\js\\menuBar\\menuBar.js:426"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\menuBar\\menuBar.js:531"
        },
        {
            "message": "Missing item type\nCircular Progress module!",
            "line": " web\\bower_components\\angular-material\\modules\\js\\progressCircular\\progressCircular.js:10"
        },
        {
            "message": "Missing item type\nWatch the value and md-mode attributes",
            "line": " web\\bower_components\\angular-material\\modules\\js\\progressCircular\\progressCircular.js:115"
        },
        {
            "message": "Missing item type\nUpdate size/scaling of the progress indicator\nWatch the \"value\" and \"md-mode\" attributes",
            "line": " web\\bower_components\\angular-material\\modules\\js\\progressCircular\\progressCircular.js:144"
        },
        {
            "message": "Missing item type\nAuto-defaults the mode to either `determinate` or `indeterminate` mode; if not specified",
            "line": " web\\bower_components\\angular-material\\modules\\js\\progressCircular\\progressCircular.js:160"
        },
        {
            "message": "Missing item type\nManually animate the Determinate indicator based on the specified\npercentage value (0-100).\n\nNote: this animation was previously done using SCSS.\n- generated 54K of styles\n- use attribute selectors which had poor performances in IE",
            "line": " web\\bower_components\\angular-material\\modules\\js\\progressCircular\\progressCircular.js:178"
        },
        {
            "message": "Missing item type\nWe will scale the progress circle based on the default diameter.\n\nDetermine the diameter percentage (defaults to 100%)\nMay be express as float, percentage, or integer",
            "line": " web\\bower_components\\angular-material\\modules\\js\\progressCircular\\progressCircular.js:212"
        },
        {
            "message": "Missing item type\nIs the md-mode a valid option?",
            "line": " web\\bower_components\\angular-material\\modules\\js\\progressCircular\\progressCircular.js:228"
        },
        {
            "message": "Missing item type\nClamps the value to be between 0 and 100.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\progressCircular\\progressCircular.js:248"
        },
        {
            "message": "Missing item type\nLinear Progress module!",
            "line": " web\\bower_components\\angular-material\\modules\\js\\progressLinear\\progressLinear.js:10"
        },
        {
            "message": "Missing item type\nWatch the value, md-buffer-value, and md-mode attributes",
            "line": " web\\bower_components\\angular-material\\modules\\js\\progressLinear\\progressLinear.js:104"
        },
        {
            "message": "Missing item type\nAuto-defaults the mode to either `determinate` or `indeterminate` mode; if not specified",
            "line": " web\\bower_components\\angular-material\\modules\\js\\progressLinear\\progressLinear.js:137"
        },
        {
            "message": "Missing item type\nIs the md-mode a valid option?",
            "line": " web\\bower_components\\angular-material\\modules\\js\\progressLinear\\progressLinear.js:153"
        },
        {
            "message": "Missing item type\nManually set CSS to animate the Determinate indicator based on the specified\npercentage value (0-100).",
            "line": " web\\bower_components\\angular-material\\modules\\js\\progressLinear\\progressLinear.js:173"
        },
        {
            "message": "Missing item type\nClamps the value to be between 0 and 100.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\progressLinear\\progressLinear.js:186"
        },
        {
            "message": "Missing item type\nradioButton module!",
            "line": " web\\bower_components\\angular-material\\modules\\js\\radioButton\\radioButton.js:10"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\radioButton\\radioButton.js:95"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\radioButton\\radioButton.js:102"
        },
        {
            "message": "Missing item type\nChange the radio group's selected button by a given increment.\nIf no button is selected, select the first button.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\radioButton\\radioButton.js:187"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\radioButton\\radioButton.js:276"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\radioButton\\radioButton.js:294"
        },
        {
            "message": "Missing item type\nAdd or remove the `.md-checked` class from the RadioButton (and conditionally its parent).\nUpdate the `aria-activedescendant` attribute.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\radioButton\\radioButton.js:305"
        },
        {
            "message": "Missing item type\nIf the radioButton is inside a div, then add class so highlighting will work...",
            "line": " web\\bower_components\\angular-material\\modules\\js\\radioButton\\radioButton.js:329"
        },
        {
            "message": "Missing item type\nInject ARIA-specific attributes appropriate for each radio button",
            "line": " web\\bower_components\\angular-material\\modules\\js\\radioButton\\radioButton.js:340"
        },
        {
            "message": "Missing item type\nBuild a unique ID for each radio button that will be used with aria-activedescendant.\nPreserve existing ID if already specified.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\radioButton\\radioButton.js:354"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\select\\select.js:10"
        },
        {
            "message": "Missing item type\n### TODO - POST RC1 ###\n - [ ] Abstract placement logic in $mdSelect service to $mdMenu service",
            "line": " web\\bower_components\\angular-material\\modules\\js\\select\\select.js:15"
        },
        {
            "message": "Missing item type\nInterim-element onRemove logic....",
            "line": " web\\bower_components\\angular-material\\modules\\js\\select\\select.js:920"
        },
        {
            "message": "Missing item type\nFor normal closes (eg clicks), animate the removal.\nFor forced closes (like $destroy events from navigation),\nskip the animations",
            "line": " web\\bower_components\\angular-material\\modules\\js\\select\\select.js:934"
        },
        {
            "message": "Missing item type\nRestore the element to a closed state",
            "line": " web\\bower_components\\angular-material\\modules\\js\\select\\select.js:943"
        },
        {
            "message": "Missing item type\nInterim-element onShow logic....",
            "line": " web\\bower_components\\angular-material\\modules\\js\\select\\select.js:961"
        },
        {
            "message": "Missing item type\nAttach the select DOM element(s) and animate to the correct positions\nand scalings...",
            "line": " web\\bower_components\\angular-material\\modules\\js\\select\\select.js:985"
        },
        {
            "message": "Missing item type\nInitialize container and dropDown menu positions/scale, then animate\nto show... and autoFocus.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\select\\select.js:1008"
        },
        {
            "message": "Missing item type\nShow modal backdrop element...",
            "line": " web\\bower_components\\angular-material\\modules\\js\\select\\select.js:1032"
        },
        {
            "message": "Missing item type\nHide modal backdrop element...",
            "line": " web\\bower_components\\angular-material\\modules\\js\\select\\select.js:1052"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\select\\select.js:1063"
        },
        {
            "message": "Missing item type\nCheck for valid opts and set some sane defaults",
            "line": " web\\bower_components\\angular-material\\modules\\js\\select\\select.js:1072"
        },
        {
            "message": "Missing item type\nConfigure various resize listeners for screen changes",
            "line": " web\\bower_components\\angular-material\\modules\\js\\select\\select.js:1092"
        },
        {
            "message": "Missing item type\nIf asynchronously loading, watch and update internal\n'$$loadingAsyncDone' flag",
            "line": " web\\bower_components\\angular-material\\modules\\js\\select\\select.js:1124"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\select\\select.js:1144"
        },
        {
            "message": "Missing item type\ncheck if the mouseup event was on a scrollbar",
            "line": " web\\bower_components\\angular-material\\modules\\js\\select\\select.js:1267"
        },
        {
            "message": "Missing item type\nTo notify listeners that the Select menu has closed,\ntrigger the [optional] user-defined expression",
            "line": " web\\bower_components\\angular-material\\modules\\js\\select\\select.js:1288"
        },
        {
            "message": "Missing item type\nCalculate the",
            "line": " web\\bower_components\\angular-material\\modules\\js\\select\\select.js:1302"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\showHide\\showHide.js:10"
        },
        {
            "message": "Missing item type\nA Sidenav QP component.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\sidenav\\sidenav.js:10"
        },
        {
            "message": "Missing item type\nDeferred lookup of component instance using $component registry",
            "line": " web\\bower_components\\angular-material\\modules\\js\\sidenav\\sidenav.js:109"
        },
        {
            "message": "Missing item type\nDirective Post Link function...",
            "line": " web\\bower_components\\angular-material\\modules\\js\\sidenav\\sidenav.js:235"
        },
        {
            "message": "Missing item type\nToggle the DOM classes to indicate `locked`",
            "line": " web\\bower_components\\angular-material\\modules\\js\\sidenav\\sidenav.js:273"
        },
        {
            "message": "Missing item type\nToggle the SideNav view and attach/detach listeners",
            "line": " web\\bower_components\\angular-material\\modules\\js\\sidenav\\sidenav.js:287"
        },
        {
            "message": "Missing item type\nPrevent parent scrolling (when the SideNav is open)",
            "line": " web\\bower_components\\angular-material\\modules\\js\\sidenav\\sidenav.js:318"
        },
        {
            "message": "Missing item type\nToggle the sideNav view and publish a promise to be resolved when\nthe view animation finishes.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\sidenav\\sidenav.js:336"
        },
        {
            "message": "Missing item type\nAuto-close sideNav when the `escape` key is pressed.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\sidenav\\sidenav.js:372"
        },
        {
            "message": "Missing item type\nWith backdrop `clicks` or `escape` key-press, immediately\napply the CSS close transition... Then notify the controller\nto close() and perform its own actions.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\sidenav\\sidenav.js:381"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\slider\\slider.js:10"
        },
        {
            "message": "Missing item type\nAttributes",
            "line": " web\\bower_components\\angular-material\\modules\\js\\slider\\slider.js:167"
        },
        {
            "message": "Missing item type\nRefreshing Dimensions",
            "line": " web\\bower_components\\angular-material\\modules\\js\\slider\\slider.js:227"
        },
        {
            "message": "Missing item type\nleft/right arrow listener",
            "line": " web\\bower_components\\angular-material\\modules\\js\\slider\\slider.js:240"
        },
        {
            "message": "Missing item type\nngModel setters and validators",
            "line": " web\\bower_components\\angular-material\\modules\\js\\slider\\slider.js:266"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\slider\\slider.js:297"
        },
        {
            "message": "Missing item type\nSlide listeners",
            "line": " web\\bower_components\\angular-material\\modules\\js\\slider\\slider.js:314"
        },
        {
            "message": "Missing item type\nSlide the UI by changing the model value",
            "line": " web\\bower_components\\angular-material\\modules\\js\\slider\\slider.js:372"
        },
        {
            "message": "Missing item type\nSlide the UI without changing the model (while dragging/panning)",
            "line": " web\\bower_components\\angular-material\\modules\\js\\slider\\slider.js:382"
        },
        {
            "message": "Missing item type\nClamps the value to be between 0 and 1.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\slider\\slider.js:393"
        },
        {
            "message": "Missing item type\nConvert horizontal position on slider to percentage value of offset from beginning...",
            "line": " web\\bower_components\\angular-material\\modules\\js\\slider\\slider.js:402"
        },
        {
            "message": "Missing item type\nConvert percentage offset on slide to equivalent model value",
            "line": " web\\bower_components\\angular-material\\modules\\js\\slider\\slider.js:411"
        },
        {
            "message": "Missing item type\nSticky effects for md",
            "line": " web\\bower_components\\angular-material\\modules\\js\\sticky\\sticky.js:10"
        },
        {
            "message": "Missing item type\nRegisters an element as sticky, used internally by directives to register themselves",
            "line": " web\\bower_components\\angular-material\\modules\\js\\sticky\\sticky.js:84"
        },
        {
            "message": "Missing item type\nPublic",
            "line": " web\\bower_components\\angular-material\\modules\\js\\sticky\\sticky.js:135"
        },
        {
            "message": "Missing item type\nPrivate",
            "line": " web\\bower_components\\angular-material\\modules\\js\\sticky\\sticky.js:187"
        },
        {
            "message": "Missing item type\nSubHeader module\n\n Subheaders are special list tiles that delineate distinct sections of a\n list or grid list and are typically related to the current filtering or\n sorting criteria. Subheader tiles are either displayed inline with tiles or\n can be associated with content, for example, in an adjacent column.\n\n Upon scrolling, subheaders remain pinned to the top of the screen and remain\n pinned until pushed on or off screen by the next subheader. @see [Material\n Design Specifications](https://www.google.com/design/spec/components/subheaders.html)\n\n > To improve the visual grouping of content, use the system color for your subheaders.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\subheader\\subheader.js:10"
        },
        {
            "message": "Missing item type\nSwipe module!",
            "line": " web\\bower_components\\angular-material\\modules\\js\\swipe\\swipe.js:10"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\switch\\switch.js:10"
        },
        {
            "message": "Missing item type\nTabs, created with the `<md-tabs>` directive provide *tabbed* navigation with different styles.\n The Tabs component consists of clickable tabs that are aligned horizontally side-by-side.\n\n Features include support for:\n\n - static or dynamic tabs,\n - responsive designs,\n - accessibility support (ARIA),\n - tab pagination,\n - external or internal tab content,\n - focus indicators and arrow-key navigations,\n - programmatic lookup and access to tab controllers, and\n - dynamic transitions through different tab contents.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js:10"
        },
        {
            "message": "Missing item type\nngInject",
            "line": " web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js:212"
        },
        {
            "message": "Missing item type\nPerform initialization for the controller, setup events and watcher(s)",
            "line": " web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js:275"
        },
        {
            "message": "Missing item type\nCompiles the template provided by the user.  This is passed as an attribute from the tabs\ndirective's template function.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js:294"
        },
        {
            "message": "Missing item type\nBinds events used by the tabs component.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js:306"
        },
        {
            "message": "Missing item type\nConfigure watcher(s) used by Tabs",
            "line": " web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js:314"
        },
        {
            "message": "Missing item type\nCreates a one-way binding manually rather than relying on Angular's isolated scope",
            "line": " web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js:321"
        },
        {
            "message": "Missing item type\nDefines boolean attributes with default value set to true.  (ie. md-stretch-tabs with no value\nwill be treated as being truthy)",
            "line": " web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js:332"
        },
        {
            "message": "Missing item type\nRemove any events defined by this controller",
            "line": " web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js:348"
        },
        {
            "message": "Missing item type\nToggles stretch tabs class and updates inkbar when tab stretching changes",
            "line": " web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js:358"
        },
        {
            "message": "Missing item type\nAdd/remove the `md-no-tab-content` class depending on `ctrl.hasContent`",
            "line": " web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js:391"
        },
        {
            "message": "Missing item type\nApply ctrl.offsetLeft to the paging element when it changes",
            "line": " web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js:399"
        },
        {
            "message": "Missing item type\nUpdate the UI whenever `ctrl.focusIndex` is updated",
            "line": " web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js:409"
        },
        {
            "message": "Missing item type\nUpdate the UI whenever the selected index changes. Calls user-defined select/deselect methods.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js:421"
        },
        {
            "message": "Missing item type\nQueues up a call to `handleWindowResize` when a resize occurs while the tabs component is\nhidden.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js:444"
        },
        {
            "message": "Missing item type\nHandle user keyboard interactions",
            "line": " web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js:470"
        },
        {
            "message": "Missing item type\nUpdate the selected index and trigger a click event on the original `md-tab` element in order\nto fire user-added click events.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js:493"
        },
        {
            "message": "Missing item type\nWhen pagination is on, this makes sure the selected index is in view.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js:507"
        },
        {
            "message": "Missing item type\nSlides the tabs over approximately one page forward.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js:517"
        },
        {
            "message": "Missing item type\nSlides the tabs over approximately one page backward.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js:531"
        },
        {
            "message": "Missing item type\nUpdate size calculations when the window is resized.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js:543"
        },
        {
            "message": "Missing item type\nToggle dynamic height class when value changes",
            "line": " web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js:559"
        },
        {
            "message": "Missing item type\nRemove a tab from the data and select the nearest valid tab.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js:567"
        },
        {
            "message": "Missing item type\nCreate an entry in the tabs array for a new tab at the specified index.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js:588"
        },
        {
            "message": "Missing item type\nGathers references to all of the DOM elements used by this controller.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js:628"
        },
        {
            "message": "Missing item type\nDetermines whether or not the left pagination arrow should be enabled.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js:651"
        },
        {
            "message": "Missing item type\nDetermines whether or not the right pagination arrow should be enabled.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js:659"
        },
        {
            "message": "Missing item type\nDetermines if the UI should stretch the tabs to fill the available space.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js:669"
        },
        {
            "message": "Missing item type\nDetermines if the tabs should appear centered.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js:685"
        },
        {
            "message": "Missing item type\nDetermines if pagination is necessary to display the tabs within the available space.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js:693"
        },
        {
            "message": "Missing item type\nFinds the nearest tab index that is available.  This is primarily used for when the active\ntab is removed.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js:704"
        },
        {
            "message": "Missing item type\nDefines a property using a getter and setter in order to trigger a change handler without\nusing `$watch` to observe changes.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js:725"
        },
        {
            "message": "Missing item type\nUpdates whether or not pagination should be displayed.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js:743"
        },
        {
            "message": "Missing item type\nRe-orders the tabs and updates the selected and focus indexes to their new positions.\nThis is triggered by `tabDirective.js` when the user's tabs have been re-ordered.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js:768"
        },
        {
            "message": "Missing item type\nThis moves the selected or focus index left or right.  This is used by the keydown handler.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js:782"
        },
        {
            "message": "Missing item type\nThis is used to forward focus to dummy elements.  This method is necessary to avoid animation\nissues when attempting to focus an item that is out of view.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js:798"
        },
        {
            "message": "Missing item type\nForces the pagination to move the focused tab into view.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js:806"
        },
        {
            "message": "Missing item type\nIterates through all queued functions and clears the queue.  This is used for functions that\nare called before the UI is ready, such as size calculations.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js:820"
        },
        {
            "message": "Missing item type\nDetermines if the tab content area is needed.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js:829"
        },
        {
            "message": "Missing item type\nMoves the indexes to their nearest valid values.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js:840"
        },
        {
            "message": "Missing item type\nCalculates the content height of the current tab.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js:848"
        },
        {
            "message": "Missing item type\nRepositions the ink bar to the selected tab.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js:909"
        },
        {
            "message": "Missing item type\nAdds left/right classes so that the ink bar will animate properly.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js:938"
        },
        {
            "message": "Missing item type\nTakes an offset value and makes sure that it is within the min/max allowed values.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js:951"
        },
        {
            "message": "Missing item type\nAttaches a ripple to the tab item element.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\tabs\\tabs.js:965"
        },
        {
            "message": "Missing item type\nForm",
            "line": " web\\bower_components\\angular-material\\modules\\js\\textField\\textField.js:10"
        },
        {
            "message": "Missing item type\nToast",
            "line": " web\\bower_components\\angular-material\\modules\\js\\toast\\toast.js:10"
        },
        {
            "message": "Missing item type\nConvenience method which builds and shows a simple toast.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\toast\\toast.js:95"
        },
        {
            "message": "Missing item type\nBuilds a preconfigured toast.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\toast\\toast.js:108"
        },
        {
            "message": "Missing item type\nUpdates the content of an existing toast. Useful for updating things like counts, etc.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\toast\\toast.js:136"
        },
        {
            "message": "Missing item type\nCreates a custom `$mdToastPreset` that you can configure.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\toast\\toast.js:145"
        },
        {
            "message": "Missing item type\nShows the toast.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\toast\\toast.js:155"
        },
        {
            "message": "Missing item type\nHide an existing toast and resolve the promise returned from `$mdToast.show()`.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\toast\\toast.js:200"
        },
        {
            "message": "Missing item type\n`DEPRECATED` - The promise returned from opening a toast is used only to notify about the closing of the toast.\nAs such, there isn't any reason to also allow that promise to be rejected,\nsince it's not clear what the difference between resolve and reject would be.\n\nHide the existing toast and reject the promise returned from\n`$mdToast.show()`.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\toast\\toast.js:215"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\toolbar\\toolbar.js:10"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\toolbar\\toolbar.js:126"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\toolbar\\toolbar.js:150"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\toolbar\\toolbar.js:166"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\toolbar\\toolbar.js:196"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\toolbar\\toolbar.js:215"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\tooltip\\tooltip.js:10"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js:10"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js:90"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js:98"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js:100"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js:102"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js:104"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js:106"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js:108"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js:110"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js:112"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js:114"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js:116"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js:120"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js:122"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js:172"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js:181"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js:187"
        },
        {
            "message": "Missing item type\nResizes the container.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js:193"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js:212"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js:229"
        },
        {
            "message": "Missing item type\nSets the scroller element to the specified size.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js:240"
        },
        {
            "message": "Missing item type\nIf auto-shrinking is enabled, shrinks or unshrinks as appropriate.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js:280"
        },
        {
            "message": "Missing item type\nSets the scrollHeight or scrollWidth. Called by the repeater based on\nits item count and item size.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js:310"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js:325"
        },
        {
            "message": "Missing item type\nScrolls to a given scrollTop position.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js:330"
        },
        {
            "message": "Missing item type\nScrolls the item with the given index to the top of the scroll container.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js:339"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js:452"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js:463"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js:465"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js:467"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js:469"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js:471"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js:473"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js:475"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js:479"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js:482"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js:485"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js:491"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js:494"
        },
        {
            "message": "Missing item type\nPresently rendered blocks by repeat index.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js:500"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js:505"
        },
        {
            "message": "Missing item type\nAn object representing a repeated item.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js:511"
        },
        {
            "message": "Missing item type\nCalled at startup by the md-virtual-repeat postLink function.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js:518"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js:543"
        },
        {
            "message": "Missing item type\nReturns the user-specified repeat list, transforming it into an array-like\nobject in the case of infinite scroll/dynamic load mode.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js:569"
        },
        {
            "message": "Missing item type\nCalled by the container. Informs us that the containers scroll or size has\nchanged.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js:588"
        },
        {
            "message": "Missing item type\nCalled by the container. Returns the size of a single repeated item.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js:633"
        },
        {
            "message": "Missing item type\nCalled by the container. Returns the size of a single repeated item.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js:642"
        },
        {
            "message": "Missing item type\nUpdates the order and visible offset of repeated blocks in response to scrolling\nor items updates.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js:651"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js:754"
        },
        {
            "message": "Missing item type\nUpdates and if not in a digest cycle, digests the specified block's scope to the data\nat the specified index.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js:780"
        },
        {
            "message": "Missing item type\nUpdates scope to the data at the specified index.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js:808"
        },
        {
            "message": "Missing item type\nPools the block at the specified index (Pulls its element out of the dom and stores it).",
            "line": " web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js:821"
        },
        {
            "message": "Missing item type\nProduces a dom fragment containing the elements from the list of blocks.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js:833"
        },
        {
            "message": "Missing item type\nUpdates start and end indexes based on length of repeated items and container size.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js:849"
        },
        {
            "message": "Missing item type\nThis VirtualRepeatModelArrayLike class enforces the interface requirements\nfor infinite scrolling within a mdVirtualRepeatContainer. An object with this\ninterface must implement the following interface with two (2) methods:\n\ngetItemAtIndex: function(index) -> item at that index or null if it is not yet\n    loaded (It should start downloading the item in that case).\n\ngetLength: function() -> number The data legnth to which the repeater container\n    should be sized. Ideally, when the count is known, this method should return it.\n    Otherwise, return a higher number than the currently loaded items to produce an\n    infinite-scroll behavior.",
            "line": " web\\bower_components\\angular-material\\modules\\js\\virtualRepeat\\virtualRepeat.js:865"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\modules\\js\\whiteframe\\whiteframe.js:10"
        },
        {
            "message": "Missing item type\nAngular-Material-Mocks\nDevelopers interested in running their own custom unit tests WITH angular-material.js loaded...\n must also include this *mocks* file. Similar to `angular-mocks.js`, `angular-material-mocks.js`\n will override and disable specific Angular Material performance settings:\n - Disabled Theme CSS rule generations\n  - Forces $mdAria.expectWithText() to be synchronous\n  - Mocks $$rAF.throttle()\n  - Captures flush exceptions from $$rAF",
            "line": " web\\bower_components\\angular-material\\angular-material-mocks.js:1"
        },
        {
            "message": "Missing item type\nThe `ngMaterial-mock` module provides support",
            "line": " web\\bower_components\\angular-material\\angular-material-mocks.js:19"
        },
        {
            "message": "Missing item type\nAngular Material dynamically generates Style tags\nbased on themes and palletes; for each ng-app.\n\nFor testing, we want to disable generation and\n<style> DOM injections. So we clear the huge THEME\nstyles while testing...",
            "line": " web\\bower_components\\angular-material\\angular-material-mocks.js:56"
        },
        {
            "message": "Missing item type\nAdd throttle() and wrap .flush() to catch `no callbacks present`\nerrors",
            "line": " web\\bower_components\\angular-material\\angular-material-mocks.js:66"
        },
        {
            "message": "Missing item type\nCapture $timeout.flush() errors: \"No deferred tasks to be flushed\"\nerrors",
            "line": " web\\bower_components\\angular-material\\angular-material-mocks.js:87"
        },
        {
            "message": "Missing item type\nStylesheet Mocks used by `animateCss.spec.js`",
            "line": " web\\bower_components\\angular-material\\angular-material-mocks.js:105"
        },
        {
            "message": "Missing item type\nDecompose styles, attached specific vendor prefixes\nand recompose...\ne.g.\n   'transition:0.5s linear all; font-size:100px;'\nbecomes\n   '-webkit-transition:0.5s linear all; transition:0.5s linear all; font-size:100px;'",
            "line": " web\\bower_components\\angular-material\\angular-material-mocks.js:138"
        },
        {
            "message": "Missing item type\nInitialization function that validates environment\nrequirements.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:18"
        },
        {
            "message": "Missing item type\nDetect if the ng-Touch module is also being used.\nWarn if detected.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:34"
        },
        {
            "message": "Missing item type\nUse this to throttle events that come in often.\nThe throttled function will always use the *last* invocation before the\ncoming frame.\n\nFor example, window resize events that fire many times a second:\nIf we set to use an raf-throttled callback on window resize, then\nour callback will only be fired once per frame, with the last resize\nevent that happened before that frame.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:63"
        },
        {
            "message": "Missing item type\nFactory function that creates the grab-bag $mdConstant service.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:213"
        },
        {
            "message": "Missing item type\nAs defined in core/style/variables.scss\n\n$layout-breakpoint-xs:     600px !default;\n$layout-breakpoint-sm:     960px !default;\n$layout-breakpoint-md:     1280px !default;\n$layout-breakpoint-lg:     1920px !default;",
            "line": " web\\bower_components\\angular-material\\angular-material.js:258"
        },
        {
            "message": "Missing item type\nInject the iterator facade to easily support iteration and accessors",
            "line": " web\\bower_components\\angular-material\\angular-material.js:303"
        },
        {
            "message": "Missing item type\niterator is a list facade to easily support iteration and accessors",
            "line": " web\\bower_components\\angular-material\\angular-material.js:314"
        },
        {
            "message": "Missing item type\nPublish copy of the enumerable set",
            "line": " web\\bower_components\\angular-material\\angular-material.js:355"
        },
        {
            "message": "Missing item type\nDetermine length of the list",
            "line": " web\\bower_components\\angular-material\\angular-material.js:363"
        },
        {
            "message": "Missing item type\nIs the index specified valid",
            "line": " web\\bower_components\\angular-material\\angular-material.js:371"
        },
        {
            "message": "Missing item type\nCan the iterator proceed to the next item in the list; relative to\nthe specified item.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:380"
        },
        {
            "message": "Missing item type\nCan the iterator proceed to the previous item in the list; relative to\nthe specified item.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:391"
        },
        {
            "message": "Missing item type\nGet item at specified index/position",
            "line": " web\\bower_components\\angular-material\\angular-material.js:402"
        },
        {
            "message": "Missing item type\nFind all elements matching the key/value pair\notherwise return null",
            "line": " web\\bower_components\\angular-material\\angular-material.js:411"
        },
        {
            "message": "Missing item type\nAdd item to list",
            "line": " web\\bower_components\\angular-material\\angular-material.js:426"
        },
        {
            "message": "Missing item type\nRemove item from list...",
            "line": " web\\bower_components\\angular-material\\angular-material.js:444"
        },
        {
            "message": "Missing item type\nGet the zero-based index of the target item",
            "line": " web\\bower_components\\angular-material\\angular-material.js:454"
        },
        {
            "message": "Missing item type\nBoolean existence check",
            "line": " web\\bower_components\\angular-material\\angular-material.js:463"
        },
        {
            "message": "Missing item type\nReturn first item in the list",
            "line": " web\\bower_components\\angular-material\\angular-material.js:472"
        },
        {
            "message": "Missing item type\nReturn last item in the list...",
            "line": " web\\bower_components\\angular-material\\angular-material.js:480"
        },
        {
            "message": "Missing item type\nFind the next item. If reloop is true and at the end of the list, it will go back to the\nfirst item. If given, the `validate` callback will be used to determine whether the next item\nis valid. If not valid, it will try to find the next item again.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:488"
        },
        {
            "message": "Missing item type\nUtil",
            "line": " web\\bower_components\\angular-material\\angular-material.js:730"
        },
        {
            "message": "Missing item type\nChecks if the target element has the requested style by key",
            "line": " web\\bower_components\\angular-material\\angular-material.js:746"
        },
        {
            "message": "Missing item type\nCalculate the positive scroll offset\nTODO: Check with pinch-zoom in IE/Chrome;\n      https://code.google.com/p/chromium/issues/detail?id=496285",
            "line": " web\\bower_components\\angular-material\\angular-material.js:803"
        },
        {
            "message": "Missing item type\nFinds the proper focus target by searching the DOM.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:818"
        },
        {
            "message": "Missing item type\nCan target and nested children for specified Selector (attribute)\nwhose value may be an expression that evaluates to True/False.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:843"
        },
        {
            "message": "Missing item type\nfacade to build md-backdrop element with desired styles\nNOTE: Use $compile to trigger backdrop postLink function",
            "line": " web\\bower_components\\angular-material\\angular-material.js:1001"
        },
        {
            "message": "Missing item type\nsupplant() method from Crockford's `Remedial Javascript`\nEquivalent to use of $interpolate; without dependency on\ninterpolation symbols and scope. Note: the '{<token>}' can\nbe property names, property chains, or array indices.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:1009"
        },
        {
            "message": "Missing item type\nMeasures the number of milliseconds taken to run the provided callback\nfunction. Uses a high-precision timer if available.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:1093"
        },
        {
            "message": "Missing item type\nCreate an implicit getter that caches its `getter()`\nlookup value",
            "line": " web\\bower_components\\angular-material\\angular-material.js:1103"
        },
        {
            "message": "Missing item type\nGet a unique ID.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:1119"
        },
        {
            "message": "Missing item type\nBuild polyfill for the Node.contains feature (if needed)",
            "line": " web\\bower_components\\angular-material\\angular-material.js:1192"
        },
        {
            "message": "Missing item type\nFunctional equivalent for $element.filter(‘md-bottom-sheet’)\nuseful with interimElements where the element and its container are important...",
            "line": " web\\bower_components\\angular-material\\angular-material.js:1205"
        },
        {
            "message": "Missing item type\nBreadth-First tree scan for element with matching `nodeName`",
            "line": " web\\bower_components\\angular-material\\angular-material.js:1222"
        },
        {
            "message": "Missing item type\nCase-insensitive scan of current elements only (do not descend).",
            "line": " web\\bower_components\\angular-material\\angular-material.js:1229"
        },
        {
            "message": "Missing item type\nScan children of specified node",
            "line": " web\\bower_components\\angular-material\\angular-material.js:1243"
        },
        {
            "message": "Missing item type\nGive optional properties with no value a boolean true if attr provided or false otherwise",
            "line": " web\\bower_components\\angular-material\\angular-material.js:1263"
        },
        {
            "message": "Missing item type\nAlternative to $timeout calls with 0 delay.\nnextTick() coalesces all calls within a single frame\nto minimize $digest thrashing",
            "line": " web\\bower_components\\angular-material\\angular-material.js:1276"
        },
        {
            "message": "Missing item type\nGrab a copy of the current queue\nClear the queue for future use\nProcess the existing queue\nTrigger digest if necessary",
            "line": " web\\bower_components\\angular-material\\angular-material.js:1304"
        },
        {
            "message": "Missing item type\nProcesses a template and replaces the start/end symbols if the application has\noverriden them.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:1327"
        },
        {
            "message": "Missing item type\nScan up dom hierarchy for enabled parent;",
            "line": " web\\bower_components\\angular-material\\angular-material.js:1343"
        },
        {
            "message": "Missing item type\nCheck if expected attribute has been specified on the target element or child",
            "line": " web\\bower_components\\angular-material\\angular-material.js:1420"
        },
        {
            "message": "Missing item type\nThe position of the most recent click if that click was on a label element.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:1656"
        },
        {
            "message": "Missing item type\n$get is used to build an instance of $mdGesture",
            "line": " web\\bower_components\\angular-material\\angular-material.js:1702"
        },
        {
            "message": "Missing item type\nMdGesture factory construction function",
            "line": " web\\bower_components\\angular-material\\angular-material.js:1713"
        },
        {
            "message": "Missing item type\nMdGestureHandler\nA GestureHandler is an object which is able to dispatch custom dom events\nbased on native dom {touch,pointer,mouse}{start,move,end} events.\n\nA gesture will manage its lifecycle through the start,move,end, and cancel\nfunctions, which are called by native dom events.\n\nA gesture has the concept of 'options' (eg a swipe's required velocity), which can be\noverridden by elements registering through $mdGesture.register()",
            "line": " web\\bower_components\\angular-material\\angular-material.js:1969"
        },
        {
            "message": "Missing item type\nAttach Gestures: hook document and check shouldHijack clicks",
            "line": " web\\bower_components\\angular-material\\angular-material.js:2126"
        },
        {
            "message": "Missing item type\nGets whether the given event is an input event that was caused by clicking on an\nassociated label element.\n\nThis is necessary because the browser will, upon clicking on a label element, fire an\n*extra* click event on its associated input (if any). mdGesture is able to flag the label\nclick as with `$material` correctly, but not the second input click.\n\nIn order to determine whether an input event is from a label click, we compare the (x, y) for\nthe event to the (x, y) for the most recent label click (which is cleared whenever a non-label\nclick occurs). Unfortunately, there are no event properties that tie the input and the label\ntogether (such as relatedTarget).",
            "line": " web\\bower_components\\angular-material\\angular-material.js:2297"
        },
        {
            "message": "Missing item type\nReturns a new provider which allows configuration of a new interimElement\nservice. Allows configuration of default options & methods for options,\nas well as configuration of 'preset' methods (eg dialog.basic(): basic is a preset method)",
            "line": " web\\bower_components\\angular-material\\angular-material.js:2389"
        },
        {
            "message": "Missing item type\nall interim elements will come with the 'build' preset",
            "line": " web\\bower_components\\angular-material\\angular-material.js:2409"
        },
        {
            "message": "Missing item type\nSave the configured defaults to be used when the factory is instantiated",
            "line": " web\\bower_components\\angular-material\\angular-material.js:2420"
        },
        {
            "message": "Missing item type\nAdd a method to the factory that isn't specific to any interim element operations",
            "line": " web\\bower_components\\angular-material\\angular-material.js:2429"
        },
        {
            "message": "Missing item type\nSave the configured preset to be used when the factory is instantiated",
            "line": " web\\bower_components\\angular-material\\angular-material.js:2438"
        },
        {
            "message": "Missing item type\nCreate a factory that has the given methods & defaults implementing interimElement",
            "line": " web\\bower_components\\angular-material\\angular-material.js:2464"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:2562"
        },
        {
            "message": "Missing item type\nSpecial method to hide and destroy an interimElement WITHOUT\nany 'leave` or hide animations ( an immediate force hide/remove )\n\nNOTE: This calls the onRemove() subclass method for each component...\nwhich must have code to respond to `options.$destroy == true`",
            "line": " web\\bower_components\\angular-material\\angular-material.js:2576"
        },
        {
            "message": "Missing item type\nHelper to call $injector.invoke with a local of the factory name for\nthis provider.\nIf an $mdDialog is providing options for a dialog and tries to inject\n$mdDialog, a circular dependency error will happen.\nWe get around that by manually injecting $mdDialog as a local.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:2587"
        },
        {
            "message": "Missing item type\nCompile, link, and show this interim element\nUse optional autoHided and transition-in effects",
            "line": " web\\bower_components\\angular-material\\angular-material.js:2776"
        },
        {
            "message": "Missing item type\nAfter the show process has finished/rejected:\n- announce 'removing',\n- perform the transition-out, and\n- perform optional clean up scope.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:2802"
        },
        {
            "message": "Missing item type\nThe `show()` returns a promise that will be resolved when the interim\nelement is hidden or cancelled...",
            "line": " web\\bower_components\\angular-material\\angular-material.js:2838"
        },
        {
            "message": "Missing item type\nForce the '$md<xxx>.show()' promise to reject",
            "line": " web\\bower_components\\angular-material\\angular-material.js:2846"
        },
        {
            "message": "Missing item type\nPrepare optional isolated scope and prepare $animate with default enter and leave\ntransitions for the new element instance.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:2854"
        },
        {
            "message": "Missing item type\nDefault usage to enable $animate to transition-in; can be easily overridden via 'options'",
            "line": " web\\bower_components\\angular-material\\angular-material.js:2869"
        },
        {
            "message": "Missing item type\nDefault usage to enable $animate to transition-out; can be easily overridden via 'options'",
            "line": " web\\bower_components\\angular-material\\angular-material.js:2876"
        },
        {
            "message": "Missing item type\nCompile an element with a templateUrl, controller, and locals",
            "line": " web\\bower_components\\angular-material\\angular-material.js:2888"
        },
        {
            "message": "Missing item type\nLink an element with compiled configuration",
            "line": " web\\bower_components\\angular-material\\angular-material.js:2905"
        },
        {
            "message": "Missing item type\nSearch for parent at insertion time, if not specified",
            "line": " web\\bower_components\\angular-material\\angular-material.js:2921"
        },
        {
            "message": "Missing item type\nIf auto-hide is enabled, start timer and prepare cancel function",
            "line": " web\\bower_components\\angular-material\\angular-material.js:2953"
        },
        {
            "message": "Missing item type\nShow the element ( with transitions), notify complete and start\noptional auto-Hide",
            "line": " web\\bower_components\\angular-material\\angular-material.js:2973"
        },
        {
            "message": "Missing item type\nEnable directive attribute-to-class conversions\nDevelopers can use `<body md-layout-css />` to quickly\ndisable the Layout directives and prohibit the injection of Layout classNames",
            "line": " web\\bower_components\\angular-material\\angular-material.js:3064"
        },
        {
            "message": "Missing item type\nList of mediaQuery breakpoints and associated suffixes\n\n  [\n   { suffix: \"sm\", mediaQuery: \"screen and (max-width: 599px)\" },\n   { suffix: \"md\", mediaQuery: \"screen and (min-width: 600px) and (max-width: 959px)\" }\n  ]",
            "line": " web\\bower_components\\angular-material\\angular-material.js:3071"
        },
        {
            "message": "Missing item type\nregisterLayoutAPI()\n\nThe original ngMaterial Layout solution used attribute selectors and CSS.\n\n  ```html\n  <div layout=\"column\"> My Content </div>\n  ```\n\n  ```css\n  [layout] {\n box-sizing: border-box;\n display:flex;\n  }\n  [layout=column] {\n flex-direction : column\n  }\n  ```\n\n  Use of attribute selectors creates significant performance impacts in some\n  browsers... mainly IE.\n\n  This module registers directives that allow the same layout attributes to be\n  interpreted and converted to class selectors. The directive will add equivalent classes to each element that\n  contains a Layout directive.\n\n ```html\n<div layout=\"column\" class=\"layout layout-column\"> My Content </div>\n```\n\n  ```css\n  .layout {\n box-sizing: border-box;\n display:flex;\n  }\n  .layout-column {\n flex-direction : column\n  }\n  ```",
            "line": " web\\bower_components\\angular-material\\angular-material.js:3084"
        },
        {
            "message": "Missing item type\nConverts snake_case to camelCase.\nAlso there is special case for Moz prefix starting with upper case letter.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:3180"
        },
        {
            "message": "Missing item type\nSpecial directive that will disable ALL Layout conversions of layout\nattribute(s) to classname(s).\n\n<link rel=\"stylesheet\" href=\"angular-material.min.css\">\n<link rel=\"stylesheet\" href=\"angular-material.layout.css\">\n\n<body md-layout-css>\n ...\n</body>\n\nNote: Using md-layout-css directive requires the developer to load the Material\nLayout Attribute stylesheet (which only uses attribute selectors):\n\n      `angular-material.layout.css`\n\nAnother option is to use the LayoutProvider to configure and disable the attribute\nconversions; this would obviate the use of the `md-layout-css` directive",
            "line": " web\\bower_components\\angular-material\\angular-material.js:3195"
        },
        {
            "message": "Missing item type\nTail-hook ngCloak to delay the uncloaking while Layout transformers\nfinish processing. Eliminates flicker with Material.Layoouts",
            "line": " web\\bower_components\\angular-material\\angular-material.js:3226"
        },
        {
            "message": "Missing item type\nCreates a directive registration function where a possible dynamic attribute\nvalue will be observed/watched.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:3264"
        },
        {
            "message": "Missing item type\nAdd as transformed class selector(s), then\nremove the deprecated attribute selector",
            "line": " web\\bower_components\\angular-material\\angular-material.js:3299"
        },
        {
            "message": "Missing item type\nCreates a registration function for ngMaterial Layout attribute directive.\nThis is a `simple` transpose of attribute usage to class usage; where we ignore\nany attribute value",
            "line": " web\\bower_components\\angular-material\\angular-material.js:3312"
        },
        {
            "message": "Missing item type\nAdd as transformed class selector, then\nremove the deprecated attribute selector",
            "line": " web\\bower_components\\angular-material\\angular-material.js:3346"
        },
        {
            "message": "Missing item type\nAfter link-phase, do NOT remove deprecated layout attribute selector.\nInstead watch the attribute so interpolated data-bindings to layout\nselectors will continue to be supported.\n\n$observe() the className and update with new class (after removing the last one)\n\ne.g. `layout=\"{{layoutDemo.direction}}\"` will update...\n\nNOTE: The value must match one of the specified styles in the CSS.\nFor example `flex-gt-md=\"{{size}}`  where `scope.size == 47` will NOT work since\nonly breakpoints for 0, 5, 10, 15... 100, 33, 34, 66, 67 are defined.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:3357"
        },
        {
            "message": "Missing item type\nProvide console warning that this layout attribute has been deprecated",
            "line": " web\\bower_components\\angular-material\\angular-material.js:3384"
        },
        {
            "message": "Missing item type\nCentralize warnings for known flexbox issues (especially IE-related issues)",
            "line": " web\\bower_components\\angular-material\\angular-material.js:3396"
        },
        {
            "message": "Missing item type\nFor the Layout attribute value, validate or replace with default\nfallback value",
            "line": " web\\bower_components\\angular-material\\angular-material.js:3420"
        },
        {
            "message": "Missing item type\nReplace current attribute value with fallback value",
            "line": " web\\bower_components\\angular-material\\angular-material.js:3473"
        },
        {
            "message": "Missing item type\nSee if the original value has interpolation symbols:\ne.g.  flex-gt-md=\"{{triggerPoint}}\"",
            "line": " web\\bower_components\\angular-material\\angular-material.js:3487"
        },
        {
            "message": "Missing item type\nA component instance registration service.\nNote: currently this as a private service in the SideNav component.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:3548"
        },
        {
            "message": "Missing item type\nUsed to print an error when an instance for a handle isn't found.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:3573"
        },
        {
            "message": "Missing item type\nReturn all registered instances as an array.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:3579"
        },
        {
            "message": "Missing item type\nGet a registered instance.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:3586"
        },
        {
            "message": "Missing item type\nRegister an instance.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:3603"
        },
        {
            "message": "Missing item type\nRemove registration for an instance",
            "line": " web\\bower_components\\angular-material\\angular-material.js:3617"
        },
        {
            "message": "Missing item type\nResolve any pending promises for this instance",
            "line": " web\\bower_components\\angular-material\\angular-material.js:3627"
        },
        {
            "message": "Missing item type\nAsync accessor to registered component instance\nIf not available then a promise is created to notify\nall listeners when the instance is registered.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:3639"
        },
        {
            "message": "Missing item type\nRipple",
            "line": " web\\bower_components\\angular-material\\angular-material.js:3802"
        },
        {
            "message": "Missing item type\nAttaching given scope, element and options to inkRipple controller",
            "line": " web\\bower_components\\angular-material\\angular-material.js:3891"
        },
        {
            "message": "Missing item type\nController used by the ripple service in order to apply ripples",
            "line": " web\\bower_components\\angular-material\\angular-material.js:3919"
        },
        {
            "message": "Missing item type\nEither remove or unlock any remaining ripples when the user mouses off of the element (either by\nmouseup or mouseleave event)",
            "line": " web\\bower_components\\angular-material\\angular-material.js:3948"
        },
        {
            "message": "Missing item type\nReturns the color that the ripple should be (either based on CSS or hard-coded)",
            "line": " web\\bower_components\\angular-material\\angular-material.js:3962"
        },
        {
            "message": "Missing item type\nFinds the color element and returns its text color for use as default ripple color",
            "line": " web\\bower_components\\angular-material\\angular-material.js:3977"
        },
        {
            "message": "Missing item type\nUpdating the ripple colors based on the current inkRipple value\nor the element's computed style color",
            "line": " web\\bower_components\\angular-material\\angular-material.js:3989"
        },
        {
            "message": "Missing item type\nTakes a string color and converts it to RGBA format",
            "line": " web\\bower_components\\angular-material\\angular-material.js:3998"
        },
        {
            "message": "Missing item type\nConverts hex value to RGBA string",
            "line": " web\\bower_components\\angular-material\\angular-material.js:4013"
        },
        {
            "message": "Missing item type\nConverts an RGB color to RGBA",
            "line": " web\\bower_components\\angular-material\\angular-material.js:4032"
        },
        {
            "message": "Missing item type\nBinds events to the root element for",
            "line": " web\\bower_components\\angular-material\\angular-material.js:4043"
        },
        {
            "message": "Missing item type\nCreate a new ripple on every mousedown event from the root element",
            "line": " web\\bower_components\\angular-material\\angular-material.js:4053"
        },
        {
            "message": "Missing item type\nEither remove or unlock any remaining ripples when the user mouses off of the element (either by\nmouseup, touchend or mouseleave event)",
            "line": " web\\bower_components\\angular-material\\angular-material.js:4080"
        },
        {
            "message": "Missing item type\nEither remove or unlock any remaining ripples when the user mouses off of the element (by\ntouchmove)",
            "line": " web\\bower_components\\angular-material\\angular-material.js:4088"
        },
        {
            "message": "Missing item type\nCycles through all ripples and attempts to remove them.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:4096"
        },
        {
            "message": "Missing item type\nCycles through all ripples and attempts to remove them with fade.\nDepending on logic within `fadeInComplete`, some removals will be postponed.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:4105"
        },
        {
            "message": "Missing item type\nCreates the ripple container element",
            "line": " web\\bower_components\\angular-material\\angular-material.js:4115"
        },
        {
            "message": "Missing item type\nThe attribute `md-ink-ripple` may be a static or interpolated\ncolor value OR a boolean indicator (used to disable ripples)",
            "line": " web\\bower_components\\angular-material\\angular-material.js:4146"
        },
        {
            "message": "Missing item type\nCreates a new ripple and adds it to the container.  Also tracks ripple in `this.ripples`.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:4154"
        },
        {
            "message": "Missing item type\nAfter fadeIn finishes, either kicks off the fade-out animation or queues the element for removal on mouseup",
            "line": " web\\bower_components\\angular-material\\angular-material.js:4218"
        },
        {
            "message": "Missing item type\nKicks off the animation for removing a ripple",
            "line": " web\\bower_components\\angular-material\\angular-material.js:4232"
        },
        {
            "message": "Missing item type\nRemoves the provided ripple from the DOM",
            "line": " web\\bower_components\\angular-material\\angular-material.js:4250"
        },
        {
            "message": "Missing item type\nUsed to create an empty directive.  This is used to track flag-directives whose children may have\nfunctionality based on them.\n\nExample: `md-no-ink` will potentially be used by all child directives.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:4259"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:4692"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:4699"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:4705"
        },
        {
            "message": "Missing item type\nService that makes an element apply theming related classes to itself.\n\n```js\napp.directive('myFancyDirective', function($mdTheming) {\n  return {\n    restrict: 'e',\n    link: function(scope, el, attrs) {\n      $mdTheming(el);\n    }\n  };\n});\n```",
            "line": " web\\bower_components\\angular-material\\angular-material.js:4993"
        },
        {
            "message": "Missing item type\nFactory function that requires special injections",
            "line": " web\\bower_components\\angular-material\\angular-material.js:5379"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:5385"
        },
        {
            "message": "Missing item type\nSpecific reversal of the request translate animation above...",
            "line": " web\\bower_components\\angular-material\\angular-material.js:5400"
        },
        {
            "message": "Missing item type\nListen for transitionEnd event (with optional timeout)\nAnnounce completion or failure via promise handlers",
            "line": " web\\bower_components\\angular-material\\angular-material.js:5413"
        },
        {
            "message": "Missing item type\nUpon timeout or transitionEnd, reject or resolve (respectively) this promise.\nNOTE: Make sure this transitionEnd didn't bubble up from a child",
            "line": " web\\bower_components\\angular-material\\angular-material.js:5426"
        },
        {
            "message": "Missing item type\nCalculate the zoom transform from dialog to origin.\n\nWe use this to set the dialog position immediately;\nthen the md-transition-in actually translates back to\n`translate3d(0,0,0) scale(1.0)`...\n\nNOTE: all values are rounded to the nearest integer",
            "line": " web\\bower_components\\angular-material\\angular-material.js:5444"
        },
        {
            "message": "Missing item type\nThis is a fallback if the origin information is no longer valid, then the\norigin bounds simply becomes the current bounds for the dialogContainer's parent",
            "line": " web\\bower_components\\angular-material\\angular-material.js:5479"
        },
        {
            "message": "Missing item type\nEnhance raw values to represent valid css stylings...",
            "line": " web\\bower_components\\angular-material\\angular-material.js:5491"
        },
        {
            "message": "Missing item type\nConvert the translate CSS value to key/value pair(s).",
            "line": " web\\bower_components\\angular-material\\angular-material.js:5527"
        },
        {
            "message": "Missing item type\nClone the Rect and calculate the height/width if needed",
            "line": " web\\bower_components\\angular-material\\angular-material.js:5544"
        },
        {
            "message": "Missing item type\nCalculate ClientRect of element; return null if hidden or zero size",
            "line": " web\\bower_components\\angular-material\\angular-material.js:5562"
        },
        {
            "message": "Missing item type\nCalculate 'rounded' center point of Rect",
            "line": " web\\bower_components\\angular-material\\angular-material.js:5575"
        },
        {
            "message": "Missing item type\nOlder browsers [FF31] expect camelCase\nproperty keys.\ne.g.\n animation-duration --> animationDuration",
            "line": " web\\bower_components\\angular-material\\angular-material.js:5980"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:6000"
        },
        {
            "message": "Missing item type\nButton",
            "line": " web\\bower_components\\angular-material\\angular-material.js:6090"
        },
        {
            "message": "Missing item type\nCard components.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:6225"
        },
        {
            "message": "Missing item type\nCheckbox module!",
            "line": " web\\bower_components\\angular-material\\angular-material.js:6360"
        },
        {
            "message": "Missing item type\nBottomSheet",
            "line": " web\\bower_components\\angular-material\\angular-material.js:6541"
        },
        {
            "message": "Missing item type\nShow a bottom sheet with the specified options.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:6605"
        },
        {
            "message": "Missing item type\nHide the existing bottom sheet and resolve the promise returned from\n`$mdBottomSheet.show()`. This call will close the most recently opened/current bottomsheet (if any).",
            "line": " web\\bower_components\\angular-material\\angular-material.js:6644"
        },
        {
            "message": "Missing item type\nHide the existing bottom sheet and reject the promise returned from\n`$mdBottomSheet.show()`.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:6656"
        },
        {
            "message": "Missing item type\nBottomSheet class to apply bottom-sheet behavior to an element",
            "line": " web\\bower_components\\angular-material\\angular-material.js:6756"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:6812"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:6828"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:6893"
        },
        {
            "message": "Missing item type\nBuilds a preconfigured dialog with the specified message.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:7149"
        },
        {
            "message": "Missing item type\nBuilds a preconfigured dialog with the specified message. You can call show and the promise returned\nwill be resolved only if the user clicks the confirm action on the dialog.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:7170"
        },
        {
            "message": "Missing item type\nShow a dialog with the specified options.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:7195"
        },
        {
            "message": "Missing item type\nHide an existing dialog and resolve the promise returned from `$mdDialog.show()`.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:7259"
        },
        {
            "message": "Missing item type\nHide an existing dialog and reject the promise returned from `$mdDialog.show()`.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:7271"
        },
        {
            "message": "Missing item type\nThe specified template should contain a <md-dialog> wrapper element....",
            "line": " web\\bower_components\\angular-material\\angular-material.js:7364"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:7393"
        },
        {
            "message": "Missing item type\nCheck to see if they used the deprecated .md-actions class and log a warning",
            "line": " web\\bower_components\\angular-material\\angular-material.js:7409"
        },
        {
            "message": "Missing item type\nFor alerts, focus on content... otherwise focus on\nthe close button (or equivalent)",
            "line": " web\\bower_components\\angular-material\\angular-material.js:7420"
        },
        {
            "message": "Missing item type\nIf no element with class dialog-close, try to find the last\nbutton child in md-actions and assume it is a close button.\n\nIf we find no actions at all, log a warning to the console.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:7430"
        },
        {
            "message": "Missing item type\nRemove function for all dialogs",
            "line": " web\\bower_components\\angular-material\\angular-material.js:7447"
        },
        {
            "message": "Missing item type\nFor normal closes, animate the removal.\nFor forced closes (like $destroy events), skip the animations",
            "line": " web\\bower_components\\angular-material\\angular-material.js:7468"
        },
        {
            "message": "Missing item type\nDetach the element",
            "line": " web\\bower_components\\angular-material\\angular-material.js:7476"
        },
        {
            "message": "Missing item type\nCapture originator/trigger/from/to element information (if available)\nand the parent container for the dialog; defaults to the $rootElement\nunless overridden in the options.parent",
            "line": " web\\bower_components\\angular-material\\angular-material.js:7487"
        },
        {
            "message": "Missing item type\nIdentify the bounding RECT for the target element",
            "line": " web\\bower_components\\angular-material\\angular-material.js:7507"
        },
        {
            "message": "Missing item type\nIf the specifier is a simple string selector, then query for\nthe DOM element.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:7530"
        },
        {
            "message": "Missing item type\nListen for escape keys and outside clicks to auto close",
            "line": " web\\bower_components\\angular-material\\angular-material.js:7547"
        },
        {
            "message": "Missing item type\nShow modal backdrop element...",
            "line": " web\\bower_components\\angular-material\\angular-material.js:7639"
        },
        {
            "message": "Missing item type\nHide modal backdrop element...",
            "line": " web\\bower_components\\angular-material\\angular-material.js:7655"
        },
        {
            "message": "Missing item type\nInject ARIA-specific attributes appropriate for Dialogs",
            "line": " web\\bower_components\\angular-material\\angular-material.js:7673"
        },
        {
            "message": "Missing item type\nPrevents screen reader interaction behind modal window\non swipe interfaces",
            "line": " web\\bower_components\\angular-material\\angular-material.js:7727"
        },
        {
            "message": "Missing item type\nWalk DOM to apply or remove aria-hidden on sibling nodes\nand parent sibling nodes",
            "line": " web\\bower_components\\angular-material\\angular-material.js:7744"
        },
        {
            "message": "Missing item type\nEnsure the dialog container fill-stretches to the viewport",
            "line": " web\\bower_components\\angular-material\\angular-material.js:7768"
        },
        {
            "message": "Missing item type\nDialog open and pop-in animation",
            "line": " web\\bower_components\\angular-material\\angular-material.js:7784"
        },
        {
            "message": "Missing item type\nDialog close and pop-out animation",
            "line": " web\\bower_components\\angular-material\\angular-material.js:7833"
        },
        {
            "message": "Missing item type\nUtility function to filter out raw DOM nodes",
            "line": " web\\bower_components\\angular-material\\angular-material.js:7840"
        },
        {
            "message": "Missing item type\nDivider module!",
            "line": " web\\bower_components\\angular-material\\angular-material.js:7857"
        },
        {
            "message": "Missing item type\nDatepicker",
            "line": " web\\bower_components\\angular-material\\angular-material.js:7900"
        },
        {
            "message": "Missing item type\nHeight of one calendar month tbody. This must be made known to the virtual-repeat and is\nsubsequently used for scrolling to specific months.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:7927"
        },
        {
            "message": "Missing item type\nHeight of a calendar month with a single row. This is needed to calculate the offset for\nrendering an extra month in virtual-repeat that only contains one row.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:7933"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:7971"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:7974"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:7977"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:7980"
        },
        {
            "message": "Missing item type\nController for the mdCalendar component.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:7983"
        },
        {
            "message": "Missing item type\nDummy array-like object for virtual-repeat to iterate over. The length is the total\nnumber of months that can be viewed. This is shorter than ideal because of (potential)\nFirefox bug https://bugzilla.mozilla.org/show_bug.cgi?id=1181658.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:7990"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8006"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8009"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8012"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8015"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8018"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8021"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8024"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8027"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8030"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8033"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8036"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8039"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8042"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8056"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8059"
        },
        {
            "message": "Missing item type\nThe selected date. Keep track of this separately from the ng-model value so that we\ncan know, when the ng-model value changes, what the previous value was before it's updated\nin the component's UI.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8062"
        },
        {
            "message": "Missing item type\nThe date that is currently focused or showing in the calendar. This will initially be set\nto the ng-model value if set, otherwise to today. It will be updated as the user navigates\nto other months. The cell corresponding to the displayDate does not necesarily always have\nfocus in the document (such as for cases when the user is scrolling the calendar).",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8071"
        },
        {
            "message": "Missing item type\nThe date that has or should have focus.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8080"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8086"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8089"
        },
        {
            "message": "Missing item type\nHandles a click event on a date cell.\nCreated here so that every cell can use the same function instance.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8101"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8121"
        },
        {
            "message": "Missing item type\nSets up the controller's reference to ngModelController.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8123"
        },
        {
            "message": "Missing item type\nInitialize the calendar by building the months that are initially visible.\nInitialization should occur after the ngModel value is known.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8136"
        },
        {
            "message": "Missing item type\nHides the vertical scrollbar on the calendar scroller by setting the width on the\ncalendar scroller and the `overflow: hidden` wrapper around the scroller, and then setting\na padding-right on the scroller equal to the width of the browser's scrollbar.\n\nThis will cause a reflow.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8148"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8170"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8176"
        },
        {
            "message": "Missing item type\nHandles a key event in the calendar with the appropriate action. The action will either\nbe to select the focused date or to navigate to focus a new date.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8178"
        },
        {
            "message": "Missing item type\nGets the date to focus as the result of a key event.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8222"
        },
        {
            "message": "Missing item type\nGets the \"index\" of the currently selected date as it would be in the virtual-repeat.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8250"
        },
        {
            "message": "Missing item type\nScrolls to the month of the given date.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8259"
        },
        {
            "message": "Missing item type\nSets the ng-model value for the calendar and emits a change event.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8272"
        },
        {
            "message": "Missing item type\nFocus the cell corresponding to the given date.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8282"
        },
        {
            "message": "Missing item type\nIf a date exceeds minDate or maxDate, returns date matching minDate or maxDate, respectively.\nOtherwise, returns the date.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8304"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8321"
        },
        {
            "message": "Missing item type\nChange the selected date in the calendar (ngModel value has already been changed).",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8323"
        },
        {
            "message": "Missing item type\nChange the date that is being shown in the calendar. If the given date is in a different\nmonth, the displayed month will be transitioned.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8355"
        },
        {
            "message": "Missing item type\nAnimates the transition from the calendar's current month to the given month.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8386"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8396"
        },
        {
            "message": "Missing item type\nBuilds and appends a day-of-the-week header to the calendar.\nThis should only need to be called once during initialization.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8398"
        },
        {
            "message": "Missing item type\nGets an identifier for a date unique to the calendar instance for internal\npurposes. Not to be displayed.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8416"
        },
        {
            "message": "Missing item type\nPrivate directive consumed by md-calendar. Having this directive lets the calender use\nmd-virtual-repeat and also cleanly separates the month DOM construction functions from\nthe rest of the calendar controller logic.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8445"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8477"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8480"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8483"
        },
        {
            "message": "Missing item type\nController for a single calendar month.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8486"
        },
        {
            "message": "Missing item type\nNumber of months from the start of the month \"items\" that the currently rendered month\noccurs. Set via angular data binding.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8496"
        },
        {
            "message": "Missing item type\nDate cell to focus after appending the month to the document.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8503"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8511"
        },
        {
            "message": "Missing item type\nCreates a single cell to contain a date in the calendar with all appropriate\nattributes and classes added. If a date is given, the cell content will be set\nbased on the date.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8526"
        },
        {
            "message": "Missing item type\nCheck whether date is in range and enabled",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8585"
        },
        {
            "message": "Missing item type\nBuilds a `tr` element for the calendar grid.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8597"
        },
        {
            "message": "Missing item type\nBuilds the <tbody> content for the given date's month.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8614"
        },
        {
            "message": "Missing item type\nGets the day-of-the-week index for a date for the current locale.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8714"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8809"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8811"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8814"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8817"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8820"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8823"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8826"
        },
        {
            "message": "Missing item type\nFunction that converts the date portion of a Date to a string.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8829"
        },
        {
            "message": "Missing item type\nFunction that converts a date string to a Date object (the date portion)",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8835"
        },
        {
            "message": "Missing item type\nFunction that formats a Date into a month header string.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8841"
        },
        {
            "message": "Missing item type\nFunction that formats a week number into a label for the week.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8847"
        },
        {
            "message": "Missing item type\nFunction that formats a date into a long aria-label that is read\nwhen the focused date changes.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8853"
        },
        {
            "message": "Missing item type\nARIA label for the calendar \"dialog\" used in the datepicker.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8860"
        },
        {
            "message": "Missing item type\nARIA label for the datepicker's \"Open calendar\" buttons.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8866"
        },
        {
            "message": "Missing item type\nFactory function that returns an instance of the dateLocale service.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8873"
        },
        {
            "message": "Missing item type\nDefault date-to-string formatting function.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8880"
        },
        {
            "message": "Missing item type\nDefault string-to-date parsing function.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8905"
        },
        {
            "message": "Missing item type\nDefault function to determine whether a string makes sense to be\nparsed to a Date object.\n\nThis is very permissive and is just a basic sanity check to ensure that\nthings like single integers aren't able to be parsed into dates.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8914"
        },
        {
            "message": "Missing item type\nDefault date-to-string formatter to get a month header.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8932"
        },
        {
            "message": "Missing item type\nDefault week number formatter.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8941"
        },
        {
            "message": "Missing item type\nDefault formatter for date cell aria-labels.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:8950"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9118"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9121"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9124"
        },
        {
            "message": "Missing item type\nHeight of the calendar pane used to check if the pane is going outside the boundary of\nthe viewport. See calendar.scss for how $md-calendar-height is computed; an extra 20px is\nalso added to space the pane away from the exact edge of the screen.\n\n This is computed statically now, but can be changed to be measured if the circumstances\n of calendar sizing are changed.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9127"
        },
        {
            "message": "Missing item type\nWidth of the calendar pane used to check if the pane is going outside the boundary of\nthe viewport. See calendar.scss for how $md-calendar-width is computed; an extra 20px is\nalso added to space the pane away from the exact edge of the screen.\n\n This is computed statically now, but can be changed to be measured if the circumstances\n of calendar sizing are changed.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9137"
        },
        {
            "message": "Missing item type\nController for md-datepicker.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9147"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9154"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9157"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9160"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9163"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9166"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9169"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9175"
        },
        {
            "message": "Missing item type\nThe root document element. This is used for attaching a top-level click handler to\nclose the calendar panel when a click outside said panel occurs. We use `documentElement`\ninstead of body because, when scrolling is disabled, some browsers consider the body element\nto be completely off the screen and propagate events directly to the html element.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9178"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9187"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9190"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9193"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9196"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9199"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9202"
        },
        {
            "message": "Missing item type\nElement covering everything but the input in the top of the floating calendar pane.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9205"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9211"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9214"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9217"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9220"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9223"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9226"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9230"
        },
        {
            "message": "Missing item type\nElement from which the calendar pane was opened. Keep track of this so that we can return\nfocus to it when the pane is closed.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9233"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9244"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9247"
        },
        {
            "message": "Missing item type\nSets up the controller's reference to ngModelController.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9268"
        },
        {
            "message": "Missing item type\nAttach event listeners for both the text input and the md-calendar.\nEvents are used instead of ng-model so that updates don't infinitely update the other\non a change. This should also be more performant than using a $watch.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9291"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9314"
        },
        {
            "message": "Missing item type\nCapture properties set to the date-picker and imperitively handle internal changes.\nThis is done to avoid setting up additional $watches.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9333"
        },
        {
            "message": "Missing item type\nSets whether the date-picker is disabled.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9358"
        },
        {
            "message": "Missing item type\nSets the custom ngModel.$error flags to be consumed by ngMessages. Flags are:\n  - mindate: whether the selected date is before the minimum date.\n  - maxdate: whether the selected flag is after the maximum date.\n  - filtered: whether the selected date is allowed by the custom filtering function.\n  - valid: whether the entered text input is a valid date\n\nThe 'required' flag is handled automatically by ngModel.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9368"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9416"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9424"
        },
        {
            "message": "Missing item type\nSets the model value if the user input is a valid date.\nAdds an invalid class to the input element if not.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9429"
        },
        {
            "message": "Missing item type\nCheck whether date is in range and enabled",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9455"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9465"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9534"
        },
        {
            "message": "Missing item type\nOpen the floating calendar pane.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9547"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9580"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9596"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9601"
        },
        {
            "message": "Missing item type\nSets whether the input is currently focused.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9610"
        },
        {
            "message": "Missing item type\nHandles a click on the document body when the floating calendar pane is open.\nCloses the floating calendar pane if the click is not inside of it.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9621"
        },
        {
            "message": "Missing item type\nUtility for performing date calculations to facilitate operation of the calendar and\ndatepicker.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9646"
        },
        {
            "message": "Missing item type\nGets the first day of the month for the given date's month.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9672"
        },
        {
            "message": "Missing item type\nGets the number of days in the month for the given date's month.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9681"
        },
        {
            "message": "Missing item type\nGet an arbitrary date in the month after the given date's month.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9690"
        },
        {
            "message": "Missing item type\nGet an arbitrary date in the month before the given date's month.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9699"
        },
        {
            "message": "Missing item type\nGets whether two dates have the same month and year.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9708"
        },
        {
            "message": "Missing item type\nGets whether two dates are the same day (not not necesarily the same time).",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9718"
        },
        {
            "message": "Missing item type\nGets whether a date is in the month immediately after some date.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9728"
        },
        {
            "message": "Missing item type\nGets whether a date is in the month immediately before some date.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9739"
        },
        {
            "message": "Missing item type\nGets the midpoint between two dates.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9750"
        },
        {
            "message": "Missing item type\nGets the week of the month that a given date occurs in.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9760"
        },
        {
            "message": "Missing item type\nGets a new date incremented by the given number of days. Number of days can be negative.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9770"
        },
        {
            "message": "Missing item type\nGets a new date incremented by the given number of months. Number of months can be negative.\nIf the date of the given month does not match the target month, the date will be set to the\nlast day of the month.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9780"
        },
        {
            "message": "Missing item type\nGet the integer distance between two months. This *only* considers the month and year\nportion of the Date instances.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9804"
        },
        {
            "message": "Missing item type\nGets the last day of the month for the given date.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9817"
        },
        {
            "message": "Missing item type\nChecks whether a date is valid.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9826"
        },
        {
            "message": "Missing item type\nSets a date's time to midnight.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9835"
        },
        {
            "message": "Missing item type\nCreates a date with the time set to midnight.\nDrop-in replacement for two forms of the Date constructor:\n1. No argument for Date representing now.\n2. Single-argument value representing number of seconds since Unix Epoch\nor a Date object.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9845"
        },
        {
            "message": "Missing item type\nChecks if a date is within a min and max range, ignoring the time component.\nIf minDate or maxDate are not dates, they are ignored.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9865"
        },
        {
            "message": "Missing item type\nScrollable content",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9886"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:9968"
        },
        {
            "message": "Missing item type\nThe duration of the CSS animation in milliseconds.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:10328"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:10335"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:10589"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:10786"
        },
        {
            "message": "Missing item type\nWatches for changes in media, invalidating layout as necessary.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:10902"
        },
        {
            "message": "Missing item type\nPerforms grid layout if the provided mediaName matches the currently\nactive media type.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:10925"
        },
        {
            "message": "Missing item type\nInvokes the layout engine, and uses its results to lay out our\ntile elements.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:10941"
        },
        {
            "message": "Missing item type\nGets the styles applied to a tile element described by the given parameters.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:11025"
        },
        {
            "message": "Missing item type\nGets an array of objects containing the rowspan and colspan for each tile.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:11140"
        },
        {
            "message": "Missing item type\nSet the reflow animator callback",
            "line": " web\\bower_components\\angular-material\\angular-material.js:11237"
        },
        {
            "message": "Missing item type\nPublish layout function",
            "line": " web\\bower_components\\angular-material\\angular-material.js:11246"
        },
        {
            "message": "Missing item type\nAn array of objects describing each tile's position in the grid.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:11258"
        },
        {
            "message": "Missing item type\nMaps grid positioning to an element and a set of styles using the\nprovided updateFn.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:11265"
        },
        {
            "message": "Missing item type\nDefault animator simply sets the element.css( <styles> ). An alternate\nanimator can be provided as an argument. The function has the following\nsignature:\n\n   function({grid: {element: JQLite, style: Object}, tiles: Array<{element: JQLite, style: Object}>)",
            "line": " web\\bower_components\\angular-material\\angular-material.js:11277"
        },
        {
            "message": "Missing item type\nTiming for the most recent layout run.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:11292"
        },
        {
            "message": "Missing item type\nDefault Gridlist animator simple sets the css for each element;\nNOTE: any transitions effects must be manually set in the CSS.\ne.g.\n\n md-grid-tile {\n   transition: all 700ms ease-out 50ms;\n }",
            "line": " web\\bower_components\\angular-material\\angular-material.js:11307"
        },
        {
            "message": "Missing item type\nCalculates the positions of tiles.\n\nThe algorithm works as follows:\n   An Array<Number> with length colCount (spaceTracker) keeps track of\n   available tiling positions, where elements of value 0 represents an\n   empty position. Space for a tile is reserved by finding a sequence of\n   0s with length <= than the tile's colspan. When such a space has been\n   found, the occupied tile positions are incremented by the tile's\n   rowspan value, as these positions have become unavailable for that\n   many rows.\n\n   If the end of a row has been reached without finding space for the\n   tile, spaceTracker's elements are each decremented by 1 to a minimum\n   of 0. Rows are searched in this fashion until space is found.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:11324"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:11548"
        },
        {
            "message": "Missing item type\nIcon",
            "line": " web\\bower_components\\angular-material\\angular-material.js:11586"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:11600"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:11922"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:12411"
        },
        {
            "message": "Missing item type\nList module",
            "line": " web\\bower_components\\angular-material\\angular-material.js:12425"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:12735"
        },
        {
            "message": "Missing item type\nCircular Progress module!",
            "line": " web\\bower_components\\angular-material\\angular-material.js:12749"
        },
        {
            "message": "Missing item type\nWatch the value and md-mode attributes",
            "line": " web\\bower_components\\angular-material\\angular-material.js:12854"
        },
        {
            "message": "Missing item type\nUpdate size/scaling of the progress indicator\nWatch the \"value\" and \"md-mode\" attributes",
            "line": " web\\bower_components\\angular-material\\angular-material.js:12883"
        },
        {
            "message": "Missing item type\nAuto-defaults the mode to either `determinate` or `indeterminate` mode; if not specified",
            "line": " web\\bower_components\\angular-material\\angular-material.js:12899"
        },
        {
            "message": "Missing item type\nManually animate the Determinate indicator based on the specified\npercentage value (0-100).\n\nNote: this animation was previously done using SCSS.\n- generated 54K of styles\n- use attribute selectors which had poor performances in IE",
            "line": " web\\bower_components\\angular-material\\angular-material.js:12917"
        },
        {
            "message": "Missing item type\nWe will scale the progress circle based on the default diameter.\n\nDetermine the diameter percentage (defaults to 100%)\nMay be express as float, percentage, or integer",
            "line": " web\\bower_components\\angular-material\\angular-material.js:12951"
        },
        {
            "message": "Missing item type\nIs the md-mode a valid option?",
            "line": " web\\bower_components\\angular-material\\angular-material.js:12967"
        },
        {
            "message": "Missing item type\nClamps the value to be between 0 and 100.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:12987"
        },
        {
            "message": "Missing item type\nLinear Progress module!",
            "line": " web\\bower_components\\angular-material\\angular-material.js:13012"
        },
        {
            "message": "Missing item type\nWatch the value, md-buffer-value, and md-mode attributes",
            "line": " web\\bower_components\\angular-material\\angular-material.js:13106"
        },
        {
            "message": "Missing item type\nAuto-defaults the mode to either `determinate` or `indeterminate` mode; if not specified",
            "line": " web\\bower_components\\angular-material\\angular-material.js:13139"
        },
        {
            "message": "Missing item type\nIs the md-mode a valid option?",
            "line": " web\\bower_components\\angular-material\\angular-material.js:13155"
        },
        {
            "message": "Missing item type\nManually set CSS to animate the Determinate indicator based on the specified\npercentage value (0-100).",
            "line": " web\\bower_components\\angular-material\\angular-material.js:13175"
        },
        {
            "message": "Missing item type\nClamps the value to be between 0 and 100.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:13188"
        },
        {
            "message": "Missing item type\nradioButton module!",
            "line": " web\\bower_components\\angular-material\\angular-material.js:13204"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:13289"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:13296"
        },
        {
            "message": "Missing item type\nChange the radio group's selected button by a given increment.\nIf no button is selected, select the first button.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:13381"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:13470"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:13488"
        },
        {
            "message": "Missing item type\nAdd or remove the `.md-checked` class from the RadioButton (and conditionally its parent).\nUpdate the `aria-activedescendant` attribute.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:13499"
        },
        {
            "message": "Missing item type\nIf the radioButton is inside a div, then add class so highlighting will work...",
            "line": " web\\bower_components\\angular-material\\angular-material.js:13523"
        },
        {
            "message": "Missing item type\nInject ARIA-specific attributes appropriate for each radio button",
            "line": " web\\bower_components\\angular-material\\angular-material.js:13534"
        },
        {
            "message": "Missing item type\nBuild a unique ID for each radio button that will be used with aria-activedescendant.\nPreserve existing ID if already specified.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:13548"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:13565"
        },
        {
            "message": "Missing item type\n### TODO - POST RC1 ###\n - [ ] Abstract placement logic in $mdSelect service to $mdMenu service",
            "line": " web\\bower_components\\angular-material\\angular-material.js:13570"
        },
        {
            "message": "Missing item type\nInterim-element onRemove logic....",
            "line": " web\\bower_components\\angular-material\\angular-material.js:14475"
        },
        {
            "message": "Missing item type\nFor normal closes (eg clicks), animate the removal.\nFor forced closes (like $destroy events from navigation),\nskip the animations",
            "line": " web\\bower_components\\angular-material\\angular-material.js:14489"
        },
        {
            "message": "Missing item type\nRestore the element to a closed state",
            "line": " web\\bower_components\\angular-material\\angular-material.js:14498"
        },
        {
            "message": "Missing item type\nInterim-element onShow logic....",
            "line": " web\\bower_components\\angular-material\\angular-material.js:14516"
        },
        {
            "message": "Missing item type\nAttach the select DOM element(s) and animate to the correct positions\nand scalings...",
            "line": " web\\bower_components\\angular-material\\angular-material.js:14540"
        },
        {
            "message": "Missing item type\nInitialize container and dropDown menu positions/scale, then animate\nto show... and autoFocus.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:14563"
        },
        {
            "message": "Missing item type\nShow modal backdrop element...",
            "line": " web\\bower_components\\angular-material\\angular-material.js:14587"
        },
        {
            "message": "Missing item type\nHide modal backdrop element...",
            "line": " web\\bower_components\\angular-material\\angular-material.js:14607"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:14618"
        },
        {
            "message": "Missing item type\nCheck for valid opts and set some sane defaults",
            "line": " web\\bower_components\\angular-material\\angular-material.js:14627"
        },
        {
            "message": "Missing item type\nConfigure various resize listeners for screen changes",
            "line": " web\\bower_components\\angular-material\\angular-material.js:14647"
        },
        {
            "message": "Missing item type\nIf asynchronously loading, watch and update internal\n'$$loadingAsyncDone' flag",
            "line": " web\\bower_components\\angular-material\\angular-material.js:14679"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:14699"
        },
        {
            "message": "Missing item type\ncheck if the mouseup event was on a scrollbar",
            "line": " web\\bower_components\\angular-material\\angular-material.js:14822"
        },
        {
            "message": "Missing item type\nTo notify listeners that the Select menu has closed,\ntrigger the [optional] user-defined expression",
            "line": " web\\bower_components\\angular-material\\angular-material.js:14843"
        },
        {
            "message": "Missing item type\nCalculate the",
            "line": " web\\bower_components\\angular-material\\angular-material.js:14857"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:15049"
        },
        {
            "message": "Missing item type\nA Sidenav QP component.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:15092"
        },
        {
            "message": "Missing item type\nDeferred lookup of component instance using $component registry",
            "line": " web\\bower_components\\angular-material\\angular-material.js:15191"
        },
        {
            "message": "Missing item type\nDirective Post Link function...",
            "line": " web\\bower_components\\angular-material\\angular-material.js:15317"
        },
        {
            "message": "Missing item type\nToggle the DOM classes to indicate `locked`",
            "line": " web\\bower_components\\angular-material\\angular-material.js:15355"
        },
        {
            "message": "Missing item type\nToggle the SideNav view and attach/detach listeners",
            "line": " web\\bower_components\\angular-material\\angular-material.js:15369"
        },
        {
            "message": "Missing item type\nPrevent parent scrolling (when the SideNav is open)",
            "line": " web\\bower_components\\angular-material\\angular-material.js:15400"
        },
        {
            "message": "Missing item type\nToggle the sideNav view and publish a promise to be resolved when\nthe view animation finishes.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:15418"
        },
        {
            "message": "Missing item type\nAuto-close sideNav when the `escape` key is pressed.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:15454"
        },
        {
            "message": "Missing item type\nWith backdrop `clicks` or `escape` key-press, immediately\napply the CSS close transition... Then notify the controller\nto close() and perform its own actions.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:15463"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:15509"
        },
        {
            "message": "Missing item type\nAttributes",
            "line": " web\\bower_components\\angular-material\\angular-material.js:15666"
        },
        {
            "message": "Missing item type\nRefreshing Dimensions",
            "line": " web\\bower_components\\angular-material\\angular-material.js:15726"
        },
        {
            "message": "Missing item type\nleft/right arrow listener",
            "line": " web\\bower_components\\angular-material\\angular-material.js:15739"
        },
        {
            "message": "Missing item type\nngModel setters and validators",
            "line": " web\\bower_components\\angular-material\\angular-material.js:15765"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:15796"
        },
        {
            "message": "Missing item type\nSlide listeners",
            "line": " web\\bower_components\\angular-material\\angular-material.js:15813"
        },
        {
            "message": "Missing item type\nSlide the UI by changing the model value",
            "line": " web\\bower_components\\angular-material\\angular-material.js:15871"
        },
        {
            "message": "Missing item type\nSlide the UI without changing the model (while dragging/panning)",
            "line": " web\\bower_components\\angular-material\\angular-material.js:15881"
        },
        {
            "message": "Missing item type\nClamps the value to be between 0 and 1.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:15892"
        },
        {
            "message": "Missing item type\nConvert horizontal position on slider to percentage value of offset from beginning...",
            "line": " web\\bower_components\\angular-material\\angular-material.js:15901"
        },
        {
            "message": "Missing item type\nConvert percentage offset on slide to equivalent model value",
            "line": " web\\bower_components\\angular-material\\angular-material.js:15910"
        },
        {
            "message": "Missing item type\nSticky effects for md",
            "line": " web\\bower_components\\angular-material\\angular-material.js:15930"
        },
        {
            "message": "Missing item type\nRegisters an element as sticky, used internally by directives to register themselves",
            "line": " web\\bower_components\\angular-material\\angular-material.js:16004"
        },
        {
            "message": "Missing item type\nPublic",
            "line": " web\\bower_components\\angular-material\\angular-material.js:16055"
        },
        {
            "message": "Missing item type\nPrivate",
            "line": " web\\bower_components\\angular-material\\angular-material.js:16107"
        },
        {
            "message": "Missing item type\nSubHeader module\n\n Subheaders are special list tiles that delineate distinct sections of a\n list or grid list and are typically related to the current filtering or\n sorting criteria. Subheader tiles are either displayed inline with tiles or\n can be associated with content, for example, in an adjacent column.\n\n Upon scrolling, subheaders remain pinned to the top of the screen and remain\n pinned until pushed on or off screen by the next subheader. @see [Material\n Design Specifications](https://www.google.com/design/spec/components/subheaders.html)\n\n > To improve the visual grouping of content, use the system color for your subheaders.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:16300"
        },
        {
            "message": "Missing item type\nSwipe module!",
            "line": " web\\bower_components\\angular-material\\angular-material.js:16399"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:16500"
        },
        {
            "message": "Missing item type\nToast",
            "line": " web\\bower_components\\angular-material\\angular-material.js:16668"
        },
        {
            "message": "Missing item type\nConvenience method which builds and shows a simple toast.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:16753"
        },
        {
            "message": "Missing item type\nBuilds a preconfigured toast.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:16766"
        },
        {
            "message": "Missing item type\nUpdates the content of an existing toast. Useful for updating things like counts, etc.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:16794"
        },
        {
            "message": "Missing item type\nCreates a custom `$mdToastPreset` that you can configure.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:16803"
        },
        {
            "message": "Missing item type\nShows the toast.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:16813"
        },
        {
            "message": "Missing item type\nHide an existing toast and resolve the promise returned from `$mdToast.show()`.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:16858"
        },
        {
            "message": "Missing item type\n`DEPRECATED` - The promise returned from opening a toast is used only to notify about the closing of the toast.\nAs such, there isn't any reason to also allow that promise to be rejected,\nsince it's not clear what the difference between resolve and reject would be.\n\nHide the existing toast and reject the promise returned from\n`$mdToast.show()`.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:16873"
        },
        {
            "message": "Missing item type\nTabs, created with the `<md-tabs>` directive provide *tabbed* navigation with different styles.\n The Tabs component consists of clickable tabs that are aligned horizontally side-by-side.\n\n Features include support for:\n\n - static or dynamic tabs,\n - responsive designs,\n - accessibility support (ARIA),\n - tab pagination,\n - external or internal tab content,\n - focus indicators and arrow-key navigations,\n - programmatic lookup and access to tab controllers, and\n - dynamic transitions through different tab contents.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:17054"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:17086"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:17202"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:17226"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:17242"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:17272"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:17291"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:17324"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:17620"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:17700"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:17708"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:17710"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:17712"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:17714"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:17716"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:17718"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:17720"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:17722"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:17724"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:17726"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:17730"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:17732"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:17782"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:17791"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:17797"
        },
        {
            "message": "Missing item type\nResizes the container.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:17803"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:17822"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:17839"
        },
        {
            "message": "Missing item type\nSets the scroller element to the specified size.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:17850"
        },
        {
            "message": "Missing item type\nIf auto-shrinking is enabled, shrinks or unshrinks as appropriate.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:17890"
        },
        {
            "message": "Missing item type\nSets the scrollHeight or scrollWidth. Called by the repeater based on\nits item count and item size.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:17920"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:17935"
        },
        {
            "message": "Missing item type\nScrolls to a given scrollTop position.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:17940"
        },
        {
            "message": "Missing item type\nScrolls the item with the given index to the top of the scroll container.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:17949"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:18062"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:18073"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:18075"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:18077"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:18079"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:18081"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:18083"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:18085"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:18089"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:18092"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:18095"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:18101"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:18104"
        },
        {
            "message": "Missing item type\nPresently rendered blocks by repeat index.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:18110"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:18115"
        },
        {
            "message": "Missing item type\nAn object representing a repeated item.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:18121"
        },
        {
            "message": "Missing item type\nCalled at startup by the md-virtual-repeat postLink function.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:18128"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:18153"
        },
        {
            "message": "Missing item type\nReturns the user-specified repeat list, transforming it into an array-like\nobject in the case of infinite scroll/dynamic load mode.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:18179"
        },
        {
            "message": "Missing item type\nCalled by the container. Informs us that the containers scroll or size has\nchanged.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:18198"
        },
        {
            "message": "Missing item type\nCalled by the container. Returns the size of a single repeated item.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:18243"
        },
        {
            "message": "Missing item type\nCalled by the container. Returns the size of a single repeated item.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:18252"
        },
        {
            "message": "Missing item type\nUpdates the order and visible offset of repeated blocks in response to scrolling\nor items updates.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:18261"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:18364"
        },
        {
            "message": "Missing item type\nUpdates and if not in a digest cycle, digests the specified block's scope to the data\nat the specified index.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:18390"
        },
        {
            "message": "Missing item type\nUpdates scope to the data at the specified index.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:18418"
        },
        {
            "message": "Missing item type\nPools the block at the specified index (Pulls its element out of the dom and stores it).",
            "line": " web\\bower_components\\angular-material\\angular-material.js:18431"
        },
        {
            "message": "Missing item type\nProduces a dom fragment containing the elements from the list of blocks.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:18443"
        },
        {
            "message": "Missing item type\nUpdates start and end indexes based on length of repeated items and container size.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:18459"
        },
        {
            "message": "Missing item type\nThis VirtualRepeatModelArrayLike class enforces the interface requirements\nfor infinite scrolling within a mdVirtualRepeatContainer. An object with this\ninterface must implement the following interface with two (2) methods:\n\ngetItemAtIndex: function(index) -> item at that index or null if it is not yet\n    loaded (It should start downloading the item in that case).\n\ngetLength: function() -> number The data legnth to which the repeater container\n    should be sized. Ideally, when the count is known, this method should return it.\n    Otherwise, return a higher number than the currently loaded items to produce an\n    infinite-scroll behavior.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:18475"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:18527"
        },
        {
            "message": "Missing item type\nInitialize the controller, setup watchers, gather elements",
            "line": " web\\bower_components\\angular-material\\angular-material.js:18645"
        },
        {
            "message": "Missing item type\nCalculates the dropdown's position and applies the new styles to the menu element",
            "line": " web\\bower_components\\angular-material\\angular-material.js:18660"
        },
        {
            "message": "Missing item type\nCalculates the vertical offset for floating label examples to account for ngMessages",
            "line": " web\\bower_components\\angular-material\\angular-material.js:18698"
        },
        {
            "message": "Missing item type\nMakes sure that the menu doesn't go off of the screen on either side.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:18716"
        },
        {
            "message": "Missing item type\nMoves the dropdown menu to the body tag in order to avoid z-index and overflow issues.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:18729"
        },
        {
            "message": "Missing item type\nSends focus to the input element.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:18740"
        },
        {
            "message": "Missing item type\nSets up any watchers used by autocomplete",
            "line": " web\\bower_components\\angular-material\\angular-material.js:18747"
        },
        {
            "message": "Missing item type\nRemoves any events or leftover elements created by this controller",
            "line": " web\\bower_components\\angular-material\\angular-material.js:18760"
        },
        {
            "message": "Missing item type\nGathers all of the elements needed for this controller",
            "line": " web\\bower_components\\angular-material\\angular-material.js:18777"
        },
        {
            "message": "Missing item type\nFinds the element that the menu will base its position on",
            "line": " web\\bower_components\\angular-material\\angular-material.js:18795"
        },
        {
            "message": "Missing item type\nGathers angular-wrapped versions of each element",
            "line": " web\\bower_components\\angular-material\\angular-material.js:18806"
        },
        {
            "message": "Missing item type\nHandles changes to the `hidden` property.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:18821"
        },
        {
            "message": "Missing item type\nWhen the user mouses over the dropdown menu, ignore blur events.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:18842"
        },
        {
            "message": "Missing item type\nWhen the user's mouse leaves the menu, blur events may hide the menu again.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:18849"
        },
        {
            "message": "Missing item type\nWhen the mouse button is released, send focus back to the input field.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:18858"
        },
        {
            "message": "Missing item type\nHandles changes to the selected item.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:18865"
        },
        {
            "message": "Missing item type\nUse the user-defined expression to announce changes each time a new item is selected",
            "line": " web\\bower_components\\angular-material\\angular-material.js:18881"
        },
        {
            "message": "Missing item type\nUse the user-defined expression to announce changes each time the search text is changed",
            "line": " web\\bower_components\\angular-material\\angular-material.js:18888"
        },
        {
            "message": "Missing item type\nCalls any external watchers listening for the selected item.  Used in conjunction with\n`registerSelectedItemWatcher`.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:18895"
        },
        {
            "message": "Missing item type\nRegister a function to be called when the selected item changes.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:18905"
        },
        {
            "message": "Missing item type\nUnregister a function previously registered for selected item changes.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:18915"
        },
        {
            "message": "Missing item type\nHandles changes to the searchText property.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:18926"
        },
        {
            "message": "Missing item type\nHandles input blur event, determines if the dropdown should hide.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:18957"
        },
        {
            "message": "Missing item type\nForce blur on input element",
            "line": " web\\bower_components\\angular-material\\angular-material.js:18967"
        },
        {
            "message": "Missing item type\nHandles input focus event, determines if the dropdown should show.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:18979"
        },
        {
            "message": "Missing item type\nHandles keyboard input.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:18990"
        },
        {
            "message": "Missing item type\nReturns the minimum length needed to display the dropdown.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:19041"
        },
        {
            "message": "Missing item type\nReturns the display value for an item.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:19049"
        },
        {
            "message": "Missing item type\nGetter function to invoke user-defined expression (in the directive)\nto convert your object to a single string.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:19057"
        },
        {
            "message": "Missing item type\nReturns the locals object for compiling item templates.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:19066"
        },
        {
            "message": "Missing item type\nReturns the default index based on whether or not autoselect is enabled.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:19080"
        },
        {
            "message": "Missing item type\nSets the loading parameter and updates the hidden state.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:19088"
        },
        {
            "message": "Missing item type\nDetermines if the menu should be hidden.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:19101"
        },
        {
            "message": "Missing item type\nDetermines if the menu should be shown.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:19112"
        },
        {
            "message": "Missing item type\nReturns true if the search text has matches.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:19120"
        },
        {
            "message": "Missing item type\nReturns true if the autocomplete has a valid selection.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:19128"
        },
        {
            "message": "Missing item type\nReturns true if the loading indicator is, or should be, visible.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:19136"
        },
        {
            "message": "Missing item type\nReturns the display value of the current item.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:19144"
        },
        {
            "message": "Missing item type\nDetermines if the minimum length is met by the search text.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:19152"
        },
        {
            "message": "Missing item type\nDefines a public property with a handler and a default value.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:19162"
        },
        {
            "message": "Missing item type\nSelects the item at the given index.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:19179"
        },
        {
            "message": "Missing item type\nClears the searchText value and selected item.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:19197"
        },
        {
            "message": "Missing item type\nFetches the results for the provided search text.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:19220"
        },
        {
            "message": "Missing item type\nUpdates the ARIA messages",
            "line": " web\\bower_components\\angular-material\\angular-material.js:19252"
        },
        {
            "message": "Missing item type\nReturns the ARIA message for how many results match the current query.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:19261"
        },
        {
            "message": "Missing item type\nMakes sure that the focused element is within view.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:19278"
        },
        {
            "message": "Missing item type\nStarts the query to gather the results for the current searchText.  Attempts to return cached\nresults first, then forwards the process to `fetchResults` if necessary.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:19305"
        },
        {
            "message": "Missing item type\nIf there is only one matching item and the search text matches its display value exactly,\nautomatically select that item.  Note: This function is only called if the user uses the\n`md-select-on-match` flag.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:19323"
        },
        {
            "message": "Missing item type\nCreates a watcher for variables that are copied from the parent scope",
            "line": " web\\bower_components\\angular-material\\angular-material.js:19661"
        },
        {
            "message": "Missing item type\nCreates watchers on scope and newScope that ensure that for any\n$digest of scope, newScope is also $digested.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:19676"
        },
        {
            "message": "Missing item type\nMDChip Directive Definition",
            "line": " web\\bower_components\\angular-material\\angular-material.js:19839"
        },
        {
            "message": "Missing item type\nMdChipRemove Directive Definition.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:19897"
        },
        {
            "message": "Missing item type\nController for the MdChips component. Responsible for adding to and\nremoving from the list of chips, marking chips as selected, and binding to\nthe models of various input components.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:19969"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:19981"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:19984"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:19987"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:19990"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:19993"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:19996"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:19999"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:20002"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:20005"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:20008"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:20011"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:20014"
        },
        {
            "message": "Missing item type\nHidden hint text for how to delete a chip. Used to give context to screen readers.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:20018"
        },
        {
            "message": "Missing item type\nHidden label for the delete button. Used to give context to screen readers.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:20024"
        },
        {
            "message": "Missing item type\nModel used by the input element.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:20030"
        },
        {
            "message": "Missing item type\nWhether to use the onAppend expression to transform the chip buffer\nbefore appending it to the list.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:20036"
        },
        {
            "message": "Missing item type\nWhether to use the transformChip expression to transform the chip buffer\nbefore appending it to the list.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:20046"
        },
        {
            "message": "Missing item type\nWhether to use the onAdd expression to notify of chip additions.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:20053"
        },
        {
            "message": "Missing item type\nWhether to use the onRemove expression to notify of chip removals.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:20059"
        },
        {
            "message": "Missing item type\nWhether to use the onSelect expression to notify the component's user\nafter selecting a chip from the list.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:20065"
        },
        {
            "message": "Missing item type\nHandles the keydown event on the input element: by default <enter> appends\nthe buffer to the chip list, while backspace removes the last chip in the\nlist if the current buffer is empty.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:20074"
        },
        {
            "message": "Missing item type\nHandles the keydown event on the chip elements: backspace removes the selected chip, arrow\nkeys switch which chips is active",
            "line": " web\\bower_components\\angular-material\\angular-material.js:20110"
        },
        {
            "message": "Missing item type\nGet the input's placeholder - uses `placeholder` when list is empty and `secondary-placeholder`\nwhen the list is non-empty. If `secondary-placeholder` is not provided, `placeholder` is used\nalways.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:20142"
        },
        {
            "message": "Missing item type\nRemoves chip at {@code index} and selects the adjacent chip.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:20154"
        },
        {
            "message": "Missing item type\nSets the selected chip index to -1.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:20166"
        },
        {
            "message": "Missing item type\nGets the index of an adjacent chip to select after deletion. Adjacency is\ndetermined as the next chip in the list, unless the target chip is the\nlast in the list, then it is the chip immediately preceding the target. If\nthere is only one item in the list, -1 is returned (select none).\nThe number returned is the index to select AFTER the target has been\nremoved.\nIf the current chip is not selected, then -1 is returned to select none.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:20173"
        },
        {
            "message": "Missing item type\nAppend the contents of the buffer to the chip list. This method will first\ncall out to the md-transform-chip method, if provided.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:20188"
        },
        {
            "message": "Missing item type\nSets whether to use the md-on-append expression. This expression is\nbound to scope and controller in {@code MdChipsDirective} as\n{@code onAppend}. Due to the nature of directive scope bindings, the\ncontroller cannot know on its own/from the scope whether an expression was\nactually provided.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:20225"
        },
        {
            "message": "Missing item type\nSets whether to use the md-transform-chip expression. This expression is\nbound to scope and controller in {@code MdChipsDirective} as\n{@code transformChip}. Due to the nature of directive scope bindings, the\ncontroller cannot know on its own/from the scope whether an expression was\nactually provided.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:20244"
        },
        {
            "message": "Missing item type\nSets whether to use the md-on-add expression. This expression is\nbound to scope and controller in {@code MdChipsDirective} as\n{@code onAdd}. Due to the nature of directive scope bindings, the\ncontroller cannot know on its own/from the scope whether an expression was\nactually provided.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:20255"
        },
        {
            "message": "Missing item type\nSets whether to use the md-on-remove expression. This expression is\nbound to scope and controller in {@code MdChipsDirective} as\n{@code onRemove}. Due to the nature of directive scope bindings, the\ncontroller cannot know on its own/from the scope whether an expression was\nactually provided.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:20266"
        },
        {
            "message": "Missing item type\nGets the input buffer. The input buffer can be the model bound to the\ndefault input item {@code this.chipBuffer}, the {@code selectedItem}\nmodel of an {@code md-autocomplete}, or, through some magic, the model\nbound to any inpput or text area element found within a\n{@code md-input-container} element.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:20288"
        },
        {
            "message": "Missing item type\nResets the input buffer for either the internal input or user provided input element.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:20302"
        },
        {
            "message": "Missing item type\nRemoves the chip at the given index.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:20318"
        },
        {
            "message": "Missing item type\nSelects the chip at `index`,",
            "line": " web\\bower_components\\angular-material\\angular-material.js:20334"
        },
        {
            "message": "Missing item type\nMarks the chip at the given index as selected.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:20351"
        },
        {
            "message": "Missing item type\nSelects the chip at `index` and gives it focus.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:20368"
        },
        {
            "message": "Missing item type\nCall `focus()` on the chip at `index`",
            "line": " web\\bower_components\\angular-material\\angular-material.js:20379"
        },
        {
            "message": "Missing item type\nConfigures the required interactions with the ngModel Controller.\nSpecifically, set {@code this.items} to the {@code NgModelCtrl#$viewVale}.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:20386"
        },
        {
            "message": "Missing item type\nConfigure event bindings on a user-provided input element.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:20416"
        },
        {
            "message": "Missing item type\nMDChips Directive Definition",
            "line": " web\\bower_components\\angular-material\\angular-material.js:20621"
        },
        {
            "message": "Missing item type\nBuilds the final template for `md-chips` and returns the postLink function.\n\nBuilding the template involves 3 key components:\nstatic chips\nchip template\ninput control\n\nIf no `ng-model` is provided, only the static chip work needs to be done.\n\nIf no user-passed `md-chip-template` exists, the default template is used. This resulting\ntemplate is appended to the chip content element.\n\nThe remove button may be overridden by passing an element with an md-chip-remove attribute.\n\nIf an `input` or `md-autocomplete` element is provided by the caller, it is set aside for\ntransclusion later. The transclusion happens in `postLink` as the parent scope is required.\nIf no user input is provided, a default one is appended to the input container node in the\ntemplate.\n\nStatic Chips (i.e. `md-chip` elements passed from the caller) are gathered and set aside for\ntransclusion in the `postLink` function.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:20659"
        },
        {
            "message": "Missing item type\nConfigures controller and transcludes.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:20712"
        },
        {
            "message": "Missing item type\nController for the MdContactChips component",
            "line": " web\\bower_components\\angular-material\\angular-material.js:20811"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:20816"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:20819"
        },
        {
            "message": "Missing item type\nMDContactChips Directive Definition",
            "line": " web\\bower_components\\angular-material\\angular-material.js:20938"
        },
        {
            "message": "Missing item type\nDirective postLink\nSupports embedded SVGs, font-icons, & external SVGs",
            "line": " web\\bower_components\\angular-material\\angular-material.js:21162"
        },
        {
            "message": "Missing item type\nRegister a source URL for a specific icon name; the name may include optional 'icon set' name prefix.\nThese icons  will later be retrieved from the cache using `$mdIcon( <icon name> )`",
            "line": " web\\bower_components\\angular-material\\angular-material.js:21299"
        },
        {
            "message": "Missing item type\nRegister a source URL for a 'named' set of icons; group of SVG definitions where each definition\nhas an icon id. Individual icons can be subsequently retrieved from this cached set using\n`$mdIcon(<icon set name>:<icon name>)`",
            "line": " web\\bower_components\\angular-material\\angular-material.js:21328"
        },
        {
            "message": "Missing item type\nRegister a source URL for the default 'named' set of icons. Unless explicitly registered,\nsubsequent lookups of icons will failover to search this 'default' icon set.\nIcon can be retrieved from this cached, default set using `$mdIcon(<name>)`",
            "line": " web\\bower_components\\angular-material\\angular-material.js:21359"
        },
        {
            "message": "Missing item type\nWhen using Font-Icons, Angular Material assumes the the Material Design icons will be used and automatically\nconfigures the default font-set == 'material-icons'. Note that the font-set references the font-icon library\nclass style that should be applied to the `<md-icon>`.\n\nConfiguring the default means that the attributes\n`md-font-set=\"material-icons\"` or `class=\"material-icons\"` do not need to be explicitly declared on the\n`<md-icon>` markup. For example:\n\n `<md-icon> face </md-icon>`\n will render as\n `<span class=\"material-icons\"> face </span>`, and\n\n `<md-icon md-font-set=\"fa\"> face </md-icon>`\n will render as\n `<span class=\"fa\"> face </span>`",
            "line": " web\\bower_components\\angular-material\\angular-material.js:21388"
        },
        {
            "message": "Missing item type\nWhile `<md-icon />` markup can also be style with sizing CSS, this method configures\nthe default width **and** height used for all icons; unless overridden by specific CSS.\nThe default sizing is (24px, 24px).",
            "line": " web\\bower_components\\angular-material\\angular-material.js:21420"
        },
        {
            "message": "Missing item type\nRegister an alias name associated with a font-icon library style ;",
            "line": " web\\bower_components\\angular-material\\angular-material.js:21484"
        },
        {
            "message": "Missing item type\nSpecify a default style name associated with a font-icon library\nfallback to Material Icons.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:21495"
        },
        {
            "message": "Missing item type\nConfiguration item stored in the Icon registry; used for lookups\nto load if not already cached in the `loaded` cache",
            "line": " web\\bower_components\\angular-material\\angular-material.js:21558"
        },
        {
            "message": "Missing item type\nActual $mdIcon service is essentially a lookup function",
            "line": " web\\bower_components\\angular-material\\angular-material.js:21619"
        },
        {
            "message": "Missing item type\nLookup registered fontSet style using its alias...\nIf not found,",
            "line": " web\\bower_components\\angular-material\\angular-material.js:21637"
        },
        {
            "message": "Missing item type\nPrepare and cache the loaded icon for the specified `id`",
            "line": " web\\bower_components\\angular-material\\angular-material.js:21653"
        },
        {
            "message": "Missing item type\nLookup the configuration in the registry, if !registered throw an error\notherwise load the icon [on-demand] using the registered URL.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:21665"
        },
        {
            "message": "Missing item type\nLoads the file as XML and uses querySelector( <id> ) to find\nthe desired node...",
            "line": " web\\bower_components\\angular-material\\angular-material.js:21677"
        },
        {
            "message": "Missing item type\nLoad the icon by URL (may use the $templateCache).\nExtract the data for later conversion to Icon",
            "line": " web\\bower_components\\angular-material\\angular-material.js:21701"
        },
        {
            "message": "Missing item type\nCatch HTTP or generic errors not related to incorrect icon IDs.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:21713"
        },
        {
            "message": "Missing item type\nCheck target signature to see if it is an Icon instance.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:21723"
        },
        {
            "message": "Missing item type\nDefine the Icon class",
            "line": " web\\bower_components\\angular-material\\angular-material.js:21730"
        },
        {
            "message": "Missing item type\nPrepare the DOM element that will be cached in the\nloaded iconCache store.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:21748"
        },
        {
            "message": "Missing item type\nClone the Icon DOM element.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:21765"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:21788"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:22127"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:22199"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:22308"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:22374"
        },
        {
            "message": "Missing item type\nCalled by our linking fn to provide access to the menu-content\nelement removed during link",
            "line": " web\\bower_components\\angular-material\\angular-material.js:22385"
        },
        {
            "message": "Missing item type\nUses the $mdMenu interim element service to open the menu contents",
            "line": " web\\bower_components\\angular-material\\angular-material.js:22474"
        },
        {
            "message": "Missing item type\nBuild a nice object out of our string attribute which specifies the\ntarget mode for left and top positioning",
            "line": " web\\bower_components\\angular-material\\angular-material.js:22551"
        },
        {
            "message": "Missing item type\nBuild a nice object out of our string attribute which specifies\nthe offset of top and left in pixels.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:22570"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:22743"
        },
        {
            "message": "Missing item type\nShow modal backdrop element...",
            "line": " web\\bower_components\\angular-material\\angular-material.js:22858"
        },
        {
            "message": "Missing item type\nHide and destroys the backdrop created by showBackdrop()",
            "line": " web\\bower_components\\angular-material\\angular-material.js:22880"
        },
        {
            "message": "Missing item type\nRemoving the menu element from the DOM and remove all associated event listeners\nand backdrop",
            "line": " web\\bower_components\\angular-material\\angular-material.js:22889"
        },
        {
            "message": "Missing item type\nFor normal closes, animate the removal.\nFor forced closes (like $destroy events), skip the animations",
            "line": " web\\bower_components\\angular-material\\angular-material.js:22903"
        },
        {
            "message": "Missing item type\nDetach the element",
            "line": " web\\bower_components\\angular-material\\angular-material.js:22911"
        },
        {
            "message": "Missing item type\nInserts and configures the staged Menu element into the DOM, positioning it,\nand wiring up various interaction events",
            "line": " web\\bower_components\\angular-material\\angular-material.js:22922"
        },
        {
            "message": "Missing item type\nPlace the menu into the DOM and call positioning related functions",
            "line": " web\\bower_components\\angular-material\\angular-material.js:22944"
        },
        {
            "message": "Missing item type\nCheck for valid opts and set some sane defaults",
            "line": " web\\bower_components\\angular-material\\angular-material.js:22969"
        },
        {
            "message": "Missing item type\nConfigure various resize listeners for screen changes",
            "line": " web\\bower_components\\angular-material\\angular-material.js:22987"
        },
        {
            "message": "Missing item type\nActivate interaction on the menu. Wire up keyboard listerns for\nclicks, keypresses, backdrop closing, etc.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:23013"
        },
        {
            "message": "Missing item type\nTakes a keypress event and focuses the next/previous menu\nitem from the emitting element",
            "line": " web\\bower_components\\angular-material\\angular-material.js:23149"
        },
        {
            "message": "Missing item type\nAttempts to focus an element. Checks whether that element is the currently\nfocused element after attempting.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:23176"
        },
        {
            "message": "Missing item type\nUse browser to remove this element without triggering a $destroy event",
            "line": " web\\bower_components\\angular-material\\angular-material.js:23189"
        },
        {
            "message": "Missing item type\nComputes menu position and sets the style on the menu container",
            "line": " web\\bower_components\\angular-material\\angular-material.js:23202"
        },
        {
            "message": "Missing item type\nClamps the repositioning of the menu within the confines of\nbounding element (often the screen/body)",
            "line": " web\\bower_components\\angular-material\\angular-material.js:23301"
        },
        {
            "message": "Missing item type\nGets the first visible child in the openMenuNode\nNecessary incase menu nodes are being dynamically hidden",
            "line": " web\\bower_components\\angular-material\\angular-material.js:23310"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-material\\angular-material.js:23526"
        },
        {
            "message": "Missing item type\nPerform initialization for the controller, setup events and watcher(s)",
            "line": " web\\bower_components\\angular-material\\angular-material.js:23589"
        },
        {
            "message": "Missing item type\nCompiles the template provided by the user.  This is passed as an attribute from the tabs\ndirective's template function.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:23608"
        },
        {
            "message": "Missing item type\nBinds events used by the tabs component.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:23620"
        },
        {
            "message": "Missing item type\nConfigure watcher(s) used by Tabs",
            "line": " web\\bower_components\\angular-material\\angular-material.js:23628"
        },
        {
            "message": "Missing item type\nCreates a one-way binding manually rather than relying on Angular's isolated scope",
            "line": " web\\bower_components\\angular-material\\angular-material.js:23635"
        },
        {
            "message": "Missing item type\nDefines boolean attributes with default value set to true.  (ie. md-stretch-tabs with no value\nwill be treated as being truthy)",
            "line": " web\\bower_components\\angular-material\\angular-material.js:23646"
        },
        {
            "message": "Missing item type\nRemove any events defined by this controller",
            "line": " web\\bower_components\\angular-material\\angular-material.js:23662"
        },
        {
            "message": "Missing item type\nToggles stretch tabs class and updates inkbar when tab stretching changes",
            "line": " web\\bower_components\\angular-material\\angular-material.js:23672"
        },
        {
            "message": "Missing item type\nAdd/remove the `md-no-tab-content` class depending on `ctrl.hasContent`",
            "line": " web\\bower_components\\angular-material\\angular-material.js:23705"
        },
        {
            "message": "Missing item type\nApply ctrl.offsetLeft to the paging element when it changes",
            "line": " web\\bower_components\\angular-material\\angular-material.js:23713"
        },
        {
            "message": "Missing item type\nUpdate the UI whenever `ctrl.focusIndex` is updated",
            "line": " web\\bower_components\\angular-material\\angular-material.js:23723"
        },
        {
            "message": "Missing item type\nUpdate the UI whenever the selected index changes. Calls user-defined select/deselect methods.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:23735"
        },
        {
            "message": "Missing item type\nQueues up a call to `handleWindowResize` when a resize occurs while the tabs component is\nhidden.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:23758"
        },
        {
            "message": "Missing item type\nHandle user keyboard interactions",
            "line": " web\\bower_components\\angular-material\\angular-material.js:23784"
        },
        {
            "message": "Missing item type\nUpdate the selected index and trigger a click event on the original `md-tab` element in order\nto fire user-added click events.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:23807"
        },
        {
            "message": "Missing item type\nWhen pagination is on, this makes sure the selected index is in view.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:23821"
        },
        {
            "message": "Missing item type\nSlides the tabs over approximately one page forward.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:23831"
        },
        {
            "message": "Missing item type\nSlides the tabs over approximately one page backward.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:23845"
        },
        {
            "message": "Missing item type\nUpdate size calculations when the window is resized.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:23857"
        },
        {
            "message": "Missing item type\nToggle dynamic height class when value changes",
            "line": " web\\bower_components\\angular-material\\angular-material.js:23873"
        },
        {
            "message": "Missing item type\nRemove a tab from the data and select the nearest valid tab.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:23881"
        },
        {
            "message": "Missing item type\nCreate an entry in the tabs array for a new tab at the specified index.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:23902"
        },
        {
            "message": "Missing item type\nGathers references to all of the DOM elements used by this controller.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:23942"
        },
        {
            "message": "Missing item type\nDetermines whether or not the left pagination arrow should be enabled.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:23965"
        },
        {
            "message": "Missing item type\nDetermines whether or not the right pagination arrow should be enabled.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:23973"
        },
        {
            "message": "Missing item type\nDetermines if the UI should stretch the tabs to fill the available space.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:23983"
        },
        {
            "message": "Missing item type\nDetermines if the tabs should appear centered.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:23999"
        },
        {
            "message": "Missing item type\nDetermines if pagination is necessary to display the tabs within the available space.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:24007"
        },
        {
            "message": "Missing item type\nFinds the nearest tab index that is available.  This is primarily used for when the active\ntab is removed.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:24018"
        },
        {
            "message": "Missing item type\nDefines a property using a getter and setter in order to trigger a change handler without\nusing `$watch` to observe changes.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:24039"
        },
        {
            "message": "Missing item type\nUpdates whether or not pagination should be displayed.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:24057"
        },
        {
            "message": "Missing item type\nRe-orders the tabs and updates the selected and focus indexes to their new positions.\nThis is triggered by `tabDirective.js` when the user's tabs have been re-ordered.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:24082"
        },
        {
            "message": "Missing item type\nThis moves the selected or focus index left or right.  This is used by the keydown handler.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:24096"
        },
        {
            "message": "Missing item type\nThis is used to forward focus to dummy elements.  This method is necessary to avoid animation\nissues when attempting to focus an item that is out of view.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:24112"
        },
        {
            "message": "Missing item type\nForces the pagination to move the focused tab into view.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:24120"
        },
        {
            "message": "Missing item type\nIterates through all queued functions and clears the queue.  This is used for functions that\nare called before the UI is ready, such as size calculations.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:24134"
        },
        {
            "message": "Missing item type\nDetermines if the tab content area is needed.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:24143"
        },
        {
            "message": "Missing item type\nMoves the indexes to their nearest valid values.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:24154"
        },
        {
            "message": "Missing item type\nCalculates the content height of the current tab.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:24162"
        },
        {
            "message": "Missing item type\nRepositions the ink bar to the selected tab.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:24223"
        },
        {
            "message": "Missing item type\nAdds left/right classes so that the ink bar will animate properly.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:24252"
        },
        {
            "message": "Missing item type\nTakes an offset value and makes sure that it is within the min/max allowed values.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:24265"
        },
        {
            "message": "Missing item type\nAttaches a ripple to the tab item element.",
            "line": " web\\bower_components\\angular-material\\angular-material.js:24279"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-messages\\angular-messages.js:1"
        },
        {
            "message": "Missing item type\nThe `ngMessages` module provides enhanced support for displaying messages within templates\n(typically within forms or when rendering message objects that return key/value data).\nInstead of relying on JavaScript code and/or complex ng-if statements within your form template to\nshow and hide error messages specific to the state of an input field, the `ngMessages` and\n`ngMessage` directives are designed to handle the complexity, inheritance and priority\nsequencing based on the order of how the messages are defined in the template.\n\nCurrently, the ngMessages module only contains the code for the `ngMessages`, `ngMessagesInclude`\n`ngMessage` and `ngMessageExp` directives.\n\n# Usage\nThe `ngMessages` directive listens on a key/value collection which is set on the ngMessages attribute.\nSince the {@link ngModel ngModel} directive exposes an `$error` object, this error object can be\nused with `ngMessages` to display control error messages in an easier way than with just regular angular\ntemplate directives.\n\n```html\n<form name=\"myForm\">\n  <label>\n    Enter text:\n    <input type=\"text\" ng-model=\"field\" name=\"myField\" required minlength=\"5\" />\n  </label>\n  <div ng-messages=\"myForm.myField.$error\" role=\"alert\">\n    <div ng-message=\"required\">You did not enter a field</div>\n    <div ng-message=\"minlength, maxlength\">\n      Your email must be between 5 and 100 characters long\n    </div>\n  </div>\n</form>\n```\n\nNow whatever key/value entries are present within the provided object (in this case `$error`) then\nthe ngMessages directive will render the inner first ngMessage directive (depending if the key values\nmatch the attribute value present on each ngMessage directive). In other words, if your errors\nobject contains the following data:\n\n```javascript\n<!-- keep in mind that ngModel automatically sets these error flags -->\nmyField.$error = { minlength : true, required : true };\n```\n\nThen the `required` message will be displayed first. When required is false then the `minlength` message\nwill be displayed right after (since these messages are ordered this way in the template HTML code).\nThe prioritization of each message is determined by what order they're present in the DOM.\nTherefore, instead of having custom JavaScript code determine the priority of what errors are\npresent before others, the presentation of the errors are handled within the template.\n\nBy default, ngMessages will only display one error at a time. However, if you wish to display all\nmessages then the `ng-messages-multiple` attribute flag can be used on the element containing the\nngMessages directive to make this happen.\n\n```html\n<!-- attribute-style usage -->\n<div ng-messages=\"myForm.myField.$error\" ng-messages-multiple>...</div>\n\n<!-- element-style usage -->\n<ng-messages for=\"myForm.myField.$error\" multiple>...</ng-messages>\n```\n\n## Reusing and Overriding Messages\nIn addition to prioritization, ngMessages also allows for including messages from a remote or an inline\ntemplate. This allows for generic collection of messages to be reused across multiple parts of an\napplication.\n\n```html\n<script type=\"text/ng-template\" id=\"error-messages\">\n  <div ng-message=\"required\">This field is required</div>\n  <div ng-message=\"minlength\">This field is too short</div>\n</script>\n\n<div ng-messages=\"myForm.myField.$error\" role=\"alert\">\n  <div ng-messages-include=\"error-messages\"></div>\n</div>\n```\n\nHowever, including generic messages may not be useful enough to match all input fields, therefore,\n`ngMessages` provides the ability to override messages defined in the remote template by redefining\nthem within the directive container.\n\n```html\n<!-- a generic template of error messages known as \"my-custom-messages\" -->\n<script type=\"text/ng-template\" id=\"my-custom-messages\">\n  <div ng-message=\"required\">This field is required</div>\n  <div ng-message=\"minlength\">This field is too short</div>\n</script>\n\n<form name=\"myForm\">\n  <label>\n    Email address\n    <input type=\"email\"\n           id=\"email\"\n           name=\"myEmail\"\n           ng-model=\"email\"\n           minlength=\"5\"\n           required />\n  </label>\n  <!-- any ng-message elements that appear BEFORE the ng-messages-include will\n       override the messages present in the ng-messages-include template -->\n  <div ng-messages=\"myForm.myEmail.$error\" role=\"alert\">\n    <!-- this required message has overridden the template message -->\n    <div ng-message=\"required\">You did not enter your email address</div>\n\n    <!-- this is a brand new message and will appear last in the prioritization -->\n    <div ng-message=\"email\">Your email address is invalid</div>\n\n    <!-- and here are the generic error messages -->\n    <div ng-messages-include=\"my-custom-messages\"></div>\n  </div>\n</form>\n```\n\nIn the example HTML code above the message that is set on required will override the corresponding\nrequired message defined within the remote template. Therefore, with particular input fields (such\nemail addresses, date fields, autocomplete inputs, etc...), specialized error messages can be applied\nwhile more generic messages can be used to handle other, more general input errors.\n\n## Dynamic Messaging\nngMessages also supports using expressions to dynamically change key values. Using arrays and\nrepeaters to list messages is also supported. This means that the code below will be able to\nfully adapt itself and display the appropriate message when any of the expression data changes:\n\n```html\n<form name=\"myForm\">\n  <label>\n    Email address\n    <input type=\"email\"\n           name=\"myEmail\"\n           ng-model=\"email\"\n           minlength=\"5\"\n           required />\n  </label>\n  <div ng-messages=\"myForm.myEmail.$error\" role=\"alert\">\n    <div ng-message=\"required\">You did not enter your email address</div>\n    <div ng-repeat=\"errorMessage in errorMessages\">\n      <!-- use ng-message-exp for a message whose key is given by an expression -->\n      <div ng-message-exp=\"errorMessage.type\">{{ errorMessage.text }}</div>\n    </div>\n  </div>\n</form>\n```\n\nThe `errorMessage.type` expression can be a string value or it can be an array so\nthat multiple errors can be associated with a single error message:\n\n```html\n  <label>\n    Email address\n    <input type=\"email\"\n           ng-model=\"data.email\"\n           name=\"myEmail\"\n           ng-minlength=\"5\"\n           ng-maxlength=\"100\"\n           required />\n  </label>\n  <div ng-messages=\"myForm.myEmail.$error\" role=\"alert\">\n    <div ng-message-exp=\"'required'\">You did not enter your email address</div>\n    <div ng-message-exp=\"['minlength', 'maxlength']\">\n      Your email must be between 5 and 100 characters long\n    </div>\n  </div>\n```\n\nFeel free to use other structural directives such as ng-if and ng-switch to further control\nwhat messages are active and when. Be careful, if you place ng-message on the same element\nas these structural directives, Angular may not be able to determine if a message is active\nor not. Therefore it is best to place the ng-message on a child element of the structural\ndirective.\n\n```html\n<div ng-messages=\"myForm.myEmail.$error\" role=\"alert\">\n  <div ng-if=\"showRequiredError\">\n    <div ng-message=\"required\">Please enter something</div>\n  </div>\n</div>\n```\n\n## Animations\nIf the `ngAnimate` module is active within the application then the `ngMessages`, `ngMessage` and\n`ngMessageExp` directives will trigger animations whenever any messages are added and removed from\nthe DOM by the `ngMessages` directive.\n\nWhenever the `ngMessages` directive contains one or more visible messages then the `.ng-active` CSS\nclass will be added to the element. The `.ng-inactive` CSS class will be applied when there are no\nmessages present. Therefore, CSS transitions and keyframes as well as JavaScript animations can\nhook into the animations whenever these classes are added/removed.\n\nLet's say that our HTML code for our messages container looks like so:\n\n```html\n<div ng-messages=\"myMessages\" class=\"my-messages\" role=\"alert\">\n  <div ng-message=\"alert\" class=\"some-message\">...</div>\n  <div ng-message=\"fail\" class=\"some-message\">...</div>\n</div>\n```\n\nThen the CSS animation code for the message container looks like so:\n\n```css\n.my-messages {\n  transition:1s linear all;\n}\n.my-messages.ng-active {\n  // messages are visible\n}\n.my-messages.ng-inactive {\n  // messages are hidden\n}\n```\n\nWhenever an inner message is attached (becomes visible) or removed (becomes hidden) then the enter\nand leave animation is triggered for each particular element bound to the `ngMessage` directive.\n\nTherefore, the CSS code for the inner messages looks like so:\n\n```css\n.some-message {\n  transition:1s linear all;\n}\n\n.some-message.ng-enter {}\n.some-message.ng-enter.ng-enter-active {}\n\n.some-message.ng-leave {}\n.some-message.ng-leave.ng-leave-active {}\n```\n\n{@link ngAnimate Click here} to learn how to use JavaScript animations or to learn more about ngAnimate.",
            "line": " web\\bower_components\\angular-messages\\angular-messages.js:16"
        },
        {
            "message": "Missing item type\n`ngMessagesInclude` is a directive with the purpose to import existing ngMessage template\ncode from a remote template and place the downloaded template code into the exact spot\nthat the ngMessagesInclude directive is placed within the ngMessages container. This allows\nfor a series of pre-defined messages to be reused and also allows for the developer to\ndetermine what messages are overridden due to the placement of the ngMessagesInclude directive.",
            "line": " web\\bower_components\\angular-messages\\angular-messages.js:487"
        },
        {
            "message": "Missing item type\n`ngMessage` is a directive with the purpose to show and hide a particular message.\nFor `ngMessage` to operate, a parent `ngMessages` directive on a parent DOM element\nmust be situated since it determines which messages are visible based on the state\nof the provided key/value map that `ngMessages` listens on.\n\nMore information about using `ngMessage` can be found in the\n{@link module:ngMessages `ngMessages` module documentation}.",
            "line": " web\\bower_components\\angular-messages\\angular-messages.js:541"
        },
        {
            "message": "Missing item type\n`ngMessageExp` is a directive with the purpose to show and hide a particular message.\nFor `ngMessageExp` to operate, a parent `ngMessages` directive on a parent DOM element\nmust be situated since it determines which messages are visible based on the state\nof the provided key/value map that `ngMessages` listens on.",
            "line": " web\\bower_components\\angular-messages\\angular-messages.js:576"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:1"
        },
        {
            "message": "Missing item type\nNamespace from 'angular-mocks.js' which contains testing related code.",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:10"
        },
        {
            "message": "Missing item type\nThis service is a mock implementation of {@link ng.$browser}. It provides fake\nimplementation for commonly used browser apis that are hard to test, e.g. setTimeout, xhr,\ncookies, etc...\n\nThe api of this service is the same as that of the real {@link ng.$browser $browser}, except\nthat there are several helper methods available which can be used in tests.",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:19"
        },
        {
            "message": "Missing item type\nCurrent milliseconds mock time.",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:81"
        },
        {
            "message": "Missing item type\nFlushes all pending requests and executes the defer callbacks.",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:106"
        },
        {
            "message": "Missing item type\nrun all fns in pollFns",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:137"
        },
        {
            "message": "Missing item type\nConfigures the mock implementation of {@link ng.$exceptionHandler} to rethrow or to log errors\npassed to the `$exceptionHandler`.",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:173"
        },
        {
            "message": "Missing item type\nMock implementation of {@link ng.$exceptionHandler} that rethrows or logs errors passed\nto it. See {@link ngMock.$exceptionHandlerProvider $exceptionHandlerProvider} for configuration\ninformation.\n\n\n```js\n  describe('$exceptionHandlerProvider', function() {\n\n    it('should capture log messages and exceptions', function() {\n\n      module(function($exceptionHandlerProvider) {\n        $exceptionHandlerProvider.mode('log');\n      });\n\n      inject(function($log, $exceptionHandler, $timeout) {\n        $timeout(function() { $log.log(1); });\n        $timeout(function() { $log.log(2); throw 'banana peel'; });\n        $timeout(function() { $log.log(3); });\n        expect($exceptionHandler.errors).toEqual([]);\n        expect($log.assertEmpty());\n        $timeout.flush();\n        expect($exceptionHandler.errors).toEqual(['banana peel']);\n        expect($log.log.logs).toEqual([[1], [2], [3]]);\n      });\n    });\n  });\n```",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:182"
        },
        {
            "message": "Missing item type\nSets the logging mode.",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:219"
        },
        {
            "message": "Missing item type\nMock implementation of {@link ng.$log} that gathers all logged messages in arrays\n(one array per logging level). These arrays are exposed as `logs` property of each of the\nlevel-specific log function, e.g. for level `error` the array is exposed as `$log.error.logs`.",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:268"
        },
        {
            "message": "Missing item type\nReset all of the logging arrays to empty.",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:307"
        },
        {
            "message": "Missing item type\nArray of messages logged using {@link ng.$log#log `log()`}.",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:315"
        },
        {
            "message": "Missing item type\nArray of messages logged using {@link ng.$log#info `info()`}.",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:329"
        },
        {
            "message": "Missing item type\nArray of messages logged using {@link ng.$log#warn `warn()`}.",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:343"
        },
        {
            "message": "Missing item type\nArray of messages logged using {@link ng.$log#error `error()`}.",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:357"
        },
        {
            "message": "Missing item type\nArray of messages logged using {@link ng.$log#debug `debug()`}.",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:371"
        },
        {
            "message": "Missing item type\nAssert that all of the logging methods have no logged messages. If any messages are present,\nan exception is thrown.",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:387"
        },
        {
            "message": "Missing item type\nMock implementation of the $interval service.\n\nUse {@link ngMock.$interval#flush `$interval.flush(millis)`} to\nmove forward by `millis` milliseconds and trigger any functions scheduled to run in that\ntime.",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:419"
        },
        {
            "message": "Missing item type\nCancels a task associated with the `promise`.",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:496"
        },
        {
            "message": "Missing item type\nRuns interval tasks scheduled to be run in the next `millis` milliseconds.",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:523"
        },
        {
            "message": "Missing item type\n*NOTE*: this is not an injectable instance, just a globally available mock class of `Date`.\n\nMock of the Date type which has its timezone specified via constructor arg.\n\nThe main purpose is to create Date-like instances with timezone fixed to the specified timezone\noffset, so that we can test code that depends on local timezone settings without dependency on\nthe time zone settings of the machine where the code is running.",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:596"
        },
        {
            "message": "Missing item type\nMock implementation of the {@link ng.$animate `$animate`} service. Exposes two additional methods\nfor testing animations.",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:762"
        },
        {
            "message": "Missing item type\nThis method will close all pending animations (both {@link ngAnimate#javascript-based-animations Javascript}\nand {@link ngAnimate.$animateCss CSS}) and it will also flush any remaining animation frames and/or callbacks.",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:857"
        },
        {
            "message": "Missing item type\nThis method is used to flush the pending callbacks and animation frames to either start\nan animation or conclude an animation. Note that this will not actually close an\nactively running animation (see {@link ngMock.$animate#closeAndFlush `closeAndFlush()`} for that).",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:876"
        },
        {
            "message": "Missing item type\n*NOTE*: this is not an injectable instance, just a globally available function.\n\nMethod for serializing common angular objects (scope, elements, etc..) into strings, useful for\ndebugging.\n\nThis method is also available on window, where it can be used to display objects on debug\nconsole.",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:929"
        },
        {
            "message": "Missing item type\nFake HTTP backend implementation suitable for unit testing applications that use the\n{@link ng.$http $http service}.\n\n*Note*: For fake HTTP backend implementation suitable for end-to-end testing or backend-less\ndevelopment please see {@link ngMockE2E.$httpBackend e2e $httpBackend mock}.\n\nDuring unit testing, we want our unit tests to run quickly and have no external dependencies so\nwe don’t want to send [XHR](https://developer.mozilla.org/en/xmlhttprequest) or\n[JSONP](http://en.wikipedia.org/wiki/JSONP) requests to a real server. All we really need is\nto verify whether a certain request has been sent or not, or alternatively just let the\napplication make requests, respond with pre-trained responses and assert that the end result is\nwhat we expect it to be.\n\nThis mock implementation can be used to respond with static or dynamic responses via the\n`expect` and `when` apis and their shortcuts (`expectGET`, `whenPOST`, etc).\n\nWhen an Angular application needs some data from a server, it calls the $http service, which\nsends the request to a real server using $httpBackend service. With dependency injection, it is\neasy to inject $httpBackend mock (which has the same API as $httpBackend) and use it to verify\nthe requests and respond with some testing data without sending a request to a real server.\n\nThere are two ways to specify what test data should be returned as http responses by the mock\nbackend when the code under test makes http requests:\n\n- `$httpBackend.expect` - specifies a request expectation\n- `$httpBackend.when` - specifies a backend definition\n\n\n## Request Expectations vs Backend Definitions\n\nRequest expectations provide a way to make assertions about requests made by the application and\nto define responses for those requests. The test will fail if the expected requests are not made\nor they are made in the wrong order.\n\nBackend definitions allow you to define a fake backend for your application which doesn't assert\nif a particular request was made or not, it just returns a trained response if a request is made.\nThe test will pass whether or not the request gets made during testing.\n\n\n<table class=\"table\">\n  <tr><th width=\"220px\"></th><th>Request expectations</th><th>Backend definitions</th></tr>\n  <tr>\n    <th>Syntax</th>\n    <td>.expect(...).respond(...)</td>\n    <td>.when(...).respond(...)</td>\n  </tr>\n  <tr>\n    <th>Typical usage</th>\n    <td>strict unit tests</td>\n    <td>loose (black-box) unit testing</td>\n  </tr>\n  <tr>\n    <th>Fulfills multiple requests</th>\n    <td>NO</td>\n    <td>YES</td>\n  </tr>\n  <tr>\n    <th>Order of requests matters</th>\n    <td>YES</td>\n    <td>NO</td>\n  </tr>\n  <tr>\n    <th>Request required</th>\n    <td>YES</td>\n    <td>NO</td>\n  </tr>\n  <tr>\n    <th>Response required</th>\n    <td>optional (see below)</td>\n    <td>YES</td>\n  </tr>\n</table>\n\nIn cases where both backend definitions and request expectations are specified during unit\ntesting, the request expectations are evaluated first.\n\nIf a request expectation has no response specified, the algorithm will search your backend\ndefinitions for an appropriate response.\n\nIf a request didn't match any expectation or if the expectation doesn't have the response\ndefined, the backend definitions are evaluated in sequential order to see if any of them match\nthe request. The response from the first matched definition is returned.\n\n\n## Flushing HTTP requests\n\nThe $httpBackend used in production always responds to requests asynchronously. If we preserved\nthis behavior in unit testing, we'd have to create async unit tests, which are hard to write,\nto follow and to maintain. But neither can the testing mock respond synchronously; that would\nchange the execution of the code under test. For this reason, the mock $httpBackend has a\n`flush()` method, which allows the test to explicitly flush pending requests. This preserves\nthe async api of the backend, while allowing the test to execute synchronously.\n\n\n## Unit testing with mock $httpBackend\nThe following code shows how to setup and use the mock backend when unit testing a controller.\nFirst we create the controller under test:\n\n ```js\n // The module code\n angular\n   .module('MyApp', [])\n   .controller('MyController', MyController);\n\n // The controller code\n function MyController($scope, $http) {\n   var authToken;\n\n   $http.get('/auth.py').then(function(response) {\n     authToken = response.headers('A-Token');\n     $scope.user = response.data;\n   });\n\n   $scope.saveMessage = function(message) {\n     var headers = { 'Authorization': authToken };\n     $scope.status = 'Saving...';\n\n     $http.post('/add-msg.py', message, { headers: headers } ).then(function(response) {\n       $scope.status = '';\n     }).catch(function() {\n       $scope.status = 'Failed...';\n     });\n   };\n }\n ```\n\nNow we setup the mock backend and create the test specs:\n\n ```js\n   // testing controller\n   describe('MyController', function() {\n      var $httpBackend, $rootScope, createController, authRequestHandler;\n\n      // Set up the module\n      beforeEach(module('MyApp'));\n\n      beforeEach(inject(function($injector) {\n        // Set up the mock http service responses\n        $httpBackend = $injector.get('$httpBackend');\n        // backend definition common for all tests\n        authRequestHandler = $httpBackend.when('GET', '/auth.py')\n                               .respond({userId: 'userX'}, {'A-Token': 'xxx'});\n\n        // Get hold of a scope (i.e. the root scope)\n        $rootScope = $injector.get('$rootScope');\n        // The $controller service is used to create instances of controllers\n        var $controller = $injector.get('$controller');\n\n        createController = function() {\n          return $controller('MyController', {'$scope' : $rootScope });\n        };\n      }));\n\n\n      afterEach(function() {\n        $httpBackend.verifyNoOutstandingExpectation();\n        $httpBackend.verifyNoOutstandingRequest();\n      });\n\n\n      it('should fetch authentication token', function() {\n        $httpBackend.expectGET('/auth.py');\n        var controller = createController();\n        $httpBackend.flush();\n      });\n\n\n      it('should fail authentication', function() {\n\n        // Notice how you can change the response even after it was set\n        authRequestHandler.respond(401, '');\n\n        $httpBackend.expectGET('/auth.py');\n        var controller = createController();\n        $httpBackend.flush();\n        expect($rootScope.status).toBe('Failed...');\n      });\n\n\n      it('should send msg to server', function() {\n        var controller = createController();\n        $httpBackend.flush();\n\n        // now you don’t care about the authentication, but\n        // the controller will still send the request and\n        // $httpBackend will respond without you having to\n        // specify the expectation and response for this request\n\n        $httpBackend.expectPOST('/add-msg.py', 'message content').respond(201, '');\n        $rootScope.saveMessage('message content');\n        expect($rootScope.status).toBe('Saving...');\n        $httpBackend.flush();\n        expect($rootScope.status).toBe('');\n      });\n\n\n      it('should send auth header', function() {\n        var controller = createController();\n        $httpBackend.flush();\n\n        $httpBackend.expectPOST('/add-msg.py', undefined, function(headers) {\n          // check if the header was sent, if it wasn't the expectation won't\n          // match the request and the test will fail\n          return headers['Authorization'] == 'xxx';\n        }).respond(201, '');\n\n        $rootScope.saveMessage('whatever');\n        $httpBackend.flush();\n      });\n   });\n ```\n\n## Dynamic responses\n\nYou define a response to a request by chaining a call to `respond()` onto a definition or expectation.\nIf you provide a **callback** as the first parameter to `respond(callback)` then you can dynamically generate\na response based on the properties of the request.\n\nThe `callback` function should be of the form `function(method, url, data, headers, params)`.\n\n### Query parameters\n\nBy default, query parameters on request URLs are parsed into the `params` object. So a request URL\nof `/list?q=searchstr&orderby=-name` would set `params` to be `{q: 'searchstr', orderby: '-name'}`.\n\n### Regex parameter matching\n\nIf an expectation or definition uses a **regex** to match the URL, you can provide an array of **keys** via a\n`params` argument. The index of each **key** in the array will match the index of a **group** in the\n**regex**.\n\nThe `params` object in the **callback** will now have properties with these keys, which hold the value of the\ncorresponding **group** in the **regex**.\n\nThis also applies to the `when` and `expect` shortcut methods.\n\n\n```js\n  $httpBackend.expect('GET', /\\/user\\/(.+)/, undefined, undefined, ['id'])\n    .respond(function(method, url, data, headers, params) {\n      // for requested url of '/user/1234' params is {id: '1234'}\n    });\n\n  $httpBackend.whenPATCH(/\\/user\\/(.+)\\/article\\/(.+)/, undefined, undefined, ['user', 'article'])\n    .respond(function(method, url, data, headers, params) {\n      // for url of '/user/1234/article/567' params is {user: '1234', article: '567'}\n    });\n```\n\n## Matching route requests\n\nFor extra convenience, `whenRoute` and `expectRoute` shortcuts are available. These methods offer colon\ndelimited matching of the url path, ignoring the query string. This allows declarations\nsimilar to how application routes are configured with `$routeProvider`. Because these methods convert\nthe definition url to regex, declaration order is important. Combined with query parameter parsing,\nthe following is possible:\n\n ```js\n   $httpBackend.whenRoute('GET', '/users/:id')\n     .respond(function(method, url, data, headers, params) {\n       return [200, MockUserList[Number(params.id)]];\n     });\n\n   $httpBackend.whenRoute('GET', '/users')\n     .respond(function(method, url, data, headers, params) {\n       var userList = angular.copy(MockUserList),\n         defaultSort = 'lastName',\n         count, pages, isPrevious, isNext;\n\n       // paged api response '/v1/users?page=2'\n       params.page = Number(params.page) || 1;\n\n       // query for last names '/v1/users?q=Archer'\n       if (params.q) {\n         userList = $filter('filter')({lastName: params.q});\n       }\n\n       pages = Math.ceil(userList.length / pagingLength);\n       isPrevious = params.page > 1;\n       isNext = params.page < pages;\n\n       return [200, {\n         count:    userList.length,\n         previous: isPrevious,\n         next:     isNext,\n         // sort field -> '/v1/users?sortBy=firstName'\n         results:  $filter('orderBy')(userList, params.sortBy || defaultSort)\n                     .splice((params.page - 1) * pagingLength, pagingLength)\n       }];\n     });\n ```",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:999"
        },
        {
            "message": "Missing item type\nGeneral factory function for $httpBackend mock.\nReturns instance for unit testing (when no arguments specified):\n  - passing through is disabled\n  - auto flushing is disabled\n\nReturns instance for e2e testing (when `$delegate` and `$browser` specified):\n  - passing through (delegating request to real backend) is enabled\n  - auto flushing is enabled",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:1299"
        },
        {
            "message": "Missing item type\nCreates a new backend definition.",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:1406"
        },
        {
            "message": "Missing item type\nCreates a new backend definition for GET requests. For more info see `when()`.",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:1454"
        },
        {
            "message": "Missing item type\nCreates a new backend definition for HEAD requests. For more info see `when()`.",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:1469"
        },
        {
            "message": "Missing item type\nCreates a new backend definition for DELETE requests. For more info see `when()`.",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:1484"
        },
        {
            "message": "Missing item type\nCreates a new backend definition for POST requests. For more info see `when()`.",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:1499"
        },
        {
            "message": "Missing item type\nCreates a new backend definition for PUT requests.  For more info see `when()`.",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:1516"
        },
        {
            "message": "Missing item type\nCreates a new backend definition for JSONP requests. For more info see `when()`.",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:1533"
        },
        {
            "message": "Missing item type\nCreates a new backend definition that compares only with the requested route.",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:1548"
        },
        {
            "message": "Missing item type\nCreates a new request expectation.",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:1595"
        },
        {
            "message": "Missing item type\nCreates a new request expectation for GET requests. For more info see `expect()`.",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:1635"
        },
        {
            "message": "Missing item type\nCreates a new request expectation for HEAD requests. For more info see `expect()`.",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:1650"
        },
        {
            "message": "Missing item type\nCreates a new request expectation for DELETE requests. For more info see `expect()`.",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:1665"
        },
        {
            "message": "Missing item type\nCreates a new request expectation for POST requests. For more info see `expect()`.",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:1680"
        },
        {
            "message": "Missing item type\nCreates a new request expectation for PUT requests. For more info see `expect()`.",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:1698"
        },
        {
            "message": "Missing item type\nCreates a new request expectation for PATCH requests. For more info see `expect()`.",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:1716"
        },
        {
            "message": "Missing item type\nCreates a new request expectation for JSONP requests. For more info see `expect()`.",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:1734"
        },
        {
            "message": "Missing item type\nCreates a new request expectation that compares only with the requested route.",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:1749"
        },
        {
            "message": "Missing item type\nFlushes all pending requests using the trained responses.",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:1767"
        },
        {
            "message": "Missing item type\nVerifies that all of the requests defined via the `expect` api were made. If any of the\nrequests were not made, verifyNoOutstandingExpectation throws an exception.\n\nTypically, you would call this method following each test case that asserts requests using an\n\"afterEach\" clause.\n\n```js\n  afterEach($httpBackend.verifyNoOutstandingExpectation);\n```",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:1795"
        },
        {
            "message": "Missing item type\nVerifies that there are no outstanding requests that need to be flushed.\n\nTypically, you would call this method following each test case that asserts requests using an\n\"afterEach\" clause.\n\n```js\n  afterEach($httpBackend.verifyNoOutstandingRequest);\n```",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:1817"
        },
        {
            "message": "Missing item type\nResets all request expectations, but preserves all backend definitions. Typically, you would\ncall resetExpectations during a multiple-phase test when you want to reuse the same instance of\n$httpBackend mock.",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:1837"
        },
        {
            "message": "Missing item type\nThis service is just a simple decorator for {@link ng.$timeout $timeout} service\nthat adds a \"flush\" and \"verifyNoPendingTasks\" methods.",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:2017"
        },
        {
            "message": "Missing item type\nFlushes the queue of pending tasks.",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:2028"
        },
        {
            "message": "Missing item type\nVerifies that there are no pending tasks that need to be flushed.",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:2041"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:2095"
        },
        {
            "message": "Missing item type\nA decorator for {@link ng.$controller} with additional `bindings` parameter, useful when testing\ncontrollers of directives that use {@link $compile#-bindtocontroller- `bindToController`}.\n\n\n## Example\n\n```js\n\n// Directive definition ...\n\nmyMod.directive('myDirective', {\n  controller: 'MyDirectiveController',\n  bindToController: {\n    name: '@'\n  }\n});\n\n\n// Controller definition ...\n\nmyMod.controller('MyDirectiveController', ['$log', function($log) {\n  $log.info(this.name);\n})];\n\n\n// In a test ...\n\ndescribe('myDirectiveController', function() {\n  it('should write the bound name to the log', inject(function($controller, $log) {\n    var ctrl = $controller('MyDirectiveController', { /* no locals &#42;/ }, { name: 'Clark Kent' });\n    expect(ctrl.name).toEqual('Clark Kent');\n    expect($log.info.logs).toEqual(['Clark Kent']);\n  });\n});\n\n```",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:2104"
        },
        {
            "message": "Missing item type\nA service that can be used to create instances of component controllers.\n<div class=\"alert alert-info\">\nBe aware that the controller will be instantiated and attached to the scope as specified in\nthe component definition object. That means that you must always provide a `$scope` object\nin the `locals` param.\n</div>",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:2174"
        },
        {
            "message": "Missing item type\n# ngMock\n\nThe `ngMock` module provides support to inject and mock Angular services into unit tests.\nIn addition, ngMock also extends various core ng services such that they can be\ninspected and controlled in a synchronous manner within test code.\n\n\n<div doc-module-components=\"ngMock\"></div>",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:2218"
        },
        {
            "message": "Missing item type\n*NOTE*: This function is also published on window for easy access.<br>\n*NOTE*: This function is declared ONLY WHEN running tests with jasmine or mocha\n\nThis function registers a module configuration code. It collects the configuration information\nwhich will be used when the injector is created by {@link angular.mock.inject inject}.\n\nSee {@link angular.mock.inject inject} for usage example",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:2628"
        },
        {
            "message": "Missing item type\n*NOTE*: This function is also published on window for easy access.<br>\n*NOTE*: This function is declared ONLY WHEN running tests with jasmine or mocha\n\nThe inject function wraps a function into an injectable function. The inject() creates new\ninstance of {@link auto.$injector $injector} per test, which is then used for\nresolving references.\n\n\n## Resolving References (Underscore Wrapping)\nOften, we would like to inject a reference once, in a `beforeEach()` block and reuse this\nin multiple `it()` clauses. To be able to do this we must assign the reference to a variable\nthat is declared in the scope of the `describe()` block. Since we would, most likely, want\nthe variable to have the same name of the reference we have a problem, since the parameter\nto the `inject()` function would hide the outer variable.\n\nTo help with this, the injected parameters can, optionally, be enclosed with underscores.\nThese are ignored by the injector when the reference name is resolved.\n\nFor example, the parameter `_myService_` would be resolved as the reference `myService`.\nSince it is available in the function body as _myService_, we can then assign it to a variable\ndefined in an outer scope.\n\n```\n// Defined out reference variable outside\nvar myService;\n\n// Wrap the parameter in underscores\nbeforeEach( inject( function(_myService_){\n  myService = _myService_;\n}));\n\n// Use myService in a series of tests.\nit('makes use of myService', function() {\n  myService.doStuff();\n});\n\n```\n\nSee also {@link angular.mock.module angular.mock.module}\n\n## Example\nExample of what a typical jasmine tests looks like with the inject method.\n```js\n\n  angular.module('myApplicationModule', [])\n      .value('mode', 'app')\n      .value('version', 'v1.0.1');\n\n\n  describe('MyApp', function() {\n\n    // You need to load modules that you want to test,\n    // it loads only the \"ng\" module by default.\n    beforeEach(module('myApplicationModule'));\n\n\n    // inject() is used to inject arguments of all given functions\n    it('should provide a version', inject(function(mode, version) {\n      expect(version).toEqual('v1.0.1');\n      expect(mode).toEqual('app');\n    }));\n\n\n    // The inject and module method can also be used inside of the it or beforeEach\n    it('should override a version and test the new version is injected', function() {\n      // module() takes functions or strings (module aliases)\n      module(function($provide) {\n        $provide.value('version', 'overridden'); // override version here\n      });\n\n      inject(function(version) {\n        expect(version).toEqual('overridden');\n      });\n    });\n  });\n\n```",
            "line": " web\\bower_components\\angular-mocks\\angular-mocks.js:2677"
        },
        {
            "message": "Missing item type\nState-based routing for AngularJS",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:1"
        },
        {
            "message": "Missing item type\nFinds the common ancestor path between two states.",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:43"
        },
        {
            "message": "Missing item type\nIE8-safe wrapper for `Object.keys()`.",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:60"
        },
        {
            "message": "Missing item type\nIE8-safe wrapper for `Array.prototype.indexOf()`.",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:78"
        },
        {
            "message": "Missing item type\nMerges a set of parameters with all parameters inherited between the common parents of the\ncurrent state and a given destination state.",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:100"
        },
        {
            "message": "Missing item type\nPerforms a non-strict comparison of the subset of two objects, defined by a list of keys.",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:126"
        },
        {
            "message": "Missing item type\nReturns the subset of an object, based on a list of keys.",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:148"
        },
        {
            "message": "Missing item type\n# ui.router.util sub-module\n\nThis module is a dependency of other sub-modules. Do not include this module as a dependency\nin your angular app (use {@link ui.router} module instead).",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:225"
        },
        {
            "message": "Missing item type\n# ui.router.router sub-module\n\nThis module is a dependency of other sub-modules. Do not include this module as a dependency\nin your angular app (use {@link ui.router} module instead).",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:238"
        },
        {
            "message": "Missing item type\n# ui.router.state sub-module\n\nThis module is a dependency of the main ui.router module. Do not include this module as a dependency\nin your angular app (use {@link ui.router} module instead).",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:252"
        },
        {
            "message": "Missing item type\n# ui.router\n\n## The main module for ui.router \nThere are several sub-modules included with the ui.router module, however only this module is needed\nas a dependency within your angular app. The other modules are for organization purposes. \n\nThe modules are:\n* ui.router - the main \"umbrella\" module\n* ui.router.router - \n\n*You'll need to include **only** this module as the dependency within your angular app.*\n\n<pre>\n<!doctype html>\n<html ng-app=\"myApp\">\n<head>\n  <script src=\"js/angular.js\"></script>\n  <!-- Include the ui-router script -->\n  <script src=\"js/angular-ui-router.min.js\"></script>\n  <script>\n    // ...and add 'ui.router' as a dependency\n    var myApp = angular.module('myApp', ['ui.router']);\n  </script>\n</head>\n<body>\n</body>\n</html>\n</pre>",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:268"
        },
        {
            "message": "Missing item type\nManages resolution of (acyclic) graphs of promises.",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:308"
        },
        {
            "message": "Missing item type\nStudies a set of invocables that are likely to be used multiple times.\n<pre>\n$resolve.study(invocables)(locals, parent, self)\n</pre>\nis equivalent to\n<pre>\n$resolve.resolve(invocables, locals, parent, self)\n</pre>\nbut the former is more efficient (in fact `resolve` just calls `study` \ninternally).",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:329"
        },
        {
            "message": "Missing item type\nResolves a set of invocables. An invocable is a function to be invoked via \n`$injector.invoke()`, and can have an arbitrary number of dependencies. \nAn invocable can either return a value directly,\nor a `$q` promise. If a promise is returned it will be resolved and the \nresulting value will be used instead. Dependencies of invocables are resolved \n(in this order of precedence)\n\n- from the specified `locals`\n- from another invocable that is part of this `$resolve` call\n- from an invocable that is inherited from a `parent` call to `$resolve` \n  (or recursively\n- from any ancestor `$resolve` of that parent).\n\nThe return value of `$resolve` is a promise for an object that contains \n(in this order of precedence)\n\n- any `locals` (if specified)\n- the resolved return values of all injectables\n- any values inherited from a `parent` call to `$resolve` (if specified)\n\nThe promise will resolve after the `parent` promise (if any) and all promises \nreturned by injectables have been resolved. If any invocable \n(or `$injector.invoke`) throws an exception, or if a promise returned by an \ninvocable is rejected, the `$resolve` promise is immediately rejected with the \nsame error. A rejection of a `parent` promise (if specified) will likewise be \npropagated immediately. Once the `$resolve` promise has been rejected, no \nfurther invocables will be called.\n\nCyclic dependencies between invocables are not permitted and will cause `$resolve`\nto throw an error. As a special case, an injectable can depend on a parameter \nwith the same name as the injectable, which will be fulfilled from the `parent` \ninjectable of the same name. This allows inherited values to be decorated. \nNote that in this case any other injectable in the same `$resolve` with the same\ndependency would see the decorated value, not the inherited value.\n\nNote that missing dependencies -- unlike cyclic dependencies -- will cause an \n(asynchronous) rejection of the `$resolve` promise rather than a (synchronous) \nexception.\n\nInvocables are invoked eagerly as soon as all dependencies are available. \nThis is true even for dependencies inherited from a `parent` call to `$resolve`.\n\nAs a special case, an invocable can be a string, in which case it is taken to \nbe a service name to be passed to `$injector.get()`. This is supported primarily \nfor backwards-compatibility with the `resolve` property of `$routeProvider` \nroutes.",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:492"
        },
        {
            "message": "Missing item type\nService. Manages loading of templates.",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:561"
        },
        {
            "message": "Missing item type\nCreates a template from a configuration object.",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:575"
        },
        {
            "message": "Missing item type\nCreates a template from a string or a function returning a string.",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:609"
        },
        {
            "message": "Missing item type\nLoads a template from the a URL via `$http` and `$templateCache`.",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:628"
        },
        {
            "message": "Missing item type\nCreates a template by invoking an injectable provider function.",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:650"
        },
        {
            "message": "Missing item type\nReturns a new matcher for a pattern constructed by appending the path part and adding the\nsearch parameters of the specified pattern to this pattern. The current pattern is not\nmodified. This can be understood as creating a pattern for URLs that are relative to (or\nsuffixes of) the current pattern.",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:848"
        },
        {
            "message": "Missing item type\nTests the specified path against this matcher, and returns an object containing the captured\nparameter values, or null if the path does not match. The returned object contains the values\nof any search parameters that are mentioned in the pattern, but their value may be null if\nthey are not present in `searchParams`. This means that search parameters are always treated\nas optional.",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:886"
        },
        {
            "message": "Missing item type\nReturns the names of all path and search parameters of this pattern in an unspecified order.",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:958"
        },
        {
            "message": "Missing item type\nChecks an object hash of parameters to validate their correctness according to the parameter\ntypes of this `UrlMatcher`.",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:974"
        },
        {
            "message": "Missing item type\nCreates a URL that matches this pattern by substituting the specified values\nfor the path and search parameters. Null values for path parameters are\ntreated as empty strings.",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:990"
        },
        {
            "message": "Missing item type\nDetects whether a value is of a particular type. Accepts a native (decoded) value\nand determines whether it matches the current `Type` object.",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:1095"
        },
        {
            "message": "Missing item type\nEncodes a custom/native type value to a string that can be embedded in a URL. Note that the\nreturn value does *not* need to be URL-safe (i.e. passed through `encodeURIComponent()`), it\nonly needs to be a representation of `val` that has been coerced to a string.",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:1114"
        },
        {
            "message": "Missing item type\nConverts a parameter value (from URL string or transition param) to a custom/native value.",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:1133"
        },
        {
            "message": "Missing item type\nDetermines whether two decoded values are equivalent.",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:1150"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:1175"
        },
        {
            "message": "Missing item type\nFactory for {@link ui.router.util.type:UrlMatcher `UrlMatcher`} instances. The factory\nis also available to providers under the name `$urlMatcherFactoryProvider`.",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:1252"
        },
        {
            "message": "Missing item type\n[Internal] Get the default value of a parameter, which may be an injectable function.",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:1338"
        },
        {
            "message": "Missing item type\nDefines whether URL matching should be case sensitive (the default behavior), or not.",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:1347"
        },
        {
            "message": "Missing item type\nDefines whether URLs should match trailing slashes, or not (the default behavior).",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:1364"
        },
        {
            "message": "Missing item type\nSets the default behavior when generating or matching URLs with default parameter values.",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:1381"
        },
        {
            "message": "Missing item type\nCreates a {@link ui.router.util.type:UrlMatcher `UrlMatcher`} for the specified pattern.",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:1404"
        },
        {
            "message": "Missing item type\nReturns true if the specified object is a `UrlMatcher`, or false otherwise.",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:1420"
        },
        {
            "message": "Missing item type\nRegisters a custom {@link ui.router.util.type:Type `Type`} object that can be used to\ngenerate URLs with typed parameters.",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:1444"
        },
        {
            "message": "Missing item type\nreturns false, true, or the squash value to indicate the \"default parameter url squash policy\".",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:1628"
        },
        {
            "message": "Missing item type\n[Internal] Get the default value of a parameter, which may be an injectable function.",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:1651"
        },
        {
            "message": "Missing item type\n[Internal] Gets the decoded representation of a value if the value is defined, otherwise, returns the\ndefault value, which may be the result of an injectable function.",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:1662"
        },
        {
            "message": "Missing item type\n`$urlRouterProvider` has the responsibility of watching `$location`. \nWhen `$location` changes it runs through a list of rules one by one until a \nmatch is found. `$urlRouterProvider` is used behind the scenes anytime you specify \na url in a state configuration. All urls are compiled into a UrlMatcher object.\n\nThere are several methods on `$urlRouterProvider` that make it useful to use directly\nin your module config.",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:1754"
        },
        {
            "message": "Missing item type\nDefines rules that are used by `$urlRouterProvider` to find matches for\nspecific URLs.",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:1787"
        },
        {
            "message": "Missing item type\nDefines a path that is used when an invalid route is requested.",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:1824"
        },
        {
            "message": "Missing item type\nRegisters a handler for a given url matching. \n\nIf the handler is a string, it is\ntreated as a redirect, and is interpolated according to the syntax of match\n(i.e. like `String.replace()` for `RegExp`, or like a `UrlMatcher` pattern otherwise).\n\nIf the handler is a function, it is injectable. It gets invoked if `$location`\nmatches. You have the option of inject the match object as `$match`.\n\nThe handler can return\n\n- **falsy** to indicate that the rule didn't match after all, then `$urlRouter`\n  will continue trying to find another one that matches.\n- **string** which is treated as a redirect and passed to `$location.url()`\n- **void** or any **truthy** value tells `$urlRouter` that the url was handled.",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:1872"
        },
        {
            "message": "Missing item type\nDisables (or enables) deferring location change interception.\n\nIf you wish to customize the behavior of syncing the URL (for example, if you wish to\ndefer a transition but maintain the current URL), call this method at configuration time.\nThen, at run time, call `$urlRouter.listen()` after you have configured your own\n`$locationChangeSuccess` event handler.",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:1954"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:2007"
        },
        {
            "message": "Missing item type\nTriggers an update; the same update that happens when the address bar url changes, aka `$locationChangeSuccess`.\nThis method is useful when you need to use `preventDefault()` on the `$locationChangeSuccess` event,\nperform some custom logic (route protection, auth, config, redirection, etc) and then finally proceed\nwith the transition by calling `$urlRouter.sync()`.",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:2064"
        },
        {
            "message": "Missing item type\nA URL generation method that returns the compiled URL for a given\n{@link ui.router.util.type:UrlMatcher `UrlMatcher`}, populated with the provided parameters.",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:2122"
        },
        {
            "message": "Missing item type\nThe new `$stateProvider` works similar to Angular's v1 router, but it focuses purely\non state.\n\nA state corresponds to a \"place\" in the application in terms of the overall UI and\nnavigation. A state describes (via the controller / template / view properties) what\nthe UI looks like and does at that place.\n\nStates often have things in common, and the primary way of factoring out these\ncommonalities in this model is via the state hierarchy, i.e. parent/child states aka\nnested states.\n\nThe `$stateProvider` provides interfaces to declare these states for your app.",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:2186"
        },
        {
            "message": "Missing item type\nAllows you to extend (carefully) or override (at your own peril) the \n`stateBuilder` object used internally by `$stateProvider`. This can be used \nto add custom functionality to ui-router, for example inferring templateUrl \nbased on the state name.\n\nWhen passing only a name, it returns the current (original or decorated) builder\nfunction that matches `name`.\n\nThe builder functions that can be decorated are listed below. Though not all\nnecessarily have a good use case for decoration, that is up to you to decide.\n\nIn addition, users can attach custom decorators, which will generate new \nproperties within the state's internal definition. There is currently no clear \nuse-case for this beyond accessing internal states (i.e. $state.$current), \nhowever, expect this to become increasingly relevant as we introduce additional \nmeta-programming features.\n\n**Warning**: Decorators should not be interdependent because the order of \nexecution of the builder functions in non-deterministic. Builder functions \nshould only be dependent on the state definition object and super function.\n\n\nExisting builder functions and current return values:\n\n- **parent** `{object}` - returns the parent state object.\n- **data** `{object}` - returns state data, including any inherited data that is not\n  overridden by own values (if any).\n- **url** `{object}` - returns a {@link ui.router.util.type:UrlMatcher UrlMatcher}\n  or `null`.\n- **navigable** `{object}` - returns closest ancestor state that has a URL (aka is \n  navigable).\n- **params** `{object}` - returns an array of state params that are ensured to \n  be a super-set of parent's params.\n- **views** `{object}` - returns a views object where each key is an absolute view \n  name (i.e. \"viewName@stateName\") and each value is the config object \n  (template, controller) for the view. Even when you don't use the views object \n  explicitly on a state config, one is still created for you internally.\n  So by decorating this builder function you have access to decorating template \n  and controller properties.\n- **ownParams** `{object}` - returns an array of params that belong to the state, \n  not including any params defined by ancestor states.\n- **path** `{string}` - returns the full path from the root down to this state. \n  Needed for state activation.\n- **includes** `{object}` - returns an object that includes every state that \n  would pass a `$state.includes()` test.",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:2440"
        },
        {
            "message": "Missing item type\nRegisters a state configuration under a given state name. The stateConfig object\nhas the following acceptable properties.",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:2547"
        },
        {
            "message": "Missing item type\nFired when a requested state **cannot be found** using the provided state name during transition.\nThe event is broadcast allowing any handlers a single chance to deal with the error (usually by\nlazy-loading the unfound state). A special `unfoundState` object is passed to the listener handler,\nyou can see its three properties in the example. You can use `event.preventDefault()` to abort the\ntransition and the promise returned from `go` will be rejected with a `'transition aborted'` value.",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:2911"
        },
        {
            "message": "Missing item type\nA method that force reloads the current state. All resolves are re-resolved,\ncontrollers reinstantiated, and events re-fired.",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:2982"
        },
        {
            "message": "Missing item type\nConvenience method for transitioning to a new state. `$state.go` calls \n`$state.transitionTo` internally but automatically sets options to \n`{ location: true, inherit: true, relative: $state.$current, notify: true }`. \nThis allows you to easily use an absolute or relative to path and specify \nonly the parameters you'd like to update (while letting unspecified parameters \ninherit from the currently active ancestor states).",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:3038"
        },
        {
            "message": "Missing item type\nLow-level method for transitioning to a new state. {@link ui.router.state.$state#methods_go $state.go}\nuses `transitionTo` internally. `$state.go` is recommended in most situations.",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:3110"
        },
        {
            "message": "Missing item type\nFired when the state transition **begins**. You can use `event.preventDefault()`\nto prevent the transition from happening and then the transition promise will be\nrejected with a `'transition prevented'` value.",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:3245"
        },
        {
            "message": "Missing item type\nFired once the state transition is **complete**.",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:3338"
        },
        {
            "message": "Missing item type\nFired when an **error occurs** during transition. It's important to note that if you\nhave any errors in your resolve functions (javascript errors, non-existent services, etc)\nthey will not throw traditionally. You must listen for this $stateChangeError event to\ncatch **ALL** errors.",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:3361"
        },
        {
            "message": "Missing item type\nSimilar to {@link ui.router.state.$state#methods_includes $state.includes},\nbut only checks for the full state name. If params is supplied then it will be\ntested for strict equality against the current active params object, so all params\nmust match with none missing and no extras.",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:3391"
        },
        {
            "message": "Missing item type\nA method to determine if the current active state is equal to or is the child of the\nstate stateName. If any params are passed then they will be tested for a match as well.\nNot all the parameters need to be passed, just the ones you'd like to test for equality.",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:3434"
        },
        {
            "message": "Missing item type\nA url generation method that returns the compiled url for the given state populated with the given params.",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:3501"
        },
        {
            "message": "Missing item type\nReturns the state configuration object for any specific state or all states.",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:3551"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:3662"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:3676"
        },
        {
            "message": "Missing item type\nProvider that returns the {@link ui.router.state.$uiViewScroll} service function.",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:3703"
        },
        {
            "message": "Missing item type\nReverts back to using the core [`$anchorScroll`](http://docs.angularjs.org/api/ng.$anchorScroll) service for\nscrolling based on the url anchor.",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:3714"
        },
        {
            "message": "Missing item type\nWhen called with a jqLite element, it scrolls the element into view (after a\n`$timeout` so the DOM has time to refresh).\n\nIf you prefer to rely on `$anchorScroll` to scroll the view to the anchor,\nthis can be enabled by calling {@link ui.router.state.$uiViewScrollProvider#methods_useAnchorScroll `$uiViewScrollProvider.useAnchorScroll()`}.",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:3727"
        },
        {
            "message": "Missing item type\nThe ui-view directive tells $state where to place your templates.",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:3758"
        },
        {
            "message": "Missing item type\nFired once the view **begins loading**, *before* the DOM is rendered.",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:4007"
        },
        {
            "message": "Missing item type\nFired once the view is **loaded**, *after* the DOM is rendered.",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:4036"
        },
        {
            "message": "Missing item type\nShared ui-view code for both directives:\nGiven scope, element, and its attributes, return the view's name",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:4095"
        },
        {
            "message": "Missing item type\nA directive that binds a link (`<a>` tag) to a state. If the state has an associated\nURL, the directive will automatically generate & update the `href` attribute via\nthe {@link ui.router.state.$state#methods_href $state.href()} method. Clicking\nthe link will trigger a state transition with optional parameters.\n\nAlso middle-clicking, right-clicking, and ctrl-clicking on the link will be\nhandled natively by the browser.\n\nYou can also use relative state paths within ui-sref, just like the relative\npaths passed to `$state.go()`. You just need to be aware that the path is relative\nto the state that the link lives in, in other words the state that loaded the\ntemplate containing the link.\n\nYou can specify options to pass to {@link ui.router.state.$state#go $state.go()}\nusing the `ui-sref-opts` attribute. Options are restricted to `location`, `inherit`,\nand `reload`.",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:4161"
        },
        {
            "message": "Missing item type\nMuch like ui-sref, but will accept named $scope properties to evaluate for a state definition,\nparams and override options.",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:4256"
        },
        {
            "message": "Missing item type\nA directive working alongside ui-sref to add classes to an element when the\nrelated ui-sref directive's state is active, and removing them when it is inactive.\nThe primary use-case is to simplify the special appearance of navigation menus\nrelying on `ui-sref`, by having the \"active\" state's menu button appear different,\ndistinguishing it from the inactive menu items.\n\nui-sref-active can live on the same element as ui-sref or on a parent element. The first\nui-sref-active found at the same level or above the ui-sref will be used.\n\nWill activate when the ui-sref's target state or any child state is active. If you\nneed to activate only when the ui-sref target state is active and *not* any of\nit's children, then you will use\n{@link ui.router.state.directive:ui-sref-active-eq ui-sref-active-eq}",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:4302"
        },
        {
            "message": "Missing item type\nThe same as {@link ui.router.state.directive:ui-sref-active ui-sref-active} but will only activate\nwhen the exact target state used in the `ui-sref` is active; no child states.",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:4379"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:4448"
        },
        {
            "message": "Missing item type\nTranslates to {@link ui.router.state.$state#methods_is $state.is(\"stateName\")}.",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:4500"
        },
        {
            "message": "Missing item type\nTranslates to {@link ui.router.state.$state#methods_includes $state.includes('fullOrPartialStateName')}.",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.js:4518"
        },
        {
            "message": "Missing item type\nState-based routing for AngularJS",
            "line": " web\\bower_components\\angular-ui-router\\release\\angular-ui-router.min.js:1"
        },
        {
            "message": "Missing item type\nFinds the common ancestor path between two states.",
            "line": " web\\bower_components\\angular-ui-router\\src\\common.js:30"
        },
        {
            "message": "Missing item type\nIE8-safe wrapper for `Object.keys()`.",
            "line": " web\\bower_components\\angular-ui-router\\src\\common.js:47"
        },
        {
            "message": "Missing item type\nIE8-safe wrapper for `Array.prototype.indexOf()`.",
            "line": " web\\bower_components\\angular-ui-router\\src\\common.js:65"
        },
        {
            "message": "Missing item type\nMerges a set of parameters with all parameters inherited between the common parents of the\ncurrent state and a given destination state.",
            "line": " web\\bower_components\\angular-ui-router\\src\\common.js:87"
        },
        {
            "message": "Missing item type\nPerforms a non-strict comparison of the subset of two objects, defined by a list of keys.",
            "line": " web\\bower_components\\angular-ui-router\\src\\common.js:113"
        },
        {
            "message": "Missing item type\nReturns the subset of an object, based on a list of keys.",
            "line": " web\\bower_components\\angular-ui-router\\src\\common.js:135"
        },
        {
            "message": "Missing item type\n# ui.router.util sub-module\n\nThis module is a dependency of other sub-modules. Do not include this module as a dependency\nin your angular app (use {@link ui.router} module instead).",
            "line": " web\\bower_components\\angular-ui-router\\src\\common.js:212"
        },
        {
            "message": "Missing item type\n# ui.router.router sub-module\n\nThis module is a dependency of other sub-modules. Do not include this module as a dependency\nin your angular app (use {@link ui.router} module instead).",
            "line": " web\\bower_components\\angular-ui-router\\src\\common.js:225"
        },
        {
            "message": "Missing item type\n# ui.router.state sub-module\n\nThis module is a dependency of the main ui.router module. Do not include this module as a dependency\nin your angular app (use {@link ui.router} module instead).",
            "line": " web\\bower_components\\angular-ui-router\\src\\common.js:239"
        },
        {
            "message": "Missing item type\n# ui.router\n\n## The main module for ui.router \nThere are several sub-modules included with the ui.router module, however only this module is needed\nas a dependency within your angular app. The other modules are for organization purposes. \n\nThe modules are:\n* ui.router - the main \"umbrella\" module\n* ui.router.router - \n\n*You'll need to include **only** this module as the dependency within your angular app.*\n\n<pre>\n<!doctype html>\n<html ng-app=\"myApp\">\n<head>\n  <script src=\"js/angular.js\"></script>\n  <!-- Include the ui-router script -->\n  <script src=\"js/angular-ui-router.min.js\"></script>\n  <script>\n    // ...and add 'ui.router' as a dependency\n    var myApp = angular.module('myApp', ['ui.router']);\n  </script>\n</head>\n<body>\n</body>\n</html>\n</pre>",
            "line": " web\\bower_components\\angular-ui-router\\src\\common.js:255"
        },
        {
            "message": "Missing item type\nManages resolution of (acyclic) graphs of promises.",
            "line": " web\\bower_components\\angular-ui-router\\src\\resolve.js:1"
        },
        {
            "message": "Missing item type\nStudies a set of invocables that are likely to be used multiple times.\n<pre>\n$resolve.study(invocables)(locals, parent, self)\n</pre>\nis equivalent to\n<pre>\n$resolve.resolve(invocables, locals, parent, self)\n</pre>\nbut the former is more efficient (in fact `resolve` just calls `study` \ninternally).",
            "line": " web\\bower_components\\angular-ui-router\\src\\resolve.js:22"
        },
        {
            "message": "Missing item type\nResolves a set of invocables. An invocable is a function to be invoked via \n`$injector.invoke()`, and can have an arbitrary number of dependencies. \nAn invocable can either return a value directly,\nor a `$q` promise. If a promise is returned it will be resolved and the \nresulting value will be used instead. Dependencies of invocables are resolved \n(in this order of precedence)\n\n- from the specified `locals`\n- from another invocable that is part of this `$resolve` call\n- from an invocable that is inherited from a `parent` call to `$resolve` \n  (or recursively\n- from any ancestor `$resolve` of that parent).\n\nThe return value of `$resolve` is a promise for an object that contains \n(in this order of precedence)\n\n- any `locals` (if specified)\n- the resolved return values of all injectables\n- any values inherited from a `parent` call to `$resolve` (if specified)\n\nThe promise will resolve after the `parent` promise (if any) and all promises \nreturned by injectables have been resolved. If any invocable \n(or `$injector.invoke`) throws an exception, or if a promise returned by an \ninvocable is rejected, the `$resolve` promise is immediately rejected with the \nsame error. A rejection of a `parent` promise (if specified) will likewise be \npropagated immediately. Once the `$resolve` promise has been rejected, no \nfurther invocables will be called.\n\nCyclic dependencies between invocables are not permitted and will cause `$resolve`\nto throw an error. As a special case, an injectable can depend on a parameter \nwith the same name as the injectable, which will be fulfilled from the `parent` \ninjectable of the same name. This allows inherited values to be decorated. \nNote that in this case any other injectable in the same `$resolve` with the same\ndependency would see the decorated value, not the inherited value.\n\nNote that missing dependencies -- unlike cyclic dependencies -- will cause an \n(asynchronous) rejection of the `$resolve` promise rather than a (synchronous) \nexception.\n\nInvocables are invoked eagerly as soon as all dependencies are available. \nThis is true even for dependencies inherited from a `parent` call to `$resolve`.\n\nAs a special case, an invocable can be a string, in which case it is taken to \nbe a service name to be passed to `$injector.get()`. This is supported primarily \nfor backwards-compatibility with the `resolve` property of `$routeProvider` \nroutes.",
            "line": " web\\bower_components\\angular-ui-router\\src\\resolve.js:185"
        },
        {
            "message": "Missing item type\nThe new `$stateProvider` works similar to Angular's v1 router, but it focuses purely\non state.\n\nA state corresponds to a \"place\" in the application in terms of the overall UI and\nnavigation. A state describes (via the controller / template / view properties) what\nthe UI looks like and does at that place.\n\nStates often have things in common, and the primary way of factoring out these\ncommonalities in this model is via the state hierarchy, i.e. parent/child states aka\nnested states.\n\nThe `$stateProvider` provides interfaces to declare these states for your app.",
            "line": " web\\bower_components\\angular-ui-router\\src\\state.js:1"
        },
        {
            "message": "Missing item type\nAllows you to extend (carefully) or override (at your own peril) the \n`stateBuilder` object used internally by `$stateProvider`. This can be used \nto add custom functionality to ui-router, for example inferring templateUrl \nbased on the state name.\n\nWhen passing only a name, it returns the current (original or decorated) builder\nfunction that matches `name`.\n\nThe builder functions that can be decorated are listed below. Though not all\nnecessarily have a good use case for decoration, that is up to you to decide.\n\nIn addition, users can attach custom decorators, which will generate new \nproperties within the state's internal definition. There is currently no clear \nuse-case for this beyond accessing internal states (i.e. $state.$current), \nhowever, expect this to become increasingly relevant as we introduce additional \nmeta-programming features.\n\n**Warning**: Decorators should not be interdependent because the order of \nexecution of the builder functions in non-deterministic. Builder functions \nshould only be dependent on the state definition object and super function.\n\n\nExisting builder functions and current return values:\n\n- **parent** `{object}` - returns the parent state object.\n- **data** `{object}` - returns state data, including any inherited data that is not\n  overridden by own values (if any).\n- **url** `{object}` - returns a {@link ui.router.util.type:UrlMatcher UrlMatcher}\n  or `null`.\n- **navigable** `{object}` - returns closest ancestor state that has a URL (aka is \n  navigable).\n- **params** `{object}` - returns an array of state params that are ensured to \n  be a super-set of parent's params.\n- **views** `{object}` - returns a views object where each key is an absolute view \n  name (i.e. \"viewName@stateName\") and each value is the config object \n  (template, controller) for the view. Even when you don't use the views object \n  explicitly on a state config, one is still created for you internally.\n  So by decorating this builder function you have access to decorating template \n  and controller properties.\n- **ownParams** `{object}` - returns an array of params that belong to the state, \n  not including any params defined by ancestor states.\n- **path** `{string}` - returns the full path from the root down to this state. \n  Needed for state activation.\n- **includes** `{object}` - returns an object that includes every state that \n  would pass a `$state.includes()` test.",
            "line": " web\\bower_components\\angular-ui-router\\src\\state.js:255"
        },
        {
            "message": "Missing item type\nRegisters a state configuration under a given state name. The stateConfig object\nhas the following acceptable properties.",
            "line": " web\\bower_components\\angular-ui-router\\src\\state.js:362"
        },
        {
            "message": "Missing item type\nFired when a requested state **cannot be found** using the provided state name during transition.\nThe event is broadcast allowing any handlers a single chance to deal with the error (usually by\nlazy-loading the unfound state). A special `unfoundState` object is passed to the listener handler,\nyou can see its three properties in the example. You can use `event.preventDefault()` to abort the\ntransition and the promise returned from `go` will be rejected with a `'transition aborted'` value.",
            "line": " web\\bower_components\\angular-ui-router\\src\\state.js:726"
        },
        {
            "message": "Missing item type\nA method that force reloads the current state. All resolves are re-resolved,\ncontrollers reinstantiated, and events re-fired.",
            "line": " web\\bower_components\\angular-ui-router\\src\\state.js:797"
        },
        {
            "message": "Missing item type\nConvenience method for transitioning to a new state. `$state.go` calls \n`$state.transitionTo` internally but automatically sets options to \n`{ location: true, inherit: true, relative: $state.$current, notify: true }`. \nThis allows you to easily use an absolute or relative to path and specify \nonly the parameters you'd like to update (while letting unspecified parameters \ninherit from the currently active ancestor states).",
            "line": " web\\bower_components\\angular-ui-router\\src\\state.js:853"
        },
        {
            "message": "Missing item type\nLow-level method for transitioning to a new state. {@link ui.router.state.$state#methods_go $state.go}\nuses `transitionTo` internally. `$state.go` is recommended in most situations.",
            "line": " web\\bower_components\\angular-ui-router\\src\\state.js:925"
        },
        {
            "message": "Missing item type\nFired when the state transition **begins**. You can use `event.preventDefault()`\nto prevent the transition from happening and then the transition promise will be\nrejected with a `'transition prevented'` value.",
            "line": " web\\bower_components\\angular-ui-router\\src\\state.js:1060"
        },
        {
            "message": "Missing item type\nFired once the state transition is **complete**.",
            "line": " web\\bower_components\\angular-ui-router\\src\\state.js:1153"
        },
        {
            "message": "Missing item type\nFired when an **error occurs** during transition. It's important to note that if you\nhave any errors in your resolve functions (javascript errors, non-existent services, etc)\nthey will not throw traditionally. You must listen for this $stateChangeError event to\ncatch **ALL** errors.",
            "line": " web\\bower_components\\angular-ui-router\\src\\state.js:1176"
        },
        {
            "message": "Missing item type\nSimilar to {@link ui.router.state.$state#methods_includes $state.includes},\nbut only checks for the full state name. If params is supplied then it will be\ntested for strict equality against the current active params object, so all params\nmust match with none missing and no extras.",
            "line": " web\\bower_components\\angular-ui-router\\src\\state.js:1206"
        },
        {
            "message": "Missing item type\nA method to determine if the current active state is equal to or is the child of the\nstate stateName. If any params are passed then they will be tested for a match as well.\nNot all the parameters need to be passed, just the ones you'd like to test for equality.",
            "line": " web\\bower_components\\angular-ui-router\\src\\state.js:1249"
        },
        {
            "message": "Missing item type\nA url generation method that returns the compiled url for the given state populated with the given params.",
            "line": " web\\bower_components\\angular-ui-router\\src\\state.js:1316"
        },
        {
            "message": "Missing item type\nReturns the state configuration object for any specific state or all states.",
            "line": " web\\bower_components\\angular-ui-router\\src\\state.js:1366"
        },
        {
            "message": "Missing item type\nA directive that binds a link (`<a>` tag) to a state. If the state has an associated\nURL, the directive will automatically generate & update the `href` attribute via\nthe {@link ui.router.state.$state#methods_href $state.href()} method. Clicking\nthe link will trigger a state transition with optional parameters.\n\nAlso middle-clicking, right-clicking, and ctrl-clicking on the link will be\nhandled natively by the browser.\n\nYou can also use relative state paths within ui-sref, just like the relative\npaths passed to `$state.go()`. You just need to be aware that the path is relative\nto the state that the link lives in, in other words the state that loaded the\ntemplate containing the link.\n\nYou can specify options to pass to {@link ui.router.state.$state#go $state.go()}\nusing the `ui-sref-opts` attribute. Options are restricted to `location`, `inherit`,\nand `reload`.",
            "line": " web\\bower_components\\angular-ui-router\\src\\stateDirectives.js:54"
        },
        {
            "message": "Missing item type\nMuch like ui-sref, but will accept named $scope properties to evaluate for a state definition,\nparams and override options.",
            "line": " web\\bower_components\\angular-ui-router\\src\\stateDirectives.js:149"
        },
        {
            "message": "Missing item type\nA directive working alongside ui-sref to add classes to an element when the\nrelated ui-sref directive's state is active, and removing them when it is inactive.\nThe primary use-case is to simplify the special appearance of navigation menus\nrelying on `ui-sref`, by having the \"active\" state's menu button appear different,\ndistinguishing it from the inactive menu items.\n\nui-sref-active can live on the same element as ui-sref or on a parent element. The first\nui-sref-active found at the same level or above the ui-sref will be used.\n\nWill activate when the ui-sref's target state or any child state is active. If you\nneed to activate only when the ui-sref target state is active and *not* any of\nit's children, then you will use\n{@link ui.router.state.directive:ui-sref-active-eq ui-sref-active-eq}",
            "line": " web\\bower_components\\angular-ui-router\\src\\stateDirectives.js:195"
        },
        {
            "message": "Missing item type\nThe same as {@link ui.router.state.directive:ui-sref-active ui-sref-active} but will only activate\nwhen the exact target state used in the `ui-sref` is active; no child states.",
            "line": " web\\bower_components\\angular-ui-router\\src\\stateDirectives.js:272"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-ui-router\\src\\stateDirectives.js:341"
        },
        {
            "message": "Missing item type\nTranslates to {@link ui.router.state.$state#methods_is $state.is(\"stateName\")}.",
            "line": " web\\bower_components\\angular-ui-router\\src\\stateFilters.js:1"
        },
        {
            "message": "Missing item type\nTranslates to {@link ui.router.state.$state#methods_includes $state.includes('fullOrPartialStateName')}.",
            "line": " web\\bower_components\\angular-ui-router\\src\\stateFilters.js:19"
        },
        {
            "message": "Missing item type\nService. Manages loading of templates.",
            "line": " web\\bower_components\\angular-ui-router\\src\\templateFactory.js:1"
        },
        {
            "message": "Missing item type\nCreates a template from a configuration object.",
            "line": " web\\bower_components\\angular-ui-router\\src\\templateFactory.js:15"
        },
        {
            "message": "Missing item type\nCreates a template from a string or a function returning a string.",
            "line": " web\\bower_components\\angular-ui-router\\src\\templateFactory.js:49"
        },
        {
            "message": "Missing item type\nLoads a template from the a URL via `$http` and `$templateCache`.",
            "line": " web\\bower_components\\angular-ui-router\\src\\templateFactory.js:68"
        },
        {
            "message": "Missing item type\nCreates a template by invoking an injectable provider function.",
            "line": " web\\bower_components\\angular-ui-router\\src\\templateFactory.js:90"
        },
        {
            "message": "Missing item type\nReturns a new matcher for a pattern constructed by appending the path part and adding the\nsearch parameters of the specified pattern to this pattern. The current pattern is not\nmodified. This can be understood as creating a pattern for URLs that are relative to (or\nsuffixes of) the current pattern.",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js:177"
        },
        {
            "message": "Missing item type\nTests the specified path against this matcher, and returns an object containing the captured\nparameter values, or null if the path does not match. The returned object contains the values\nof any search parameters that are mentioned in the pattern, but their value may be null if\nthey are not present in `searchParams`. This means that search parameters are always treated\nas optional.",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js:215"
        },
        {
            "message": "Missing item type\nReturns the names of all path and search parameters of this pattern in an unspecified order.",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js:287"
        },
        {
            "message": "Missing item type\nChecks an object hash of parameters to validate their correctness according to the parameter\ntypes of this `UrlMatcher`.",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js:303"
        },
        {
            "message": "Missing item type\nCreates a URL that matches this pattern by substituting the specified values\nfor the path and search parameters. Null values for path parameters are\ntreated as empty strings.",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js:319"
        },
        {
            "message": "Missing item type\nDetects whether a value is of a particular type. Accepts a native (decoded) value\nand determines whether it matches the current `Type` object.",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js:424"
        },
        {
            "message": "Missing item type\nEncodes a custom/native type value to a string that can be embedded in a URL. Note that the\nreturn value does *not* need to be URL-safe (i.e. passed through `encodeURIComponent()`), it\nonly needs to be a representation of `val` that has been coerced to a string.",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js:443"
        },
        {
            "message": "Missing item type\nConverts a parameter value (from URL string or transition param) to a custom/native value.",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js:462"
        },
        {
            "message": "Missing item type\nDetermines whether two decoded values are equivalent.",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js:479"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js:504"
        },
        {
            "message": "Missing item type\nFactory for {@link ui.router.util.type:UrlMatcher `UrlMatcher`} instances. The factory\nis also available to providers under the name `$urlMatcherFactoryProvider`.",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js:581"
        },
        {
            "message": "Missing item type\n[Internal] Get the default value of a parameter, which may be an injectable function.",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js:667"
        },
        {
            "message": "Missing item type\nDefines whether URL matching should be case sensitive (the default behavior), or not.",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js:676"
        },
        {
            "message": "Missing item type\nDefines whether URLs should match trailing slashes, or not (the default behavior).",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js:693"
        },
        {
            "message": "Missing item type\nSets the default behavior when generating or matching URLs with default parameter values.",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js:710"
        },
        {
            "message": "Missing item type\nCreates a {@link ui.router.util.type:UrlMatcher `UrlMatcher`} for the specified pattern.",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js:733"
        },
        {
            "message": "Missing item type\nReturns true if the specified object is a `UrlMatcher`, or false otherwise.",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js:749"
        },
        {
            "message": "Missing item type\nRegisters a custom {@link ui.router.util.type:Type `Type`} object that can be used to\ngenerate URLs with typed parameters.",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js:773"
        },
        {
            "message": "Missing item type\nreturns false, true, or the squash value to indicate the \"default parameter url squash policy\".",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js:957"
        },
        {
            "message": "Missing item type\n[Internal] Get the default value of a parameter, which may be an injectable function.",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js:980"
        },
        {
            "message": "Missing item type\n[Internal] Gets the decoded representation of a value if the value is defined, otherwise, returns the\ndefault value, which may be the result of an injectable function.",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlMatcherFactory.js:991"
        },
        {
            "message": "Missing item type\n`$urlRouterProvider` has the responsibility of watching `$location`. \nWhen `$location` changes it runs through a list of rules one by one until a \nmatch is found. `$urlRouterProvider` is used behind the scenes anytime you specify \na url in a state configuration. All urls are compiled into a UrlMatcher object.\n\nThere are several methods on `$urlRouterProvider` that make it useful to use directly\nin your module config.",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlRouter.js:1"
        },
        {
            "message": "Missing item type\nDefines rules that are used by `$urlRouterProvider` to find matches for\nspecific URLs.",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlRouter.js:34"
        },
        {
            "message": "Missing item type\nDefines a path that is used when an invalid route is requested.",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlRouter.js:71"
        },
        {
            "message": "Missing item type\nRegisters a handler for a given url matching. \n\nIf the handler is a string, it is\ntreated as a redirect, and is interpolated according to the syntax of match\n(i.e. like `String.replace()` for `RegExp`, or like a `UrlMatcher` pattern otherwise).\n\nIf the handler is a function, it is injectable. It gets invoked if `$location`\nmatches. You have the option of inject the match object as `$match`.\n\nThe handler can return\n\n- **falsy** to indicate that the rule didn't match after all, then `$urlRouter`\n  will continue trying to find another one that matches.\n- **string** which is treated as a redirect and passed to `$location.url()`\n- **void** or any **truthy** value tells `$urlRouter` that the url was handled.",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlRouter.js:119"
        },
        {
            "message": "Missing item type\nDisables (or enables) deferring location change interception.\n\nIf you wish to customize the behavior of syncing the URL (for example, if you wish to\ndefer a transition but maintain the current URL), call this method at configuration time.\nThen, at run time, call `$urlRouter.listen()` after you have configured your own\n`$locationChangeSuccess` event handler.",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlRouter.js:201"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlRouter.js:254"
        },
        {
            "message": "Missing item type\nTriggers an update; the same update that happens when the address bar url changes, aka `$locationChangeSuccess`.\nThis method is useful when you need to use `preventDefault()` on the `$locationChangeSuccess` event,\nperform some custom logic (route protection, auth, config, redirection, etc) and then finally proceed\nwith the transition by calling `$urlRouter.sync()`.",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlRouter.js:311"
        },
        {
            "message": "Missing item type\nA URL generation method that returns the compiled URL for a given\n{@link ui.router.util.type:UrlMatcher `UrlMatcher`}, populated with the provided parameters.",
            "line": " web\\bower_components\\angular-ui-router\\src\\urlRouter.js:369"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-ui-router\\src\\view.js:6"
        },
        {
            "message": "Missing item type",
            "line": " web\\bower_components\\angular-ui-router\\src\\view.js:20"
        },
        {
            "message": "Missing item type\nThe ui-view directive tells $state where to place your templates.",
            "line": " web\\bower_components\\angular-ui-router\\src\\viewDirective.js:3"
        },
        {
            "message": "Missing item type\nFired once the view **begins loading**, *before* the DOM is rendered.",
            "line": " web\\bower_components\\angular-ui-router\\src\\viewDirective.js:252"
        },
        {
            "message": "Missing item type\nFired once the view is **loaded**, *after* the DOM is rendered.",
            "line": " web\\bower_components\\angular-ui-router\\src\\viewDirective.js:281"
        },
        {
            "message": "Missing item type\nShared ui-view code for both directives:\nGiven scope, element, and its attributes, return the view's name",
            "line": " web\\bower_components\\angular-ui-router\\src\\viewDirective.js:340"
        },
        {
            "message": "Missing item type\nProvider that returns the {@link ui.router.state.$uiViewScroll} service function.",
            "line": " web\\bower_components\\angular-ui-router\\src\\viewScroll.js:1"
        },
        {
            "message": "Missing item type\nReverts back to using the core [`$anchorScroll`](http://docs.angularjs.org/api/ng.$anchorScroll) service for\nscrolling based on the url anchor.",
            "line": " web\\bower_components\\angular-ui-router\\src\\viewScroll.js:12"
        },
        {
            "message": "Missing item type\nWhen called with a jqLite element, it scrolls the element into view (after a\n`$timeout` so the DOM has time to refresh).\n\nIf you prefer to rely on `$anchorScroll` to scroll the view to the anchor,\nthis can be enabled by calling {@link ui.router.state.$uiViewScrollProvider#methods_useAnchorScroll `$uiViewScrollProvider.useAnchorScroll()`}.",
            "line": " web\\bower_components\\angular-ui-router\\src\\viewScroll.js:25"
        }
    ]
}